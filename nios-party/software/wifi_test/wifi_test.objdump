
wifi_test.elf:     file format elf32-littlenios2
wifi_test.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x04000000

Program Header:
    LOAD off    0x00001000 vaddr 0x04000000 paddr 0x04000000 align 2**12
         filesz 0x00014bd0 memsz 0x00014bd0 flags r-x
    LOAD off    0x00015bd0 vaddr 0x04014bd0 paddr 0x04016854 align 2**12
         filesz 0x00001c84 memsz 0x00001c84 flags rw-
    LOAD off    0x000184d8 vaddr 0x040184d8 paddr 0x040184d8 align 2**12
         filesz 0x00000000 memsz 0x0000037c flags rw-
    LOAD off    0x00018000 vaddr 0x08020000 paddr 0x08020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00018020 vaddr 0x08020020 paddr 0x08020020 align 2**12
         filesz 0x00000228 memsz 0x00000228 flags r-x

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  08020000  08020000  00018000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000228  08020020  08020020  00018020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         000146c8  04000000  04000000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000508  040146c8  040146c8  000156c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001c84  04014bd0  04016854  00015bd0  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000037c  040184d8  040184d8  000184d8  2**2
                  ALLOC, SMALL_DATA
  6 .SDRAM        00000000  04018854  04018854  00018248  2**0
                  CONTENTS
  7 .Onchip_Memory 00000000  08020248  08020248  00018248  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00018248  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000ff8  00000000  00000000  00018270  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00029322  00000000  00000000  00019268  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000a15f  00000000  00000000  0004258a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000dae6  00000000  00000000  0004c6e9  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00002754  00000000  00000000  0005a1d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00003fbe  00000000  00000000  0005c924  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    0001c7e4  00000000  00000000  000608e2  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000060  00000000  00000000  0007d0c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001ae8  00000000  00000000  0007d128  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  00082622  2**0
                  CONTENTS, READONLY
 19 .cpu          00000003  00000000  00000000  00082625  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  00082628  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  00082629  2**0
                  CONTENTS, READONLY
 22 .stderr_dev   00000004  00000000  00000000  0008262a  2**0
                  CONTENTS, READONLY
 23 .stdin_dev    00000004  00000000  00000000  0008262e  2**0
                  CONTENTS, READONLY
 24 .stdout_dev   00000004  00000000  00000000  00082632  2**0
                  CONTENTS, READONLY
 25 .sopc_system_name 00000004  00000000  00000000  00082636  2**0
                  CONTENTS, READONLY
 26 .quartus_project_dir 0000003b  00000000  00000000  0008263a  2**0
                  CONTENTS, READONLY
 27 .jdi          0000448d  00000000  00000000  00082675  2**0
                  CONTENTS, READONLY
 28 .sopcinfo     0008eae1  00000000  00000000  00086b02  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
08020000 l    d  .entry	00000000 .entry
08020020 l    d  .exceptions	00000000 .exceptions
04000000 l    d  .text	00000000 .text
040146c8 l    d  .rodata	00000000 .rodata
04014bd0 l    d  .rwdata	00000000 .rwdata
040184d8 l    d  .bss	00000000 .bss
04018854 l    d  .SDRAM	00000000 .SDRAM
08020248 l    d  .Onchip_Memory	00000000 .Onchip_Memory
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../wifi_test_bsp//obj/HAL/src/crt0.o
04000048 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
04014852 l     O .rodata	00000010 zeroes.4389
04014862 l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 vfprintf.c
04014872 l     O .rodata	00000010 zeroes.4404
04004c44 l     F .text	000000bc __sbprintf
04014882 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
04004e54 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
04006984 l     F .text	00000008 __fp_unlock
04006998 l     F .text	0000019c __sinit.part.1
04006b34 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
04014c28 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
0401506c l     O .rwdata	00000020 lc_ctype_charset
0401504c l     O .rwdata	00000020 lc_message_charset
0401508c l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
040148b4 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 vfprintf.c
040149e8 l     O .rodata	00000010 blanks.4332
040149d8 l     O .rodata	00000010 zeroes.4333
00000000 l    df *ABS*	00000000 vfprintf.c
0400b3c8 l     F .text	000000fc __sprint_r.part.0
04014a08 l     O .rodata	00000010 blanks.4348
040149f8 l     O .rodata	00000010 zeroes.4349
0400c954 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
04010610 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0401071c l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
04010748 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
04010834 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
04010914 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
04010a00 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
04010bd4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
04016844 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
04010e50 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
04010f84 l     F .text	00000034 alt_dev_reg
04015674 l     O .rwdata	00001060 JTAG
040166d4 l     O .rwdata	00000030 Audio
04016704 l     O .rwdata	0000002c WIFI_Serial_Port
04016730 l     O .rwdata	00000048 Char_Buffer
04016778 l     O .rwdata	00000054 Pixel_Buffer
040167cc l     O .rwdata	00000044 RGB_Resampler
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
040115f4 l     F .text	00000210 altera_avalon_jtag_uart_irq
04011804 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
04011e3c l     F .text	0000007c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_up_avalon_rs232.c
00000000 l    df *ABS*	00000000 altera_up_avalon_video_character_buffer_with_dma.c
00000000 l    df *ABS*	00000000 altera_up_avalon_video_pixel_buffer_dma.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0401371c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
04013980 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
04013c40 l     F .text	0000003c alt_get_errno
04013c7c l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
040184d8 g     O .bss	00000001 parity
04018528 g     O .bss	00000004 alt_instruction_exception_handler
04000534 g     F .text	00000018 putchar
04009574 g     F .text	00000074 _mprec_log10
04009660 g     F .text	0000008c __any_on
0400d048 g     F .text	00000054 _isatty_r
040148c0 g     O .rodata	00000028 __mprec_tinytens
04010b10 g     F .text	0000007c alt_main
04012e70 g     F .text	0000024c alt_up_pixel_buffer_dma_draw_vline
0400054c g     F .text	000000c0 _puts_r
04018754 g     O .bss	00000100 alt_irq
0400d09c g     F .text	00000060 _lseek_r
04016854 g       *ABS*	00000000 __flash_rwdata_start
0400f13c g     F .text	00000088 .hidden __eqdf2
04018854 g     O *ABS*	00000000 __alt_heap_start
040184d9 g     O .bss	00000001 data_W8
040004f0 g     F .text	0000003c printf
0400d15c g     F .text	0000009c _wcrtomb_r
04014bd0 g     O .rwdata	0000000d node_start
04009f58 g     F .text	0000005c __sseek
04006cd4 g     F .text	00000010 __sinit
04012444 g     F .text	000000fc alt_up_char_buffer_string
0400ca10 g     F .text	00000140 __swbuf_r
0400779c g     F .text	0000007c _setlocale_r
04006b3c g     F .text	00000068 __sfmoreglue
04010bb0 g     F .text	00000024 __malloc_unlock
0401215c g     F .text	00000090 alt_up_rs232_read_fd
04012378 g     F .text	000000cc alt_up_char_buffer_draw
0400846c g     F .text	0000015c memmove
04006cbc g     F .text	00000018 _cleanup
040086f0 g     F .text	000000a8 _Balloc
040125d8 g     F .text	00000194 alt_up_pixel_buffer_dma_draw
0400f1c4 g     F .text	000000dc .hidden __gtdf2
04014038 g     F .text	00000024 altera_nios2_gen2_irq_init
0401259c g     F .text	0000003c alt_up_pixel_buffer_dma_open_dev
08020000 g     F .entry	0000001c __reset
08020020 g       *ABS*	00000000 __flash_exceptions_start
0400cfec g     F .text	0000005c _fstat_r
0401850c g     O .bss	00000004 errno
04009ed4 g     F .text	00000008 __seofread
0400a18c g     F .text	0000123c ___svfiprintf_internal_r
040184dc g     O .bss	00000004 char_buffer
04018514 g     O .bss	00000004 alt_argv
0401e810 g       *ABS*	00000000 _gp
04010e20 g     F .text	00000030 usleep
0401276c g     F .text	0000005c alt_up_pixel_buffer_dma_change_back_buffer_address
040184e0 g     O .bss	00000001 data_R8
0401852c g     O .bss	00000200 output
040154f4 g     O .rwdata	00000180 alt_fd_list
0400052c g     F .text	00000008 _putchar_r
040138bc g     F .text	00000090 alt_find_dev
04008324 g     F .text	00000148 memcpy
04012540 g     F .text	0000005c alt_up_char_buffer_clear
0400698c g     F .text	0000000c _cleanup_r
04010428 g     F .text	000000dc .hidden __floatsidf
04013a44 g     F .text	0000007c alt_io_redirect
0400f2a0 g     F .text	000000f4 .hidden __ltdf2
040146c8 g       *ABS*	00000000 __DTOR_END__
040120e8 g     F .text	00000074 alt_up_rs232_read_data
0400060c g     F .text	00000014 puts
04014298 g     F .text	0000009c alt_exception_cause_generated_bad_addr
04009db8 g     F .text	00000074 __fpclassifyd
040094d0 g     F .text	000000a4 __ratio
0400c938 g     F .text	0000001c __vfiprintf_internal
04012828 g     F .text	00000034 alt_up_pixel_buffer_dma_check_swap_buffers_status
040119fc g     F .text	0000021c altera_avalon_jtag_uart_read
040004c0 g     F .text	00000030 _printf_r
0400deec g     F .text	00000064 .hidden __udivsi3
04010870 g     F .text	000000a4 isatty
04014910 g     O .rodata	000000c8 __mprec_tens
04012c60 g     F .text	00000210 alt_up_pixel_buffer_dma_draw_hline
04007818 g     F .text	0000000c __locale_charset
04014208 g     F .text	00000090 alt_icache_flush
04018508 g     O .bss	00000004 __malloc_top_pad
0401681c g     O .rwdata	00000004 __mb_cur_max
04007848 g     F .text	0000000c _localeconv_r
04008afc g     F .text	0000003c __i2b
04007158 g     F .text	000004bc __sfvwrite_r
04009e2c g     F .text	00000054 _sbrk_r
04013184 g     F .text	00000084 helper_plot_pixel
0400d0fc g     F .text	00000060 _read_r
0401683c g     O .rwdata	00000004 alt_max_fd
04012064 g     F .text	00000044 alt_up_rs232_check_parity
0400cce0 g     F .text	000000f0 _fclose_r
04006954 g     F .text	00000030 fflush
04018504 g     O .bss	00000004 __malloc_max_sbrked_mem
04013ac0 g     F .text	00000180 alt_irq_register
0400dfa8 g     F .text	000008ac .hidden __adddf3
04009278 g     F .text	0000010c __b2d
0401285c g     F .text	00000128 alt_up_pixel_buffer_dma_clear_screen
0400d8bc g     F .text	00000538 .hidden __umoddi3
04010a3c g     F .text	000000d4 lseek
04016814 g     O .rwdata	00000004 _global_impure_ptr
04009854 g     F .text	00000564 _realloc_r
04018854 g       *ABS*	00000000 __bss_end
04012984 g     F .text	000002dc alt_up_pixel_buffer_dma_draw_box
04013f30 g     F .text	00000108 alt_tick
0400d344 g     F .text	00000578 .hidden __udivdi3
0400cf48 g     F .text	00000024 _fputwc_r
040148e8 g     O .rodata	00000028 __mprec_bigtens
040088e0 g     F .text	00000104 __s2b
04000348 g     F .text	00000178 display_question
04010504 g     F .text	000000a8 .hidden __floatunsidf
04008fb8 g     F .text	00000060 __mcmp
04006cf4 g     F .text	00000018 __fp_lock_all
04013e94 g     F .text	0000009c alt_alarm_stop
0401851c g     O .bss	00000004 alt_irq_active
080200fc g     F .exceptions	000000d8 alt_irq_handler
040154cc g     O .rwdata	00000028 alt_dev_null
040136d4 g     F .text	00000048 alt_dcache_flush_all
040089e4 g     F .text	00000068 __hi0bits
040130bc g     F .text	000000c8 alt_up_pixel_buffer_dma_draw_rectangle
040103a8 g     F .text	00000080 .hidden __fixdfsi
04016854 g       *ABS*	00000000 __ram_rwdata_end
04016834 g     O .rwdata	00000008 alt_dev_list
04010e8c g     F .text	000000f8 write
040096ec g     F .text	000000a0 _putc_r
040184e4 g     O .bss	00000004 write_FIFO_space
04013208 g     F .text	00000248 alt_up_pixel_buffer_dma_draw_line
04014bd0 g       *ABS*	00000000 __ram_rodata_end
04010784 g     F .text	000000b0 fstat
040121ec g     F .text	00000094 alt_up_rs232_write_fd
04000000 g       *ABS*	00000000 __alt_mem_SDRAM
0400f2a0 g     F .text	000000f4 .hidden __ledf2
04008d30 g     F .text	00000140 __pow5mult
04014c10 g     O .rwdata	00000018 led
0400b4dc g     F .text	0000145c ___vfiprintf_internal_r
040184fc g     O .bss	00000004 __nlocale_changed
0400df50 g     F .text	00000058 .hidden __umodsi3
04018854 g     O *ABS*	00000001 end
040122bc g     F .text	00000080 alt_up_char_buffer_init
04011540 g     F .text	000000b4 altera_avalon_jtag_uart_init
080201d4 g     F .exceptions	00000074 alt_instruction_exception_entry
040146c8 g       *ABS*	00000000 __CTOR_LIST__
08000000 g       *ABS*	00000000 __alt_stack_pointer
04011eb8 g     F .text	00000074 alt_avalon_timer_sc_init
040105ac g     F .text	00000064 .hidden __clzsi2
04011c18 g     F .text	00000224 altera_avalon_jtag_uart_write
04006ce4 g     F .text	00000004 __sfp_lock_acquire
04008240 g     F .text	000000e4 memchr
04002a30 g     F .text	000021f8 ___vfprintf_internal_r
04000620 g     F .text	00000058 _sprintf_r
04006e48 g     F .text	00000310 _free_r
04007824 g     F .text	00000010 __locale_mb_cur_max
04014514 g     F .text	00000180 __call_exitprocs
040184f8 g     O .bss	00000004 __mlocale_changed
04000120 g     F .text	00000118 write_data
04016820 g     O .rwdata	00000004 __malloc_sbrk_base
04000000 g     F .text	0000004c _start
04018520 g     O .bss	00000004 _alt_tick_rate
04008e70 g     F .text	00000148 __lshift
04018524 g     O .bss	00000004 _alt_nticks
04010c10 g     F .text	000000fc read
04010ff0 g     F .text	000003ec alt_sys_init
04009fbc g     F .text	000001d0 __ssprint_r
040143fc g     F .text	00000118 __register_exitproc
040184e8 g     O .bss	00000002 read_FIFO_used
04012028 g     F .text	0000003c alt_up_rs232_get_available_space_in_write_FIFO
04008b38 g     F .text	000001f8 __multiply
040118a4 g     F .text	00000068 altera_avalon_jtag_uart_close
04014bd0 g       *ABS*	00000000 __ram_rwdata_start
040146c8 g       *ABS*	00000000 __ram_rodata_start
04000238 g     F .text	00000110 read_data
0401872c g     O .bss	00000028 __malloc_current_mallinfo
04009384 g     F .text	0000014c __d2b
040113dc g     F .text	00000060 altera_avalon_jtag_uart_read_fd
04014164 g     F .text	000000a4 alt_get_fd
0401357c g     F .text	00000158 alt_busy_sleep
0400cbc8 g     F .text	00000054 _close_r
04014380 g     F .text	0000007c memcmp
0401149c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
04018854 g       *ABS*	00000000 __alt_stack_base
040114ec g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
04004d00 g     F .text	00000154 __swsetup_r
0400e854 g     F .text	000008e8 .hidden __divdf3
04006ba4 g     F .text	00000118 __sfp
040095e8 g     F .text	00000078 __copybits
040150c4 g     O .rwdata	00000408 __malloc_av_
04006cf0 g     F .text	00000004 __sinit_lock_release
0400f394 g     F .text	00000718 .hidden __muldf3
04009e80 g     F .text	00000054 __sread
04011f88 g     F .text	00000060 alt_up_rs232_disable_read_interrupt
0401405c g     F .text	00000108 alt_find_file
04013758 g     F .text	000000a4 alt_dev_llist_insert
04010b8c g     F .text	00000024 __malloc_lock
04010d70 g     F .text	000000b0 sbrk
04000858 g     F .text	000021d8 ___svfprintf_internal_r
040068f8 g     F .text	0000005c _fflush_r
0400cc1c g     F .text	000000c4 _calloc_r
040184d8 g       *ABS*	00000000 __bss_start
040184ea g     O .bss	00000001 data
040085c8 g     F .text	00000128 memset
0400004c g     F .text	000000d4 main
04018518 g     O .bss	00000004 alt_envp
04018500 g     O .bss	00000004 __malloc_max_total_mem
040127c8 g     F .text	00000060 alt_up_pixel_buffer_dma_swap_buffers
0401233c g     F .text	0000003c alt_up_char_buffer_open_dev
0401143c g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0400cb50 g     F .text	00000018 __swbuf
04009fb4 g     F .text	00000008 __sclose
08000000 g       *ABS*	00000000 __alt_heap_limit
0400cdd0 g     F .text	00000014 fclose
04005054 g     F .text	00001688 _dtoa_r
04007a34 g     F .text	0000080c _malloc_r
0400d2b8 g     F .text	00000030 __ascii_wctomb
04016840 g     O .rwdata	00000004 alt_errno
04007614 g     F .text	000000c4 _fwalk
0400978c g     F .text	000000c8 putc
0400ddf4 g     F .text	00000084 .hidden __divsi3
04006d24 g     F .text	00000124 _malloc_trim_r
040146c8 g       *ABS*	00000000 __CTOR_END__
040006e4 g     F .text	000000dc strcmp
040146c8 g       *ABS*	00000000 __flash_rodata_start
040146c8 g       *ABS*	00000000 __DTOR_LIST__
04014be0 g     O .rwdata	0000001a dofile
04014bfc g     O .rwdata	00000011 check_wifi
04012280 g     F .text	0000003c alt_up_rs232_open_dev
0400f13c g     F .text	00000088 .hidden __nedf2
04010fb8 g     F .text	00000038 alt_irq_init
04010d0c g     F .text	00000064 alt_release_fd
04000678 g     F .text	0000006c sprintf
04014a18 g     O .rodata	00000100 .hidden __clz_tab
040184f4 g     O .bss	00000004 _PathLocale
040184ec g     O .bss	00000004 pixel_buffer
04014334 g     F .text	00000014 atexit
0400cb68 g     F .text	00000060 _write_r
04007854 g     F .text	00000018 setlocale
04016818 g     O .rwdata	00000004 _impure_ptr
04018510 g     O .bss	00000004 alt_argc
040066dc g     F .text	0000021c __sflush_r
0401385c g     F .text	00000060 _do_dtors
04007840 g     F .text	00000008 __locale_cjk_lang
040184f0 g     O .bss	00000004 rs232_dev
08020020 g       .exceptions	00000000 alt_irq_entry
04009214 g     F .text	00000064 __ulp
04006d0c g     F .text	00000018 __fp_unlock_all
0401682c g     O .rwdata	00000008 alt_fs_list
04011f2c g     F .text	0000005c alt_up_rs232_enable_read_interrupt
040120a8 g     F .text	00000040 alt_up_rs232_write_data
08020020 g       *ABS*	00000000 __ram_exceptions_start
0400786c g     F .text	0000000c localeconv
04016854 g       *ABS*	00000000 _edata
04018854 g       *ABS*	00000000 _end
0400cde4 g     F .text	00000164 __fputwc
08020248 g       *ABS*	00000000 __ram_exceptions_end
0401190c g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
08020000 g       *ABS*	00000000 __alt_mem_Onchip_Memory
04009edc g     F .text	0000007c __swrite
04016824 g     O .rwdata	00000004 __malloc_trim_threshold
04007834 g     F .text	0000000c __locale_msgcharset
04014348 g     F .text	00000038 exit
040076d8 g     F .text	000000c4 _fwalk_reent
04009018 g     F .text	000001fc __mdiff
0400de78 g     F .text	00000074 .hidden __modsi3
08000000 g       *ABS*	00000000 __alt_data_end
08020020 g     F .exceptions	00000000 alt_exception
04006ce8 g     F .text	00000004 __sfp_lock_release
04014694 g     F .text	00000034 _exit
04013450 g     F .text	0000012c alt_alarm_start
04007878 g     F .text	000001bc __smakebuf_r
040007c0 g     F .text	00000098 strlen
04013d40 g     F .text	00000154 open
0400f1c4 g     F .text	000000dc .hidden __gedf2
04016828 g     O .rwdata	00000004 __wctomb
0400b4c4 g     F .text	00000018 __sprint_r
0401394c g     F .text	00000034 alt_icache_flush_all
04016848 g     O .rwdata	00000004 alt_priority_mask
04004c28 g     F .text	0000001c __vfprintf_internal
0400d2e8 g     F .text	0000005c _wctomb_r
0400faac g     F .text	000008fc .hidden __subdf3
04008a4c g     F .text	000000b0 __lo0bits
0401684c g     O .rwdata	00000008 alt_alarm_list
040137fc g     F .text	00000060 _do_ctors
04011fe8 g     F .text	00000040 alt_up_rs232_get_used_space_in_read_FIFO
0400d1f8 g     F .text	000000c0 wcrtomb
0401064c g     F .text	000000d0 close
0401097c g     F .text	00000084 alt_load
0400cf6c g     F .text	00000080 fputwc
04006cec g     F .text	00000004 __sinit_lock_acquire
040087c0 g     F .text	00000120 __multadd
04008798 g     F .text	00000028 _Bfree



Disassembly of section .entry:

08020000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
 8020000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
 8020004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
 8020008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
 802000c:	00bffd16 	blt	zero,r2,8020004 <__ram_exceptions_end+0xfffffdbc>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 8020010:	00410034 	movhi	at,1024
    ori r1, r1, %lo(_start)
 8020014:	08400014 	ori	at,at,0
    jmp r1
 8020018:	0800683a 	jmp	at
 802001c:	00000000 	call	0 <__alt_mem_SDRAM-0x4000000>

Disassembly of section .exceptions:

08020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 8020020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 8020024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 8020028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 802002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 8020030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 8020034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 8020038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 802003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 8020040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 8020044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 8020048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 802004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 8020050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 8020054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 8020058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 802005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 8020060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 8020064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 8020068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 802006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 8020070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 8020074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 8020078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 802007c:	10000326 	beq	r2,zero,802008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 8020080:	20000226 	beq	r4,zero,802008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 8020084:	80200fc0 	call	80200fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 8020088:	00000706 	br	80200a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
 802008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
 8020090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
 8020094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
 8020098:	80201d40 	call	80201d4 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
 802009c:	1000021e 	bne	r2,zero,80200a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
 80200a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 80200a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 80200a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 80200ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 80200b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 80200b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 80200b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 80200bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 80200c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 80200c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 80200c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 80200cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 80200d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 80200d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 80200d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 80200dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 80200e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 80200e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 80200e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 80200ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 80200f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 80200f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 80200f8:	ef80083a 	eret

080200fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 80200fc:	defff904 	addi	sp,sp,-28
 8020100:	dfc00615 	stw	ra,24(sp)
 8020104:	df000515 	stw	fp,20(sp)
 8020108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 802010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 8020110:	0005313a 	rdctl	r2,ipending
 8020114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 8020118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 802011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 8020120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 8020124:	00800044 	movi	r2,1
 8020128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 802012c:	e0fffb17 	ldw	r3,-20(fp)
 8020130:	e0bffc17 	ldw	r2,-16(fp)
 8020134:	1884703a 	and	r2,r3,r2
 8020138:	10001526 	beq	r2,zero,8020190 <alt_irq_handler+0x94>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
 802013c:	008100b4 	movhi	r2,1026
 8020140:	10a1d504 	addi	r2,r2,-30892
 8020144:	e0fffd17 	ldw	r3,-12(fp)
 8020148:	180690fa 	slli	r3,r3,3
 802014c:	10c5883a 	add	r2,r2,r3
 8020150:	10c00017 	ldw	r3,0(r2)
 8020154:	008100b4 	movhi	r2,1026
 8020158:	10a1d504 	addi	r2,r2,-30892
 802015c:	e13ffd17 	ldw	r4,-12(fp)
 8020160:	200890fa 	slli	r4,r4,3
 8020164:	1105883a 	add	r2,r2,r4
 8020168:	10800104 	addi	r2,r2,4
 802016c:	10800017 	ldw	r2,0(r2)
 8020170:	e17ffd17 	ldw	r5,-12(fp)
 8020174:	1009883a 	mov	r4,r2
 8020178:	183ee83a 	callr	r3
#endif
        break;
 802017c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 8020180:	0005313a 	rdctl	r2,ipending
 8020184:	e0bfff15 	stw	r2,-4(fp)

  return active;
 8020188:	e0bfff17 	ldw	r2,-4(fp)
 802018c:	00000706 	br	80201ac <alt_irq_handler+0xb0>
      }
      mask <<= 1;
 8020190:	e0bffc17 	ldw	r2,-16(fp)
 8020194:	1085883a 	add	r2,r2,r2
 8020198:	e0bffc15 	stw	r2,-16(fp)
      i++;
 802019c:	e0bffd17 	ldw	r2,-12(fp)
 80201a0:	10800044 	addi	r2,r2,1
 80201a4:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 80201a8:	003fe006 	br	802012c <__ram_exceptions_end+0xfffffee4>

    active = alt_irq_pending ();
 80201ac:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 80201b0:	e0bffb17 	ldw	r2,-20(fp)
 80201b4:	103fda1e 	bne	r2,zero,8020120 <__ram_exceptions_end+0xfffffed8>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 80201b8:	0001883a 	nop
}
 80201bc:	0001883a 	nop
 80201c0:	e037883a 	mov	sp,fp
 80201c4:	dfc00117 	ldw	ra,4(sp)
 80201c8:	df000017 	ldw	fp,0(sp)
 80201cc:	dec00204 	addi	sp,sp,8
 80201d0:	f800283a 	ret

080201d4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 80201d4:	defffb04 	addi	sp,sp,-20
 80201d8:	dfc00415 	stw	ra,16(sp)
 80201dc:	df000315 	stw	fp,12(sp)
 80201e0:	df000304 	addi	fp,sp,12
 80201e4:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
 80201e8:	000531fa 	rdctl	r2,exception
 80201ec:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
 80201f0:	e0bffd17 	ldw	r2,-12(fp)
 80201f4:	10801f0c 	andi	r2,r2,124
 80201f8:	1004d0ba 	srli	r2,r2,2
 80201fc:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
 8020200:	0005333a 	rdctl	r2,badaddr
 8020204:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 8020208:	d0a74617 	ldw	r2,-25320(gp)
 802020c:	10000726 	beq	r2,zero,802022c <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 8020210:	d0a74617 	ldw	r2,-25320(gp)
 8020214:	e0fffd17 	ldw	r3,-12(fp)
 8020218:	e1bffe17 	ldw	r6,-8(fp)
 802021c:	e17fff17 	ldw	r5,-4(fp)
 8020220:	1809883a 	mov	r4,r3
 8020224:	103ee83a 	callr	r2
 8020228:	00000206 	br	8020234 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 802022c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 8020230:	0005883a 	mov	r2,zero
}
 8020234:	e037883a 	mov	sp,fp
 8020238:	dfc00117 	ldw	ra,4(sp)
 802023c:	df000017 	ldw	fp,0(sp)
 8020240:	dec00204 	addi	sp,sp,8
 8020244:	f800283a 	ret

Disassembly of section .text:

04000000 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
 4000000:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
 4000004:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
 4000008:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
 400000c:	00bffd16 	blt	zero,r2,4000004 <__ram_exceptions_end+0xfbfdfdbc>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 4000010:	06c20034 	movhi	sp,2048
    ori sp, sp, %lo(__alt_stack_pointer)
 4000014:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 4000018:	06810074 	movhi	gp,1025
    ori gp, gp, %lo(_gp)
 400001c:	d6ba0414 	ori	gp,gp,59408
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 4000020:	00810074 	movhi	r2,1025
    ori r2, r2, %lo(__bss_start)
 4000024:	10a13614 	ori	r2,r2,34008

    movhi r3, %hi(__bss_end)
 4000028:	00c10074 	movhi	r3,1025
    ori r3, r3, %lo(__bss_end)
 400002c:	18e21514 	ori	r3,r3,34900

    beq r2, r3, 1f
 4000030:	10c00326 	beq	r2,r3,4000040 <_start+0x40>

0:
    stw zero, (r2)
 4000034:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 4000038:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 400003c:	10fffd36 	bltu	r2,r3,4000034 <__ram_exceptions_end+0xfbfdfdec>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 4000040:	401097c0 	call	401097c <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 4000044:	4010b100 	call	4010b10 <alt_main>

04000048 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 4000048:	003fff06 	br	4000048 <__ram_exceptions_end+0xfbfdfe00>

0400004c <main>:

alt_up_char_buffer_dev* char_buffer;
alt_up_pixel_buffer_dma_dev* pixel_buffer;


int main() {
 400004c:	defffe04 	addi	sp,sp,-8
 4000050:	dfc00115 	stw	ra,4(sp)
 4000054:	df000015 	stw	fp,0(sp)
 4000058:	d839883a 	mov	fp,sp
	printf("TESTING\n");
 400005c:	01010074 	movhi	r4,1025
 4000060:	2111b204 	addi	r4,r4,18120
 4000064:	400060c0 	call	400060c <puts>
	rs232_dev = alt_up_rs232_open_dev("/dev/WIFI_Serial_Port");
 4000068:	01010074 	movhi	r4,1025
 400006c:	2111b404 	addi	r4,r4,18128
 4000070:	40122800 	call	4012280 <alt_up_rs232_open_dev>
 4000074:	d0a73815 	stw	r2,-25376(gp)

	if(rs232_dev == NULL) {
 4000078:	d0a73817 	ldw	r2,-25376(gp)
 400007c:	1000041e 	bne	r2,zero,4000090 <main+0x44>
		printf("Failed to open Wifi device\n");
 4000080:	01010074 	movhi	r4,1025
 4000084:	2111ba04 	addi	r4,r4,18152
 4000088:	400060c0 	call	400060c <puts>
 400008c:	00000306 	br	400009c <main+0x50>
	} else {
		printf("Opened Wifi device\n");
 4000090:	01010074 	movhi	r4,1025
 4000094:	2111c104 	addi	r4,r4,18180
 4000098:	400060c0 	call	400060c <puts>
	}

	alt_up_rs232_enable_read_interrupt(rs232_dev);
 400009c:	d0a73817 	ldw	r2,-25376(gp)
 40000a0:	1009883a 	mov	r4,r2
 40000a4:	4011f2c0 	call	4011f2c <alt_up_rs232_enable_read_interrupt>

	//write_data(node_start);
	write_data(dofile);
 40000a8:	01010074 	movhi	r4,1025
 40000ac:	2112f804 	addi	r4,r4,19424
 40000b0:	40001200 	call	4000120 <write_data>
	usleep(10000000);
 40000b4:	01002674 	movhi	r4,153
 40000b8:	2125a004 	addi	r4,r4,-27008
 40000bc:	4010e200 	call	4010e20 <usleep>
	//read_data();
	write_data(check_wifi);
 40000c0:	01010074 	movhi	r4,1025
 40000c4:	2112ff04 	addi	r4,r4,19452
 40000c8:	40001200 	call	4000120 <write_data>
	//write_data(led);
	usleep(5000000);
 40000cc:	01001334 	movhi	r4,76
 40000d0:	2112d004 	addi	r4,r4,19264
 40000d4:	4010e200 	call	4010e20 <usleep>

	read_data();
 40000d8:	40002380 	call	4000238 <read_data>


	printf("\noutput: \n");
 40000dc:	01010074 	movhi	r4,1025
 40000e0:	2111c604 	addi	r4,r4,18200
 40000e4:	400060c0 	call	400060c <puts>
	printf("%s", output);
 40000e8:	014100b4 	movhi	r5,1026
 40000ec:	29614b04 	addi	r5,r5,-31444
 40000f0:	01010074 	movhi	r4,1025
 40000f4:	2111c904 	addi	r4,r4,18212
 40000f8:	40004f00 	call	40004f0 <printf>
	//display_question();
	printf("\nFinished\n");
 40000fc:	01010074 	movhi	r4,1025
 4000100:	2111ca04 	addi	r4,r4,18216
 4000104:	400060c0 	call	400060c <puts>

    return 0;
 4000108:	0005883a 	mov	r2,zero
}
 400010c:	e037883a 	mov	sp,fp
 4000110:	dfc00117 	ldw	ra,4(sp)
 4000114:	df000017 	ldw	fp,0(sp)
 4000118:	dec00204 	addi	sp,sp,8
 400011c:	f800283a 	ret

04000120 <write_data>:

void write_data(char *function) {
 4000120:	defffb04 	addi	sp,sp,-20
 4000124:	dfc00415 	stw	ra,16(sp)
 4000128:	df000315 	stw	fp,12(sp)
 400012c:	df000304 	addi	fp,sp,12
 4000130:	e13fff15 	stw	r4,-4(fp)
	alt_up_rs232_disable_read_interrupt(rs232_dev);
 4000134:	d0a73817 	ldw	r2,-25376(gp)
 4000138:	1009883a 	mov	r4,r2
 400013c:	4011f880 	call	4011f88 <alt_up_rs232_disable_read_interrupt>
	printf("Writing\n");
 4000140:	01010074 	movhi	r4,1025
 4000144:	2111cd04 	addi	r4,r4,18228
 4000148:	400060c0 	call	400060c <puts>
	for (int i = 0; function[i] != '\0'; i++) {
 400014c:	e03ffd15 	stw	zero,-12(fp)
 4000150:	00001506 	br	40001a8 <write_data+0x88>
		data_W8 = function[i];
 4000154:	e0bffd17 	ldw	r2,-12(fp)
 4000158:	e0ffff17 	ldw	r3,-4(fp)
 400015c:	1885883a 	add	r2,r3,r2
 4000160:	10800003 	ldbu	r2,0(r2)
 4000164:	d0a73245 	stb	r2,-25399(gp)
		if(alt_up_rs232_write_data(rs232_dev, data_W8) == 0) {
 4000168:	d0a73817 	ldw	r2,-25376(gp)
 400016c:	d0e73243 	ldbu	r3,-25399(gp)
 4000170:	18c03fcc 	andi	r3,r3,255
 4000174:	180b883a 	mov	r5,r3
 4000178:	1009883a 	mov	r4,r2
 400017c:	40120a80 	call	40120a8 <alt_up_rs232_write_data>
 4000180:	1000061e 	bne	r2,zero,400019c <write_data+0x7c>
			printf("Write %c\n", data_W8);
 4000184:	d0a73243 	ldbu	r2,-25399(gp)
 4000188:	10803fcc 	andi	r2,r2,255
 400018c:	100b883a 	mov	r5,r2
 4000190:	01010074 	movhi	r4,1025
 4000194:	2111cf04 	addi	r4,r4,18236
 4000198:	40004f00 	call	40004f0 <printf>
}

void write_data(char *function) {
	alt_up_rs232_disable_read_interrupt(rs232_dev);
	printf("Writing\n");
	for (int i = 0; function[i] != '\0'; i++) {
 400019c:	e0bffd17 	ldw	r2,-12(fp)
 40001a0:	10800044 	addi	r2,r2,1
 40001a4:	e0bffd15 	stw	r2,-12(fp)
 40001a8:	e0bffd17 	ldw	r2,-12(fp)
 40001ac:	e0ffff17 	ldw	r3,-4(fp)
 40001b0:	1885883a 	add	r2,r3,r2
 40001b4:	10800003 	ldbu	r2,0(r2)
 40001b8:	10803fcc 	andi	r2,r2,255
 40001bc:	1080201c 	xori	r2,r2,128
 40001c0:	10bfe004 	addi	r2,r2,-128
 40001c4:	103fe31e 	bne	r2,zero,4000154 <__ram_exceptions_end+0xfbfdff0c>
		data_W8 = function[i];
		if(alt_up_rs232_write_data(rs232_dev, data_W8) == 0) {
			printf("Write %c\n", data_W8);
		}
	}
	data_W8 = '\n';
 40001c8:	00800284 	movi	r2,10
 40001cc:	d0a73245 	stb	r2,-25399(gp)
	int stat = alt_up_rs232_write_data(rs232_dev, data_W8);
 40001d0:	d0a73817 	ldw	r2,-25376(gp)
 40001d4:	d0e73243 	ldbu	r3,-25399(gp)
 40001d8:	18c03fcc 	andi	r3,r3,255
 40001dc:	180b883a 	mov	r5,r3
 40001e0:	1009883a 	mov	r4,r2
 40001e4:	40120a80 	call	40120a8 <alt_up_rs232_write_data>
 40001e8:	e0bffe15 	stw	r2,-8(fp)

	printf("%d", stat);
 40001ec:	e17ffe17 	ldw	r5,-8(fp)
 40001f0:	01010074 	movhi	r4,1025
 40001f4:	2111d204 	addi	r4,r4,18248
 40001f8:	40004f00 	call	40004f0 <printf>
	printf("Write %c\n", data_W8);
 40001fc:	d0a73243 	ldbu	r2,-25399(gp)
 4000200:	10803fcc 	andi	r2,r2,255
 4000204:	100b883a 	mov	r5,r2
 4000208:	01010074 	movhi	r4,1025
 400020c:	2111cf04 	addi	r4,r4,18236
 4000210:	40004f00 	call	40004f0 <printf>

	alt_up_rs232_enable_read_interrupt(rs232_dev);
 4000214:	d0a73817 	ldw	r2,-25376(gp)
 4000218:	1009883a 	mov	r4,r2
 400021c:	4011f2c0 	call	4011f2c <alt_up_rs232_enable_read_interrupt>
}
 4000220:	0001883a 	nop
 4000224:	e037883a 	mov	sp,fp
 4000228:	dfc00117 	ldw	ra,4(sp)
 400022c:	df000017 	ldw	fp,0(sp)
 4000230:	dec00204 	addi	sp,sp,8
 4000234:	f800283a 	ret

04000238 <read_data>:

void read_data() {
 4000238:	defffc04 	addi	sp,sp,-16
 400023c:	dfc00315 	stw	ra,12(sp)
 4000240:	df000215 	stw	fp,8(sp)
 4000244:	df000204 	addi	fp,sp,8
	printf("Reading\n");
 4000248:	01010074 	movhi	r4,1025
 400024c:	2111d304 	addi	r4,r4,18252
 4000250:	400060c0 	call	400060c <puts>
	read_FIFO_used = alt_up_rs232_get_used_space_in_read_FIFO(rs232_dev);
 4000254:	d0a73817 	ldw	r2,-25376(gp)
 4000258:	1009883a 	mov	r4,r2
 400025c:	4011fe80 	call	4011fe8 <alt_up_rs232_get_used_space_in_read_FIFO>
 4000260:	d0a7360d 	sth	r2,-25384(gp)
	while(read_FIFO_used > 0){
 4000264:	00002f06 	br	4000324 <read_data+0xec>
		int record = 0;
 4000268:	e03ffe15 	stw	zero,-8(fp)
		alt_up_rs232_read_data(rs232_dev, &data_R8, &parity);
 400026c:	d0a73817 	ldw	r2,-25376(gp)
 4000270:	d1a73204 	addi	r6,gp,-25400
 4000274:	d1673404 	addi	r5,gp,-25392
 4000278:	1009883a 	mov	r4,r2
 400027c:	40120e80 	call	40120e8 <alt_up_rs232_read_data>
		char str[2];
		sprintf(str, "%c", data_R8);
 4000280:	d0a73403 	ldbu	r2,-25392(gp)
 4000284:	10c03fcc 	andi	r3,r2,255
 4000288:	e0bfff04 	addi	r2,fp,-4
 400028c:	180d883a 	mov	r6,r3
 4000290:	01410074 	movhi	r5,1025
 4000294:	2951d504 	addi	r5,r5,18260
 4000298:	1009883a 	mov	r4,r2
 400029c:	40006780 	call	4000678 <sprintf>
		if(strcmp(str, "@") == 0) {
 40002a0:	e0bfff04 	addi	r2,fp,-4
 40002a4:	01410074 	movhi	r5,1025
 40002a8:	2951d604 	addi	r5,r5,18264
 40002ac:	1009883a 	mov	r4,r2
 40002b0:	40006e40 	call	40006e4 <strcmp>
 40002b4:	1000061e 	bne	r2,zero,40002d0 <read_data+0x98>
			record = 1;
 40002b8:	00800044 	movi	r2,1
 40002bc:	e0bffe15 	stw	r2,-8(fp)
			printf("RECORD\n");
 40002c0:	01010074 	movhi	r4,1025
 40002c4:	2111d704 	addi	r4,r4,18268
 40002c8:	400060c0 	call	400060c <puts>
 40002cc:	00000d06 	br	4000304 <read_data+0xcc>
		} else if(record == 1) {
 40002d0:	e0bffe17 	ldw	r2,-8(fp)
 40002d4:	10800058 	cmpnei	r2,r2,1
 40002d8:	10000a1e 	bne	r2,zero,4000304 <read_data+0xcc>
			sprintf(output, "%s%c", output, data_R8);
 40002dc:	d0a73403 	ldbu	r2,-25392(gp)
 40002e0:	10803fcc 	andi	r2,r2,255
 40002e4:	100f883a 	mov	r7,r2
 40002e8:	018100b4 	movhi	r6,1026
 40002ec:	31a14b04 	addi	r6,r6,-31444
 40002f0:	01410074 	movhi	r5,1025
 40002f4:	2951d904 	addi	r5,r5,18276
 40002f8:	010100b4 	movhi	r4,1026
 40002fc:	21214b04 	addi	r4,r4,-31444
 4000300:	40006780 	call	4000678 <sprintf>
		}

		printf("%c", data_R8);
 4000304:	d0a73403 	ldbu	r2,-25392(gp)
 4000308:	10803fcc 	andi	r2,r2,255
 400030c:	1009883a 	mov	r4,r2
 4000310:	40005340 	call	4000534 <putchar>
		//printf("%d\n", read_FIFO_used);
		read_FIFO_used = alt_up_rs232_get_used_space_in_read_FIFO(rs232_dev);
 4000314:	d0a73817 	ldw	r2,-25376(gp)
 4000318:	1009883a 	mov	r4,r2
 400031c:	4011fe80 	call	4011fe8 <alt_up_rs232_get_used_space_in_read_FIFO>
 4000320:	d0a7360d 	sth	r2,-25384(gp)
}

void read_data() {
	printf("Reading\n");
	read_FIFO_used = alt_up_rs232_get_used_space_in_read_FIFO(rs232_dev);
	while(read_FIFO_used > 0){
 4000324:	d0a7360b 	ldhu	r2,-25384(gp)
 4000328:	10bfffcc 	andi	r2,r2,65535
 400032c:	103fce1e 	bne	r2,zero,4000268 <__ram_exceptions_end+0xfbfe0020>
		printf("%c", data_R8);
		//printf("%d\n", read_FIFO_used);
		read_FIFO_used = alt_up_rs232_get_used_space_in_read_FIFO(rs232_dev);

	}
}
 4000330:	0001883a 	nop
 4000334:	e037883a 	mov	sp,fp
 4000338:	dfc00117 	ldw	ra,4(sp)
 400033c:	df000017 	ldw	fp,0(sp)
 4000340:	dec00204 	addi	sp,sp,8
 4000344:	f800283a 	ret

04000348 <display_question>:

void display_question() {
 4000348:	defffa04 	addi	sp,sp,-24
 400034c:	dfc00515 	stw	ra,20(sp)
 4000350:	df000415 	stw	fp,16(sp)
 4000354:	df000404 	addi	fp,sp,16
	pixel_buffer = alt_up_pixel_buffer_dma_open_dev("/dev/Pixel_Buffer");
 4000358:	01010074 	movhi	r4,1025
 400035c:	2111db04 	addi	r4,r4,18284
 4000360:	401259c0 	call	401259c <alt_up_pixel_buffer_dma_open_dev>
 4000364:	d0a73715 	stw	r2,-25380(gp)
	if(pixel_buffer == NULL) {
 4000368:	d0a73717 	ldw	r2,-25380(gp)
 400036c:	1000041e 	bne	r2,zero,4000380 <display_question+0x38>
		printf("Failed to open Pixel Buffer\n");
 4000370:	01010074 	movhi	r4,1025
 4000374:	2111e004 	addi	r4,r4,18304
 4000378:	400060c0 	call	400060c <puts>
 400037c:	00000306 	br	400038c <display_question+0x44>
	} else {
		printf("Opened Pixel Buffer\n");
 4000380:	01010074 	movhi	r4,1025
 4000384:	2111e704 	addi	r4,r4,18332
 4000388:	400060c0 	call	400060c <puts>
	}
	alt_up_pixel_buffer_dma_clear_screen(pixel_buffer, 0);
 400038c:	d0a73717 	ldw	r2,-25380(gp)
 4000390:	000b883a 	mov	r5,zero
 4000394:	1009883a 	mov	r4,r2
 4000398:	401285c0 	call	401285c <alt_up_pixel_buffer_dma_clear_screen>
	usleep(1000000);
 400039c:	010003f4 	movhi	r4,15
 40003a0:	21109004 	addi	r4,r4,16960
 40003a4:	4010e200 	call	4010e20 <usleep>

	alt_up_pixel_buffer_dma_draw_box(pixel_buffer, 150, 100, 199, 149, 0xF800, 0);
 40003a8:	d0e73717 	ldw	r3,-25380(gp)
 40003ac:	d8000215 	stw	zero,8(sp)
 40003b0:	00be0014 	movui	r2,63488
 40003b4:	d8800115 	stw	r2,4(sp)
 40003b8:	00802544 	movi	r2,149
 40003bc:	d8800015 	stw	r2,0(sp)
 40003c0:	01c031c4 	movi	r7,199
 40003c4:	01801904 	movi	r6,100
 40003c8:	01402584 	movi	r5,150
 40003cc:	1809883a 	mov	r4,r3
 40003d0:	40129840 	call	4012984 <alt_up_pixel_buffer_dma_draw_box>

	char_buffer = alt_up_char_buffer_open_dev("/dev/Char_Buffer");
 40003d4:	01010074 	movhi	r4,1025
 40003d8:	2111ec04 	addi	r4,r4,18352
 40003dc:	401233c0 	call	401233c <alt_up_char_buffer_open_dev>
 40003e0:	d0a73315 	stw	r2,-25396(gp)
	if(char_buffer == NULL) {
 40003e4:	d0a73317 	ldw	r2,-25396(gp)
 40003e8:	1000041e 	bne	r2,zero,40003fc <display_question+0xb4>
		printf("Failed to open Char buffer\n");
 40003ec:	01010074 	movhi	r4,1025
 40003f0:	2111f104 	addi	r4,r4,18372
 40003f4:	400060c0 	call	400060c <puts>
 40003f8:	00000306 	br	4000408 <display_question+0xc0>
	} else {
		printf("Opened Char Buffer\n");
 40003fc:	01010074 	movhi	r4,1025
 4000400:	2111f804 	addi	r4,r4,18400
 4000404:	400060c0 	call	400060c <puts>
	}

	char border = 'X';
 4000408:	00801604 	movi	r2,88
 400040c:	e0bfff05 	stb	r2,-4(fp)
	alt_up_char_buffer_clear(char_buffer);
 4000410:	d0a73317 	ldw	r2,-25396(gp)
 4000414:	1009883a 	mov	r4,r2
 4000418:	40125400 	call	4012540 <alt_up_char_buffer_clear>
	alt_up_char_buffer_draw(char_buffer, border, 0, 0);
 400041c:	d0a73317 	ldw	r2,-25396(gp)
 4000420:	e0ffff03 	ldbu	r3,-4(fp)
 4000424:	18c03fcc 	andi	r3,r3,255
 4000428:	000f883a 	mov	r7,zero
 400042c:	000d883a 	mov	r6,zero
 4000430:	180b883a 	mov	r5,r3
 4000434:	1009883a 	mov	r4,r2
 4000438:	40123780 	call	4012378 <alt_up_char_buffer_draw>
	alt_up_char_buffer_draw(char_buffer, border, 0, 59);
 400043c:	d0a73317 	ldw	r2,-25396(gp)
 4000440:	e0ffff03 	ldbu	r3,-4(fp)
 4000444:	18c03fcc 	andi	r3,r3,255
 4000448:	01c00ec4 	movi	r7,59
 400044c:	000d883a 	mov	r6,zero
 4000450:	180b883a 	mov	r5,r3
 4000454:	1009883a 	mov	r4,r2
 4000458:	40123780 	call	4012378 <alt_up_char_buffer_draw>
	alt_up_char_buffer_draw(char_buffer, border, 79, 0);
 400045c:	d0a73317 	ldw	r2,-25396(gp)
 4000460:	e0ffff03 	ldbu	r3,-4(fp)
 4000464:	18c03fcc 	andi	r3,r3,255
 4000468:	000f883a 	mov	r7,zero
 400046c:	018013c4 	movi	r6,79
 4000470:	180b883a 	mov	r5,r3
 4000474:	1009883a 	mov	r4,r2
 4000478:	40123780 	call	4012378 <alt_up_char_buffer_draw>
	alt_up_char_buffer_draw(char_buffer, border, 79, 59);
 400047c:	d0a73317 	ldw	r2,-25396(gp)
 4000480:	e0ffff03 	ldbu	r3,-4(fp)
 4000484:	18c03fcc 	andi	r3,r3,255
 4000488:	01c00ec4 	movi	r7,59
 400048c:	018013c4 	movi	r6,79
 4000490:	180b883a 	mov	r5,r3
 4000494:	1009883a 	mov	r4,r2
 4000498:	40123780 	call	4012378 <alt_up_char_buffer_draw>
	//alt_up_char_buffer_string(char_buffer, output, 30, 30);

	printf("Displayed questioned\n");
 400049c:	01010074 	movhi	r4,1025
 40004a0:	2111fd04 	addi	r4,r4,18420
 40004a4:	400060c0 	call	400060c <puts>
}
 40004a8:	0001883a 	nop
 40004ac:	e037883a 	mov	sp,fp
 40004b0:	dfc00117 	ldw	ra,4(sp)
 40004b4:	df000017 	ldw	fp,0(sp)
 40004b8:	dec00204 	addi	sp,sp,8
 40004bc:	f800283a 	ret

040004c0 <_printf_r>:
 40004c0:	defffd04 	addi	sp,sp,-12
 40004c4:	2805883a 	mov	r2,r5
 40004c8:	dfc00015 	stw	ra,0(sp)
 40004cc:	d9800115 	stw	r6,4(sp)
 40004d0:	d9c00215 	stw	r7,8(sp)
 40004d4:	21400217 	ldw	r5,8(r4)
 40004d8:	d9c00104 	addi	r7,sp,4
 40004dc:	100d883a 	mov	r6,r2
 40004e0:	4002a300 	call	4002a30 <___vfprintf_internal_r>
 40004e4:	dfc00017 	ldw	ra,0(sp)
 40004e8:	dec00304 	addi	sp,sp,12
 40004ec:	f800283a 	ret

040004f0 <printf>:
 40004f0:	defffc04 	addi	sp,sp,-16
 40004f4:	dfc00015 	stw	ra,0(sp)
 40004f8:	d9400115 	stw	r5,4(sp)
 40004fc:	d9800215 	stw	r6,8(sp)
 4000500:	d9c00315 	stw	r7,12(sp)
 4000504:	00810074 	movhi	r2,1025
 4000508:	109a0604 	addi	r2,r2,26648
 400050c:	10800017 	ldw	r2,0(r2)
 4000510:	200b883a 	mov	r5,r4
 4000514:	d9800104 	addi	r6,sp,4
 4000518:	11000217 	ldw	r4,8(r2)
 400051c:	4004c280 	call	4004c28 <__vfprintf_internal>
 4000520:	dfc00017 	ldw	ra,0(sp)
 4000524:	dec00404 	addi	sp,sp,16
 4000528:	f800283a 	ret

0400052c <_putchar_r>:
 400052c:	21800217 	ldw	r6,8(r4)
 4000530:	40096ec1 	jmpi	40096ec <_putc_r>

04000534 <putchar>:
 4000534:	00810074 	movhi	r2,1025
 4000538:	109a0604 	addi	r2,r2,26648
 400053c:	200b883a 	mov	r5,r4
 4000540:	11000017 	ldw	r4,0(r2)
 4000544:	21800217 	ldw	r6,8(r4)
 4000548:	40096ec1 	jmpi	40096ec <_putc_r>

0400054c <_puts_r>:
 400054c:	defff604 	addi	sp,sp,-40
 4000550:	dc000715 	stw	r16,28(sp)
 4000554:	2021883a 	mov	r16,r4
 4000558:	2809883a 	mov	r4,r5
 400055c:	dc400815 	stw	r17,32(sp)
 4000560:	dfc00915 	stw	ra,36(sp)
 4000564:	2823883a 	mov	r17,r5
 4000568:	40007c00 	call	40007c0 <strlen>
 400056c:	10c00044 	addi	r3,r2,1
 4000570:	d8800115 	stw	r2,4(sp)
 4000574:	00810074 	movhi	r2,1025
 4000578:	10920304 	addi	r2,r2,18444
 400057c:	d8800215 	stw	r2,8(sp)
 4000580:	00800044 	movi	r2,1
 4000584:	d8800315 	stw	r2,12(sp)
 4000588:	00800084 	movi	r2,2
 400058c:	dc400015 	stw	r17,0(sp)
 4000590:	d8c00615 	stw	r3,24(sp)
 4000594:	dec00415 	stw	sp,16(sp)
 4000598:	d8800515 	stw	r2,20(sp)
 400059c:	80000226 	beq	r16,zero,40005a8 <_puts_r+0x5c>
 40005a0:	80800e17 	ldw	r2,56(r16)
 40005a4:	10001426 	beq	r2,zero,40005f8 <_puts_r+0xac>
 40005a8:	81400217 	ldw	r5,8(r16)
 40005ac:	2880030b 	ldhu	r2,12(r5)
 40005b0:	10c8000c 	andi	r3,r2,8192
 40005b4:	1800061e 	bne	r3,zero,40005d0 <_puts_r+0x84>
 40005b8:	29001917 	ldw	r4,100(r5)
 40005bc:	00f7ffc4 	movi	r3,-8193
 40005c0:	10880014 	ori	r2,r2,8192
 40005c4:	20c6703a 	and	r3,r4,r3
 40005c8:	2880030d 	sth	r2,12(r5)
 40005cc:	28c01915 	stw	r3,100(r5)
 40005d0:	d9800404 	addi	r6,sp,16
 40005d4:	8009883a 	mov	r4,r16
 40005d8:	40071580 	call	4007158 <__sfvwrite_r>
 40005dc:	1000091e 	bne	r2,zero,4000604 <_puts_r+0xb8>
 40005e0:	00800284 	movi	r2,10
 40005e4:	dfc00917 	ldw	ra,36(sp)
 40005e8:	dc400817 	ldw	r17,32(sp)
 40005ec:	dc000717 	ldw	r16,28(sp)
 40005f0:	dec00a04 	addi	sp,sp,40
 40005f4:	f800283a 	ret
 40005f8:	8009883a 	mov	r4,r16
 40005fc:	4006cd40 	call	4006cd4 <__sinit>
 4000600:	003fe906 	br	40005a8 <__ram_exceptions_end+0xfbfe0360>
 4000604:	00bfffc4 	movi	r2,-1
 4000608:	003ff606 	br	40005e4 <__ram_exceptions_end+0xfbfe039c>

0400060c <puts>:
 400060c:	00810074 	movhi	r2,1025
 4000610:	109a0604 	addi	r2,r2,26648
 4000614:	200b883a 	mov	r5,r4
 4000618:	11000017 	ldw	r4,0(r2)
 400061c:	400054c1 	jmpi	400054c <_puts_r>

04000620 <_sprintf_r>:
 4000620:	deffe404 	addi	sp,sp,-112
 4000624:	2807883a 	mov	r3,r5
 4000628:	dfc01a15 	stw	ra,104(sp)
 400062c:	d9c01b15 	stw	r7,108(sp)
 4000630:	00a00034 	movhi	r2,32768
 4000634:	10bfffc4 	addi	r2,r2,-1
 4000638:	02008204 	movi	r8,520
 400063c:	d8800215 	stw	r2,8(sp)
 4000640:	d8800515 	stw	r2,20(sp)
 4000644:	d9c01b04 	addi	r7,sp,108
 4000648:	d80b883a 	mov	r5,sp
 400064c:	00bfffc4 	movi	r2,-1
 4000650:	d8c00015 	stw	r3,0(sp)
 4000654:	d8c00415 	stw	r3,16(sp)
 4000658:	da00030d 	sth	r8,12(sp)
 400065c:	d880038d 	sth	r2,14(sp)
 4000660:	40008580 	call	4000858 <___svfprintf_internal_r>
 4000664:	d8c00017 	ldw	r3,0(sp)
 4000668:	18000005 	stb	zero,0(r3)
 400066c:	dfc01a17 	ldw	ra,104(sp)
 4000670:	dec01c04 	addi	sp,sp,112
 4000674:	f800283a 	ret

04000678 <sprintf>:
 4000678:	deffe304 	addi	sp,sp,-116
 400067c:	2007883a 	mov	r3,r4
 4000680:	dfc01a15 	stw	ra,104(sp)
 4000684:	d9801b15 	stw	r6,108(sp)
 4000688:	d9c01c15 	stw	r7,112(sp)
 400068c:	01010074 	movhi	r4,1025
 4000690:	211a0604 	addi	r4,r4,26648
 4000694:	21000017 	ldw	r4,0(r4)
 4000698:	00a00034 	movhi	r2,32768
 400069c:	10bfffc4 	addi	r2,r2,-1
 40006a0:	280d883a 	mov	r6,r5
 40006a4:	02008204 	movi	r8,520
 40006a8:	d8800215 	stw	r2,8(sp)
 40006ac:	d8800515 	stw	r2,20(sp)
 40006b0:	d9c01b04 	addi	r7,sp,108
 40006b4:	d80b883a 	mov	r5,sp
 40006b8:	00bfffc4 	movi	r2,-1
 40006bc:	d8c00015 	stw	r3,0(sp)
 40006c0:	d8c00415 	stw	r3,16(sp)
 40006c4:	da00030d 	sth	r8,12(sp)
 40006c8:	d880038d 	sth	r2,14(sp)
 40006cc:	40008580 	call	4000858 <___svfprintf_internal_r>
 40006d0:	d8c00017 	ldw	r3,0(sp)
 40006d4:	18000005 	stb	zero,0(r3)
 40006d8:	dfc01a17 	ldw	ra,104(sp)
 40006dc:	dec01d04 	addi	sp,sp,116
 40006e0:	f800283a 	ret

040006e4 <strcmp>:
 40006e4:	2144b03a 	or	r2,r4,r5
 40006e8:	108000cc 	andi	r2,r2,3
 40006ec:	1000171e 	bne	r2,zero,400074c <strcmp+0x68>
 40006f0:	20800017 	ldw	r2,0(r4)
 40006f4:	28c00017 	ldw	r3,0(r5)
 40006f8:	10c0141e 	bne	r2,r3,400074c <strcmp+0x68>
 40006fc:	027fbff4 	movhi	r9,65279
 4000700:	4a7fbfc4 	addi	r9,r9,-257
 4000704:	0086303a 	nor	r3,zero,r2
 4000708:	02202074 	movhi	r8,32897
 400070c:	1245883a 	add	r2,r2,r9
 4000710:	42202004 	addi	r8,r8,-32640
 4000714:	10c4703a 	and	r2,r2,r3
 4000718:	1204703a 	and	r2,r2,r8
 400071c:	10000226 	beq	r2,zero,4000728 <strcmp+0x44>
 4000720:	00002306 	br	40007b0 <strcmp+0xcc>
 4000724:	1000221e 	bne	r2,zero,40007b0 <strcmp+0xcc>
 4000728:	21000104 	addi	r4,r4,4
 400072c:	20c00017 	ldw	r3,0(r4)
 4000730:	29400104 	addi	r5,r5,4
 4000734:	29800017 	ldw	r6,0(r5)
 4000738:	1a4f883a 	add	r7,r3,r9
 400073c:	00c4303a 	nor	r2,zero,r3
 4000740:	3884703a 	and	r2,r7,r2
 4000744:	1204703a 	and	r2,r2,r8
 4000748:	19bff626 	beq	r3,r6,4000724 <__ram_exceptions_end+0xfbfe04dc>
 400074c:	20800003 	ldbu	r2,0(r4)
 4000750:	10c03fcc 	andi	r3,r2,255
 4000754:	18c0201c 	xori	r3,r3,128
 4000758:	18ffe004 	addi	r3,r3,-128
 400075c:	18000c26 	beq	r3,zero,4000790 <strcmp+0xac>
 4000760:	29800007 	ldb	r6,0(r5)
 4000764:	19800326 	beq	r3,r6,4000774 <strcmp+0x90>
 4000768:	00001306 	br	40007b8 <strcmp+0xd4>
 400076c:	29800007 	ldb	r6,0(r5)
 4000770:	11800b1e 	bne	r2,r6,40007a0 <strcmp+0xbc>
 4000774:	21000044 	addi	r4,r4,1
 4000778:	20c00003 	ldbu	r3,0(r4)
 400077c:	29400044 	addi	r5,r5,1
 4000780:	18803fcc 	andi	r2,r3,255
 4000784:	1080201c 	xori	r2,r2,128
 4000788:	10bfe004 	addi	r2,r2,-128
 400078c:	103ff71e 	bne	r2,zero,400076c <__ram_exceptions_end+0xfbfe0524>
 4000790:	0007883a 	mov	r3,zero
 4000794:	28800003 	ldbu	r2,0(r5)
 4000798:	1885c83a 	sub	r2,r3,r2
 400079c:	f800283a 	ret
 40007a0:	28800003 	ldbu	r2,0(r5)
 40007a4:	18c03fcc 	andi	r3,r3,255
 40007a8:	1885c83a 	sub	r2,r3,r2
 40007ac:	f800283a 	ret
 40007b0:	0005883a 	mov	r2,zero
 40007b4:	f800283a 	ret
 40007b8:	10c03fcc 	andi	r3,r2,255
 40007bc:	003ff506 	br	4000794 <__ram_exceptions_end+0xfbfe054c>

040007c0 <strlen>:
 40007c0:	208000cc 	andi	r2,r4,3
 40007c4:	10002026 	beq	r2,zero,4000848 <strlen+0x88>
 40007c8:	20800007 	ldb	r2,0(r4)
 40007cc:	10002026 	beq	r2,zero,4000850 <strlen+0x90>
 40007d0:	2005883a 	mov	r2,r4
 40007d4:	00000206 	br	40007e0 <strlen+0x20>
 40007d8:	10c00007 	ldb	r3,0(r2)
 40007dc:	18001826 	beq	r3,zero,4000840 <strlen+0x80>
 40007e0:	10800044 	addi	r2,r2,1
 40007e4:	10c000cc 	andi	r3,r2,3
 40007e8:	183ffb1e 	bne	r3,zero,40007d8 <__ram_exceptions_end+0xfbfe0590>
 40007ec:	10c00017 	ldw	r3,0(r2)
 40007f0:	01ffbff4 	movhi	r7,65279
 40007f4:	39ffbfc4 	addi	r7,r7,-257
 40007f8:	00ca303a 	nor	r5,zero,r3
 40007fc:	01a02074 	movhi	r6,32897
 4000800:	19c7883a 	add	r3,r3,r7
 4000804:	31a02004 	addi	r6,r6,-32640
 4000808:	1946703a 	and	r3,r3,r5
 400080c:	1986703a 	and	r3,r3,r6
 4000810:	1800091e 	bne	r3,zero,4000838 <strlen+0x78>
 4000814:	10800104 	addi	r2,r2,4
 4000818:	10c00017 	ldw	r3,0(r2)
 400081c:	19cb883a 	add	r5,r3,r7
 4000820:	00c6303a 	nor	r3,zero,r3
 4000824:	28c6703a 	and	r3,r5,r3
 4000828:	1986703a 	and	r3,r3,r6
 400082c:	183ff926 	beq	r3,zero,4000814 <__ram_exceptions_end+0xfbfe05cc>
 4000830:	00000106 	br	4000838 <strlen+0x78>
 4000834:	10800044 	addi	r2,r2,1
 4000838:	10c00007 	ldb	r3,0(r2)
 400083c:	183ffd1e 	bne	r3,zero,4000834 <__ram_exceptions_end+0xfbfe05ec>
 4000840:	1105c83a 	sub	r2,r2,r4
 4000844:	f800283a 	ret
 4000848:	2005883a 	mov	r2,r4
 400084c:	003fe706 	br	40007ec <__ram_exceptions_end+0xfbfe05a4>
 4000850:	0005883a 	mov	r2,zero
 4000854:	f800283a 	ret

04000858 <___svfprintf_internal_r>:
 4000858:	deffb704 	addi	sp,sp,-292
 400085c:	dfc04815 	stw	ra,288(sp)
 4000860:	ddc04615 	stw	r23,280(sp)
 4000864:	d9402c15 	stw	r5,176(sp)
 4000868:	d9003915 	stw	r4,228(sp)
 400086c:	302f883a 	mov	r23,r6
 4000870:	d9c02d15 	stw	r7,180(sp)
 4000874:	df004715 	stw	fp,284(sp)
 4000878:	dd804515 	stw	r22,276(sp)
 400087c:	dd404415 	stw	r21,272(sp)
 4000880:	dd004315 	stw	r20,268(sp)
 4000884:	dcc04215 	stw	r19,264(sp)
 4000888:	dc804115 	stw	r18,260(sp)
 400088c:	dc404015 	stw	r17,256(sp)
 4000890:	dc003f15 	stw	r16,252(sp)
 4000894:	40078480 	call	4007848 <_localeconv_r>
 4000898:	10800017 	ldw	r2,0(r2)
 400089c:	1009883a 	mov	r4,r2
 40008a0:	d8803415 	stw	r2,208(sp)
 40008a4:	40007c00 	call	40007c0 <strlen>
 40008a8:	d8c02c17 	ldw	r3,176(sp)
 40008ac:	d8803815 	stw	r2,224(sp)
 40008b0:	1880030b 	ldhu	r2,12(r3)
 40008b4:	1080200c 	andi	r2,r2,128
 40008b8:	10000226 	beq	r2,zero,40008c4 <___svfprintf_internal_r+0x6c>
 40008bc:	18800417 	ldw	r2,16(r3)
 40008c0:	10067f26 	beq	r2,zero,40022c0 <___svfprintf_internal_r+0x1a68>
 40008c4:	dcc03917 	ldw	r19,228(sp)
 40008c8:	d8c00404 	addi	r3,sp,16
 40008cc:	05410074 	movhi	r21,1025
 40008d0:	d9001e04 	addi	r4,sp,120
 40008d4:	ad521484 	addi	r21,r21,18514
 40008d8:	d8c01e15 	stw	r3,120(sp)
 40008dc:	d8002015 	stw	zero,128(sp)
 40008e0:	d8001f15 	stw	zero,124(sp)
 40008e4:	d8003315 	stw	zero,204(sp)
 40008e8:	d8003615 	stw	zero,216(sp)
 40008ec:	d8003715 	stw	zero,220(sp)
 40008f0:	1811883a 	mov	r8,r3
 40008f4:	d8003a15 	stw	zero,232(sp)
 40008f8:	d8003b15 	stw	zero,236(sp)
 40008fc:	d8002f15 	stw	zero,188(sp)
 4000900:	d9002815 	stw	r4,160(sp)
 4000904:	b8800007 	ldb	r2,0(r23)
 4000908:	10026726 	beq	r2,zero,40012a8 <___svfprintf_internal_r+0xa50>
 400090c:	00c00944 	movi	r3,37
 4000910:	b821883a 	mov	r16,r23
 4000914:	10c0021e 	bne	r2,r3,4000920 <___svfprintf_internal_r+0xc8>
 4000918:	00001406 	br	400096c <___svfprintf_internal_r+0x114>
 400091c:	10c00326 	beq	r2,r3,400092c <___svfprintf_internal_r+0xd4>
 4000920:	84000044 	addi	r16,r16,1
 4000924:	80800007 	ldb	r2,0(r16)
 4000928:	103ffc1e 	bne	r2,zero,400091c <__ram_exceptions_end+0xfbfe06d4>
 400092c:	85e3c83a 	sub	r17,r16,r23
 4000930:	88000e26 	beq	r17,zero,400096c <___svfprintf_internal_r+0x114>
 4000934:	d8c02017 	ldw	r3,128(sp)
 4000938:	d8801f17 	ldw	r2,124(sp)
 400093c:	45c00015 	stw	r23,0(r8)
 4000940:	1c47883a 	add	r3,r3,r17
 4000944:	10800044 	addi	r2,r2,1
 4000948:	d8c02015 	stw	r3,128(sp)
 400094c:	44400115 	stw	r17,4(r8)
 4000950:	d8801f15 	stw	r2,124(sp)
 4000954:	00c001c4 	movi	r3,7
 4000958:	18809716 	blt	r3,r2,4000bb8 <___svfprintf_internal_r+0x360>
 400095c:	42000204 	addi	r8,r8,8
 4000960:	d9402f17 	ldw	r5,188(sp)
 4000964:	2c4b883a 	add	r5,r5,r17
 4000968:	d9402f15 	stw	r5,188(sp)
 400096c:	80800007 	ldb	r2,0(r16)
 4000970:	10009826 	beq	r2,zero,4000bd4 <___svfprintf_internal_r+0x37c>
 4000974:	84400047 	ldb	r17,1(r16)
 4000978:	00bfffc4 	movi	r2,-1
 400097c:	85c00044 	addi	r23,r16,1
 4000980:	d8002785 	stb	zero,158(sp)
 4000984:	0007883a 	mov	r3,zero
 4000988:	000f883a 	mov	r7,zero
 400098c:	d8802915 	stw	r2,164(sp)
 4000990:	d8003115 	stw	zero,196(sp)
 4000994:	0025883a 	mov	r18,zero
 4000998:	01401604 	movi	r5,88
 400099c:	01800244 	movi	r6,9
 40009a0:	02800a84 	movi	r10,42
 40009a4:	02401b04 	movi	r9,108
 40009a8:	bdc00044 	addi	r23,r23,1
 40009ac:	88bff804 	addi	r2,r17,-32
 40009b0:	2882f036 	bltu	r5,r2,4001574 <___svfprintf_internal_r+0xd1c>
 40009b4:	100490ba 	slli	r2,r2,2
 40009b8:	01010034 	movhi	r4,1024
 40009bc:	21027304 	addi	r4,r4,2508
 40009c0:	1105883a 	add	r2,r2,r4
 40009c4:	10800017 	ldw	r2,0(r2)
 40009c8:	1000683a 	jmp	r2
 40009cc:	040014dc 	xori	r16,zero,83
 40009d0:	04001574 	movhi	r16,85
 40009d4:	04001574 	movhi	r16,85
 40009d8:	040014d0 	cmplti	r16,zero,83
 40009dc:	04001574 	movhi	r16,85
 40009e0:	04001574 	movhi	r16,85
 40009e4:	04001574 	movhi	r16,85
 40009e8:	04001574 	movhi	r16,85
 40009ec:	04001574 	movhi	r16,85
 40009f0:	04001574 	movhi	r16,85
 40009f4:	04000c30 	cmpltui	r16,zero,48
 40009f8:	0400140c 	andi	r16,zero,80
 40009fc:	04001574 	movhi	r16,85
 4000a00:	04000b40 	call	4000b4 <__alt_mem_SDRAM-0x3bfff4c>
 4000a04:	04000c58 	cmpnei	r16,zero,49
 4000a08:	04001574 	movhi	r16,85
 4000a0c:	04000ccc 	andi	r16,zero,51
 4000a10:	04000c98 	cmpnei	r16,zero,50
 4000a14:	04000c98 	cmpnei	r16,zero,50
 4000a18:	04000c98 	cmpnei	r16,zero,50
 4000a1c:	04000c98 	cmpnei	r16,zero,50
 4000a20:	04000c98 	cmpnei	r16,zero,50
 4000a24:	04000c98 	cmpnei	r16,zero,50
 4000a28:	04000c98 	cmpnei	r16,zero,50
 4000a2c:	04000c98 	cmpnei	r16,zero,50
 4000a30:	04000c98 	cmpnei	r16,zero,50
 4000a34:	04001574 	movhi	r16,85
 4000a38:	04001574 	movhi	r16,85
 4000a3c:	04001574 	movhi	r16,85
 4000a40:	04001574 	movhi	r16,85
 4000a44:	04001574 	movhi	r16,85
 4000a48:	04001574 	movhi	r16,85
 4000a4c:	04001574 	movhi	r16,85
 4000a50:	04001574 	movhi	r16,85
 4000a54:	04001574 	movhi	r16,85
 4000a58:	04001574 	movhi	r16,85
 4000a5c:	04000d84 	movi	r16,54
 4000a60:	04000cd8 	cmpnei	r16,zero,51
 4000a64:	04001574 	movhi	r16,85
 4000a68:	04000cd8 	cmpnei	r16,zero,51
 4000a6c:	04001574 	movhi	r16,85
 4000a70:	04001574 	movhi	r16,85
 4000a74:	04001574 	movhi	r16,85
 4000a78:	04001574 	movhi	r16,85
 4000a7c:	04000d78 	rdprs	r16,zero,53
 4000a80:	04001574 	movhi	r16,85
 4000a84:	04001574 	movhi	r16,85
 4000a88:	04000e40 	call	4000e4 <__alt_mem_SDRAM-0x3bfff1c>
 4000a8c:	04001574 	movhi	r16,85
 4000a90:	04001574 	movhi	r16,85
 4000a94:	04001574 	movhi	r16,85
 4000a98:	04001574 	movhi	r16,85
 4000a9c:	04001574 	movhi	r16,85
 4000aa0:	040012b0 	cmpltui	r16,zero,74
 4000aa4:	04001574 	movhi	r16,85
 4000aa8:	04001574 	movhi	r16,85
 4000aac:	04001310 	cmplti	r16,zero,76
 4000ab0:	04001574 	movhi	r16,85
 4000ab4:	04001574 	movhi	r16,85
 4000ab8:	04001574 	movhi	r16,85
 4000abc:	04001574 	movhi	r16,85
 4000ac0:	04001574 	movhi	r16,85
 4000ac4:	04001574 	movhi	r16,85
 4000ac8:	04001574 	movhi	r16,85
 4000acc:	04001574 	movhi	r16,85
 4000ad0:	04001574 	movhi	r16,85
 4000ad4:	04001574 	movhi	r16,85
 4000ad8:	040013c0 	call	40013c <__alt_mem_SDRAM-0x3bffec4>
 4000adc:	040014fc 	xorhi	r16,zero,83
 4000ae0:	04000cd8 	cmpnei	r16,zero,51
 4000ae4:	04000cd8 	cmpnei	r16,zero,51
 4000ae8:	04000cd8 	cmpnei	r16,zero,51
 4000aec:	04001550 	cmplti	r16,zero,85
 4000af0:	040014fc 	xorhi	r16,zero,83
 4000af4:	04001574 	movhi	r16,85
 4000af8:	04001574 	movhi	r16,85
 4000afc:	0400150c 	andi	r16,zero,84
 4000b00:	04001574 	movhi	r16,85
 4000b04:	0400151c 	xori	r16,zero,84
 4000b08:	040013fc 	xorhi	r16,zero,79
 4000b0c:	04000b4c 	andi	r16,zero,45
 4000b10:	0400141c 	xori	r16,zero,80
 4000b14:	04001574 	movhi	r16,85
 4000b18:	04001428 	cmpgeui	r16,zero,80
 4000b1c:	04001574 	movhi	r16,85
 4000b20:	04001484 	movi	r16,82
 4000b24:	04001574 	movhi	r16,85
 4000b28:	04001574 	movhi	r16,85
 4000b2c:	04001494 	movui	r16,82
 4000b30:	d9003117 	ldw	r4,196(sp)
 4000b34:	d8802d15 	stw	r2,180(sp)
 4000b38:	0109c83a 	sub	r4,zero,r4
 4000b3c:	d9003115 	stw	r4,196(sp)
 4000b40:	94800114 	ori	r18,r18,4
 4000b44:	bc400007 	ldb	r17,0(r23)
 4000b48:	003f9706 	br	40009a8 <__ram_exceptions_end+0xfbfe0760>
 4000b4c:	00800c04 	movi	r2,48
 4000b50:	d9002d17 	ldw	r4,180(sp)
 4000b54:	d9402917 	ldw	r5,164(sp)
 4000b58:	d8802705 	stb	r2,156(sp)
 4000b5c:	00801e04 	movi	r2,120
 4000b60:	d8802745 	stb	r2,157(sp)
 4000b64:	d8002785 	stb	zero,158(sp)
 4000b68:	20c00104 	addi	r3,r4,4
 4000b6c:	25000017 	ldw	r20,0(r4)
 4000b70:	002d883a 	mov	r22,zero
 4000b74:	90800094 	ori	r2,r18,2
 4000b78:	28028616 	blt	r5,zero,4001594 <___svfprintf_internal_r+0xd3c>
 4000b7c:	00bfdfc4 	movi	r2,-129
 4000b80:	90a4703a 	and	r18,r18,r2
 4000b84:	d8c02d15 	stw	r3,180(sp)
 4000b88:	94800094 	ori	r18,r18,2
 4000b8c:	a002731e 	bne	r20,zero,400155c <___svfprintf_internal_r+0xd04>
 4000b90:	00810074 	movhi	r2,1025
 4000b94:	10920d04 	addi	r2,r2,18484
 4000b98:	d8803a15 	stw	r2,232(sp)
 4000b9c:	04401e04 	movi	r17,120
 4000ba0:	d8c02917 	ldw	r3,164(sp)
 4000ba4:	0039883a 	mov	fp,zero
 4000ba8:	1801d526 	beq	r3,zero,4001300 <___svfprintf_internal_r+0xaa8>
 4000bac:	0029883a 	mov	r20,zero
 4000bb0:	002d883a 	mov	r22,zero
 4000bb4:	0001f106 	br	400137c <___svfprintf_internal_r+0xb24>
 4000bb8:	d9402c17 	ldw	r5,176(sp)
 4000bbc:	d9801e04 	addi	r6,sp,120
 4000bc0:	9809883a 	mov	r4,r19
 4000bc4:	4009fbc0 	call	4009fbc <__ssprint_r>
 4000bc8:	1000081e 	bne	r2,zero,4000bec <___svfprintf_internal_r+0x394>
 4000bcc:	da000404 	addi	r8,sp,16
 4000bd0:	003f6306 	br	4000960 <__ram_exceptions_end+0xfbfe0718>
 4000bd4:	d8802017 	ldw	r2,128(sp)
 4000bd8:	10000426 	beq	r2,zero,4000bec <___svfprintf_internal_r+0x394>
 4000bdc:	d9402c17 	ldw	r5,176(sp)
 4000be0:	d9003917 	ldw	r4,228(sp)
 4000be4:	d9801e04 	addi	r6,sp,120
 4000be8:	4009fbc0 	call	4009fbc <__ssprint_r>
 4000bec:	d8802c17 	ldw	r2,176(sp)
 4000bf0:	10c0030b 	ldhu	r3,12(r2)
 4000bf4:	d8802f17 	ldw	r2,188(sp)
 4000bf8:	18c0100c 	andi	r3,r3,64
 4000bfc:	1805f51e 	bne	r3,zero,40023d4 <___svfprintf_internal_r+0x1b7c>
 4000c00:	dfc04817 	ldw	ra,288(sp)
 4000c04:	df004717 	ldw	fp,284(sp)
 4000c08:	ddc04617 	ldw	r23,280(sp)
 4000c0c:	dd804517 	ldw	r22,276(sp)
 4000c10:	dd404417 	ldw	r21,272(sp)
 4000c14:	dd004317 	ldw	r20,268(sp)
 4000c18:	dcc04217 	ldw	r19,264(sp)
 4000c1c:	dc804117 	ldw	r18,260(sp)
 4000c20:	dc404017 	ldw	r17,256(sp)
 4000c24:	dc003f17 	ldw	r16,252(sp)
 4000c28:	dec04904 	addi	sp,sp,292
 4000c2c:	f800283a 	ret
 4000c30:	d8802d17 	ldw	r2,180(sp)
 4000c34:	d9002d17 	ldw	r4,180(sp)
 4000c38:	10800017 	ldw	r2,0(r2)
 4000c3c:	d8803115 	stw	r2,196(sp)
 4000c40:	20800104 	addi	r2,r4,4
 4000c44:	d9003117 	ldw	r4,196(sp)
 4000c48:	203fb916 	blt	r4,zero,4000b30 <__ram_exceptions_end+0xfbfe08e8>
 4000c4c:	d8802d15 	stw	r2,180(sp)
 4000c50:	bc400007 	ldb	r17,0(r23)
 4000c54:	003f5406 	br	40009a8 <__ram_exceptions_end+0xfbfe0760>
 4000c58:	bc400007 	ldb	r17,0(r23)
 4000c5c:	bac00044 	addi	r11,r23,1
 4000c60:	8a873926 	beq	r17,r10,4002948 <___svfprintf_internal_r+0x20f0>
 4000c64:	88bff404 	addi	r2,r17,-48
 4000c68:	0009883a 	mov	r4,zero
 4000c6c:	30868836 	bltu	r6,r2,4002690 <___svfprintf_internal_r+0x1e38>
 4000c70:	5c400007 	ldb	r17,0(r11)
 4000c74:	210002a4 	muli	r4,r4,10
 4000c78:	5dc00044 	addi	r23,r11,1
 4000c7c:	b817883a 	mov	r11,r23
 4000c80:	2089883a 	add	r4,r4,r2
 4000c84:	88bff404 	addi	r2,r17,-48
 4000c88:	30bff92e 	bgeu	r6,r2,4000c70 <__ram_exceptions_end+0xfbfe0a28>
 4000c8c:	2005d716 	blt	r4,zero,40023ec <___svfprintf_internal_r+0x1b94>
 4000c90:	d9002915 	stw	r4,164(sp)
 4000c94:	003f4506 	br	40009ac <__ram_exceptions_end+0xfbfe0764>
 4000c98:	b809883a 	mov	r4,r23
 4000c9c:	d8003115 	stw	zero,196(sp)
 4000ca0:	88bff404 	addi	r2,r17,-48
 4000ca4:	0017883a 	mov	r11,zero
 4000ca8:	24400007 	ldb	r17,0(r4)
 4000cac:	5ac002a4 	muli	r11,r11,10
 4000cb0:	bdc00044 	addi	r23,r23,1
 4000cb4:	b809883a 	mov	r4,r23
 4000cb8:	12d7883a 	add	r11,r2,r11
 4000cbc:	88bff404 	addi	r2,r17,-48
 4000cc0:	30bff92e 	bgeu	r6,r2,4000ca8 <__ram_exceptions_end+0xfbfe0a60>
 4000cc4:	dac03115 	stw	r11,196(sp)
 4000cc8:	003f3806 	br	40009ac <__ram_exceptions_end+0xfbfe0764>
 4000ccc:	94802014 	ori	r18,r18,128
 4000cd0:	bc400007 	ldb	r17,0(r23)
 4000cd4:	003f3406 	br	40009a8 <__ram_exceptions_end+0xfbfe0760>
 4000cd8:	18c03fcc 	andi	r3,r3,255
 4000cdc:	1807471e 	bne	r3,zero,40029fc <___svfprintf_internal_r+0x21a4>
 4000ce0:	9080020c 	andi	r2,r18,8
 4000ce4:	10047d26 	beq	r2,zero,4001edc <___svfprintf_internal_r+0x1684>
 4000ce8:	d8c02d17 	ldw	r3,180(sp)
 4000cec:	d9002d17 	ldw	r4,180(sp)
 4000cf0:	d9402d17 	ldw	r5,180(sp)
 4000cf4:	18c00017 	ldw	r3,0(r3)
 4000cf8:	21000117 	ldw	r4,4(r4)
 4000cfc:	29400204 	addi	r5,r5,8
 4000d00:	d8c03615 	stw	r3,216(sp)
 4000d04:	d9003715 	stw	r4,220(sp)
 4000d08:	d9402d15 	stw	r5,180(sp)
 4000d0c:	d9003617 	ldw	r4,216(sp)
 4000d10:	d9403717 	ldw	r5,220(sp)
 4000d14:	da003e15 	stw	r8,248(sp)
 4000d18:	04000044 	movi	r16,1
 4000d1c:	4009db80 	call	4009db8 <__fpclassifyd>
 4000d20:	da003e17 	ldw	r8,248(sp)
 4000d24:	14044b1e 	bne	r2,r16,4001e54 <___svfprintf_internal_r+0x15fc>
 4000d28:	d9003617 	ldw	r4,216(sp)
 4000d2c:	d9403717 	ldw	r5,220(sp)
 4000d30:	000d883a 	mov	r6,zero
 4000d34:	000f883a 	mov	r7,zero
 4000d38:	400f2a00 	call	400f2a0 <__ledf2>
 4000d3c:	da003e17 	ldw	r8,248(sp)
 4000d40:	1005f316 	blt	r2,zero,4002510 <___svfprintf_internal_r+0x1cb8>
 4000d44:	df002783 	ldbu	fp,158(sp)
 4000d48:	008011c4 	movi	r2,71
 4000d4c:	1445590e 	bge	r2,r17,40022b4 <___svfprintf_internal_r+0x1a5c>
 4000d50:	04010074 	movhi	r16,1025
 4000d54:	84120504 	addi	r16,r16,18452
 4000d58:	00c000c4 	movi	r3,3
 4000d5c:	00bfdfc4 	movi	r2,-129
 4000d60:	d8c02a15 	stw	r3,168(sp)
 4000d64:	90a4703a 	and	r18,r18,r2
 4000d68:	d8c02e15 	stw	r3,184(sp)
 4000d6c:	d8002915 	stw	zero,164(sp)
 4000d70:	d8003215 	stw	zero,200(sp)
 4000d74:	00006606 	br	4000f10 <___svfprintf_internal_r+0x6b8>
 4000d78:	94800214 	ori	r18,r18,8
 4000d7c:	bc400007 	ldb	r17,0(r23)
 4000d80:	003f0906 	br	40009a8 <__ram_exceptions_end+0xfbfe0760>
 4000d84:	18c03fcc 	andi	r3,r3,255
 4000d88:	1807181e 	bne	r3,zero,40029ec <___svfprintf_internal_r+0x2194>
 4000d8c:	94800414 	ori	r18,r18,16
 4000d90:	9080080c 	andi	r2,r18,32
 4000d94:	10039626 	beq	r2,zero,4001bf0 <___svfprintf_internal_r+0x1398>
 4000d98:	d9402d17 	ldw	r5,180(sp)
 4000d9c:	28800117 	ldw	r2,4(r5)
 4000da0:	2d000017 	ldw	r20,0(r5)
 4000da4:	29400204 	addi	r5,r5,8
 4000da8:	d9402d15 	stw	r5,180(sp)
 4000dac:	102d883a 	mov	r22,r2
 4000db0:	10039816 	blt	r2,zero,4001c14 <___svfprintf_internal_r+0x13bc>
 4000db4:	d9402917 	ldw	r5,164(sp)
 4000db8:	df002783 	ldbu	fp,158(sp)
 4000dbc:	2803ab16 	blt	r5,zero,4001c6c <___svfprintf_internal_r+0x1414>
 4000dc0:	00ffdfc4 	movi	r3,-129
 4000dc4:	a584b03a 	or	r2,r20,r22
 4000dc8:	90e4703a 	and	r18,r18,r3
 4000dcc:	10014a26 	beq	r2,zero,40012f8 <___svfprintf_internal_r+0xaa0>
 4000dd0:	b0034b26 	beq	r22,zero,4001b00 <___svfprintf_internal_r+0x12a8>
 4000dd4:	dc402a15 	stw	r17,168(sp)
 4000dd8:	dc001e04 	addi	r16,sp,120
 4000ddc:	b023883a 	mov	r17,r22
 4000de0:	402d883a 	mov	r22,r8
 4000de4:	a009883a 	mov	r4,r20
 4000de8:	880b883a 	mov	r5,r17
 4000dec:	01800284 	movi	r6,10
 4000df0:	000f883a 	mov	r7,zero
 4000df4:	400d8bc0 	call	400d8bc <__umoddi3>
 4000df8:	10800c04 	addi	r2,r2,48
 4000dfc:	843fffc4 	addi	r16,r16,-1
 4000e00:	a009883a 	mov	r4,r20
 4000e04:	880b883a 	mov	r5,r17
 4000e08:	80800005 	stb	r2,0(r16)
 4000e0c:	01800284 	movi	r6,10
 4000e10:	000f883a 	mov	r7,zero
 4000e14:	400d3440 	call	400d344 <__udivdi3>
 4000e18:	1029883a 	mov	r20,r2
 4000e1c:	10c4b03a 	or	r2,r2,r3
 4000e20:	1823883a 	mov	r17,r3
 4000e24:	103fef1e 	bne	r2,zero,4000de4 <__ram_exceptions_end+0xfbfe0b9c>
 4000e28:	d8c02817 	ldw	r3,160(sp)
 4000e2c:	dc402a17 	ldw	r17,168(sp)
 4000e30:	b011883a 	mov	r8,r22
 4000e34:	1c07c83a 	sub	r3,r3,r16
 4000e38:	d8c02e15 	stw	r3,184(sp)
 4000e3c:	00002e06 	br	4000ef8 <___svfprintf_internal_r+0x6a0>
 4000e40:	18c03fcc 	andi	r3,r3,255
 4000e44:	1806e71e 	bne	r3,zero,40029e4 <___svfprintf_internal_r+0x218c>
 4000e48:	94800414 	ori	r18,r18,16
 4000e4c:	9080080c 	andi	r2,r18,32
 4000e50:	1002d426 	beq	r2,zero,40019a4 <___svfprintf_internal_r+0x114c>
 4000e54:	d9402d17 	ldw	r5,180(sp)
 4000e58:	d8c02917 	ldw	r3,164(sp)
 4000e5c:	d8002785 	stb	zero,158(sp)
 4000e60:	28800204 	addi	r2,r5,8
 4000e64:	2d000017 	ldw	r20,0(r5)
 4000e68:	2d800117 	ldw	r22,4(r5)
 4000e6c:	18041516 	blt	r3,zero,4001ec4 <___svfprintf_internal_r+0x166c>
 4000e70:	013fdfc4 	movi	r4,-129
 4000e74:	a586b03a 	or	r3,r20,r22
 4000e78:	d8802d15 	stw	r2,180(sp)
 4000e7c:	9124703a 	and	r18,r18,r4
 4000e80:	1802d51e 	bne	r3,zero,40019d8 <___svfprintf_internal_r+0x1180>
 4000e84:	d9402917 	ldw	r5,164(sp)
 4000e88:	0039883a 	mov	fp,zero
 4000e8c:	2806be26 	beq	r5,zero,4002988 <___svfprintf_internal_r+0x2130>
 4000e90:	0029883a 	mov	r20,zero
 4000e94:	002d883a 	mov	r22,zero
 4000e98:	dc001e04 	addi	r16,sp,120
 4000e9c:	a006d0fa 	srli	r3,r20,3
 4000ea0:	b008977a 	slli	r4,r22,29
 4000ea4:	b02cd0fa 	srli	r22,r22,3
 4000ea8:	a50001cc 	andi	r20,r20,7
 4000eac:	a0800c04 	addi	r2,r20,48
 4000eb0:	843fffc4 	addi	r16,r16,-1
 4000eb4:	20e8b03a 	or	r20,r4,r3
 4000eb8:	80800005 	stb	r2,0(r16)
 4000ebc:	a586b03a 	or	r3,r20,r22
 4000ec0:	183ff61e 	bne	r3,zero,4000e9c <__ram_exceptions_end+0xfbfe0c54>
 4000ec4:	90c0004c 	andi	r3,r18,1
 4000ec8:	18013926 	beq	r3,zero,40013b0 <___svfprintf_internal_r+0xb58>
 4000ecc:	10803fcc 	andi	r2,r2,255
 4000ed0:	1080201c 	xori	r2,r2,128
 4000ed4:	10bfe004 	addi	r2,r2,-128
 4000ed8:	00c00c04 	movi	r3,48
 4000edc:	10c13426 	beq	r2,r3,40013b0 <___svfprintf_internal_r+0xb58>
 4000ee0:	80ffffc5 	stb	r3,-1(r16)
 4000ee4:	d8c02817 	ldw	r3,160(sp)
 4000ee8:	80bfffc4 	addi	r2,r16,-1
 4000eec:	1021883a 	mov	r16,r2
 4000ef0:	1887c83a 	sub	r3,r3,r2
 4000ef4:	d8c02e15 	stw	r3,184(sp)
 4000ef8:	d8802e17 	ldw	r2,184(sp)
 4000efc:	d9002917 	ldw	r4,164(sp)
 4000f00:	1100010e 	bge	r2,r4,4000f08 <___svfprintf_internal_r+0x6b0>
 4000f04:	2005883a 	mov	r2,r4
 4000f08:	d8802a15 	stw	r2,168(sp)
 4000f0c:	d8003215 	stw	zero,200(sp)
 4000f10:	e7003fcc 	andi	fp,fp,255
 4000f14:	e700201c 	xori	fp,fp,128
 4000f18:	e73fe004 	addi	fp,fp,-128
 4000f1c:	e0000326 	beq	fp,zero,4000f2c <___svfprintf_internal_r+0x6d4>
 4000f20:	d8c02a17 	ldw	r3,168(sp)
 4000f24:	18c00044 	addi	r3,r3,1
 4000f28:	d8c02a15 	stw	r3,168(sp)
 4000f2c:	90c0008c 	andi	r3,r18,2
 4000f30:	d8c02b15 	stw	r3,172(sp)
 4000f34:	18000326 	beq	r3,zero,4000f44 <___svfprintf_internal_r+0x6ec>
 4000f38:	d8c02a17 	ldw	r3,168(sp)
 4000f3c:	18c00084 	addi	r3,r3,2
 4000f40:	d8c02a15 	stw	r3,168(sp)
 4000f44:	90c0210c 	andi	r3,r18,132
 4000f48:	d8c03015 	stw	r3,192(sp)
 4000f4c:	1801a11e 	bne	r3,zero,40015d4 <___svfprintf_internal_r+0xd7c>
 4000f50:	d9003117 	ldw	r4,196(sp)
 4000f54:	d8c02a17 	ldw	r3,168(sp)
 4000f58:	20e9c83a 	sub	r20,r4,r3
 4000f5c:	05019d0e 	bge	zero,r20,40015d4 <___svfprintf_internal_r+0xd7c>
 4000f60:	02400404 	movi	r9,16
 4000f64:	d8c02017 	ldw	r3,128(sp)
 4000f68:	d8801f17 	ldw	r2,124(sp)
 4000f6c:	4d051b0e 	bge	r9,r20,40023dc <___svfprintf_internal_r+0x1b84>
 4000f70:	01410074 	movhi	r5,1025
 4000f74:	29521884 	addi	r5,r5,18530
 4000f78:	dc403c15 	stw	r17,240(sp)
 4000f7c:	d9403515 	stw	r5,212(sp)
 4000f80:	a023883a 	mov	r17,r20
 4000f84:	482d883a 	mov	r22,r9
 4000f88:	9029883a 	mov	r20,r18
 4000f8c:	070001c4 	movi	fp,7
 4000f90:	8025883a 	mov	r18,r16
 4000f94:	dc002c17 	ldw	r16,176(sp)
 4000f98:	00000306 	br	4000fa8 <___svfprintf_internal_r+0x750>
 4000f9c:	8c7ffc04 	addi	r17,r17,-16
 4000fa0:	42000204 	addi	r8,r8,8
 4000fa4:	b440130e 	bge	r22,r17,4000ff4 <___svfprintf_internal_r+0x79c>
 4000fa8:	01010074 	movhi	r4,1025
 4000fac:	18c00404 	addi	r3,r3,16
 4000fb0:	10800044 	addi	r2,r2,1
 4000fb4:	21121884 	addi	r4,r4,18530
 4000fb8:	41000015 	stw	r4,0(r8)
 4000fbc:	45800115 	stw	r22,4(r8)
 4000fc0:	d8c02015 	stw	r3,128(sp)
 4000fc4:	d8801f15 	stw	r2,124(sp)
 4000fc8:	e0bff40e 	bge	fp,r2,4000f9c <__ram_exceptions_end+0xfbfe0d54>
 4000fcc:	d9801e04 	addi	r6,sp,120
 4000fd0:	800b883a 	mov	r5,r16
 4000fd4:	9809883a 	mov	r4,r19
 4000fd8:	4009fbc0 	call	4009fbc <__ssprint_r>
 4000fdc:	103f031e 	bne	r2,zero,4000bec <__ram_exceptions_end+0xfbfe09a4>
 4000fe0:	8c7ffc04 	addi	r17,r17,-16
 4000fe4:	d8c02017 	ldw	r3,128(sp)
 4000fe8:	d8801f17 	ldw	r2,124(sp)
 4000fec:	da000404 	addi	r8,sp,16
 4000ff0:	b47fed16 	blt	r22,r17,4000fa8 <__ram_exceptions_end+0xfbfe0d60>
 4000ff4:	9021883a 	mov	r16,r18
 4000ff8:	a025883a 	mov	r18,r20
 4000ffc:	8829883a 	mov	r20,r17
 4001000:	dc403c17 	ldw	r17,240(sp)
 4001004:	d9403517 	ldw	r5,212(sp)
 4001008:	a0c7883a 	add	r3,r20,r3
 400100c:	10800044 	addi	r2,r2,1
 4001010:	41400015 	stw	r5,0(r8)
 4001014:	45000115 	stw	r20,4(r8)
 4001018:	d8c02015 	stw	r3,128(sp)
 400101c:	d8801f15 	stw	r2,124(sp)
 4001020:	010001c4 	movi	r4,7
 4001024:	20829f16 	blt	r4,r2,4001aa4 <___svfprintf_internal_r+0x124c>
 4001028:	df002787 	ldb	fp,158(sp)
 400102c:	42000204 	addi	r8,r8,8
 4001030:	e0000c26 	beq	fp,zero,4001064 <___svfprintf_internal_r+0x80c>
 4001034:	d8801f17 	ldw	r2,124(sp)
 4001038:	d9002784 	addi	r4,sp,158
 400103c:	18c00044 	addi	r3,r3,1
 4001040:	10800044 	addi	r2,r2,1
 4001044:	41000015 	stw	r4,0(r8)
 4001048:	01000044 	movi	r4,1
 400104c:	41000115 	stw	r4,4(r8)
 4001050:	d8c02015 	stw	r3,128(sp)
 4001054:	d8801f15 	stw	r2,124(sp)
 4001058:	010001c4 	movi	r4,7
 400105c:	20823816 	blt	r4,r2,4001940 <___svfprintf_internal_r+0x10e8>
 4001060:	42000204 	addi	r8,r8,8
 4001064:	d8802b17 	ldw	r2,172(sp)
 4001068:	10000c26 	beq	r2,zero,400109c <___svfprintf_internal_r+0x844>
 400106c:	d8801f17 	ldw	r2,124(sp)
 4001070:	d9002704 	addi	r4,sp,156
 4001074:	18c00084 	addi	r3,r3,2
 4001078:	10800044 	addi	r2,r2,1
 400107c:	41000015 	stw	r4,0(r8)
 4001080:	01000084 	movi	r4,2
 4001084:	41000115 	stw	r4,4(r8)
 4001088:	d8c02015 	stw	r3,128(sp)
 400108c:	d8801f15 	stw	r2,124(sp)
 4001090:	010001c4 	movi	r4,7
 4001094:	20823216 	blt	r4,r2,4001960 <___svfprintf_internal_r+0x1108>
 4001098:	42000204 	addi	r8,r8,8
 400109c:	d9003017 	ldw	r4,192(sp)
 40010a0:	00802004 	movi	r2,128
 40010a4:	20819726 	beq	r4,r2,4001704 <___svfprintf_internal_r+0xeac>
 40010a8:	d9402917 	ldw	r5,164(sp)
 40010ac:	d8802e17 	ldw	r2,184(sp)
 40010b0:	28adc83a 	sub	r22,r5,r2
 40010b4:	05802f0e 	bge	zero,r22,4001174 <___svfprintf_internal_r+0x91c>
 40010b8:	07000404 	movi	fp,16
 40010bc:	d8801f17 	ldw	r2,124(sp)
 40010c0:	e583c00e 	bge	fp,r22,4001fc4 <___svfprintf_internal_r+0x176c>
 40010c4:	01410074 	movhi	r5,1025
 40010c8:	29521484 	addi	r5,r5,18514
 40010cc:	dc402915 	stw	r17,164(sp)
 40010d0:	d9402b15 	stw	r5,172(sp)
 40010d4:	b023883a 	mov	r17,r22
 40010d8:	050001c4 	movi	r20,7
 40010dc:	902d883a 	mov	r22,r18
 40010e0:	8025883a 	mov	r18,r16
 40010e4:	dc002c17 	ldw	r16,176(sp)
 40010e8:	00000306 	br	40010f8 <___svfprintf_internal_r+0x8a0>
 40010ec:	8c7ffc04 	addi	r17,r17,-16
 40010f0:	42000204 	addi	r8,r8,8
 40010f4:	e440110e 	bge	fp,r17,400113c <___svfprintf_internal_r+0x8e4>
 40010f8:	18c00404 	addi	r3,r3,16
 40010fc:	10800044 	addi	r2,r2,1
 4001100:	45400015 	stw	r21,0(r8)
 4001104:	47000115 	stw	fp,4(r8)
 4001108:	d8c02015 	stw	r3,128(sp)
 400110c:	d8801f15 	stw	r2,124(sp)
 4001110:	a0bff60e 	bge	r20,r2,40010ec <__ram_exceptions_end+0xfbfe0ea4>
 4001114:	d9801e04 	addi	r6,sp,120
 4001118:	800b883a 	mov	r5,r16
 400111c:	9809883a 	mov	r4,r19
 4001120:	4009fbc0 	call	4009fbc <__ssprint_r>
 4001124:	103eb11e 	bne	r2,zero,4000bec <__ram_exceptions_end+0xfbfe09a4>
 4001128:	8c7ffc04 	addi	r17,r17,-16
 400112c:	d8c02017 	ldw	r3,128(sp)
 4001130:	d8801f17 	ldw	r2,124(sp)
 4001134:	da000404 	addi	r8,sp,16
 4001138:	e47fef16 	blt	fp,r17,40010f8 <__ram_exceptions_end+0xfbfe0eb0>
 400113c:	9021883a 	mov	r16,r18
 4001140:	b025883a 	mov	r18,r22
 4001144:	882d883a 	mov	r22,r17
 4001148:	dc402917 	ldw	r17,164(sp)
 400114c:	d9002b17 	ldw	r4,172(sp)
 4001150:	1d87883a 	add	r3,r3,r22
 4001154:	10800044 	addi	r2,r2,1
 4001158:	41000015 	stw	r4,0(r8)
 400115c:	45800115 	stw	r22,4(r8)
 4001160:	d8c02015 	stw	r3,128(sp)
 4001164:	d8801f15 	stw	r2,124(sp)
 4001168:	010001c4 	movi	r4,7
 400116c:	2081ec16 	blt	r4,r2,4001920 <___svfprintf_internal_r+0x10c8>
 4001170:	42000204 	addi	r8,r8,8
 4001174:	9080400c 	andi	r2,r18,256
 4001178:	1001181e 	bne	r2,zero,40015dc <___svfprintf_internal_r+0xd84>
 400117c:	d9402e17 	ldw	r5,184(sp)
 4001180:	d8801f17 	ldw	r2,124(sp)
 4001184:	44000015 	stw	r16,0(r8)
 4001188:	1947883a 	add	r3,r3,r5
 400118c:	10800044 	addi	r2,r2,1
 4001190:	41400115 	stw	r5,4(r8)
 4001194:	d8c02015 	stw	r3,128(sp)
 4001198:	d8801f15 	stw	r2,124(sp)
 400119c:	010001c4 	movi	r4,7
 40011a0:	2081d116 	blt	r4,r2,40018e8 <___svfprintf_internal_r+0x1090>
 40011a4:	42000204 	addi	r8,r8,8
 40011a8:	9480010c 	andi	r18,r18,4
 40011ac:	90003226 	beq	r18,zero,4001278 <___svfprintf_internal_r+0xa20>
 40011b0:	d9403117 	ldw	r5,196(sp)
 40011b4:	d8802a17 	ldw	r2,168(sp)
 40011b8:	28a1c83a 	sub	r16,r5,r2
 40011bc:	04002e0e 	bge	zero,r16,4001278 <___svfprintf_internal_r+0xa20>
 40011c0:	04400404 	movi	r17,16
 40011c4:	d8801f17 	ldw	r2,124(sp)
 40011c8:	8c04b90e 	bge	r17,r16,40024b0 <___svfprintf_internal_r+0x1c58>
 40011cc:	01410074 	movhi	r5,1025
 40011d0:	29521884 	addi	r5,r5,18530
 40011d4:	d9403515 	stw	r5,212(sp)
 40011d8:	048001c4 	movi	r18,7
 40011dc:	dd002c17 	ldw	r20,176(sp)
 40011e0:	00000306 	br	40011f0 <___svfprintf_internal_r+0x998>
 40011e4:	843ffc04 	addi	r16,r16,-16
 40011e8:	42000204 	addi	r8,r8,8
 40011ec:	8c00130e 	bge	r17,r16,400123c <___svfprintf_internal_r+0x9e4>
 40011f0:	01010074 	movhi	r4,1025
 40011f4:	18c00404 	addi	r3,r3,16
 40011f8:	10800044 	addi	r2,r2,1
 40011fc:	21121884 	addi	r4,r4,18530
 4001200:	41000015 	stw	r4,0(r8)
 4001204:	44400115 	stw	r17,4(r8)
 4001208:	d8c02015 	stw	r3,128(sp)
 400120c:	d8801f15 	stw	r2,124(sp)
 4001210:	90bff40e 	bge	r18,r2,40011e4 <__ram_exceptions_end+0xfbfe0f9c>
 4001214:	d9801e04 	addi	r6,sp,120
 4001218:	a00b883a 	mov	r5,r20
 400121c:	9809883a 	mov	r4,r19
 4001220:	4009fbc0 	call	4009fbc <__ssprint_r>
 4001224:	103e711e 	bne	r2,zero,4000bec <__ram_exceptions_end+0xfbfe09a4>
 4001228:	843ffc04 	addi	r16,r16,-16
 400122c:	d8c02017 	ldw	r3,128(sp)
 4001230:	d8801f17 	ldw	r2,124(sp)
 4001234:	da000404 	addi	r8,sp,16
 4001238:	8c3fed16 	blt	r17,r16,40011f0 <__ram_exceptions_end+0xfbfe0fa8>
 400123c:	d9403517 	ldw	r5,212(sp)
 4001240:	1c07883a 	add	r3,r3,r16
 4001244:	10800044 	addi	r2,r2,1
 4001248:	41400015 	stw	r5,0(r8)
 400124c:	44000115 	stw	r16,4(r8)
 4001250:	d8c02015 	stw	r3,128(sp)
 4001254:	d8801f15 	stw	r2,124(sp)
 4001258:	010001c4 	movi	r4,7
 400125c:	2080060e 	bge	r4,r2,4001278 <___svfprintf_internal_r+0xa20>
 4001260:	d9402c17 	ldw	r5,176(sp)
 4001264:	d9801e04 	addi	r6,sp,120
 4001268:	9809883a 	mov	r4,r19
 400126c:	4009fbc0 	call	4009fbc <__ssprint_r>
 4001270:	103e5e1e 	bne	r2,zero,4000bec <__ram_exceptions_end+0xfbfe09a4>
 4001274:	d8c02017 	ldw	r3,128(sp)
 4001278:	d8803117 	ldw	r2,196(sp)
 400127c:	d9002a17 	ldw	r4,168(sp)
 4001280:	1100010e 	bge	r2,r4,4001288 <___svfprintf_internal_r+0xa30>
 4001284:	2005883a 	mov	r2,r4
 4001288:	d9402f17 	ldw	r5,188(sp)
 400128c:	288b883a 	add	r5,r5,r2
 4001290:	d9402f15 	stw	r5,188(sp)
 4001294:	18019c1e 	bne	r3,zero,4001908 <___svfprintf_internal_r+0x10b0>
 4001298:	b8800007 	ldb	r2,0(r23)
 400129c:	d8001f15 	stw	zero,124(sp)
 40012a0:	da000404 	addi	r8,sp,16
 40012a4:	103d991e 	bne	r2,zero,400090c <__ram_exceptions_end+0xfbfe06c4>
 40012a8:	b821883a 	mov	r16,r23
 40012ac:	003daf06 	br	400096c <__ram_exceptions_end+0xfbfe0724>
 40012b0:	18c03fcc 	andi	r3,r3,255
 40012b4:	1805c71e 	bne	r3,zero,40029d4 <___svfprintf_internal_r+0x217c>
 40012b8:	94800414 	ori	r18,r18,16
 40012bc:	9080080c 	andi	r2,r18,32
 40012c0:	10020126 	beq	r2,zero,4001ac8 <___svfprintf_internal_r+0x1270>
 40012c4:	d8802d17 	ldw	r2,180(sp)
 40012c8:	d9002917 	ldw	r4,164(sp)
 40012cc:	d8002785 	stb	zero,158(sp)
 40012d0:	10c00204 	addi	r3,r2,8
 40012d4:	15000017 	ldw	r20,0(r2)
 40012d8:	15800117 	ldw	r22,4(r2)
 40012dc:	20038e16 	blt	r4,zero,4002118 <___svfprintf_internal_r+0x18c0>
 40012e0:	013fdfc4 	movi	r4,-129
 40012e4:	a584b03a 	or	r2,r20,r22
 40012e8:	d8c02d15 	stw	r3,180(sp)
 40012ec:	9124703a 	and	r18,r18,r4
 40012f0:	0039883a 	mov	fp,zero
 40012f4:	103eb61e 	bne	r2,zero,4000dd0 <__ram_exceptions_end+0xfbfe0b88>
 40012f8:	d8802917 	ldw	r2,164(sp)
 40012fc:	1002c81e 	bne	r2,zero,4001e20 <___svfprintf_internal_r+0x15c8>
 4001300:	d8002915 	stw	zero,164(sp)
 4001304:	d8002e15 	stw	zero,184(sp)
 4001308:	dc001e04 	addi	r16,sp,120
 400130c:	003efa06 	br	4000ef8 <__ram_exceptions_end+0xfbfe0cb0>
 4001310:	18c03fcc 	andi	r3,r3,255
 4001314:	1805ad1e 	bne	r3,zero,40029cc <___svfprintf_internal_r+0x2174>
 4001318:	01410074 	movhi	r5,1025
 400131c:	29520804 	addi	r5,r5,18464
 4001320:	d9403a15 	stw	r5,232(sp)
 4001324:	9080080c 	andi	r2,r18,32
 4001328:	10006126 	beq	r2,zero,40014b0 <___svfprintf_internal_r+0xc58>
 400132c:	d8802d17 	ldw	r2,180(sp)
 4001330:	15000017 	ldw	r20,0(r2)
 4001334:	15800117 	ldw	r22,4(r2)
 4001338:	10800204 	addi	r2,r2,8
 400133c:	d8802d15 	stw	r2,180(sp)
 4001340:	9080004c 	andi	r2,r18,1
 4001344:	10018e26 	beq	r2,zero,4001980 <___svfprintf_internal_r+0x1128>
 4001348:	a584b03a 	or	r2,r20,r22
 400134c:	10030926 	beq	r2,zero,4001f74 <___svfprintf_internal_r+0x171c>
 4001350:	d8c02917 	ldw	r3,164(sp)
 4001354:	00800c04 	movi	r2,48
 4001358:	d8802705 	stb	r2,156(sp)
 400135c:	dc402745 	stb	r17,157(sp)
 4001360:	d8002785 	stb	zero,158(sp)
 4001364:	90800094 	ori	r2,r18,2
 4001368:	18048716 	blt	r3,zero,4002588 <___svfprintf_internal_r+0x1d30>
 400136c:	00bfdfc4 	movi	r2,-129
 4001370:	90a4703a 	and	r18,r18,r2
 4001374:	94800094 	ori	r18,r18,2
 4001378:	0039883a 	mov	fp,zero
 400137c:	d9003a17 	ldw	r4,232(sp)
 4001380:	dc001e04 	addi	r16,sp,120
 4001384:	a08003cc 	andi	r2,r20,15
 4001388:	b006973a 	slli	r3,r22,28
 400138c:	2085883a 	add	r2,r4,r2
 4001390:	a028d13a 	srli	r20,r20,4
 4001394:	10800003 	ldbu	r2,0(r2)
 4001398:	b02cd13a 	srli	r22,r22,4
 400139c:	843fffc4 	addi	r16,r16,-1
 40013a0:	1d28b03a 	or	r20,r3,r20
 40013a4:	80800005 	stb	r2,0(r16)
 40013a8:	a584b03a 	or	r2,r20,r22
 40013ac:	103ff51e 	bne	r2,zero,4001384 <__ram_exceptions_end+0xfbfe113c>
 40013b0:	d8c02817 	ldw	r3,160(sp)
 40013b4:	1c07c83a 	sub	r3,r3,r16
 40013b8:	d8c02e15 	stw	r3,184(sp)
 40013bc:	003ece06 	br	4000ef8 <__ram_exceptions_end+0xfbfe0cb0>
 40013c0:	d8c02d17 	ldw	r3,180(sp)
 40013c4:	d9002d17 	ldw	r4,180(sp)
 40013c8:	d8002785 	stb	zero,158(sp)
 40013cc:	18800017 	ldw	r2,0(r3)
 40013d0:	21000104 	addi	r4,r4,4
 40013d4:	00c00044 	movi	r3,1
 40013d8:	d8c02a15 	stw	r3,168(sp)
 40013dc:	d8801405 	stb	r2,80(sp)
 40013e0:	d9002d15 	stw	r4,180(sp)
 40013e4:	d8c02e15 	stw	r3,184(sp)
 40013e8:	d8002915 	stw	zero,164(sp)
 40013ec:	d8003215 	stw	zero,200(sp)
 40013f0:	dc001404 	addi	r16,sp,80
 40013f4:	0039883a 	mov	fp,zero
 40013f8:	003ecc06 	br	4000f2c <__ram_exceptions_end+0xfbfe0ce4>
 40013fc:	18c03fcc 	andi	r3,r3,255
 4001400:	183e9226 	beq	r3,zero,4000e4c <__ram_exceptions_end+0xfbfe0c04>
 4001404:	d9c02785 	stb	r7,158(sp)
 4001408:	003e9006 	br	4000e4c <__ram_exceptions_end+0xfbfe0c04>
 400140c:	00c00044 	movi	r3,1
 4001410:	01c00ac4 	movi	r7,43
 4001414:	bc400007 	ldb	r17,0(r23)
 4001418:	003d6306 	br	40009a8 <__ram_exceptions_end+0xfbfe0760>
 400141c:	94800814 	ori	r18,r18,32
 4001420:	bc400007 	ldb	r17,0(r23)
 4001424:	003d6006 	br	40009a8 <__ram_exceptions_end+0xfbfe0760>
 4001428:	d8c02d17 	ldw	r3,180(sp)
 400142c:	d8002785 	stb	zero,158(sp)
 4001430:	1c000017 	ldw	r16,0(r3)
 4001434:	1d000104 	addi	r20,r3,4
 4001438:	80040f26 	beq	r16,zero,4002478 <___svfprintf_internal_r+0x1c20>
 400143c:	d9002917 	ldw	r4,164(sp)
 4001440:	2003dc16 	blt	r4,zero,40023b4 <___svfprintf_internal_r+0x1b5c>
 4001444:	200d883a 	mov	r6,r4
 4001448:	000b883a 	mov	r5,zero
 400144c:	8009883a 	mov	r4,r16
 4001450:	da003e15 	stw	r8,248(sp)
 4001454:	40082400 	call	4008240 <memchr>
 4001458:	da003e17 	ldw	r8,248(sp)
 400145c:	10045826 	beq	r2,zero,40025c0 <___svfprintf_internal_r+0x1d68>
 4001460:	1405c83a 	sub	r2,r2,r16
 4001464:	d8802e15 	stw	r2,184(sp)
 4001468:	1003d816 	blt	r2,zero,40023cc <___svfprintf_internal_r+0x1b74>
 400146c:	df002783 	ldbu	fp,158(sp)
 4001470:	d8802a15 	stw	r2,168(sp)
 4001474:	dd002d15 	stw	r20,180(sp)
 4001478:	d8002915 	stw	zero,164(sp)
 400147c:	d8003215 	stw	zero,200(sp)
 4001480:	003ea306 	br	4000f10 <__ram_exceptions_end+0xfbfe0cc8>
 4001484:	18c03fcc 	andi	r3,r3,255
 4001488:	183f8c26 	beq	r3,zero,40012bc <__ram_exceptions_end+0xfbfe1074>
 400148c:	d9c02785 	stb	r7,158(sp)
 4001490:	003f8a06 	br	40012bc <__ram_exceptions_end+0xfbfe1074>
 4001494:	18c03fcc 	andi	r3,r3,255
 4001498:	1805631e 	bne	r3,zero,4002a28 <___svfprintf_internal_r+0x21d0>
 400149c:	01410074 	movhi	r5,1025
 40014a0:	29520d04 	addi	r5,r5,18484
 40014a4:	d9403a15 	stw	r5,232(sp)
 40014a8:	9080080c 	andi	r2,r18,32
 40014ac:	103f9f1e 	bne	r2,zero,400132c <__ram_exceptions_end+0xfbfe10e4>
 40014b0:	9080040c 	andi	r2,r18,16
 40014b4:	10029c26 	beq	r2,zero,4001f28 <___svfprintf_internal_r+0x16d0>
 40014b8:	d8c02d17 	ldw	r3,180(sp)
 40014bc:	002d883a 	mov	r22,zero
 40014c0:	1d000017 	ldw	r20,0(r3)
 40014c4:	18c00104 	addi	r3,r3,4
 40014c8:	d8c02d15 	stw	r3,180(sp)
 40014cc:	003f9c06 	br	4001340 <__ram_exceptions_end+0xfbfe10f8>
 40014d0:	94800054 	ori	r18,r18,1
 40014d4:	bc400007 	ldb	r17,0(r23)
 40014d8:	003d3306 	br	40009a8 <__ram_exceptions_end+0xfbfe0760>
 40014dc:	38803fcc 	andi	r2,r7,255
 40014e0:	1080201c 	xori	r2,r2,128
 40014e4:	10bfe004 	addi	r2,r2,-128
 40014e8:	1002971e 	bne	r2,zero,4001f48 <___svfprintf_internal_r+0x16f0>
 40014ec:	00c00044 	movi	r3,1
 40014f0:	01c00804 	movi	r7,32
 40014f4:	bc400007 	ldb	r17,0(r23)
 40014f8:	003d2b06 	br	40009a8 <__ram_exceptions_end+0xfbfe0760>
 40014fc:	18c03fcc 	andi	r3,r3,255
 4001500:	183e2326 	beq	r3,zero,4000d90 <__ram_exceptions_end+0xfbfe0b48>
 4001504:	d9c02785 	stb	r7,158(sp)
 4001508:	003e2106 	br	4000d90 <__ram_exceptions_end+0xfbfe0b48>
 400150c:	bc400007 	ldb	r17,0(r23)
 4001510:	8a430426 	beq	r17,r9,4002124 <___svfprintf_internal_r+0x18cc>
 4001514:	94800414 	ori	r18,r18,16
 4001518:	003d2306 	br	40009a8 <__ram_exceptions_end+0xfbfe0760>
 400151c:	18c03fcc 	andi	r3,r3,255
 4001520:	18053f1e 	bne	r3,zero,4002a20 <___svfprintf_internal_r+0x21c8>
 4001524:	9080080c 	andi	r2,r18,32
 4001528:	10028926 	beq	r2,zero,4001f50 <___svfprintf_internal_r+0x16f8>
 400152c:	d9402d17 	ldw	r5,180(sp)
 4001530:	d9002f17 	ldw	r4,188(sp)
 4001534:	28800017 	ldw	r2,0(r5)
 4001538:	2007d7fa 	srai	r3,r4,31
 400153c:	29400104 	addi	r5,r5,4
 4001540:	d9402d15 	stw	r5,180(sp)
 4001544:	11000015 	stw	r4,0(r2)
 4001548:	10c00115 	stw	r3,4(r2)
 400154c:	003ced06 	br	4000904 <__ram_exceptions_end+0xfbfe06bc>
 4001550:	94801014 	ori	r18,r18,64
 4001554:	bc400007 	ldb	r17,0(r23)
 4001558:	003d1306 	br	40009a8 <__ram_exceptions_end+0xfbfe0760>
 400155c:	01010074 	movhi	r4,1025
 4001560:	21120d04 	addi	r4,r4,18484
 4001564:	0039883a 	mov	fp,zero
 4001568:	d9003a15 	stw	r4,232(sp)
 400156c:	04401e04 	movi	r17,120
 4001570:	003f8206 	br	400137c <__ram_exceptions_end+0xfbfe1134>
 4001574:	18c03fcc 	andi	r3,r3,255
 4001578:	1805221e 	bne	r3,zero,4002a04 <___svfprintf_internal_r+0x21ac>
 400157c:	883d9526 	beq	r17,zero,4000bd4 <__ram_exceptions_end+0xfbfe098c>
 4001580:	00c00044 	movi	r3,1
 4001584:	d8c02a15 	stw	r3,168(sp)
 4001588:	dc401405 	stb	r17,80(sp)
 400158c:	d8002785 	stb	zero,158(sp)
 4001590:	003f9406 	br	40013e4 <__ram_exceptions_end+0xfbfe119c>
 4001594:	01010074 	movhi	r4,1025
 4001598:	21120d04 	addi	r4,r4,18484
 400159c:	d9003a15 	stw	r4,232(sp)
 40015a0:	d8c02d15 	stw	r3,180(sp)
 40015a4:	1025883a 	mov	r18,r2
 40015a8:	04401e04 	movi	r17,120
 40015ac:	a584b03a 	or	r2,r20,r22
 40015b0:	1000fa1e 	bne	r2,zero,400199c <___svfprintf_internal_r+0x1144>
 40015b4:	0039883a 	mov	fp,zero
 40015b8:	00800084 	movi	r2,2
 40015bc:	10803fcc 	andi	r2,r2,255
 40015c0:	00c00044 	movi	r3,1
 40015c4:	10c21626 	beq	r2,r3,4001e20 <___svfprintf_internal_r+0x15c8>
 40015c8:	00c00084 	movi	r3,2
 40015cc:	10fe301e 	bne	r2,r3,4000e90 <__ram_exceptions_end+0xfbfe0c48>
 40015d0:	003d7606 	br	4000bac <__ram_exceptions_end+0xfbfe0964>
 40015d4:	d8c02017 	ldw	r3,128(sp)
 40015d8:	003e9506 	br	4001030 <__ram_exceptions_end+0xfbfe0de8>
 40015dc:	00801944 	movi	r2,101
 40015e0:	14407c0e 	bge	r2,r17,40017d4 <___svfprintf_internal_r+0xf7c>
 40015e4:	d9003617 	ldw	r4,216(sp)
 40015e8:	d9403717 	ldw	r5,220(sp)
 40015ec:	000d883a 	mov	r6,zero
 40015f0:	000f883a 	mov	r7,zero
 40015f4:	d8c03d15 	stw	r3,244(sp)
 40015f8:	da003e15 	stw	r8,248(sp)
 40015fc:	400f13c0 	call	400f13c <__eqdf2>
 4001600:	d8c03d17 	ldw	r3,244(sp)
 4001604:	da003e17 	ldw	r8,248(sp)
 4001608:	1000f51e 	bne	r2,zero,40019e0 <___svfprintf_internal_r+0x1188>
 400160c:	d8801f17 	ldw	r2,124(sp)
 4001610:	01010074 	movhi	r4,1025
 4001614:	21121404 	addi	r4,r4,18512
 4001618:	18c00044 	addi	r3,r3,1
 400161c:	10800044 	addi	r2,r2,1
 4001620:	41000015 	stw	r4,0(r8)
 4001624:	01000044 	movi	r4,1
 4001628:	41000115 	stw	r4,4(r8)
 400162c:	d8c02015 	stw	r3,128(sp)
 4001630:	d8801f15 	stw	r2,124(sp)
 4001634:	010001c4 	movi	r4,7
 4001638:	20826616 	blt	r4,r2,4001fd4 <___svfprintf_internal_r+0x177c>
 400163c:	42000204 	addi	r8,r8,8
 4001640:	d8802617 	ldw	r2,152(sp)
 4001644:	d9403317 	ldw	r5,204(sp)
 4001648:	11400216 	blt	r2,r5,4001654 <___svfprintf_internal_r+0xdfc>
 400164c:	9080004c 	andi	r2,r18,1
 4001650:	103ed526 	beq	r2,zero,40011a8 <__ram_exceptions_end+0xfbfe0f60>
 4001654:	d8803817 	ldw	r2,224(sp)
 4001658:	d9003417 	ldw	r4,208(sp)
 400165c:	d9403817 	ldw	r5,224(sp)
 4001660:	1887883a 	add	r3,r3,r2
 4001664:	d8801f17 	ldw	r2,124(sp)
 4001668:	41000015 	stw	r4,0(r8)
 400166c:	41400115 	stw	r5,4(r8)
 4001670:	10800044 	addi	r2,r2,1
 4001674:	d8c02015 	stw	r3,128(sp)
 4001678:	d8801f15 	stw	r2,124(sp)
 400167c:	010001c4 	movi	r4,7
 4001680:	2082af16 	blt	r4,r2,4002140 <___svfprintf_internal_r+0x18e8>
 4001684:	42000204 	addi	r8,r8,8
 4001688:	d8803317 	ldw	r2,204(sp)
 400168c:	143fffc4 	addi	r16,r2,-1
 4001690:	043ec50e 	bge	zero,r16,40011a8 <__ram_exceptions_end+0xfbfe0f60>
 4001694:	04400404 	movi	r17,16
 4001698:	d8801f17 	ldw	r2,124(sp)
 400169c:	8c00860e 	bge	r17,r16,40018b8 <___svfprintf_internal_r+0x1060>
 40016a0:	01410074 	movhi	r5,1025
 40016a4:	29521484 	addi	r5,r5,18514
 40016a8:	d9402b15 	stw	r5,172(sp)
 40016ac:	058001c4 	movi	r22,7
 40016b0:	dd002c17 	ldw	r20,176(sp)
 40016b4:	00000306 	br	40016c4 <___svfprintf_internal_r+0xe6c>
 40016b8:	42000204 	addi	r8,r8,8
 40016bc:	843ffc04 	addi	r16,r16,-16
 40016c0:	8c00800e 	bge	r17,r16,40018c4 <___svfprintf_internal_r+0x106c>
 40016c4:	18c00404 	addi	r3,r3,16
 40016c8:	10800044 	addi	r2,r2,1
 40016cc:	45400015 	stw	r21,0(r8)
 40016d0:	44400115 	stw	r17,4(r8)
 40016d4:	d8c02015 	stw	r3,128(sp)
 40016d8:	d8801f15 	stw	r2,124(sp)
 40016dc:	b0bff60e 	bge	r22,r2,40016b8 <__ram_exceptions_end+0xfbfe1470>
 40016e0:	d9801e04 	addi	r6,sp,120
 40016e4:	a00b883a 	mov	r5,r20
 40016e8:	9809883a 	mov	r4,r19
 40016ec:	4009fbc0 	call	4009fbc <__ssprint_r>
 40016f0:	103d3e1e 	bne	r2,zero,4000bec <__ram_exceptions_end+0xfbfe09a4>
 40016f4:	d8c02017 	ldw	r3,128(sp)
 40016f8:	d8801f17 	ldw	r2,124(sp)
 40016fc:	da000404 	addi	r8,sp,16
 4001700:	003fee06 	br	40016bc <__ram_exceptions_end+0xfbfe1474>
 4001704:	d9403117 	ldw	r5,196(sp)
 4001708:	d8802a17 	ldw	r2,168(sp)
 400170c:	28adc83a 	sub	r22,r5,r2
 4001710:	05be650e 	bge	zero,r22,40010a8 <__ram_exceptions_end+0xfbfe0e60>
 4001714:	07000404 	movi	fp,16
 4001718:	d8801f17 	ldw	r2,124(sp)
 400171c:	e583a20e 	bge	fp,r22,40025a8 <___svfprintf_internal_r+0x1d50>
 4001720:	01410074 	movhi	r5,1025
 4001724:	29521484 	addi	r5,r5,18514
 4001728:	dc403015 	stw	r17,192(sp)
 400172c:	d9402b15 	stw	r5,172(sp)
 4001730:	b023883a 	mov	r17,r22
 4001734:	050001c4 	movi	r20,7
 4001738:	902d883a 	mov	r22,r18
 400173c:	8025883a 	mov	r18,r16
 4001740:	dc002c17 	ldw	r16,176(sp)
 4001744:	00000306 	br	4001754 <___svfprintf_internal_r+0xefc>
 4001748:	8c7ffc04 	addi	r17,r17,-16
 400174c:	42000204 	addi	r8,r8,8
 4001750:	e440110e 	bge	fp,r17,4001798 <___svfprintf_internal_r+0xf40>
 4001754:	18c00404 	addi	r3,r3,16
 4001758:	10800044 	addi	r2,r2,1
 400175c:	45400015 	stw	r21,0(r8)
 4001760:	47000115 	stw	fp,4(r8)
 4001764:	d8c02015 	stw	r3,128(sp)
 4001768:	d8801f15 	stw	r2,124(sp)
 400176c:	a0bff60e 	bge	r20,r2,4001748 <__ram_exceptions_end+0xfbfe1500>
 4001770:	d9801e04 	addi	r6,sp,120
 4001774:	800b883a 	mov	r5,r16
 4001778:	9809883a 	mov	r4,r19
 400177c:	4009fbc0 	call	4009fbc <__ssprint_r>
 4001780:	103d1a1e 	bne	r2,zero,4000bec <__ram_exceptions_end+0xfbfe09a4>
 4001784:	8c7ffc04 	addi	r17,r17,-16
 4001788:	d8c02017 	ldw	r3,128(sp)
 400178c:	d8801f17 	ldw	r2,124(sp)
 4001790:	da000404 	addi	r8,sp,16
 4001794:	e47fef16 	blt	fp,r17,4001754 <__ram_exceptions_end+0xfbfe150c>
 4001798:	9021883a 	mov	r16,r18
 400179c:	b025883a 	mov	r18,r22
 40017a0:	882d883a 	mov	r22,r17
 40017a4:	dc403017 	ldw	r17,192(sp)
 40017a8:	d9002b17 	ldw	r4,172(sp)
 40017ac:	1d87883a 	add	r3,r3,r22
 40017b0:	10800044 	addi	r2,r2,1
 40017b4:	41000015 	stw	r4,0(r8)
 40017b8:	45800115 	stw	r22,4(r8)
 40017bc:	d8c02015 	stw	r3,128(sp)
 40017c0:	d8801f15 	stw	r2,124(sp)
 40017c4:	010001c4 	movi	r4,7
 40017c8:	20819a16 	blt	r4,r2,4001e34 <___svfprintf_internal_r+0x15dc>
 40017cc:	42000204 	addi	r8,r8,8
 40017d0:	003e3506 	br	40010a8 <__ram_exceptions_end+0xfbfe0e60>
 40017d4:	d9403317 	ldw	r5,204(sp)
 40017d8:	00800044 	movi	r2,1
 40017dc:	18c00044 	addi	r3,r3,1
 40017e0:	1141710e 	bge	r2,r5,4001da8 <___svfprintf_internal_r+0x1550>
 40017e4:	dc401f17 	ldw	r17,124(sp)
 40017e8:	00800044 	movi	r2,1
 40017ec:	40800115 	stw	r2,4(r8)
 40017f0:	8c400044 	addi	r17,r17,1
 40017f4:	44000015 	stw	r16,0(r8)
 40017f8:	d8c02015 	stw	r3,128(sp)
 40017fc:	dc401f15 	stw	r17,124(sp)
 4001800:	008001c4 	movi	r2,7
 4001804:	14417416 	blt	r2,r17,4001dd8 <___svfprintf_internal_r+0x1580>
 4001808:	42000204 	addi	r8,r8,8
 400180c:	d8803817 	ldw	r2,224(sp)
 4001810:	d9003417 	ldw	r4,208(sp)
 4001814:	8c400044 	addi	r17,r17,1
 4001818:	10c7883a 	add	r3,r2,r3
 400181c:	40800115 	stw	r2,4(r8)
 4001820:	41000015 	stw	r4,0(r8)
 4001824:	d8c02015 	stw	r3,128(sp)
 4001828:	dc401f15 	stw	r17,124(sp)
 400182c:	008001c4 	movi	r2,7
 4001830:	14417216 	blt	r2,r17,4001dfc <___svfprintf_internal_r+0x15a4>
 4001834:	45800204 	addi	r22,r8,8
 4001838:	d9003617 	ldw	r4,216(sp)
 400183c:	d9403717 	ldw	r5,220(sp)
 4001840:	000d883a 	mov	r6,zero
 4001844:	000f883a 	mov	r7,zero
 4001848:	d8c03d15 	stw	r3,244(sp)
 400184c:	400f13c0 	call	400f13c <__eqdf2>
 4001850:	d8c03d17 	ldw	r3,244(sp)
 4001854:	1000b326 	beq	r2,zero,4001b24 <___svfprintf_internal_r+0x12cc>
 4001858:	d9403317 	ldw	r5,204(sp)
 400185c:	84000044 	addi	r16,r16,1
 4001860:	8c400044 	addi	r17,r17,1
 4001864:	28bfffc4 	addi	r2,r5,-1
 4001868:	1887883a 	add	r3,r3,r2
 400186c:	b0800115 	stw	r2,4(r22)
 4001870:	b4000015 	stw	r16,0(r22)
 4001874:	d8c02015 	stw	r3,128(sp)
 4001878:	dc401f15 	stw	r17,124(sp)
 400187c:	008001c4 	movi	r2,7
 4001880:	1440d216 	blt	r2,r17,4001bcc <___svfprintf_internal_r+0x1374>
 4001884:	b5800204 	addi	r22,r22,8
 4001888:	d9003b17 	ldw	r4,236(sp)
 400188c:	df0022c4 	addi	fp,sp,139
 4001890:	8c400044 	addi	r17,r17,1
 4001894:	20c7883a 	add	r3,r4,r3
 4001898:	b7000015 	stw	fp,0(r22)
 400189c:	b1000115 	stw	r4,4(r22)
 40018a0:	d8c02015 	stw	r3,128(sp)
 40018a4:	dc401f15 	stw	r17,124(sp)
 40018a8:	008001c4 	movi	r2,7
 40018ac:	14400e16 	blt	r2,r17,40018e8 <___svfprintf_internal_r+0x1090>
 40018b0:	b2000204 	addi	r8,r22,8
 40018b4:	003e3c06 	br	40011a8 <__ram_exceptions_end+0xfbfe0f60>
 40018b8:	01010074 	movhi	r4,1025
 40018bc:	21121484 	addi	r4,r4,18514
 40018c0:	d9002b15 	stw	r4,172(sp)
 40018c4:	d9002b17 	ldw	r4,172(sp)
 40018c8:	1c07883a 	add	r3,r3,r16
 40018cc:	44000115 	stw	r16,4(r8)
 40018d0:	41000015 	stw	r4,0(r8)
 40018d4:	10800044 	addi	r2,r2,1
 40018d8:	d8c02015 	stw	r3,128(sp)
 40018dc:	d8801f15 	stw	r2,124(sp)
 40018e0:	010001c4 	movi	r4,7
 40018e4:	20be2f0e 	bge	r4,r2,40011a4 <__ram_exceptions_end+0xfbfe0f5c>
 40018e8:	d9402c17 	ldw	r5,176(sp)
 40018ec:	d9801e04 	addi	r6,sp,120
 40018f0:	9809883a 	mov	r4,r19
 40018f4:	4009fbc0 	call	4009fbc <__ssprint_r>
 40018f8:	103cbc1e 	bne	r2,zero,4000bec <__ram_exceptions_end+0xfbfe09a4>
 40018fc:	d8c02017 	ldw	r3,128(sp)
 4001900:	da000404 	addi	r8,sp,16
 4001904:	003e2806 	br	40011a8 <__ram_exceptions_end+0xfbfe0f60>
 4001908:	d9402c17 	ldw	r5,176(sp)
 400190c:	d9801e04 	addi	r6,sp,120
 4001910:	9809883a 	mov	r4,r19
 4001914:	4009fbc0 	call	4009fbc <__ssprint_r>
 4001918:	103e5f26 	beq	r2,zero,4001298 <__ram_exceptions_end+0xfbfe1050>
 400191c:	003cb306 	br	4000bec <__ram_exceptions_end+0xfbfe09a4>
 4001920:	d9402c17 	ldw	r5,176(sp)
 4001924:	d9801e04 	addi	r6,sp,120
 4001928:	9809883a 	mov	r4,r19
 400192c:	4009fbc0 	call	4009fbc <__ssprint_r>
 4001930:	103cae1e 	bne	r2,zero,4000bec <__ram_exceptions_end+0xfbfe09a4>
 4001934:	d8c02017 	ldw	r3,128(sp)
 4001938:	da000404 	addi	r8,sp,16
 400193c:	003e0d06 	br	4001174 <__ram_exceptions_end+0xfbfe0f2c>
 4001940:	d9402c17 	ldw	r5,176(sp)
 4001944:	d9801e04 	addi	r6,sp,120
 4001948:	9809883a 	mov	r4,r19
 400194c:	4009fbc0 	call	4009fbc <__ssprint_r>
 4001950:	103ca61e 	bne	r2,zero,4000bec <__ram_exceptions_end+0xfbfe09a4>
 4001954:	d8c02017 	ldw	r3,128(sp)
 4001958:	da000404 	addi	r8,sp,16
 400195c:	003dc106 	br	4001064 <__ram_exceptions_end+0xfbfe0e1c>
 4001960:	d9402c17 	ldw	r5,176(sp)
 4001964:	d9801e04 	addi	r6,sp,120
 4001968:	9809883a 	mov	r4,r19
 400196c:	4009fbc0 	call	4009fbc <__ssprint_r>
 4001970:	103c9e1e 	bne	r2,zero,4000bec <__ram_exceptions_end+0xfbfe09a4>
 4001974:	d8c02017 	ldw	r3,128(sp)
 4001978:	da000404 	addi	r8,sp,16
 400197c:	003dc706 	br	400109c <__ram_exceptions_end+0xfbfe0e54>
 4001980:	d8802917 	ldw	r2,164(sp)
 4001984:	d8002785 	stb	zero,158(sp)
 4001988:	103f0816 	blt	r2,zero,40015ac <__ram_exceptions_end+0xfbfe1364>
 400198c:	00ffdfc4 	movi	r3,-129
 4001990:	a584b03a 	or	r2,r20,r22
 4001994:	90e4703a 	and	r18,r18,r3
 4001998:	103c8126 	beq	r2,zero,4000ba0 <__ram_exceptions_end+0xfbfe0958>
 400199c:	0039883a 	mov	fp,zero
 40019a0:	003e7606 	br	400137c <__ram_exceptions_end+0xfbfe1134>
 40019a4:	9080040c 	andi	r2,r18,16
 40019a8:	10013d26 	beq	r2,zero,4001ea0 <___svfprintf_internal_r+0x1648>
 40019ac:	d9002d17 	ldw	r4,180(sp)
 40019b0:	d9402917 	ldw	r5,164(sp)
 40019b4:	d8002785 	stb	zero,158(sp)
 40019b8:	20800104 	addi	r2,r4,4
 40019bc:	25000017 	ldw	r20,0(r4)
 40019c0:	002d883a 	mov	r22,zero
 40019c4:	28013f16 	blt	r5,zero,4001ec4 <___svfprintf_internal_r+0x166c>
 40019c8:	00ffdfc4 	movi	r3,-129
 40019cc:	d8802d15 	stw	r2,180(sp)
 40019d0:	90e4703a 	and	r18,r18,r3
 40019d4:	a03d2b26 	beq	r20,zero,4000e84 <__ram_exceptions_end+0xfbfe0c3c>
 40019d8:	0039883a 	mov	fp,zero
 40019dc:	003d2e06 	br	4000e98 <__ram_exceptions_end+0xfbfe0c50>
 40019e0:	dc402617 	ldw	r17,152(sp)
 40019e4:	0441830e 	bge	zero,r17,4001ff4 <___svfprintf_internal_r+0x179c>
 40019e8:	dc403217 	ldw	r17,200(sp)
 40019ec:	d8803317 	ldw	r2,204(sp)
 40019f0:	1440010e 	bge	r2,r17,40019f8 <___svfprintf_internal_r+0x11a0>
 40019f4:	1023883a 	mov	r17,r2
 40019f8:	04400a0e 	bge	zero,r17,4001a24 <___svfprintf_internal_r+0x11cc>
 40019fc:	d8801f17 	ldw	r2,124(sp)
 4001a00:	1c47883a 	add	r3,r3,r17
 4001a04:	44000015 	stw	r16,0(r8)
 4001a08:	10800044 	addi	r2,r2,1
 4001a0c:	44400115 	stw	r17,4(r8)
 4001a10:	d8c02015 	stw	r3,128(sp)
 4001a14:	d8801f15 	stw	r2,124(sp)
 4001a18:	010001c4 	movi	r4,7
 4001a1c:	20827516 	blt	r4,r2,40023f4 <___svfprintf_internal_r+0x1b9c>
 4001a20:	42000204 	addi	r8,r8,8
 4001a24:	88027b16 	blt	r17,zero,4002414 <___svfprintf_internal_r+0x1bbc>
 4001a28:	d9003217 	ldw	r4,200(sp)
 4001a2c:	2463c83a 	sub	r17,r4,r17
 4001a30:	0440990e 	bge	zero,r17,4001c98 <___svfprintf_internal_r+0x1440>
 4001a34:	05800404 	movi	r22,16
 4001a38:	d8801f17 	ldw	r2,124(sp)
 4001a3c:	b441530e 	bge	r22,r17,4001f8c <___svfprintf_internal_r+0x1734>
 4001a40:	01010074 	movhi	r4,1025
 4001a44:	21121484 	addi	r4,r4,18514
 4001a48:	d9002b15 	stw	r4,172(sp)
 4001a4c:	070001c4 	movi	fp,7
 4001a50:	dd002c17 	ldw	r20,176(sp)
 4001a54:	00000306 	br	4001a64 <___svfprintf_internal_r+0x120c>
 4001a58:	42000204 	addi	r8,r8,8
 4001a5c:	8c7ffc04 	addi	r17,r17,-16
 4001a60:	b4414d0e 	bge	r22,r17,4001f98 <___svfprintf_internal_r+0x1740>
 4001a64:	18c00404 	addi	r3,r3,16
 4001a68:	10800044 	addi	r2,r2,1
 4001a6c:	45400015 	stw	r21,0(r8)
 4001a70:	45800115 	stw	r22,4(r8)
 4001a74:	d8c02015 	stw	r3,128(sp)
 4001a78:	d8801f15 	stw	r2,124(sp)
 4001a7c:	e0bff60e 	bge	fp,r2,4001a58 <__ram_exceptions_end+0xfbfe1810>
 4001a80:	d9801e04 	addi	r6,sp,120
 4001a84:	a00b883a 	mov	r5,r20
 4001a88:	9809883a 	mov	r4,r19
 4001a8c:	4009fbc0 	call	4009fbc <__ssprint_r>
 4001a90:	103c561e 	bne	r2,zero,4000bec <__ram_exceptions_end+0xfbfe09a4>
 4001a94:	d8c02017 	ldw	r3,128(sp)
 4001a98:	d8801f17 	ldw	r2,124(sp)
 4001a9c:	da000404 	addi	r8,sp,16
 4001aa0:	003fee06 	br	4001a5c <__ram_exceptions_end+0xfbfe1814>
 4001aa4:	d9402c17 	ldw	r5,176(sp)
 4001aa8:	d9801e04 	addi	r6,sp,120
 4001aac:	9809883a 	mov	r4,r19
 4001ab0:	4009fbc0 	call	4009fbc <__ssprint_r>
 4001ab4:	103c4d1e 	bne	r2,zero,4000bec <__ram_exceptions_end+0xfbfe09a4>
 4001ab8:	d8c02017 	ldw	r3,128(sp)
 4001abc:	df002787 	ldb	fp,158(sp)
 4001ac0:	da000404 	addi	r8,sp,16
 4001ac4:	003d5a06 	br	4001030 <__ram_exceptions_end+0xfbfe0de8>
 4001ac8:	9080040c 	andi	r2,r18,16
 4001acc:	10005c26 	beq	r2,zero,4001c40 <___svfprintf_internal_r+0x13e8>
 4001ad0:	d9402d17 	ldw	r5,180(sp)
 4001ad4:	d8c02917 	ldw	r3,164(sp)
 4001ad8:	d8002785 	stb	zero,158(sp)
 4001adc:	28800104 	addi	r2,r5,4
 4001ae0:	2d000017 	ldw	r20,0(r5)
 4001ae4:	002d883a 	mov	r22,zero
 4001ae8:	18005e16 	blt	r3,zero,4001c64 <___svfprintf_internal_r+0x140c>
 4001aec:	00ffdfc4 	movi	r3,-129
 4001af0:	d8802d15 	stw	r2,180(sp)
 4001af4:	90e4703a 	and	r18,r18,r3
 4001af8:	0039883a 	mov	fp,zero
 4001afc:	a03dfe26 	beq	r20,zero,40012f8 <__ram_exceptions_end+0xfbfe10b0>
 4001b00:	00800244 	movi	r2,9
 4001b04:	153cb336 	bltu	r2,r20,4000dd4 <__ram_exceptions_end+0xfbfe0b8c>
 4001b08:	a5000c04 	addi	r20,r20,48
 4001b0c:	dc001dc4 	addi	r16,sp,119
 4001b10:	dd001dc5 	stb	r20,119(sp)
 4001b14:	d8c02817 	ldw	r3,160(sp)
 4001b18:	1c07c83a 	sub	r3,r3,r16
 4001b1c:	d8c02e15 	stw	r3,184(sp)
 4001b20:	003cf506 	br	4000ef8 <__ram_exceptions_end+0xfbfe0cb0>
 4001b24:	d8803317 	ldw	r2,204(sp)
 4001b28:	143fffc4 	addi	r16,r2,-1
 4001b2c:	043f560e 	bge	zero,r16,4001888 <__ram_exceptions_end+0xfbfe1640>
 4001b30:	07000404 	movi	fp,16
 4001b34:	e403530e 	bge	fp,r16,4002884 <___svfprintf_internal_r+0x202c>
 4001b38:	01410074 	movhi	r5,1025
 4001b3c:	29521484 	addi	r5,r5,18514
 4001b40:	d9402b15 	stw	r5,172(sp)
 4001b44:	01c001c4 	movi	r7,7
 4001b48:	dd002c17 	ldw	r20,176(sp)
 4001b4c:	00000306 	br	4001b5c <___svfprintf_internal_r+0x1304>
 4001b50:	843ffc04 	addi	r16,r16,-16
 4001b54:	b5800204 	addi	r22,r22,8
 4001b58:	e400130e 	bge	fp,r16,4001ba8 <___svfprintf_internal_r+0x1350>
 4001b5c:	18c00404 	addi	r3,r3,16
 4001b60:	8c400044 	addi	r17,r17,1
 4001b64:	b5400015 	stw	r21,0(r22)
 4001b68:	b7000115 	stw	fp,4(r22)
 4001b6c:	d8c02015 	stw	r3,128(sp)
 4001b70:	dc401f15 	stw	r17,124(sp)
 4001b74:	3c7ff60e 	bge	r7,r17,4001b50 <__ram_exceptions_end+0xfbfe1908>
 4001b78:	d9801e04 	addi	r6,sp,120
 4001b7c:	a00b883a 	mov	r5,r20
 4001b80:	9809883a 	mov	r4,r19
 4001b84:	d9c03d15 	stw	r7,244(sp)
 4001b88:	4009fbc0 	call	4009fbc <__ssprint_r>
 4001b8c:	d9c03d17 	ldw	r7,244(sp)
 4001b90:	103c161e 	bne	r2,zero,4000bec <__ram_exceptions_end+0xfbfe09a4>
 4001b94:	843ffc04 	addi	r16,r16,-16
 4001b98:	d8c02017 	ldw	r3,128(sp)
 4001b9c:	dc401f17 	ldw	r17,124(sp)
 4001ba0:	dd800404 	addi	r22,sp,16
 4001ba4:	e43fed16 	blt	fp,r16,4001b5c <__ram_exceptions_end+0xfbfe1914>
 4001ba8:	d8802b17 	ldw	r2,172(sp)
 4001bac:	1c07883a 	add	r3,r3,r16
 4001bb0:	8c400044 	addi	r17,r17,1
 4001bb4:	b0800015 	stw	r2,0(r22)
 4001bb8:	b4000115 	stw	r16,4(r22)
 4001bbc:	d8c02015 	stw	r3,128(sp)
 4001bc0:	dc401f15 	stw	r17,124(sp)
 4001bc4:	008001c4 	movi	r2,7
 4001bc8:	147f2e0e 	bge	r2,r17,4001884 <__ram_exceptions_end+0xfbfe163c>
 4001bcc:	d9402c17 	ldw	r5,176(sp)
 4001bd0:	d9801e04 	addi	r6,sp,120
 4001bd4:	9809883a 	mov	r4,r19
 4001bd8:	4009fbc0 	call	4009fbc <__ssprint_r>
 4001bdc:	103c031e 	bne	r2,zero,4000bec <__ram_exceptions_end+0xfbfe09a4>
 4001be0:	d8c02017 	ldw	r3,128(sp)
 4001be4:	dc401f17 	ldw	r17,124(sp)
 4001be8:	dd800404 	addi	r22,sp,16
 4001bec:	003f2606 	br	4001888 <__ram_exceptions_end+0xfbfe1640>
 4001bf0:	9080040c 	andi	r2,r18,16
 4001bf4:	1000c326 	beq	r2,zero,4001f04 <___svfprintf_internal_r+0x16ac>
 4001bf8:	d8802d17 	ldw	r2,180(sp)
 4001bfc:	15000017 	ldw	r20,0(r2)
 4001c00:	10800104 	addi	r2,r2,4
 4001c04:	d8802d15 	stw	r2,180(sp)
 4001c08:	a02dd7fa 	srai	r22,r20,31
 4001c0c:	b005883a 	mov	r2,r22
 4001c10:	103c680e 	bge	r2,zero,4000db4 <__ram_exceptions_end+0xfbfe0b6c>
 4001c14:	0529c83a 	sub	r20,zero,r20
 4001c18:	a004c03a 	cmpne	r2,r20,zero
 4001c1c:	05adc83a 	sub	r22,zero,r22
 4001c20:	b0adc83a 	sub	r22,r22,r2
 4001c24:	d8802917 	ldw	r2,164(sp)
 4001c28:	07000b44 	movi	fp,45
 4001c2c:	df002785 	stb	fp,158(sp)
 4001c30:	10022e16 	blt	r2,zero,40024ec <___svfprintf_internal_r+0x1c94>
 4001c34:	00bfdfc4 	movi	r2,-129
 4001c38:	90a4703a 	and	r18,r18,r2
 4001c3c:	003c6406 	br	4000dd0 <__ram_exceptions_end+0xfbfe0b88>
 4001c40:	9080100c 	andi	r2,r18,64
 4001c44:	d8002785 	stb	zero,158(sp)
 4001c48:	10012526 	beq	r2,zero,40020e0 <___svfprintf_internal_r+0x1888>
 4001c4c:	d9002d17 	ldw	r4,180(sp)
 4001c50:	d9402917 	ldw	r5,164(sp)
 4001c54:	002d883a 	mov	r22,zero
 4001c58:	20800104 	addi	r2,r4,4
 4001c5c:	2500000b 	ldhu	r20,0(r4)
 4001c60:	283fa20e 	bge	r5,zero,4001aec <__ram_exceptions_end+0xfbfe18a4>
 4001c64:	d8802d15 	stw	r2,180(sp)
 4001c68:	0039883a 	mov	fp,zero
 4001c6c:	a584b03a 	or	r2,r20,r22
 4001c70:	103c571e 	bne	r2,zero,4000dd0 <__ram_exceptions_end+0xfbfe0b88>
 4001c74:	00800044 	movi	r2,1
 4001c78:	003e5006 	br	40015bc <__ram_exceptions_end+0xfbfe1374>
 4001c7c:	d9402c17 	ldw	r5,176(sp)
 4001c80:	d9801e04 	addi	r6,sp,120
 4001c84:	9809883a 	mov	r4,r19
 4001c88:	4009fbc0 	call	4009fbc <__ssprint_r>
 4001c8c:	103bd71e 	bne	r2,zero,4000bec <__ram_exceptions_end+0xfbfe09a4>
 4001c90:	d8c02017 	ldw	r3,128(sp)
 4001c94:	da000404 	addi	r8,sp,16
 4001c98:	d9003217 	ldw	r4,200(sp)
 4001c9c:	d8802617 	ldw	r2,152(sp)
 4001ca0:	d9403317 	ldw	r5,204(sp)
 4001ca4:	8123883a 	add	r17,r16,r4
 4001ca8:	11400216 	blt	r2,r5,4001cb4 <___svfprintf_internal_r+0x145c>
 4001cac:	9100004c 	andi	r4,r18,1
 4001cb0:	20000d26 	beq	r4,zero,4001ce8 <___svfprintf_internal_r+0x1490>
 4001cb4:	d9003817 	ldw	r4,224(sp)
 4001cb8:	d9403417 	ldw	r5,208(sp)
 4001cbc:	1907883a 	add	r3,r3,r4
 4001cc0:	d9001f17 	ldw	r4,124(sp)
 4001cc4:	41400015 	stw	r5,0(r8)
 4001cc8:	d9403817 	ldw	r5,224(sp)
 4001ccc:	21000044 	addi	r4,r4,1
 4001cd0:	d8c02015 	stw	r3,128(sp)
 4001cd4:	41400115 	stw	r5,4(r8)
 4001cd8:	d9001f15 	stw	r4,124(sp)
 4001cdc:	014001c4 	movi	r5,7
 4001ce0:	2901dc16 	blt	r5,r4,4002454 <___svfprintf_internal_r+0x1bfc>
 4001ce4:	42000204 	addi	r8,r8,8
 4001ce8:	d9003317 	ldw	r4,204(sp)
 4001cec:	8121883a 	add	r16,r16,r4
 4001cf0:	2085c83a 	sub	r2,r4,r2
 4001cf4:	8461c83a 	sub	r16,r16,r17
 4001cf8:	1400010e 	bge	r2,r16,4001d00 <___svfprintf_internal_r+0x14a8>
 4001cfc:	1021883a 	mov	r16,r2
 4001d00:	04000a0e 	bge	zero,r16,4001d2c <___svfprintf_internal_r+0x14d4>
 4001d04:	d9001f17 	ldw	r4,124(sp)
 4001d08:	1c07883a 	add	r3,r3,r16
 4001d0c:	44400015 	stw	r17,0(r8)
 4001d10:	21000044 	addi	r4,r4,1
 4001d14:	44000115 	stw	r16,4(r8)
 4001d18:	d8c02015 	stw	r3,128(sp)
 4001d1c:	d9001f15 	stw	r4,124(sp)
 4001d20:	014001c4 	movi	r5,7
 4001d24:	2901e616 	blt	r5,r4,40024c0 <___svfprintf_internal_r+0x1c68>
 4001d28:	42000204 	addi	r8,r8,8
 4001d2c:	8001f616 	blt	r16,zero,4002508 <___svfprintf_internal_r+0x1cb0>
 4001d30:	1421c83a 	sub	r16,r2,r16
 4001d34:	043d1c0e 	bge	zero,r16,40011a8 <__ram_exceptions_end+0xfbfe0f60>
 4001d38:	04400404 	movi	r17,16
 4001d3c:	d8801f17 	ldw	r2,124(sp)
 4001d40:	8c3edd0e 	bge	r17,r16,40018b8 <__ram_exceptions_end+0xfbfe1670>
 4001d44:	01410074 	movhi	r5,1025
 4001d48:	29521484 	addi	r5,r5,18514
 4001d4c:	d9402b15 	stw	r5,172(sp)
 4001d50:	058001c4 	movi	r22,7
 4001d54:	dd002c17 	ldw	r20,176(sp)
 4001d58:	00000306 	br	4001d68 <___svfprintf_internal_r+0x1510>
 4001d5c:	42000204 	addi	r8,r8,8
 4001d60:	843ffc04 	addi	r16,r16,-16
 4001d64:	8c3ed70e 	bge	r17,r16,40018c4 <__ram_exceptions_end+0xfbfe167c>
 4001d68:	18c00404 	addi	r3,r3,16
 4001d6c:	10800044 	addi	r2,r2,1
 4001d70:	45400015 	stw	r21,0(r8)
 4001d74:	44400115 	stw	r17,4(r8)
 4001d78:	d8c02015 	stw	r3,128(sp)
 4001d7c:	d8801f15 	stw	r2,124(sp)
 4001d80:	b0bff60e 	bge	r22,r2,4001d5c <__ram_exceptions_end+0xfbfe1b14>
 4001d84:	d9801e04 	addi	r6,sp,120
 4001d88:	a00b883a 	mov	r5,r20
 4001d8c:	9809883a 	mov	r4,r19
 4001d90:	4009fbc0 	call	4009fbc <__ssprint_r>
 4001d94:	103b951e 	bne	r2,zero,4000bec <__ram_exceptions_end+0xfbfe09a4>
 4001d98:	d8c02017 	ldw	r3,128(sp)
 4001d9c:	d8801f17 	ldw	r2,124(sp)
 4001da0:	da000404 	addi	r8,sp,16
 4001da4:	003fee06 	br	4001d60 <__ram_exceptions_end+0xfbfe1b18>
 4001da8:	9088703a 	and	r4,r18,r2
 4001dac:	203e8d1e 	bne	r4,zero,40017e4 <__ram_exceptions_end+0xfbfe159c>
 4001db0:	dc401f17 	ldw	r17,124(sp)
 4001db4:	40800115 	stw	r2,4(r8)
 4001db8:	44000015 	stw	r16,0(r8)
 4001dbc:	8c400044 	addi	r17,r17,1
 4001dc0:	d8c02015 	stw	r3,128(sp)
 4001dc4:	dc401f15 	stw	r17,124(sp)
 4001dc8:	008001c4 	movi	r2,7
 4001dcc:	147f7f16 	blt	r2,r17,4001bcc <__ram_exceptions_end+0xfbfe1984>
 4001dd0:	45800204 	addi	r22,r8,8
 4001dd4:	003eac06 	br	4001888 <__ram_exceptions_end+0xfbfe1640>
 4001dd8:	d9402c17 	ldw	r5,176(sp)
 4001ddc:	d9801e04 	addi	r6,sp,120
 4001de0:	9809883a 	mov	r4,r19
 4001de4:	4009fbc0 	call	4009fbc <__ssprint_r>
 4001de8:	103b801e 	bne	r2,zero,4000bec <__ram_exceptions_end+0xfbfe09a4>
 4001dec:	d8c02017 	ldw	r3,128(sp)
 4001df0:	dc401f17 	ldw	r17,124(sp)
 4001df4:	da000404 	addi	r8,sp,16
 4001df8:	003e8406 	br	400180c <__ram_exceptions_end+0xfbfe15c4>
 4001dfc:	d9402c17 	ldw	r5,176(sp)
 4001e00:	d9801e04 	addi	r6,sp,120
 4001e04:	9809883a 	mov	r4,r19
 4001e08:	4009fbc0 	call	4009fbc <__ssprint_r>
 4001e0c:	103b771e 	bne	r2,zero,4000bec <__ram_exceptions_end+0xfbfe09a4>
 4001e10:	d8c02017 	ldw	r3,128(sp)
 4001e14:	dc401f17 	ldw	r17,124(sp)
 4001e18:	dd800404 	addi	r22,sp,16
 4001e1c:	003e8606 	br	4001838 <__ram_exceptions_end+0xfbfe15f0>
 4001e20:	0029883a 	mov	r20,zero
 4001e24:	a5000c04 	addi	r20,r20,48
 4001e28:	dc001dc4 	addi	r16,sp,119
 4001e2c:	dd001dc5 	stb	r20,119(sp)
 4001e30:	003f3806 	br	4001b14 <__ram_exceptions_end+0xfbfe18cc>
 4001e34:	d9402c17 	ldw	r5,176(sp)
 4001e38:	d9801e04 	addi	r6,sp,120
 4001e3c:	9809883a 	mov	r4,r19
 4001e40:	4009fbc0 	call	4009fbc <__ssprint_r>
 4001e44:	103b691e 	bne	r2,zero,4000bec <__ram_exceptions_end+0xfbfe09a4>
 4001e48:	d8c02017 	ldw	r3,128(sp)
 4001e4c:	da000404 	addi	r8,sp,16
 4001e50:	003c9506 	br	40010a8 <__ram_exceptions_end+0xfbfe0e60>
 4001e54:	d9003617 	ldw	r4,216(sp)
 4001e58:	d9403717 	ldw	r5,220(sp)
 4001e5c:	da003e15 	stw	r8,248(sp)
 4001e60:	4009db80 	call	4009db8 <__fpclassifyd>
 4001e64:	da003e17 	ldw	r8,248(sp)
 4001e68:	1000bd1e 	bne	r2,zero,4002160 <___svfprintf_internal_r+0x1908>
 4001e6c:	008011c4 	movi	r2,71
 4001e70:	14411e0e 	bge	r2,r17,40022ec <___svfprintf_internal_r+0x1a94>
 4001e74:	04010074 	movhi	r16,1025
 4001e78:	84120704 	addi	r16,r16,18460
 4001e7c:	00c000c4 	movi	r3,3
 4001e80:	00bfdfc4 	movi	r2,-129
 4001e84:	d8c02a15 	stw	r3,168(sp)
 4001e88:	90a4703a 	and	r18,r18,r2
 4001e8c:	df002783 	ldbu	fp,158(sp)
 4001e90:	d8c02e15 	stw	r3,184(sp)
 4001e94:	d8002915 	stw	zero,164(sp)
 4001e98:	d8003215 	stw	zero,200(sp)
 4001e9c:	003c1c06 	br	4000f10 <__ram_exceptions_end+0xfbfe0cc8>
 4001ea0:	9080100c 	andi	r2,r18,64
 4001ea4:	d8002785 	stb	zero,158(sp)
 4001ea8:	10009426 	beq	r2,zero,40020fc <___svfprintf_internal_r+0x18a4>
 4001eac:	d8c02d17 	ldw	r3,180(sp)
 4001eb0:	d9002917 	ldw	r4,164(sp)
 4001eb4:	002d883a 	mov	r22,zero
 4001eb8:	18800104 	addi	r2,r3,4
 4001ebc:	1d00000b 	ldhu	r20,0(r3)
 4001ec0:	203ec10e 	bge	r4,zero,40019c8 <__ram_exceptions_end+0xfbfe1780>
 4001ec4:	a586b03a 	or	r3,r20,r22
 4001ec8:	d8802d15 	stw	r2,180(sp)
 4001ecc:	183ec21e 	bne	r3,zero,40019d8 <__ram_exceptions_end+0xfbfe1790>
 4001ed0:	0039883a 	mov	fp,zero
 4001ed4:	0005883a 	mov	r2,zero
 4001ed8:	003db806 	br	40015bc <__ram_exceptions_end+0xfbfe1374>
 4001edc:	d8802d17 	ldw	r2,180(sp)
 4001ee0:	d8c02d17 	ldw	r3,180(sp)
 4001ee4:	d9002d17 	ldw	r4,180(sp)
 4001ee8:	10800017 	ldw	r2,0(r2)
 4001eec:	18c00117 	ldw	r3,4(r3)
 4001ef0:	21000204 	addi	r4,r4,8
 4001ef4:	d8803615 	stw	r2,216(sp)
 4001ef8:	d8c03715 	stw	r3,220(sp)
 4001efc:	d9002d15 	stw	r4,180(sp)
 4001f00:	003b8206 	br	4000d0c <__ram_exceptions_end+0xfbfe0ac4>
 4001f04:	9080100c 	andi	r2,r18,64
 4001f08:	10010726 	beq	r2,zero,4002328 <___svfprintf_internal_r+0x1ad0>
 4001f0c:	d8c02d17 	ldw	r3,180(sp)
 4001f10:	1d00000f 	ldh	r20,0(r3)
 4001f14:	18c00104 	addi	r3,r3,4
 4001f18:	d8c02d15 	stw	r3,180(sp)
 4001f1c:	a02dd7fa 	srai	r22,r20,31
 4001f20:	b005883a 	mov	r2,r22
 4001f24:	003ba206 	br	4000db0 <__ram_exceptions_end+0xfbfe0b68>
 4001f28:	9080100c 	andi	r2,r18,64
 4001f2c:	10010526 	beq	r2,zero,4002344 <___svfprintf_internal_r+0x1aec>
 4001f30:	d9002d17 	ldw	r4,180(sp)
 4001f34:	002d883a 	mov	r22,zero
 4001f38:	2500000b 	ldhu	r20,0(r4)
 4001f3c:	21000104 	addi	r4,r4,4
 4001f40:	d9002d15 	stw	r4,180(sp)
 4001f44:	003cfe06 	br	4001340 <__ram_exceptions_end+0xfbfe10f8>
 4001f48:	bc400007 	ldb	r17,0(r23)
 4001f4c:	003a9606 	br	40009a8 <__ram_exceptions_end+0xfbfe0760>
 4001f50:	9080040c 	andi	r2,r18,16
 4001f54:	10010126 	beq	r2,zero,400235c <___svfprintf_internal_r+0x1b04>
 4001f58:	d9402d17 	ldw	r5,180(sp)
 4001f5c:	d8c02f17 	ldw	r3,188(sp)
 4001f60:	28800017 	ldw	r2,0(r5)
 4001f64:	29400104 	addi	r5,r5,4
 4001f68:	d9402d15 	stw	r5,180(sp)
 4001f6c:	10c00015 	stw	r3,0(r2)
 4001f70:	003a6406 	br	4000904 <__ram_exceptions_end+0xfbfe06bc>
 4001f74:	d9002917 	ldw	r4,164(sp)
 4001f78:	d8002785 	stb	zero,158(sp)
 4001f7c:	203d8d16 	blt	r4,zero,40015b4 <__ram_exceptions_end+0xfbfe136c>
 4001f80:	00bfdfc4 	movi	r2,-129
 4001f84:	90a4703a 	and	r18,r18,r2
 4001f88:	003b0506 	br	4000ba0 <__ram_exceptions_end+0xfbfe0958>
 4001f8c:	01410074 	movhi	r5,1025
 4001f90:	29521484 	addi	r5,r5,18514
 4001f94:	d9402b15 	stw	r5,172(sp)
 4001f98:	d9402b17 	ldw	r5,172(sp)
 4001f9c:	1c47883a 	add	r3,r3,r17
 4001fa0:	10800044 	addi	r2,r2,1
 4001fa4:	41400015 	stw	r5,0(r8)
 4001fa8:	44400115 	stw	r17,4(r8)
 4001fac:	d8c02015 	stw	r3,128(sp)
 4001fb0:	d8801f15 	stw	r2,124(sp)
 4001fb4:	010001c4 	movi	r4,7
 4001fb8:	20bf3016 	blt	r4,r2,4001c7c <__ram_exceptions_end+0xfbfe1a34>
 4001fbc:	42000204 	addi	r8,r8,8
 4001fc0:	003f3506 	br	4001c98 <__ram_exceptions_end+0xfbfe1a50>
 4001fc4:	01010074 	movhi	r4,1025
 4001fc8:	21121484 	addi	r4,r4,18514
 4001fcc:	d9002b15 	stw	r4,172(sp)
 4001fd0:	003c5e06 	br	400114c <__ram_exceptions_end+0xfbfe0f04>
 4001fd4:	d9402c17 	ldw	r5,176(sp)
 4001fd8:	d9801e04 	addi	r6,sp,120
 4001fdc:	9809883a 	mov	r4,r19
 4001fe0:	4009fbc0 	call	4009fbc <__ssprint_r>
 4001fe4:	103b011e 	bne	r2,zero,4000bec <__ram_exceptions_end+0xfbfe09a4>
 4001fe8:	d8c02017 	ldw	r3,128(sp)
 4001fec:	da000404 	addi	r8,sp,16
 4001ff0:	003d9306 	br	4001640 <__ram_exceptions_end+0xfbfe13f8>
 4001ff4:	d8801f17 	ldw	r2,124(sp)
 4001ff8:	01410074 	movhi	r5,1025
 4001ffc:	01000044 	movi	r4,1
 4002000:	18c00044 	addi	r3,r3,1
 4002004:	10800044 	addi	r2,r2,1
 4002008:	29521404 	addi	r5,r5,18512
 400200c:	41000115 	stw	r4,4(r8)
 4002010:	41400015 	stw	r5,0(r8)
 4002014:	d8c02015 	stw	r3,128(sp)
 4002018:	d8801f15 	stw	r2,124(sp)
 400201c:	010001c4 	movi	r4,7
 4002020:	2080b516 	blt	r4,r2,40022f8 <___svfprintf_internal_r+0x1aa0>
 4002024:	42000204 	addi	r8,r8,8
 4002028:	8800041e 	bne	r17,zero,400203c <___svfprintf_internal_r+0x17e4>
 400202c:	d8803317 	ldw	r2,204(sp)
 4002030:	1000021e 	bne	r2,zero,400203c <___svfprintf_internal_r+0x17e4>
 4002034:	9080004c 	andi	r2,r18,1
 4002038:	103c5b26 	beq	r2,zero,40011a8 <__ram_exceptions_end+0xfbfe0f60>
 400203c:	d9003817 	ldw	r4,224(sp)
 4002040:	d8801f17 	ldw	r2,124(sp)
 4002044:	d9403417 	ldw	r5,208(sp)
 4002048:	20c7883a 	add	r3,r4,r3
 400204c:	10800044 	addi	r2,r2,1
 4002050:	41000115 	stw	r4,4(r8)
 4002054:	41400015 	stw	r5,0(r8)
 4002058:	d8c02015 	stw	r3,128(sp)
 400205c:	d8801f15 	stw	r2,124(sp)
 4002060:	010001c4 	movi	r4,7
 4002064:	20818016 	blt	r4,r2,4002668 <___svfprintf_internal_r+0x1e10>
 4002068:	42000204 	addi	r8,r8,8
 400206c:	0463c83a 	sub	r17,zero,r17
 4002070:	0440cb0e 	bge	zero,r17,40023a0 <___svfprintf_internal_r+0x1b48>
 4002074:	05800404 	movi	r22,16
 4002078:	b440e80e 	bge	r22,r17,400241c <___svfprintf_internal_r+0x1bc4>
 400207c:	01410074 	movhi	r5,1025
 4002080:	29521484 	addi	r5,r5,18514
 4002084:	d9402b15 	stw	r5,172(sp)
 4002088:	070001c4 	movi	fp,7
 400208c:	dd002c17 	ldw	r20,176(sp)
 4002090:	00000306 	br	40020a0 <___svfprintf_internal_r+0x1848>
 4002094:	42000204 	addi	r8,r8,8
 4002098:	8c7ffc04 	addi	r17,r17,-16
 400209c:	b440e20e 	bge	r22,r17,4002428 <___svfprintf_internal_r+0x1bd0>
 40020a0:	18c00404 	addi	r3,r3,16
 40020a4:	10800044 	addi	r2,r2,1
 40020a8:	45400015 	stw	r21,0(r8)
 40020ac:	45800115 	stw	r22,4(r8)
 40020b0:	d8c02015 	stw	r3,128(sp)
 40020b4:	d8801f15 	stw	r2,124(sp)
 40020b8:	e0bff60e 	bge	fp,r2,4002094 <__ram_exceptions_end+0xfbfe1e4c>
 40020bc:	d9801e04 	addi	r6,sp,120
 40020c0:	a00b883a 	mov	r5,r20
 40020c4:	9809883a 	mov	r4,r19
 40020c8:	4009fbc0 	call	4009fbc <__ssprint_r>
 40020cc:	103ac71e 	bne	r2,zero,4000bec <__ram_exceptions_end+0xfbfe09a4>
 40020d0:	d8c02017 	ldw	r3,128(sp)
 40020d4:	d8801f17 	ldw	r2,124(sp)
 40020d8:	da000404 	addi	r8,sp,16
 40020dc:	003fee06 	br	4002098 <__ram_exceptions_end+0xfbfe1e50>
 40020e0:	d8c02d17 	ldw	r3,180(sp)
 40020e4:	d9002917 	ldw	r4,164(sp)
 40020e8:	002d883a 	mov	r22,zero
 40020ec:	18800104 	addi	r2,r3,4
 40020f0:	1d000017 	ldw	r20,0(r3)
 40020f4:	203e7d0e 	bge	r4,zero,4001aec <__ram_exceptions_end+0xfbfe18a4>
 40020f8:	003eda06 	br	4001c64 <__ram_exceptions_end+0xfbfe1a1c>
 40020fc:	d9402d17 	ldw	r5,180(sp)
 4002100:	d8c02917 	ldw	r3,164(sp)
 4002104:	002d883a 	mov	r22,zero
 4002108:	28800104 	addi	r2,r5,4
 400210c:	2d000017 	ldw	r20,0(r5)
 4002110:	183e2d0e 	bge	r3,zero,40019c8 <__ram_exceptions_end+0xfbfe1780>
 4002114:	003f6b06 	br	4001ec4 <__ram_exceptions_end+0xfbfe1c7c>
 4002118:	d8c02d15 	stw	r3,180(sp)
 400211c:	0039883a 	mov	fp,zero
 4002120:	003ed206 	br	4001c6c <__ram_exceptions_end+0xfbfe1a24>
 4002124:	bc400043 	ldbu	r17,1(r23)
 4002128:	94800814 	ori	r18,r18,32
 400212c:	bdc00044 	addi	r23,r23,1
 4002130:	8c403fcc 	andi	r17,r17,255
 4002134:	8c40201c 	xori	r17,r17,128
 4002138:	8c7fe004 	addi	r17,r17,-128
 400213c:	003a1a06 	br	40009a8 <__ram_exceptions_end+0xfbfe0760>
 4002140:	d9402c17 	ldw	r5,176(sp)
 4002144:	d9801e04 	addi	r6,sp,120
 4002148:	9809883a 	mov	r4,r19
 400214c:	4009fbc0 	call	4009fbc <__ssprint_r>
 4002150:	103aa61e 	bne	r2,zero,4000bec <__ram_exceptions_end+0xfbfe09a4>
 4002154:	d8c02017 	ldw	r3,128(sp)
 4002158:	da000404 	addi	r8,sp,16
 400215c:	003d4a06 	br	4001688 <__ram_exceptions_end+0xfbfe1440>
 4002160:	d9002917 	ldw	r4,164(sp)
 4002164:	05bff7c4 	movi	r22,-33
 4002168:	00bfffc4 	movi	r2,-1
 400216c:	8dac703a 	and	r22,r17,r22
 4002170:	20806a26 	beq	r4,r2,400231c <___svfprintf_internal_r+0x1ac4>
 4002174:	008011c4 	movi	r2,71
 4002178:	b0813726 	beq	r22,r2,4002658 <___svfprintf_internal_r+0x1e00>
 400217c:	d9003717 	ldw	r4,220(sp)
 4002180:	90c04014 	ori	r3,r18,256
 4002184:	d8c02b15 	stw	r3,172(sp)
 4002188:	20015d16 	blt	r4,zero,4002700 <___svfprintf_internal_r+0x1ea8>
 400218c:	dd003717 	ldw	r20,220(sp)
 4002190:	d8002a05 	stb	zero,168(sp)
 4002194:	00801984 	movi	r2,102
 4002198:	88814026 	beq	r17,r2,400269c <___svfprintf_internal_r+0x1e44>
 400219c:	00801184 	movi	r2,70
 40021a0:	88817126 	beq	r17,r2,4002768 <___svfprintf_internal_r+0x1f10>
 40021a4:	00801144 	movi	r2,69
 40021a8:	b0816226 	beq	r22,r2,4002734 <___svfprintf_internal_r+0x1edc>
 40021ac:	d8c02917 	ldw	r3,164(sp)
 40021b0:	d8802104 	addi	r2,sp,132
 40021b4:	d8800315 	stw	r2,12(sp)
 40021b8:	d9403617 	ldw	r5,216(sp)
 40021bc:	d8802504 	addi	r2,sp,148
 40021c0:	d8800215 	stw	r2,8(sp)
 40021c4:	d8802604 	addi	r2,sp,152
 40021c8:	d8c00015 	stw	r3,0(sp)
 40021cc:	d8800115 	stw	r2,4(sp)
 40021d0:	01c00084 	movi	r7,2
 40021d4:	a00d883a 	mov	r6,r20
 40021d8:	9809883a 	mov	r4,r19
 40021dc:	d8c03d15 	stw	r3,244(sp)
 40021e0:	da003e15 	stw	r8,248(sp)
 40021e4:	40050540 	call	4005054 <_dtoa_r>
 40021e8:	1021883a 	mov	r16,r2
 40021ec:	008019c4 	movi	r2,103
 40021f0:	d8c03d17 	ldw	r3,244(sp)
 40021f4:	da003e17 	ldw	r8,248(sp)
 40021f8:	8880e726 	beq	r17,r2,4002598 <___svfprintf_internal_r+0x1d40>
 40021fc:	008011c4 	movi	r2,71
 4002200:	8880d426 	beq	r17,r2,4002554 <___svfprintf_internal_r+0x1cfc>
 4002204:	80f9883a 	add	fp,r16,r3
 4002208:	d9003617 	ldw	r4,216(sp)
 400220c:	000d883a 	mov	r6,zero
 4002210:	000f883a 	mov	r7,zero
 4002214:	a00b883a 	mov	r5,r20
 4002218:	da003e15 	stw	r8,248(sp)
 400221c:	400f13c0 	call	400f13c <__eqdf2>
 4002220:	da003e17 	ldw	r8,248(sp)
 4002224:	1000e426 	beq	r2,zero,40025b8 <___svfprintf_internal_r+0x1d60>
 4002228:	d8802117 	ldw	r2,132(sp)
 400222c:	1700062e 	bgeu	r2,fp,4002248 <___svfprintf_internal_r+0x19f0>
 4002230:	01000c04 	movi	r4,48
 4002234:	10c00044 	addi	r3,r2,1
 4002238:	d8c02115 	stw	r3,132(sp)
 400223c:	11000005 	stb	r4,0(r2)
 4002240:	d8802117 	ldw	r2,132(sp)
 4002244:	173ffb36 	bltu	r2,fp,4002234 <__ram_exceptions_end+0xfbfe1fec>
 4002248:	1405c83a 	sub	r2,r2,r16
 400224c:	d8803315 	stw	r2,204(sp)
 4002250:	008011c4 	movi	r2,71
 4002254:	b080c526 	beq	r22,r2,400256c <___svfprintf_internal_r+0x1d14>
 4002258:	00801944 	movi	r2,101
 400225c:	1441d90e 	bge	r2,r17,40029c4 <___svfprintf_internal_r+0x216c>
 4002260:	d8c02617 	ldw	r3,152(sp)
 4002264:	00801984 	movi	r2,102
 4002268:	d8c03215 	stw	r3,200(sp)
 400226c:	88813426 	beq	r17,r2,4002740 <___svfprintf_internal_r+0x1ee8>
 4002270:	d8c03217 	ldw	r3,200(sp)
 4002274:	d9003317 	ldw	r4,204(sp)
 4002278:	19012516 	blt	r3,r4,4002710 <___svfprintf_internal_r+0x1eb8>
 400227c:	9480004c 	andi	r18,r18,1
 4002280:	9001841e 	bne	r18,zero,4002894 <___svfprintf_internal_r+0x203c>
 4002284:	1805883a 	mov	r2,r3
 4002288:	1801cc16 	blt	r3,zero,40029bc <___svfprintf_internal_r+0x2164>
 400228c:	d8c03217 	ldw	r3,200(sp)
 4002290:	044019c4 	movi	r17,103
 4002294:	d8c02e15 	stw	r3,184(sp)
 4002298:	df002a07 	ldb	fp,168(sp)
 400229c:	e000a61e 	bne	fp,zero,4002538 <___svfprintf_internal_r+0x1ce0>
 40022a0:	df002783 	ldbu	fp,158(sp)
 40022a4:	d8802a15 	stw	r2,168(sp)
 40022a8:	dc802b17 	ldw	r18,172(sp)
 40022ac:	d8002915 	stw	zero,164(sp)
 40022b0:	003b1706 	br	4000f10 <__ram_exceptions_end+0xfbfe0cc8>
 40022b4:	04010074 	movhi	r16,1025
 40022b8:	84120404 	addi	r16,r16,18448
 40022bc:	003aa606 	br	4000d58 <__ram_exceptions_end+0xfbfe0b10>
 40022c0:	d9003917 	ldw	r4,228(sp)
 40022c4:	04001004 	movi	r16,64
 40022c8:	800b883a 	mov	r5,r16
 40022cc:	4007a340 	call	4007a34 <_malloc_r>
 40022d0:	d9002c17 	ldw	r4,176(sp)
 40022d4:	20800015 	stw	r2,0(r4)
 40022d8:	20800415 	stw	r2,16(r4)
 40022dc:	1001cb26 	beq	r2,zero,4002a0c <___svfprintf_internal_r+0x21b4>
 40022e0:	d8802c17 	ldw	r2,176(sp)
 40022e4:	14000515 	stw	r16,20(r2)
 40022e8:	00397606 	br	40008c4 <__ram_exceptions_end+0xfbfe067c>
 40022ec:	04010074 	movhi	r16,1025
 40022f0:	84120604 	addi	r16,r16,18456
 40022f4:	003ee106 	br	4001e7c <__ram_exceptions_end+0xfbfe1c34>
 40022f8:	d9402c17 	ldw	r5,176(sp)
 40022fc:	d9801e04 	addi	r6,sp,120
 4002300:	9809883a 	mov	r4,r19
 4002304:	4009fbc0 	call	4009fbc <__ssprint_r>
 4002308:	103a381e 	bne	r2,zero,4000bec <__ram_exceptions_end+0xfbfe09a4>
 400230c:	dc402617 	ldw	r17,152(sp)
 4002310:	d8c02017 	ldw	r3,128(sp)
 4002314:	da000404 	addi	r8,sp,16
 4002318:	003f4306 	br	4002028 <__ram_exceptions_end+0xfbfe1de0>
 400231c:	01400184 	movi	r5,6
 4002320:	d9402915 	stw	r5,164(sp)
 4002324:	003f9506 	br	400217c <__ram_exceptions_end+0xfbfe1f34>
 4002328:	d9002d17 	ldw	r4,180(sp)
 400232c:	25000017 	ldw	r20,0(r4)
 4002330:	21000104 	addi	r4,r4,4
 4002334:	d9002d15 	stw	r4,180(sp)
 4002338:	a02dd7fa 	srai	r22,r20,31
 400233c:	b005883a 	mov	r2,r22
 4002340:	003a9b06 	br	4000db0 <__ram_exceptions_end+0xfbfe0b68>
 4002344:	d9402d17 	ldw	r5,180(sp)
 4002348:	002d883a 	mov	r22,zero
 400234c:	2d000017 	ldw	r20,0(r5)
 4002350:	29400104 	addi	r5,r5,4
 4002354:	d9402d15 	stw	r5,180(sp)
 4002358:	003bf906 	br	4001340 <__ram_exceptions_end+0xfbfe10f8>
 400235c:	9480100c 	andi	r18,r18,64
 4002360:	90006e26 	beq	r18,zero,400251c <___svfprintf_internal_r+0x1cc4>
 4002364:	d9002d17 	ldw	r4,180(sp)
 4002368:	d9402f17 	ldw	r5,188(sp)
 400236c:	20800017 	ldw	r2,0(r4)
 4002370:	21000104 	addi	r4,r4,4
 4002374:	d9002d15 	stw	r4,180(sp)
 4002378:	1140000d 	sth	r5,0(r2)
 400237c:	00396106 	br	4000904 <__ram_exceptions_end+0xfbfe06bc>
 4002380:	d9402c17 	ldw	r5,176(sp)
 4002384:	d9801e04 	addi	r6,sp,120
 4002388:	9809883a 	mov	r4,r19
 400238c:	4009fbc0 	call	4009fbc <__ssprint_r>
 4002390:	103a161e 	bne	r2,zero,4000bec <__ram_exceptions_end+0xfbfe09a4>
 4002394:	d8c02017 	ldw	r3,128(sp)
 4002398:	d8801f17 	ldw	r2,124(sp)
 400239c:	da000404 	addi	r8,sp,16
 40023a0:	d9403317 	ldw	r5,204(sp)
 40023a4:	10800044 	addi	r2,r2,1
 40023a8:	44000015 	stw	r16,0(r8)
 40023ac:	28c7883a 	add	r3,r5,r3
 40023b0:	003b7706 	br	4001190 <__ram_exceptions_end+0xfbfe0f48>
 40023b4:	8009883a 	mov	r4,r16
 40023b8:	da003e15 	stw	r8,248(sp)
 40023bc:	40007c00 	call	40007c0 <strlen>
 40023c0:	d8802e15 	stw	r2,184(sp)
 40023c4:	da003e17 	ldw	r8,248(sp)
 40023c8:	103c280e 	bge	r2,zero,400146c <__ram_exceptions_end+0xfbfe1224>
 40023cc:	0005883a 	mov	r2,zero
 40023d0:	003c2606 	br	400146c <__ram_exceptions_end+0xfbfe1224>
 40023d4:	00bfffc4 	movi	r2,-1
 40023d8:	003a0906 	br	4000c00 <__ram_exceptions_end+0xfbfe09b8>
 40023dc:	01010074 	movhi	r4,1025
 40023e0:	21121884 	addi	r4,r4,18530
 40023e4:	d9003515 	stw	r4,212(sp)
 40023e8:	003b0606 	br	4001004 <__ram_exceptions_end+0xfbfe0dbc>
 40023ec:	013fffc4 	movi	r4,-1
 40023f0:	003a2706 	br	4000c90 <__ram_exceptions_end+0xfbfe0a48>
 40023f4:	d9402c17 	ldw	r5,176(sp)
 40023f8:	d9801e04 	addi	r6,sp,120
 40023fc:	9809883a 	mov	r4,r19
 4002400:	4009fbc0 	call	4009fbc <__ssprint_r>
 4002404:	1039f91e 	bne	r2,zero,4000bec <__ram_exceptions_end+0xfbfe09a4>
 4002408:	d8c02017 	ldw	r3,128(sp)
 400240c:	da000404 	addi	r8,sp,16
 4002410:	003d8406 	br	4001a24 <__ram_exceptions_end+0xfbfe17dc>
 4002414:	0023883a 	mov	r17,zero
 4002418:	003d8306 	br	4001a28 <__ram_exceptions_end+0xfbfe17e0>
 400241c:	01010074 	movhi	r4,1025
 4002420:	21121484 	addi	r4,r4,18514
 4002424:	d9002b15 	stw	r4,172(sp)
 4002428:	d9002b17 	ldw	r4,172(sp)
 400242c:	1c47883a 	add	r3,r3,r17
 4002430:	10800044 	addi	r2,r2,1
 4002434:	41000015 	stw	r4,0(r8)
 4002438:	44400115 	stw	r17,4(r8)
 400243c:	d8c02015 	stw	r3,128(sp)
 4002440:	d8801f15 	stw	r2,124(sp)
 4002444:	010001c4 	movi	r4,7
 4002448:	20bfcd16 	blt	r4,r2,4002380 <__ram_exceptions_end+0xfbfe2138>
 400244c:	42000204 	addi	r8,r8,8
 4002450:	003fd306 	br	40023a0 <__ram_exceptions_end+0xfbfe2158>
 4002454:	d9402c17 	ldw	r5,176(sp)
 4002458:	d9801e04 	addi	r6,sp,120
 400245c:	9809883a 	mov	r4,r19
 4002460:	4009fbc0 	call	4009fbc <__ssprint_r>
 4002464:	1039e11e 	bne	r2,zero,4000bec <__ram_exceptions_end+0xfbfe09a4>
 4002468:	d8802617 	ldw	r2,152(sp)
 400246c:	d8c02017 	ldw	r3,128(sp)
 4002470:	da000404 	addi	r8,sp,16
 4002474:	003e1c06 	br	4001ce8 <__ram_exceptions_end+0xfbfe1aa0>
 4002478:	d8802917 	ldw	r2,164(sp)
 400247c:	00c00184 	movi	r3,6
 4002480:	1880012e 	bgeu	r3,r2,4002488 <___svfprintf_internal_r+0x1c30>
 4002484:	1805883a 	mov	r2,r3
 4002488:	d8802e15 	stw	r2,184(sp)
 400248c:	1000f316 	blt	r2,zero,400285c <___svfprintf_internal_r+0x2004>
 4002490:	04010074 	movhi	r16,1025
 4002494:	d8802a15 	stw	r2,168(sp)
 4002498:	dd002d15 	stw	r20,180(sp)
 400249c:	d8002915 	stw	zero,164(sp)
 40024a0:	d8003215 	stw	zero,200(sp)
 40024a4:	84121204 	addi	r16,r16,18504
 40024a8:	0039883a 	mov	fp,zero
 40024ac:	003a9f06 	br	4000f2c <__ram_exceptions_end+0xfbfe0ce4>
 40024b0:	01010074 	movhi	r4,1025
 40024b4:	21121884 	addi	r4,r4,18530
 40024b8:	d9003515 	stw	r4,212(sp)
 40024bc:	003b5f06 	br	400123c <__ram_exceptions_end+0xfbfe0ff4>
 40024c0:	d9402c17 	ldw	r5,176(sp)
 40024c4:	d9801e04 	addi	r6,sp,120
 40024c8:	9809883a 	mov	r4,r19
 40024cc:	4009fbc0 	call	4009fbc <__ssprint_r>
 40024d0:	1039c61e 	bne	r2,zero,4000bec <__ram_exceptions_end+0xfbfe09a4>
 40024d4:	d8802617 	ldw	r2,152(sp)
 40024d8:	d9403317 	ldw	r5,204(sp)
 40024dc:	d8c02017 	ldw	r3,128(sp)
 40024e0:	da000404 	addi	r8,sp,16
 40024e4:	2885c83a 	sub	r2,r5,r2
 40024e8:	003e1006 	br	4001d2c <__ram_exceptions_end+0xfbfe1ae4>
 40024ec:	00800044 	movi	r2,1
 40024f0:	10803fcc 	andi	r2,r2,255
 40024f4:	00c00044 	movi	r3,1
 40024f8:	10fa3526 	beq	r2,r3,4000dd0 <__ram_exceptions_end+0xfbfe0b88>
 40024fc:	00c00084 	movi	r3,2
 4002500:	10fb9e26 	beq	r2,r3,400137c <__ram_exceptions_end+0xfbfe1134>
 4002504:	003a6406 	br	4000e98 <__ram_exceptions_end+0xfbfe0c50>
 4002508:	0021883a 	mov	r16,zero
 400250c:	003e0806 	br	4001d30 <__ram_exceptions_end+0xfbfe1ae8>
 4002510:	07000b44 	movi	fp,45
 4002514:	df002785 	stb	fp,158(sp)
 4002518:	003a0b06 	br	4000d48 <__ram_exceptions_end+0xfbfe0b00>
 400251c:	d8c02d17 	ldw	r3,180(sp)
 4002520:	d9002f17 	ldw	r4,188(sp)
 4002524:	18800017 	ldw	r2,0(r3)
 4002528:	18c00104 	addi	r3,r3,4
 400252c:	d8c02d15 	stw	r3,180(sp)
 4002530:	11000015 	stw	r4,0(r2)
 4002534:	0038f306 	br	4000904 <__ram_exceptions_end+0xfbfe06bc>
 4002538:	00c00b44 	movi	r3,45
 400253c:	d8c02785 	stb	r3,158(sp)
 4002540:	d8802a15 	stw	r2,168(sp)
 4002544:	dc802b17 	ldw	r18,172(sp)
 4002548:	d8002915 	stw	zero,164(sp)
 400254c:	07000b44 	movi	fp,45
 4002550:	003a7306 	br	4000f20 <__ram_exceptions_end+0xfbfe0cd8>
 4002554:	9080004c 	andi	r2,r18,1
 4002558:	1000941e 	bne	r2,zero,40027ac <___svfprintf_internal_r+0x1f54>
 400255c:	d8802117 	ldw	r2,132(sp)
 4002560:	1405c83a 	sub	r2,r2,r16
 4002564:	d8803315 	stw	r2,204(sp)
 4002568:	b441161e 	bne	r22,r17,40029c4 <___svfprintf_internal_r+0x216c>
 400256c:	dd802617 	ldw	r22,152(sp)
 4002570:	00bfff44 	movi	r2,-3
 4002574:	b0801a16 	blt	r22,r2,40025e0 <___svfprintf_internal_r+0x1d88>
 4002578:	d9402917 	ldw	r5,164(sp)
 400257c:	2d801816 	blt	r5,r22,40025e0 <___svfprintf_internal_r+0x1d88>
 4002580:	dd803215 	stw	r22,200(sp)
 4002584:	003f3a06 	br	4002270 <__ram_exceptions_end+0xfbfe2028>
 4002588:	1025883a 	mov	r18,r2
 400258c:	0039883a 	mov	fp,zero
 4002590:	00800084 	movi	r2,2
 4002594:	003fd606 	br	40024f0 <__ram_exceptions_end+0xfbfe22a8>
 4002598:	9080004c 	andi	r2,r18,1
 400259c:	103f191e 	bne	r2,zero,4002204 <__ram_exceptions_end+0xfbfe1fbc>
 40025a0:	d8802117 	ldw	r2,132(sp)
 40025a4:	003f2806 	br	4002248 <__ram_exceptions_end+0xfbfe2000>
 40025a8:	01010074 	movhi	r4,1025
 40025ac:	21121484 	addi	r4,r4,18514
 40025b0:	d9002b15 	stw	r4,172(sp)
 40025b4:	003c7c06 	br	40017a8 <__ram_exceptions_end+0xfbfe1560>
 40025b8:	e005883a 	mov	r2,fp
 40025bc:	003f2206 	br	4002248 <__ram_exceptions_end+0xfbfe2000>
 40025c0:	d9402917 	ldw	r5,164(sp)
 40025c4:	df002783 	ldbu	fp,158(sp)
 40025c8:	dd002d15 	stw	r20,180(sp)
 40025cc:	d9402a15 	stw	r5,168(sp)
 40025d0:	d9402e15 	stw	r5,184(sp)
 40025d4:	d8002915 	stw	zero,164(sp)
 40025d8:	d8003215 	stw	zero,200(sp)
 40025dc:	003a4c06 	br	4000f10 <__ram_exceptions_end+0xfbfe0cc8>
 40025e0:	8c7fff84 	addi	r17,r17,-2
 40025e4:	b5bfffc4 	addi	r22,r22,-1
 40025e8:	dd802615 	stw	r22,152(sp)
 40025ec:	dc4022c5 	stb	r17,139(sp)
 40025f0:	b000c316 	blt	r22,zero,4002900 <___svfprintf_internal_r+0x20a8>
 40025f4:	00800ac4 	movi	r2,43
 40025f8:	d8802305 	stb	r2,140(sp)
 40025fc:	00800244 	movi	r2,9
 4002600:	15806e16 	blt	r2,r22,40027bc <___svfprintf_internal_r+0x1f64>
 4002604:	00800c04 	movi	r2,48
 4002608:	b5800c04 	addi	r22,r22,48
 400260c:	d8802345 	stb	r2,141(sp)
 4002610:	dd802385 	stb	r22,142(sp)
 4002614:	d88023c4 	addi	r2,sp,143
 4002618:	df0022c4 	addi	fp,sp,139
 400261c:	d8c03317 	ldw	r3,204(sp)
 4002620:	1739c83a 	sub	fp,r2,fp
 4002624:	d9003317 	ldw	r4,204(sp)
 4002628:	e0c7883a 	add	r3,fp,r3
 400262c:	df003b15 	stw	fp,236(sp)
 4002630:	d8c02e15 	stw	r3,184(sp)
 4002634:	00800044 	movi	r2,1
 4002638:	1100b70e 	bge	r2,r4,4002918 <___svfprintf_internal_r+0x20c0>
 400263c:	d8c02e17 	ldw	r3,184(sp)
 4002640:	18c00044 	addi	r3,r3,1
 4002644:	d8c02e15 	stw	r3,184(sp)
 4002648:	1805883a 	mov	r2,r3
 400264c:	1800b016 	blt	r3,zero,4002910 <___svfprintf_internal_r+0x20b8>
 4002650:	d8003215 	stw	zero,200(sp)
 4002654:	003f1006 	br	4002298 <__ram_exceptions_end+0xfbfe2050>
 4002658:	d8802917 	ldw	r2,164(sp)
 400265c:	103ec71e 	bne	r2,zero,400217c <__ram_exceptions_end+0xfbfe1f34>
 4002660:	dc002915 	stw	r16,164(sp)
 4002664:	003ec506 	br	400217c <__ram_exceptions_end+0xfbfe1f34>
 4002668:	d9402c17 	ldw	r5,176(sp)
 400266c:	d9801e04 	addi	r6,sp,120
 4002670:	9809883a 	mov	r4,r19
 4002674:	4009fbc0 	call	4009fbc <__ssprint_r>
 4002678:	10395c1e 	bne	r2,zero,4000bec <__ram_exceptions_end+0xfbfe09a4>
 400267c:	dc402617 	ldw	r17,152(sp)
 4002680:	d8c02017 	ldw	r3,128(sp)
 4002684:	d8801f17 	ldw	r2,124(sp)
 4002688:	da000404 	addi	r8,sp,16
 400268c:	003e7706 	br	400206c <__ram_exceptions_end+0xfbfe1e24>
 4002690:	582f883a 	mov	r23,r11
 4002694:	d8002915 	stw	zero,164(sp)
 4002698:	0038c406 	br	40009ac <__ram_exceptions_end+0xfbfe0764>
 400269c:	d8c02917 	ldw	r3,164(sp)
 40026a0:	d8802104 	addi	r2,sp,132
 40026a4:	d8800315 	stw	r2,12(sp)
 40026a8:	d9403617 	ldw	r5,216(sp)
 40026ac:	d8802504 	addi	r2,sp,148
 40026b0:	d8800215 	stw	r2,8(sp)
 40026b4:	d8802604 	addi	r2,sp,152
 40026b8:	d8c00015 	stw	r3,0(sp)
 40026bc:	9809883a 	mov	r4,r19
 40026c0:	d8800115 	stw	r2,4(sp)
 40026c4:	01c000c4 	movi	r7,3
 40026c8:	a00d883a 	mov	r6,r20
 40026cc:	da003e15 	stw	r8,248(sp)
 40026d0:	40050540 	call	4005054 <_dtoa_r>
 40026d4:	d9002917 	ldw	r4,164(sp)
 40026d8:	da003e17 	ldw	r8,248(sp)
 40026dc:	1021883a 	mov	r16,r2
 40026e0:	1139883a 	add	fp,r2,r4
 40026e4:	2007883a 	mov	r3,r4
 40026e8:	81000007 	ldb	r4,0(r16)
 40026ec:	00800c04 	movi	r2,48
 40026f0:	20806f26 	beq	r4,r2,40028b0 <___svfprintf_internal_r+0x2058>
 40026f4:	d8c02617 	ldw	r3,152(sp)
 40026f8:	e0f9883a 	add	fp,fp,r3
 40026fc:	003ec206 	br	4002208 <__ram_exceptions_end+0xfbfe1fc0>
 4002700:	00c00b44 	movi	r3,45
 4002704:	2520003c 	xorhi	r20,r4,32768
 4002708:	d8c02a05 	stb	r3,168(sp)
 400270c:	003ea106 	br	4002194 <__ram_exceptions_end+0xfbfe1f4c>
 4002710:	d8c03217 	ldw	r3,200(sp)
 4002714:	00c0890e 	bge	zero,r3,400293c <___svfprintf_internal_r+0x20e4>
 4002718:	00800044 	movi	r2,1
 400271c:	d9003317 	ldw	r4,204(sp)
 4002720:	1105883a 	add	r2,r2,r4
 4002724:	d8802e15 	stw	r2,184(sp)
 4002728:	10005f16 	blt	r2,zero,40028a8 <___svfprintf_internal_r+0x2050>
 400272c:	044019c4 	movi	r17,103
 4002730:	003ed906 	br	4002298 <__ram_exceptions_end+0xfbfe2050>
 4002734:	d9002917 	ldw	r4,164(sp)
 4002738:	20c00044 	addi	r3,r4,1
 400273c:	003e9c06 	br	40021b0 <__ram_exceptions_end+0xfbfe1f68>
 4002740:	d9002917 	ldw	r4,164(sp)
 4002744:	00c0680e 	bge	zero,r3,40028e8 <___svfprintf_internal_r+0x2090>
 4002748:	2000461e 	bne	r4,zero,4002864 <___svfprintf_internal_r+0x200c>
 400274c:	9480004c 	andi	r18,r18,1
 4002750:	9000441e 	bne	r18,zero,4002864 <___svfprintf_internal_r+0x200c>
 4002754:	1805883a 	mov	r2,r3
 4002758:	1800a016 	blt	r3,zero,40029dc <___svfprintf_internal_r+0x2184>
 400275c:	d8c03217 	ldw	r3,200(sp)
 4002760:	d8c02e15 	stw	r3,184(sp)
 4002764:	003ecc06 	br	4002298 <__ram_exceptions_end+0xfbfe2050>
 4002768:	d9402917 	ldw	r5,164(sp)
 400276c:	d8802104 	addi	r2,sp,132
 4002770:	d8800315 	stw	r2,12(sp)
 4002774:	d9400015 	stw	r5,0(sp)
 4002778:	d8802504 	addi	r2,sp,148
 400277c:	d9403617 	ldw	r5,216(sp)
 4002780:	d8800215 	stw	r2,8(sp)
 4002784:	d8802604 	addi	r2,sp,152
 4002788:	d8800115 	stw	r2,4(sp)
 400278c:	01c000c4 	movi	r7,3
 4002790:	a00d883a 	mov	r6,r20
 4002794:	9809883a 	mov	r4,r19
 4002798:	da003e15 	stw	r8,248(sp)
 400279c:	40050540 	call	4005054 <_dtoa_r>
 40027a0:	d8c02917 	ldw	r3,164(sp)
 40027a4:	da003e17 	ldw	r8,248(sp)
 40027a8:	1021883a 	mov	r16,r2
 40027ac:	00801184 	movi	r2,70
 40027b0:	80f9883a 	add	fp,r16,r3
 40027b4:	88bfcc26 	beq	r17,r2,40026e8 <__ram_exceptions_end+0xfbfe24a0>
 40027b8:	003e9306 	br	4002208 <__ram_exceptions_end+0xfbfe1fc0>
 40027bc:	df0022c4 	addi	fp,sp,139
 40027c0:	dc002915 	stw	r16,164(sp)
 40027c4:	9829883a 	mov	r20,r19
 40027c8:	e021883a 	mov	r16,fp
 40027cc:	4027883a 	mov	r19,r8
 40027d0:	b009883a 	mov	r4,r22
 40027d4:	01400284 	movi	r5,10
 40027d8:	400de780 	call	400de78 <__modsi3>
 40027dc:	10800c04 	addi	r2,r2,48
 40027e0:	843fffc4 	addi	r16,r16,-1
 40027e4:	b009883a 	mov	r4,r22
 40027e8:	01400284 	movi	r5,10
 40027ec:	80800005 	stb	r2,0(r16)
 40027f0:	400ddf40 	call	400ddf4 <__divsi3>
 40027f4:	102d883a 	mov	r22,r2
 40027f8:	00800244 	movi	r2,9
 40027fc:	15bff416 	blt	r2,r22,40027d0 <__ram_exceptions_end+0xfbfe2588>
 4002800:	9811883a 	mov	r8,r19
 4002804:	b0800c04 	addi	r2,r22,48
 4002808:	a027883a 	mov	r19,r20
 400280c:	8029883a 	mov	r20,r16
 4002810:	a17fffc4 	addi	r5,r20,-1
 4002814:	a0bfffc5 	stb	r2,-1(r20)
 4002818:	dc002917 	ldw	r16,164(sp)
 400281c:	2f00752e 	bgeu	r5,fp,40029f4 <___svfprintf_internal_r+0x219c>
 4002820:	d9c02384 	addi	r7,sp,142
 4002824:	3d0fc83a 	sub	r7,r7,r20
 4002828:	d9002344 	addi	r4,sp,141
 400282c:	e1cf883a 	add	r7,fp,r7
 4002830:	00000106 	br	4002838 <___svfprintf_internal_r+0x1fe0>
 4002834:	28800003 	ldbu	r2,0(r5)
 4002838:	20800005 	stb	r2,0(r4)
 400283c:	21000044 	addi	r4,r4,1
 4002840:	29400044 	addi	r5,r5,1
 4002844:	21fffb1e 	bne	r4,r7,4002834 <__ram_exceptions_end+0xfbfe25ec>
 4002848:	d8802304 	addi	r2,sp,140
 400284c:	1505c83a 	sub	r2,r2,r20
 4002850:	d8c02344 	addi	r3,sp,141
 4002854:	1885883a 	add	r2,r3,r2
 4002858:	003f7006 	br	400261c <__ram_exceptions_end+0xfbfe23d4>
 400285c:	0005883a 	mov	r2,zero
 4002860:	003f0b06 	br	4002490 <__ram_exceptions_end+0xfbfe2248>
 4002864:	d9002917 	ldw	r4,164(sp)
 4002868:	d8c03217 	ldw	r3,200(sp)
 400286c:	20800044 	addi	r2,r4,1
 4002870:	1885883a 	add	r2,r3,r2
 4002874:	d8802e15 	stw	r2,184(sp)
 4002878:	103e870e 	bge	r2,zero,4002298 <__ram_exceptions_end+0xfbfe2050>
 400287c:	0005883a 	mov	r2,zero
 4002880:	003e8506 	br	4002298 <__ram_exceptions_end+0xfbfe2050>
 4002884:	01010074 	movhi	r4,1025
 4002888:	21121484 	addi	r4,r4,18514
 400288c:	d9002b15 	stw	r4,172(sp)
 4002890:	003cc506 	br	4001ba8 <__ram_exceptions_end+0xfbfe1960>
 4002894:	d8c03217 	ldw	r3,200(sp)
 4002898:	18c00044 	addi	r3,r3,1
 400289c:	d8c02e15 	stw	r3,184(sp)
 40028a0:	1805883a 	mov	r2,r3
 40028a4:	183fa10e 	bge	r3,zero,400272c <__ram_exceptions_end+0xfbfe24e4>
 40028a8:	0005883a 	mov	r2,zero
 40028ac:	003f9f06 	br	400272c <__ram_exceptions_end+0xfbfe24e4>
 40028b0:	d9003617 	ldw	r4,216(sp)
 40028b4:	000d883a 	mov	r6,zero
 40028b8:	000f883a 	mov	r7,zero
 40028bc:	a00b883a 	mov	r5,r20
 40028c0:	d8c03d15 	stw	r3,244(sp)
 40028c4:	da003e15 	stw	r8,248(sp)
 40028c8:	400f13c0 	call	400f13c <__eqdf2>
 40028cc:	d8c03d17 	ldw	r3,244(sp)
 40028d0:	da003e17 	ldw	r8,248(sp)
 40028d4:	103f8726 	beq	r2,zero,40026f4 <__ram_exceptions_end+0xfbfe24ac>
 40028d8:	00800044 	movi	r2,1
 40028dc:	10c7c83a 	sub	r3,r2,r3
 40028e0:	d8c02615 	stw	r3,152(sp)
 40028e4:	003f8406 	br	40026f8 <__ram_exceptions_end+0xfbfe24b0>
 40028e8:	20000e1e 	bne	r4,zero,4002924 <___svfprintf_internal_r+0x20cc>
 40028ec:	9480004c 	andi	r18,r18,1
 40028f0:	90000c1e 	bne	r18,zero,4002924 <___svfprintf_internal_r+0x20cc>
 40028f4:	00800044 	movi	r2,1
 40028f8:	d8802e15 	stw	r2,184(sp)
 40028fc:	003e6606 	br	4002298 <__ram_exceptions_end+0xfbfe2050>
 4002900:	00800b44 	movi	r2,45
 4002904:	05adc83a 	sub	r22,zero,r22
 4002908:	d8802305 	stb	r2,140(sp)
 400290c:	003f3b06 	br	40025fc <__ram_exceptions_end+0xfbfe23b4>
 4002910:	0005883a 	mov	r2,zero
 4002914:	003f4e06 	br	4002650 <__ram_exceptions_end+0xfbfe2408>
 4002918:	90a4703a 	and	r18,r18,r2
 400291c:	903f4a26 	beq	r18,zero,4002648 <__ram_exceptions_end+0xfbfe2400>
 4002920:	003f4606 	br	400263c <__ram_exceptions_end+0xfbfe23f4>
 4002924:	d8c02917 	ldw	r3,164(sp)
 4002928:	18c00084 	addi	r3,r3,2
 400292c:	d8c02e15 	stw	r3,184(sp)
 4002930:	1805883a 	mov	r2,r3
 4002934:	183e580e 	bge	r3,zero,4002298 <__ram_exceptions_end+0xfbfe2050>
 4002938:	003fd006 	br	400287c <__ram_exceptions_end+0xfbfe2634>
 400293c:	00800084 	movi	r2,2
 4002940:	10c5c83a 	sub	r2,r2,r3
 4002944:	003f7506 	br	400271c <__ram_exceptions_end+0xfbfe24d4>
 4002948:	d8802d17 	ldw	r2,180(sp)
 400294c:	d9002d17 	ldw	r4,180(sp)
 4002950:	bc400043 	ldbu	r17,1(r23)
 4002954:	10800017 	ldw	r2,0(r2)
 4002958:	582f883a 	mov	r23,r11
 400295c:	d8802915 	stw	r2,164(sp)
 4002960:	20800104 	addi	r2,r4,4
 4002964:	d9002917 	ldw	r4,164(sp)
 4002968:	d8802d15 	stw	r2,180(sp)
 400296c:	203df00e 	bge	r4,zero,4002130 <__ram_exceptions_end+0xfbfe1ee8>
 4002970:	8c403fcc 	andi	r17,r17,255
 4002974:	00bfffc4 	movi	r2,-1
 4002978:	8c40201c 	xori	r17,r17,128
 400297c:	d8802915 	stw	r2,164(sp)
 4002980:	8c7fe004 	addi	r17,r17,-128
 4002984:	00380806 	br	40009a8 <__ram_exceptions_end+0xfbfe0760>
 4002988:	9080004c 	andi	r2,r18,1
 400298c:	0039883a 	mov	fp,zero
 4002990:	10000726 	beq	r2,zero,40029b0 <___svfprintf_internal_r+0x2158>
 4002994:	d8c02817 	ldw	r3,160(sp)
 4002998:	dc001dc4 	addi	r16,sp,119
 400299c:	00800c04 	movi	r2,48
 40029a0:	1c07c83a 	sub	r3,r3,r16
 40029a4:	d8801dc5 	stb	r2,119(sp)
 40029a8:	d8c02e15 	stw	r3,184(sp)
 40029ac:	00395206 	br	4000ef8 <__ram_exceptions_end+0xfbfe0cb0>
 40029b0:	d8002e15 	stw	zero,184(sp)
 40029b4:	dc001e04 	addi	r16,sp,120
 40029b8:	00394f06 	br	4000ef8 <__ram_exceptions_end+0xfbfe0cb0>
 40029bc:	0005883a 	mov	r2,zero
 40029c0:	003e3206 	br	400228c <__ram_exceptions_end+0xfbfe2044>
 40029c4:	dd802617 	ldw	r22,152(sp)
 40029c8:	003f0606 	br	40025e4 <__ram_exceptions_end+0xfbfe239c>
 40029cc:	d9c02785 	stb	r7,158(sp)
 40029d0:	003a5106 	br	4001318 <__ram_exceptions_end+0xfbfe10d0>
 40029d4:	d9c02785 	stb	r7,158(sp)
 40029d8:	003a3706 	br	40012b8 <__ram_exceptions_end+0xfbfe1070>
 40029dc:	0005883a 	mov	r2,zero
 40029e0:	003f5e06 	br	400275c <__ram_exceptions_end+0xfbfe2514>
 40029e4:	d9c02785 	stb	r7,158(sp)
 40029e8:	00391706 	br	4000e48 <__ram_exceptions_end+0xfbfe0c00>
 40029ec:	d9c02785 	stb	r7,158(sp)
 40029f0:	0038e606 	br	4000d8c <__ram_exceptions_end+0xfbfe0b44>
 40029f4:	d8802344 	addi	r2,sp,141
 40029f8:	003f0806 	br	400261c <__ram_exceptions_end+0xfbfe23d4>
 40029fc:	d9c02785 	stb	r7,158(sp)
 4002a00:	0038b706 	br	4000ce0 <__ram_exceptions_end+0xfbfe0a98>
 4002a04:	d9c02785 	stb	r7,158(sp)
 4002a08:	003adc06 	br	400157c <__ram_exceptions_end+0xfbfe1334>
 4002a0c:	d9403917 	ldw	r5,228(sp)
 4002a10:	00800304 	movi	r2,12
 4002a14:	28800015 	stw	r2,0(r5)
 4002a18:	00bfffc4 	movi	r2,-1
 4002a1c:	00387806 	br	4000c00 <__ram_exceptions_end+0xfbfe09b8>
 4002a20:	d9c02785 	stb	r7,158(sp)
 4002a24:	003abf06 	br	4001524 <__ram_exceptions_end+0xfbfe12dc>
 4002a28:	d9c02785 	stb	r7,158(sp)
 4002a2c:	003a9b06 	br	400149c <__ram_exceptions_end+0xfbfe1254>

04002a30 <___vfprintf_internal_r>:
 4002a30:	deffb804 	addi	sp,sp,-288
 4002a34:	dfc04715 	stw	ra,284(sp)
 4002a38:	ddc04515 	stw	r23,276(sp)
 4002a3c:	dd404315 	stw	r21,268(sp)
 4002a40:	d9002c15 	stw	r4,176(sp)
 4002a44:	282f883a 	mov	r23,r5
 4002a48:	302b883a 	mov	r21,r6
 4002a4c:	d9c02d15 	stw	r7,180(sp)
 4002a50:	df004615 	stw	fp,280(sp)
 4002a54:	dd804415 	stw	r22,272(sp)
 4002a58:	dd004215 	stw	r20,264(sp)
 4002a5c:	dcc04115 	stw	r19,260(sp)
 4002a60:	dc804015 	stw	r18,256(sp)
 4002a64:	dc403f15 	stw	r17,252(sp)
 4002a68:	dc003e15 	stw	r16,248(sp)
 4002a6c:	40078480 	call	4007848 <_localeconv_r>
 4002a70:	10800017 	ldw	r2,0(r2)
 4002a74:	1009883a 	mov	r4,r2
 4002a78:	d8803415 	stw	r2,208(sp)
 4002a7c:	40007c00 	call	40007c0 <strlen>
 4002a80:	d8803715 	stw	r2,220(sp)
 4002a84:	d8802c17 	ldw	r2,176(sp)
 4002a88:	10000226 	beq	r2,zero,4002a94 <___vfprintf_internal_r+0x64>
 4002a8c:	10800e17 	ldw	r2,56(r2)
 4002a90:	1000f926 	beq	r2,zero,4002e78 <___vfprintf_internal_r+0x448>
 4002a94:	b880030b 	ldhu	r2,12(r23)
 4002a98:	10c8000c 	andi	r3,r2,8192
 4002a9c:	1800061e 	bne	r3,zero,4002ab8 <___vfprintf_internal_r+0x88>
 4002aa0:	b9001917 	ldw	r4,100(r23)
 4002aa4:	00f7ffc4 	movi	r3,-8193
 4002aa8:	10880014 	ori	r2,r2,8192
 4002aac:	20c6703a 	and	r3,r4,r3
 4002ab0:	b880030d 	sth	r2,12(r23)
 4002ab4:	b8c01915 	stw	r3,100(r23)
 4002ab8:	10c0020c 	andi	r3,r2,8
 4002abc:	1800c126 	beq	r3,zero,4002dc4 <___vfprintf_internal_r+0x394>
 4002ac0:	b8c00417 	ldw	r3,16(r23)
 4002ac4:	1800bf26 	beq	r3,zero,4002dc4 <___vfprintf_internal_r+0x394>
 4002ac8:	1080068c 	andi	r2,r2,26
 4002acc:	00c00284 	movi	r3,10
 4002ad0:	10c0c426 	beq	r2,r3,4002de4 <___vfprintf_internal_r+0x3b4>
 4002ad4:	d8c00404 	addi	r3,sp,16
 4002ad8:	05010074 	movhi	r20,1025
 4002adc:	d9001e04 	addi	r4,sp,120
 4002ae0:	a5121c84 	addi	r20,r20,18546
 4002ae4:	d8c01e15 	stw	r3,120(sp)
 4002ae8:	d8002015 	stw	zero,128(sp)
 4002aec:	d8001f15 	stw	zero,124(sp)
 4002af0:	d8003315 	stw	zero,204(sp)
 4002af4:	d8003615 	stw	zero,216(sp)
 4002af8:	d8003815 	stw	zero,224(sp)
 4002afc:	1811883a 	mov	r8,r3
 4002b00:	d8003915 	stw	zero,228(sp)
 4002b04:	d8003a15 	stw	zero,232(sp)
 4002b08:	d8002f15 	stw	zero,188(sp)
 4002b0c:	d9002815 	stw	r4,160(sp)
 4002b10:	a8800007 	ldb	r2,0(r21)
 4002b14:	10027b26 	beq	r2,zero,4003504 <___vfprintf_internal_r+0xad4>
 4002b18:	00c00944 	movi	r3,37
 4002b1c:	a821883a 	mov	r16,r21
 4002b20:	10c0021e 	bne	r2,r3,4002b2c <___vfprintf_internal_r+0xfc>
 4002b24:	00001406 	br	4002b78 <___vfprintf_internal_r+0x148>
 4002b28:	10c00326 	beq	r2,r3,4002b38 <___vfprintf_internal_r+0x108>
 4002b2c:	84000044 	addi	r16,r16,1
 4002b30:	80800007 	ldb	r2,0(r16)
 4002b34:	103ffc1e 	bne	r2,zero,4002b28 <__ram_exceptions_end+0xfbfe28e0>
 4002b38:	8563c83a 	sub	r17,r16,r21
 4002b3c:	88000e26 	beq	r17,zero,4002b78 <___vfprintf_internal_r+0x148>
 4002b40:	d8c02017 	ldw	r3,128(sp)
 4002b44:	d8801f17 	ldw	r2,124(sp)
 4002b48:	45400015 	stw	r21,0(r8)
 4002b4c:	1c47883a 	add	r3,r3,r17
 4002b50:	10800044 	addi	r2,r2,1
 4002b54:	d8c02015 	stw	r3,128(sp)
 4002b58:	44400115 	stw	r17,4(r8)
 4002b5c:	d8801f15 	stw	r2,124(sp)
 4002b60:	00c001c4 	movi	r3,7
 4002b64:	1880a716 	blt	r3,r2,4002e04 <___vfprintf_internal_r+0x3d4>
 4002b68:	42000204 	addi	r8,r8,8
 4002b6c:	d9402f17 	ldw	r5,188(sp)
 4002b70:	2c4b883a 	add	r5,r5,r17
 4002b74:	d9402f15 	stw	r5,188(sp)
 4002b78:	80800007 	ldb	r2,0(r16)
 4002b7c:	1000a826 	beq	r2,zero,4002e20 <___vfprintf_internal_r+0x3f0>
 4002b80:	84400047 	ldb	r17,1(r16)
 4002b84:	00bfffc4 	movi	r2,-1
 4002b88:	85400044 	addi	r21,r16,1
 4002b8c:	d8002785 	stb	zero,158(sp)
 4002b90:	0007883a 	mov	r3,zero
 4002b94:	000f883a 	mov	r7,zero
 4002b98:	d8802915 	stw	r2,164(sp)
 4002b9c:	d8003115 	stw	zero,196(sp)
 4002ba0:	0025883a 	mov	r18,zero
 4002ba4:	01401604 	movi	r5,88
 4002ba8:	01800244 	movi	r6,9
 4002bac:	02800a84 	movi	r10,42
 4002bb0:	02401b04 	movi	r9,108
 4002bb4:	ad400044 	addi	r21,r21,1
 4002bb8:	88bff804 	addi	r2,r17,-32
 4002bbc:	28830436 	bltu	r5,r2,40037d0 <___vfprintf_internal_r+0xda0>
 4002bc0:	100490ba 	slli	r2,r2,2
 4002bc4:	01010034 	movhi	r4,1024
 4002bc8:	210af604 	addi	r4,r4,11224
 4002bcc:	1105883a 	add	r2,r2,r4
 4002bd0:	10800017 	ldw	r2,0(r2)
 4002bd4:	1000683a 	jmp	r2
 4002bd8:	040036f0 	cmpltui	r16,zero,219
 4002bdc:	040037d0 	cmplti	r16,zero,223
 4002be0:	040037d0 	cmplti	r16,zero,223
 4002be4:	04003710 	cmplti	r16,zero,220
 4002be8:	040037d0 	cmplti	r16,zero,223
 4002bec:	040037d0 	cmplti	r16,zero,223
 4002bf0:	040037d0 	cmplti	r16,zero,223
 4002bf4:	040037d0 	cmplti	r16,zero,223
 4002bf8:	040037d0 	cmplti	r16,zero,223
 4002bfc:	040037d0 	cmplti	r16,zero,223
 4002c00:	04002e84 	movi	r16,186
 4002c04:	0400362c 	andhi	r16,zero,216
 4002c08:	040037d0 	cmplti	r16,zero,223
 4002c0c:	04002d4c 	andi	r16,zero,181
 4002c10:	04002eac 	andhi	r16,zero,186
 4002c14:	040037d0 	cmplti	r16,zero,223
 4002c18:	04002eec 	andhi	r16,zero,187
 4002c1c:	04002ef8 	rdprs	r16,zero,187
 4002c20:	04002ef8 	rdprs	r16,zero,187
 4002c24:	04002ef8 	rdprs	r16,zero,187
 4002c28:	04002ef8 	rdprs	r16,zero,187
 4002c2c:	04002ef8 	rdprs	r16,zero,187
 4002c30:	04002ef8 	rdprs	r16,zero,187
 4002c34:	04002ef8 	rdprs	r16,zero,187
 4002c38:	04002ef8 	rdprs	r16,zero,187
 4002c3c:	04002ef8 	rdprs	r16,zero,187
 4002c40:	040037d0 	cmplti	r16,zero,223
 4002c44:	040037d0 	cmplti	r16,zero,223
 4002c48:	040037d0 	cmplti	r16,zero,223
 4002c4c:	040037d0 	cmplti	r16,zero,223
 4002c50:	040037d0 	cmplti	r16,zero,223
 4002c54:	040037d0 	cmplti	r16,zero,223
 4002c58:	040037d0 	cmplti	r16,zero,223
 4002c5c:	040037d0 	cmplti	r16,zero,223
 4002c60:	040037d0 	cmplti	r16,zero,223
 4002c64:	040037d0 	cmplti	r16,zero,223
 4002c68:	04002f2c 	andhi	r16,zero,188
 4002c6c:	04002fe8 	cmpgeui	r16,zero,191
 4002c70:	040037d0 	cmplti	r16,zero,223
 4002c74:	04002fe8 	cmpgeui	r16,zero,191
 4002c78:	040037d0 	cmplti	r16,zero,223
 4002c7c:	040037d0 	cmplti	r16,zero,223
 4002c80:	040037d0 	cmplti	r16,zero,223
 4002c84:	040037d0 	cmplti	r16,zero,223
 4002c88:	04003088 	cmpgei	r16,zero,194
 4002c8c:	040037d0 	cmplti	r16,zero,223
 4002c90:	040037d0 	cmplti	r16,zero,223
 4002c94:	04003094 	movui	r16,194
 4002c98:	040037d0 	cmplti	r16,zero,223
 4002c9c:	040037d0 	cmplti	r16,zero,223
 4002ca0:	040037d0 	cmplti	r16,zero,223
 4002ca4:	040037d0 	cmplti	r16,zero,223
 4002ca8:	040037d0 	cmplti	r16,zero,223
 4002cac:	0400350c 	andi	r16,zero,212
 4002cb0:	040037d0 	cmplti	r16,zero,223
 4002cb4:	040037d0 	cmplti	r16,zero,223
 4002cb8:	0400356c 	andhi	r16,zero,213
 4002cbc:	040037d0 	cmplti	r16,zero,223
 4002cc0:	040037d0 	cmplti	r16,zero,223
 4002cc4:	040037d0 	cmplti	r16,zero,223
 4002cc8:	040037d0 	cmplti	r16,zero,223
 4002ccc:	040037d0 	cmplti	r16,zero,223
 4002cd0:	040037d0 	cmplti	r16,zero,223
 4002cd4:	040037d0 	cmplti	r16,zero,223
 4002cd8:	040037d0 	cmplti	r16,zero,223
 4002cdc:	040037d0 	cmplti	r16,zero,223
 4002ce0:	040037d0 	cmplti	r16,zero,223
 4002ce4:	0400377c 	xorhi	r16,zero,221
 4002ce8:	0400371c 	xori	r16,zero,220
 4002cec:	04002fe8 	cmpgeui	r16,zero,191
 4002cf0:	04002fe8 	cmpgeui	r16,zero,191
 4002cf4:	04002fe8 	cmpgeui	r16,zero,191
 4002cf8:	0400372c 	andhi	r16,zero,220
 4002cfc:	0400371c 	xori	r16,zero,220
 4002d00:	040037d0 	cmplti	r16,zero,223
 4002d04:	040037d0 	cmplti	r16,zero,223
 4002d08:	04003738 	rdprs	r16,zero,220
 4002d0c:	040037d0 	cmplti	r16,zero,223
 4002d10:	04003748 	cmpgei	r16,zero,221
 4002d14:	0400361c 	xori	r16,zero,216
 4002d18:	04002d58 	cmpnei	r16,zero,181
 4002d1c:	0400363c 	xorhi	r16,zero,216
 4002d20:	040037d0 	cmplti	r16,zero,223
 4002d24:	04003648 	cmpgei	r16,zero,217
 4002d28:	040037d0 	cmplti	r16,zero,223
 4002d2c:	040036a4 	muli	r16,zero,218
 4002d30:	040037d0 	cmplti	r16,zero,223
 4002d34:	040037d0 	cmplti	r16,zero,223
 4002d38:	040036b4 	movhi	r16,218
 4002d3c:	d9003117 	ldw	r4,196(sp)
 4002d40:	d8802d15 	stw	r2,180(sp)
 4002d44:	0109c83a 	sub	r4,zero,r4
 4002d48:	d9003115 	stw	r4,196(sp)
 4002d4c:	94800114 	ori	r18,r18,4
 4002d50:	ac400007 	ldb	r17,0(r21)
 4002d54:	003f9706 	br	4002bb4 <__ram_exceptions_end+0xfbfe296c>
 4002d58:	00800c04 	movi	r2,48
 4002d5c:	d9002d17 	ldw	r4,180(sp)
 4002d60:	d9402917 	ldw	r5,164(sp)
 4002d64:	d8802705 	stb	r2,156(sp)
 4002d68:	00801e04 	movi	r2,120
 4002d6c:	d8802745 	stb	r2,157(sp)
 4002d70:	d8002785 	stb	zero,158(sp)
 4002d74:	20c00104 	addi	r3,r4,4
 4002d78:	24c00017 	ldw	r19,0(r4)
 4002d7c:	002d883a 	mov	r22,zero
 4002d80:	90800094 	ori	r2,r18,2
 4002d84:	28029a16 	blt	r5,zero,40037f0 <___vfprintf_internal_r+0xdc0>
 4002d88:	00bfdfc4 	movi	r2,-129
 4002d8c:	90a4703a 	and	r18,r18,r2
 4002d90:	d8c02d15 	stw	r3,180(sp)
 4002d94:	94800094 	ori	r18,r18,2
 4002d98:	9802871e 	bne	r19,zero,40037b8 <___vfprintf_internal_r+0xd88>
 4002d9c:	00810074 	movhi	r2,1025
 4002da0:	10920d04 	addi	r2,r2,18484
 4002da4:	d8803915 	stw	r2,228(sp)
 4002da8:	04401e04 	movi	r17,120
 4002dac:	d8802917 	ldw	r2,164(sp)
 4002db0:	0039883a 	mov	fp,zero
 4002db4:	1001e926 	beq	r2,zero,400355c <___vfprintf_internal_r+0xb2c>
 4002db8:	0027883a 	mov	r19,zero
 4002dbc:	002d883a 	mov	r22,zero
 4002dc0:	00020506 	br	40035d8 <___vfprintf_internal_r+0xba8>
 4002dc4:	d9002c17 	ldw	r4,176(sp)
 4002dc8:	b80b883a 	mov	r5,r23
 4002dcc:	4004d000 	call	4004d00 <__swsetup_r>
 4002dd0:	1005ac1e 	bne	r2,zero,4004484 <___vfprintf_internal_r+0x1a54>
 4002dd4:	b880030b 	ldhu	r2,12(r23)
 4002dd8:	00c00284 	movi	r3,10
 4002ddc:	1080068c 	andi	r2,r2,26
 4002de0:	10ff3c1e 	bne	r2,r3,4002ad4 <__ram_exceptions_end+0xfbfe288c>
 4002de4:	b880038f 	ldh	r2,14(r23)
 4002de8:	103f3a16 	blt	r2,zero,4002ad4 <__ram_exceptions_end+0xfbfe288c>
 4002dec:	d9c02d17 	ldw	r7,180(sp)
 4002df0:	d9002c17 	ldw	r4,176(sp)
 4002df4:	a80d883a 	mov	r6,r21
 4002df8:	b80b883a 	mov	r5,r23
 4002dfc:	4004c440 	call	4004c44 <__sbprintf>
 4002e00:	00001106 	br	4002e48 <___vfprintf_internal_r+0x418>
 4002e04:	d9002c17 	ldw	r4,176(sp)
 4002e08:	d9801e04 	addi	r6,sp,120
 4002e0c:	b80b883a 	mov	r5,r23
 4002e10:	400b4c40 	call	400b4c4 <__sprint_r>
 4002e14:	1000081e 	bne	r2,zero,4002e38 <___vfprintf_internal_r+0x408>
 4002e18:	da000404 	addi	r8,sp,16
 4002e1c:	003f5306 	br	4002b6c <__ram_exceptions_end+0xfbfe2924>
 4002e20:	d8802017 	ldw	r2,128(sp)
 4002e24:	10000426 	beq	r2,zero,4002e38 <___vfprintf_internal_r+0x408>
 4002e28:	d9002c17 	ldw	r4,176(sp)
 4002e2c:	d9801e04 	addi	r6,sp,120
 4002e30:	b80b883a 	mov	r5,r23
 4002e34:	400b4c40 	call	400b4c4 <__sprint_r>
 4002e38:	b880030b 	ldhu	r2,12(r23)
 4002e3c:	1080100c 	andi	r2,r2,64
 4002e40:	1005901e 	bne	r2,zero,4004484 <___vfprintf_internal_r+0x1a54>
 4002e44:	d8802f17 	ldw	r2,188(sp)
 4002e48:	dfc04717 	ldw	ra,284(sp)
 4002e4c:	df004617 	ldw	fp,280(sp)
 4002e50:	ddc04517 	ldw	r23,276(sp)
 4002e54:	dd804417 	ldw	r22,272(sp)
 4002e58:	dd404317 	ldw	r21,268(sp)
 4002e5c:	dd004217 	ldw	r20,264(sp)
 4002e60:	dcc04117 	ldw	r19,260(sp)
 4002e64:	dc804017 	ldw	r18,256(sp)
 4002e68:	dc403f17 	ldw	r17,252(sp)
 4002e6c:	dc003e17 	ldw	r16,248(sp)
 4002e70:	dec04804 	addi	sp,sp,288
 4002e74:	f800283a 	ret
 4002e78:	d9002c17 	ldw	r4,176(sp)
 4002e7c:	4006cd40 	call	4006cd4 <__sinit>
 4002e80:	003f0406 	br	4002a94 <__ram_exceptions_end+0xfbfe284c>
 4002e84:	d8802d17 	ldw	r2,180(sp)
 4002e88:	d9002d17 	ldw	r4,180(sp)
 4002e8c:	10800017 	ldw	r2,0(r2)
 4002e90:	d8803115 	stw	r2,196(sp)
 4002e94:	20800104 	addi	r2,r4,4
 4002e98:	d9003117 	ldw	r4,196(sp)
 4002e9c:	203fa716 	blt	r4,zero,4002d3c <__ram_exceptions_end+0xfbfe2af4>
 4002ea0:	d8802d15 	stw	r2,180(sp)
 4002ea4:	ac400007 	ldb	r17,0(r21)
 4002ea8:	003f4206 	br	4002bb4 <__ram_exceptions_end+0xfbfe296c>
 4002eac:	ac400007 	ldb	r17,0(r21)
 4002eb0:	aac00044 	addi	r11,r21,1
 4002eb4:	8a872826 	beq	r17,r10,4004b58 <___vfprintf_internal_r+0x2128>
 4002eb8:	88bff404 	addi	r2,r17,-48
 4002ebc:	0009883a 	mov	r4,zero
 4002ec0:	30867d36 	bltu	r6,r2,40048b8 <___vfprintf_internal_r+0x1e88>
 4002ec4:	5c400007 	ldb	r17,0(r11)
 4002ec8:	210002a4 	muli	r4,r4,10
 4002ecc:	5d400044 	addi	r21,r11,1
 4002ed0:	a817883a 	mov	r11,r21
 4002ed4:	2089883a 	add	r4,r4,r2
 4002ed8:	88bff404 	addi	r2,r17,-48
 4002edc:	30bff92e 	bgeu	r6,r2,4002ec4 <__ram_exceptions_end+0xfbfe2c7c>
 4002ee0:	2005c916 	blt	r4,zero,4004608 <___vfprintf_internal_r+0x1bd8>
 4002ee4:	d9002915 	stw	r4,164(sp)
 4002ee8:	003f3306 	br	4002bb8 <__ram_exceptions_end+0xfbfe2970>
 4002eec:	94802014 	ori	r18,r18,128
 4002ef0:	ac400007 	ldb	r17,0(r21)
 4002ef4:	003f2f06 	br	4002bb4 <__ram_exceptions_end+0xfbfe296c>
 4002ef8:	a809883a 	mov	r4,r21
 4002efc:	d8003115 	stw	zero,196(sp)
 4002f00:	88bff404 	addi	r2,r17,-48
 4002f04:	0017883a 	mov	r11,zero
 4002f08:	24400007 	ldb	r17,0(r4)
 4002f0c:	5ac002a4 	muli	r11,r11,10
 4002f10:	ad400044 	addi	r21,r21,1
 4002f14:	a809883a 	mov	r4,r21
 4002f18:	12d7883a 	add	r11,r2,r11
 4002f1c:	88bff404 	addi	r2,r17,-48
 4002f20:	30bff92e 	bgeu	r6,r2,4002f08 <__ram_exceptions_end+0xfbfe2cc0>
 4002f24:	dac03115 	stw	r11,196(sp)
 4002f28:	003f2306 	br	4002bb8 <__ram_exceptions_end+0xfbfe2970>
 4002f2c:	18c03fcc 	andi	r3,r3,255
 4002f30:	18072b1e 	bne	r3,zero,4004be0 <___vfprintf_internal_r+0x21b0>
 4002f34:	94800414 	ori	r18,r18,16
 4002f38:	9080080c 	andi	r2,r18,32
 4002f3c:	10037b26 	beq	r2,zero,4003d2c <___vfprintf_internal_r+0x12fc>
 4002f40:	d9402d17 	ldw	r5,180(sp)
 4002f44:	28800117 	ldw	r2,4(r5)
 4002f48:	2cc00017 	ldw	r19,0(r5)
 4002f4c:	29400204 	addi	r5,r5,8
 4002f50:	d9402d15 	stw	r5,180(sp)
 4002f54:	102d883a 	mov	r22,r2
 4002f58:	10044b16 	blt	r2,zero,4004088 <___vfprintf_internal_r+0x1658>
 4002f5c:	d9402917 	ldw	r5,164(sp)
 4002f60:	df002783 	ldbu	fp,158(sp)
 4002f64:	2803bc16 	blt	r5,zero,4003e58 <___vfprintf_internal_r+0x1428>
 4002f68:	00ffdfc4 	movi	r3,-129
 4002f6c:	9d84b03a 	or	r2,r19,r22
 4002f70:	90e4703a 	and	r18,r18,r3
 4002f74:	10017726 	beq	r2,zero,4003554 <___vfprintf_internal_r+0xb24>
 4002f78:	b0038326 	beq	r22,zero,4003d88 <___vfprintf_internal_r+0x1358>
 4002f7c:	dc402a15 	stw	r17,168(sp)
 4002f80:	dc001e04 	addi	r16,sp,120
 4002f84:	b023883a 	mov	r17,r22
 4002f88:	402d883a 	mov	r22,r8
 4002f8c:	9809883a 	mov	r4,r19
 4002f90:	880b883a 	mov	r5,r17
 4002f94:	01800284 	movi	r6,10
 4002f98:	000f883a 	mov	r7,zero
 4002f9c:	400d8bc0 	call	400d8bc <__umoddi3>
 4002fa0:	10800c04 	addi	r2,r2,48
 4002fa4:	843fffc4 	addi	r16,r16,-1
 4002fa8:	9809883a 	mov	r4,r19
 4002fac:	880b883a 	mov	r5,r17
 4002fb0:	80800005 	stb	r2,0(r16)
 4002fb4:	01800284 	movi	r6,10
 4002fb8:	000f883a 	mov	r7,zero
 4002fbc:	400d3440 	call	400d344 <__udivdi3>
 4002fc0:	1027883a 	mov	r19,r2
 4002fc4:	10c4b03a 	or	r2,r2,r3
 4002fc8:	1823883a 	mov	r17,r3
 4002fcc:	103fef1e 	bne	r2,zero,4002f8c <__ram_exceptions_end+0xfbfe2d44>
 4002fd0:	d8c02817 	ldw	r3,160(sp)
 4002fd4:	dc402a17 	ldw	r17,168(sp)
 4002fd8:	b011883a 	mov	r8,r22
 4002fdc:	1c07c83a 	sub	r3,r3,r16
 4002fe0:	d8c02e15 	stw	r3,184(sp)
 4002fe4:	00005906 	br	400314c <___vfprintf_internal_r+0x71c>
 4002fe8:	18c03fcc 	andi	r3,r3,255
 4002fec:	1806fa1e 	bne	r3,zero,4004bd8 <___vfprintf_internal_r+0x21a8>
 4002ff0:	9080020c 	andi	r2,r18,8
 4002ff4:	10048a26 	beq	r2,zero,4004220 <___vfprintf_internal_r+0x17f0>
 4002ff8:	d8c02d17 	ldw	r3,180(sp)
 4002ffc:	d9002d17 	ldw	r4,180(sp)
 4003000:	d9402d17 	ldw	r5,180(sp)
 4003004:	18c00017 	ldw	r3,0(r3)
 4003008:	21000117 	ldw	r4,4(r4)
 400300c:	29400204 	addi	r5,r5,8
 4003010:	d8c03615 	stw	r3,216(sp)
 4003014:	d9003815 	stw	r4,224(sp)
 4003018:	d9402d15 	stw	r5,180(sp)
 400301c:	d9003617 	ldw	r4,216(sp)
 4003020:	d9403817 	ldw	r5,224(sp)
 4003024:	da003d15 	stw	r8,244(sp)
 4003028:	04000044 	movi	r16,1
 400302c:	4009db80 	call	4009db8 <__fpclassifyd>
 4003030:	da003d17 	ldw	r8,244(sp)
 4003034:	14041f1e 	bne	r2,r16,40040b4 <___vfprintf_internal_r+0x1684>
 4003038:	d9003617 	ldw	r4,216(sp)
 400303c:	d9403817 	ldw	r5,224(sp)
 4003040:	000d883a 	mov	r6,zero
 4003044:	000f883a 	mov	r7,zero
 4003048:	400f2a00 	call	400f2a0 <__ledf2>
 400304c:	da003d17 	ldw	r8,244(sp)
 4003050:	1005be16 	blt	r2,zero,400474c <___vfprintf_internal_r+0x1d1c>
 4003054:	df002783 	ldbu	fp,158(sp)
 4003058:	008011c4 	movi	r2,71
 400305c:	1445330e 	bge	r2,r17,400452c <___vfprintf_internal_r+0x1afc>
 4003060:	04010074 	movhi	r16,1025
 4003064:	84120504 	addi	r16,r16,18452
 4003068:	00c000c4 	movi	r3,3
 400306c:	00bfdfc4 	movi	r2,-129
 4003070:	d8c02a15 	stw	r3,168(sp)
 4003074:	90a4703a 	and	r18,r18,r2
 4003078:	d8c02e15 	stw	r3,184(sp)
 400307c:	d8002915 	stw	zero,164(sp)
 4003080:	d8003215 	stw	zero,200(sp)
 4003084:	00003706 	br	4003164 <___vfprintf_internal_r+0x734>
 4003088:	94800214 	ori	r18,r18,8
 400308c:	ac400007 	ldb	r17,0(r21)
 4003090:	003ec806 	br	4002bb4 <__ram_exceptions_end+0xfbfe296c>
 4003094:	18c03fcc 	andi	r3,r3,255
 4003098:	1806db1e 	bne	r3,zero,4004c08 <___vfprintf_internal_r+0x21d8>
 400309c:	94800414 	ori	r18,r18,16
 40030a0:	9080080c 	andi	r2,r18,32
 40030a4:	1002d826 	beq	r2,zero,4003c08 <___vfprintf_internal_r+0x11d8>
 40030a8:	d9402d17 	ldw	r5,180(sp)
 40030ac:	d8c02917 	ldw	r3,164(sp)
 40030b0:	d8002785 	stb	zero,158(sp)
 40030b4:	28800204 	addi	r2,r5,8
 40030b8:	2cc00017 	ldw	r19,0(r5)
 40030bc:	2d800117 	ldw	r22,4(r5)
 40030c0:	18048f16 	blt	r3,zero,4004300 <___vfprintf_internal_r+0x18d0>
 40030c4:	013fdfc4 	movi	r4,-129
 40030c8:	9d86b03a 	or	r3,r19,r22
 40030cc:	d8802d15 	stw	r2,180(sp)
 40030d0:	9124703a 	and	r18,r18,r4
 40030d4:	1802d91e 	bne	r3,zero,4003c3c <___vfprintf_internal_r+0x120c>
 40030d8:	d8c02917 	ldw	r3,164(sp)
 40030dc:	0039883a 	mov	fp,zero
 40030e0:	1805c326 	beq	r3,zero,40047f0 <___vfprintf_internal_r+0x1dc0>
 40030e4:	0027883a 	mov	r19,zero
 40030e8:	002d883a 	mov	r22,zero
 40030ec:	dc001e04 	addi	r16,sp,120
 40030f0:	9806d0fa 	srli	r3,r19,3
 40030f4:	b008977a 	slli	r4,r22,29
 40030f8:	b02cd0fa 	srli	r22,r22,3
 40030fc:	9cc001cc 	andi	r19,r19,7
 4003100:	98800c04 	addi	r2,r19,48
 4003104:	843fffc4 	addi	r16,r16,-1
 4003108:	20e6b03a 	or	r19,r4,r3
 400310c:	80800005 	stb	r2,0(r16)
 4003110:	9d86b03a 	or	r3,r19,r22
 4003114:	183ff61e 	bne	r3,zero,40030f0 <__ram_exceptions_end+0xfbfe2ea8>
 4003118:	90c0004c 	andi	r3,r18,1
 400311c:	18013b26 	beq	r3,zero,400360c <___vfprintf_internal_r+0xbdc>
 4003120:	10803fcc 	andi	r2,r2,255
 4003124:	1080201c 	xori	r2,r2,128
 4003128:	10bfe004 	addi	r2,r2,-128
 400312c:	00c00c04 	movi	r3,48
 4003130:	10c13626 	beq	r2,r3,400360c <___vfprintf_internal_r+0xbdc>
 4003134:	80ffffc5 	stb	r3,-1(r16)
 4003138:	d8c02817 	ldw	r3,160(sp)
 400313c:	80bfffc4 	addi	r2,r16,-1
 4003140:	1021883a 	mov	r16,r2
 4003144:	1887c83a 	sub	r3,r3,r2
 4003148:	d8c02e15 	stw	r3,184(sp)
 400314c:	d8802e17 	ldw	r2,184(sp)
 4003150:	d9002917 	ldw	r4,164(sp)
 4003154:	1100010e 	bge	r2,r4,400315c <___vfprintf_internal_r+0x72c>
 4003158:	2005883a 	mov	r2,r4
 400315c:	d8802a15 	stw	r2,168(sp)
 4003160:	d8003215 	stw	zero,200(sp)
 4003164:	e7003fcc 	andi	fp,fp,255
 4003168:	e700201c 	xori	fp,fp,128
 400316c:	e73fe004 	addi	fp,fp,-128
 4003170:	e0000326 	beq	fp,zero,4003180 <___vfprintf_internal_r+0x750>
 4003174:	d8c02a17 	ldw	r3,168(sp)
 4003178:	18c00044 	addi	r3,r3,1
 400317c:	d8c02a15 	stw	r3,168(sp)
 4003180:	90c0008c 	andi	r3,r18,2
 4003184:	d8c02b15 	stw	r3,172(sp)
 4003188:	18000326 	beq	r3,zero,4003198 <___vfprintf_internal_r+0x768>
 400318c:	d8c02a17 	ldw	r3,168(sp)
 4003190:	18c00084 	addi	r3,r3,2
 4003194:	d8c02a15 	stw	r3,168(sp)
 4003198:	90c0210c 	andi	r3,r18,132
 400319c:	d8c03015 	stw	r3,192(sp)
 40031a0:	1801a31e 	bne	r3,zero,4003830 <___vfprintf_internal_r+0xe00>
 40031a4:	d9003117 	ldw	r4,196(sp)
 40031a8:	d8c02a17 	ldw	r3,168(sp)
 40031ac:	20e7c83a 	sub	r19,r4,r3
 40031b0:	04c19f0e 	bge	zero,r19,4003830 <___vfprintf_internal_r+0xe00>
 40031b4:	02400404 	movi	r9,16
 40031b8:	d8c02017 	ldw	r3,128(sp)
 40031bc:	d8801f17 	ldw	r2,124(sp)
 40031c0:	4cc50d0e 	bge	r9,r19,40045f8 <___vfprintf_internal_r+0x1bc8>
 40031c4:	01410074 	movhi	r5,1025
 40031c8:	29522084 	addi	r5,r5,18562
 40031cc:	dc403b15 	stw	r17,236(sp)
 40031d0:	d9403515 	stw	r5,212(sp)
 40031d4:	9823883a 	mov	r17,r19
 40031d8:	482d883a 	mov	r22,r9
 40031dc:	9027883a 	mov	r19,r18
 40031e0:	070001c4 	movi	fp,7
 40031e4:	8025883a 	mov	r18,r16
 40031e8:	dc002c17 	ldw	r16,176(sp)
 40031ec:	00000306 	br	40031fc <___vfprintf_internal_r+0x7cc>
 40031f0:	8c7ffc04 	addi	r17,r17,-16
 40031f4:	42000204 	addi	r8,r8,8
 40031f8:	b440130e 	bge	r22,r17,4003248 <___vfprintf_internal_r+0x818>
 40031fc:	01010074 	movhi	r4,1025
 4003200:	18c00404 	addi	r3,r3,16
 4003204:	10800044 	addi	r2,r2,1
 4003208:	21122084 	addi	r4,r4,18562
 400320c:	41000015 	stw	r4,0(r8)
 4003210:	45800115 	stw	r22,4(r8)
 4003214:	d8c02015 	stw	r3,128(sp)
 4003218:	d8801f15 	stw	r2,124(sp)
 400321c:	e0bff40e 	bge	fp,r2,40031f0 <__ram_exceptions_end+0xfbfe2fa8>
 4003220:	d9801e04 	addi	r6,sp,120
 4003224:	b80b883a 	mov	r5,r23
 4003228:	8009883a 	mov	r4,r16
 400322c:	400b4c40 	call	400b4c4 <__sprint_r>
 4003230:	103f011e 	bne	r2,zero,4002e38 <__ram_exceptions_end+0xfbfe2bf0>
 4003234:	8c7ffc04 	addi	r17,r17,-16
 4003238:	d8c02017 	ldw	r3,128(sp)
 400323c:	d8801f17 	ldw	r2,124(sp)
 4003240:	da000404 	addi	r8,sp,16
 4003244:	b47fed16 	blt	r22,r17,40031fc <__ram_exceptions_end+0xfbfe2fb4>
 4003248:	9021883a 	mov	r16,r18
 400324c:	9825883a 	mov	r18,r19
 4003250:	8827883a 	mov	r19,r17
 4003254:	dc403b17 	ldw	r17,236(sp)
 4003258:	d9403517 	ldw	r5,212(sp)
 400325c:	98c7883a 	add	r3,r19,r3
 4003260:	10800044 	addi	r2,r2,1
 4003264:	41400015 	stw	r5,0(r8)
 4003268:	44c00115 	stw	r19,4(r8)
 400326c:	d8c02015 	stw	r3,128(sp)
 4003270:	d8801f15 	stw	r2,124(sp)
 4003274:	010001c4 	movi	r4,7
 4003278:	2082a316 	blt	r4,r2,4003d08 <___vfprintf_internal_r+0x12d8>
 400327c:	df002787 	ldb	fp,158(sp)
 4003280:	42000204 	addi	r8,r8,8
 4003284:	e0000c26 	beq	fp,zero,40032b8 <___vfprintf_internal_r+0x888>
 4003288:	d8801f17 	ldw	r2,124(sp)
 400328c:	d9002784 	addi	r4,sp,158
 4003290:	18c00044 	addi	r3,r3,1
 4003294:	10800044 	addi	r2,r2,1
 4003298:	41000015 	stw	r4,0(r8)
 400329c:	01000044 	movi	r4,1
 40032a0:	41000115 	stw	r4,4(r8)
 40032a4:	d8c02015 	stw	r3,128(sp)
 40032a8:	d8801f15 	stw	r2,124(sp)
 40032ac:	010001c4 	movi	r4,7
 40032b0:	20823c16 	blt	r4,r2,4003ba4 <___vfprintf_internal_r+0x1174>
 40032b4:	42000204 	addi	r8,r8,8
 40032b8:	d8802b17 	ldw	r2,172(sp)
 40032bc:	10000c26 	beq	r2,zero,40032f0 <___vfprintf_internal_r+0x8c0>
 40032c0:	d8801f17 	ldw	r2,124(sp)
 40032c4:	d9002704 	addi	r4,sp,156
 40032c8:	18c00084 	addi	r3,r3,2
 40032cc:	10800044 	addi	r2,r2,1
 40032d0:	41000015 	stw	r4,0(r8)
 40032d4:	01000084 	movi	r4,2
 40032d8:	41000115 	stw	r4,4(r8)
 40032dc:	d8c02015 	stw	r3,128(sp)
 40032e0:	d8801f15 	stw	r2,124(sp)
 40032e4:	010001c4 	movi	r4,7
 40032e8:	20823616 	blt	r4,r2,4003bc4 <___vfprintf_internal_r+0x1194>
 40032ec:	42000204 	addi	r8,r8,8
 40032f0:	d9003017 	ldw	r4,192(sp)
 40032f4:	00802004 	movi	r2,128
 40032f8:	20819926 	beq	r4,r2,4003960 <___vfprintf_internal_r+0xf30>
 40032fc:	d9402917 	ldw	r5,164(sp)
 4003300:	d8802e17 	ldw	r2,184(sp)
 4003304:	28adc83a 	sub	r22,r5,r2
 4003308:	0580310e 	bge	zero,r22,40033d0 <___vfprintf_internal_r+0x9a0>
 400330c:	07000404 	movi	fp,16
 4003310:	d8801f17 	ldw	r2,124(sp)
 4003314:	e584140e 	bge	fp,r22,4004368 <___vfprintf_internal_r+0x1938>
 4003318:	01410074 	movhi	r5,1025
 400331c:	29521c84 	addi	r5,r5,18546
 4003320:	dc402915 	stw	r17,164(sp)
 4003324:	d9402b15 	stw	r5,172(sp)
 4003328:	b023883a 	mov	r17,r22
 400332c:	04c001c4 	movi	r19,7
 4003330:	a82d883a 	mov	r22,r21
 4003334:	902b883a 	mov	r21,r18
 4003338:	8025883a 	mov	r18,r16
 400333c:	dc002c17 	ldw	r16,176(sp)
 4003340:	00000306 	br	4003350 <___vfprintf_internal_r+0x920>
 4003344:	8c7ffc04 	addi	r17,r17,-16
 4003348:	42000204 	addi	r8,r8,8
 400334c:	e440110e 	bge	fp,r17,4003394 <___vfprintf_internal_r+0x964>
 4003350:	18c00404 	addi	r3,r3,16
 4003354:	10800044 	addi	r2,r2,1
 4003358:	45000015 	stw	r20,0(r8)
 400335c:	47000115 	stw	fp,4(r8)
 4003360:	d8c02015 	stw	r3,128(sp)
 4003364:	d8801f15 	stw	r2,124(sp)
 4003368:	98bff60e 	bge	r19,r2,4003344 <__ram_exceptions_end+0xfbfe30fc>
 400336c:	d9801e04 	addi	r6,sp,120
 4003370:	b80b883a 	mov	r5,r23
 4003374:	8009883a 	mov	r4,r16
 4003378:	400b4c40 	call	400b4c4 <__sprint_r>
 400337c:	103eae1e 	bne	r2,zero,4002e38 <__ram_exceptions_end+0xfbfe2bf0>
 4003380:	8c7ffc04 	addi	r17,r17,-16
 4003384:	d8c02017 	ldw	r3,128(sp)
 4003388:	d8801f17 	ldw	r2,124(sp)
 400338c:	da000404 	addi	r8,sp,16
 4003390:	e47fef16 	blt	fp,r17,4003350 <__ram_exceptions_end+0xfbfe3108>
 4003394:	9021883a 	mov	r16,r18
 4003398:	a825883a 	mov	r18,r21
 400339c:	b02b883a 	mov	r21,r22
 40033a0:	882d883a 	mov	r22,r17
 40033a4:	dc402917 	ldw	r17,164(sp)
 40033a8:	d9002b17 	ldw	r4,172(sp)
 40033ac:	1d87883a 	add	r3,r3,r22
 40033b0:	10800044 	addi	r2,r2,1
 40033b4:	41000015 	stw	r4,0(r8)
 40033b8:	45800115 	stw	r22,4(r8)
 40033bc:	d8c02015 	stw	r3,128(sp)
 40033c0:	d8801f15 	stw	r2,124(sp)
 40033c4:	010001c4 	movi	r4,7
 40033c8:	2081ee16 	blt	r4,r2,4003b84 <___vfprintf_internal_r+0x1154>
 40033cc:	42000204 	addi	r8,r8,8
 40033d0:	9080400c 	andi	r2,r18,256
 40033d4:	1001181e 	bne	r2,zero,4003838 <___vfprintf_internal_r+0xe08>
 40033d8:	d9402e17 	ldw	r5,184(sp)
 40033dc:	d8801f17 	ldw	r2,124(sp)
 40033e0:	44000015 	stw	r16,0(r8)
 40033e4:	1947883a 	add	r3,r3,r5
 40033e8:	10800044 	addi	r2,r2,1
 40033ec:	41400115 	stw	r5,4(r8)
 40033f0:	d8c02015 	stw	r3,128(sp)
 40033f4:	d8801f15 	stw	r2,124(sp)
 40033f8:	010001c4 	movi	r4,7
 40033fc:	2081d316 	blt	r4,r2,4003b4c <___vfprintf_internal_r+0x111c>
 4003400:	42000204 	addi	r8,r8,8
 4003404:	9480010c 	andi	r18,r18,4
 4003408:	90003226 	beq	r18,zero,40034d4 <___vfprintf_internal_r+0xaa4>
 400340c:	d9403117 	ldw	r5,196(sp)
 4003410:	d8802a17 	ldw	r2,168(sp)
 4003414:	28a1c83a 	sub	r16,r5,r2
 4003418:	04002e0e 	bge	zero,r16,40034d4 <___vfprintf_internal_r+0xaa4>
 400341c:	04400404 	movi	r17,16
 4003420:	d8801f17 	ldw	r2,124(sp)
 4003424:	8c04a20e 	bge	r17,r16,40046b0 <___vfprintf_internal_r+0x1c80>
 4003428:	01410074 	movhi	r5,1025
 400342c:	29522084 	addi	r5,r5,18562
 4003430:	d9403515 	stw	r5,212(sp)
 4003434:	048001c4 	movi	r18,7
 4003438:	dcc02c17 	ldw	r19,176(sp)
 400343c:	00000306 	br	400344c <___vfprintf_internal_r+0xa1c>
 4003440:	843ffc04 	addi	r16,r16,-16
 4003444:	42000204 	addi	r8,r8,8
 4003448:	8c00130e 	bge	r17,r16,4003498 <___vfprintf_internal_r+0xa68>
 400344c:	01010074 	movhi	r4,1025
 4003450:	18c00404 	addi	r3,r3,16
 4003454:	10800044 	addi	r2,r2,1
 4003458:	21122084 	addi	r4,r4,18562
 400345c:	41000015 	stw	r4,0(r8)
 4003460:	44400115 	stw	r17,4(r8)
 4003464:	d8c02015 	stw	r3,128(sp)
 4003468:	d8801f15 	stw	r2,124(sp)
 400346c:	90bff40e 	bge	r18,r2,4003440 <__ram_exceptions_end+0xfbfe31f8>
 4003470:	d9801e04 	addi	r6,sp,120
 4003474:	b80b883a 	mov	r5,r23
 4003478:	9809883a 	mov	r4,r19
 400347c:	400b4c40 	call	400b4c4 <__sprint_r>
 4003480:	103e6d1e 	bne	r2,zero,4002e38 <__ram_exceptions_end+0xfbfe2bf0>
 4003484:	843ffc04 	addi	r16,r16,-16
 4003488:	d8c02017 	ldw	r3,128(sp)
 400348c:	d8801f17 	ldw	r2,124(sp)
 4003490:	da000404 	addi	r8,sp,16
 4003494:	8c3fed16 	blt	r17,r16,400344c <__ram_exceptions_end+0xfbfe3204>
 4003498:	d9403517 	ldw	r5,212(sp)
 400349c:	1c07883a 	add	r3,r3,r16
 40034a0:	10800044 	addi	r2,r2,1
 40034a4:	41400015 	stw	r5,0(r8)
 40034a8:	44000115 	stw	r16,4(r8)
 40034ac:	d8c02015 	stw	r3,128(sp)
 40034b0:	d8801f15 	stw	r2,124(sp)
 40034b4:	010001c4 	movi	r4,7
 40034b8:	2080060e 	bge	r4,r2,40034d4 <___vfprintf_internal_r+0xaa4>
 40034bc:	d9002c17 	ldw	r4,176(sp)
 40034c0:	d9801e04 	addi	r6,sp,120
 40034c4:	b80b883a 	mov	r5,r23
 40034c8:	400b4c40 	call	400b4c4 <__sprint_r>
 40034cc:	103e5a1e 	bne	r2,zero,4002e38 <__ram_exceptions_end+0xfbfe2bf0>
 40034d0:	d8c02017 	ldw	r3,128(sp)
 40034d4:	d8803117 	ldw	r2,196(sp)
 40034d8:	d9002a17 	ldw	r4,168(sp)
 40034dc:	1100010e 	bge	r2,r4,40034e4 <___vfprintf_internal_r+0xab4>
 40034e0:	2005883a 	mov	r2,r4
 40034e4:	d9402f17 	ldw	r5,188(sp)
 40034e8:	288b883a 	add	r5,r5,r2
 40034ec:	d9402f15 	stw	r5,188(sp)
 40034f0:	18019e1e 	bne	r3,zero,4003b6c <___vfprintf_internal_r+0x113c>
 40034f4:	a8800007 	ldb	r2,0(r21)
 40034f8:	d8001f15 	stw	zero,124(sp)
 40034fc:	da000404 	addi	r8,sp,16
 4003500:	103d851e 	bne	r2,zero,4002b18 <__ram_exceptions_end+0xfbfe28d0>
 4003504:	a821883a 	mov	r16,r21
 4003508:	003d9b06 	br	4002b78 <__ram_exceptions_end+0xfbfe2930>
 400350c:	18c03fcc 	andi	r3,r3,255
 4003510:	1805c11e 	bne	r3,zero,4004c18 <___vfprintf_internal_r+0x21e8>
 4003514:	94800414 	ori	r18,r18,16
 4003518:	9080080c 	andi	r2,r18,32
 400351c:	10020c26 	beq	r2,zero,4003d50 <___vfprintf_internal_r+0x1320>
 4003520:	d8802d17 	ldw	r2,180(sp)
 4003524:	d9002917 	ldw	r4,164(sp)
 4003528:	d8002785 	stb	zero,158(sp)
 400352c:	10c00204 	addi	r3,r2,8
 4003530:	14c00017 	ldw	r19,0(r2)
 4003534:	15800117 	ldw	r22,4(r2)
 4003538:	20040f16 	blt	r4,zero,4004578 <___vfprintf_internal_r+0x1b48>
 400353c:	013fdfc4 	movi	r4,-129
 4003540:	9d84b03a 	or	r2,r19,r22
 4003544:	d8c02d15 	stw	r3,180(sp)
 4003548:	9124703a 	and	r18,r18,r4
 400354c:	0039883a 	mov	fp,zero
 4003550:	103e891e 	bne	r2,zero,4002f78 <__ram_exceptions_end+0xfbfe2d30>
 4003554:	d9002917 	ldw	r4,164(sp)
 4003558:	2002c11e 	bne	r4,zero,4004060 <___vfprintf_internal_r+0x1630>
 400355c:	d8002915 	stw	zero,164(sp)
 4003560:	d8002e15 	stw	zero,184(sp)
 4003564:	dc001e04 	addi	r16,sp,120
 4003568:	003ef806 	br	400314c <__ram_exceptions_end+0xfbfe2f04>
 400356c:	18c03fcc 	andi	r3,r3,255
 4003570:	18059d1e 	bne	r3,zero,4004be8 <___vfprintf_internal_r+0x21b8>
 4003574:	01410074 	movhi	r5,1025
 4003578:	29520804 	addi	r5,r5,18464
 400357c:	d9403915 	stw	r5,228(sp)
 4003580:	9080080c 	andi	r2,r18,32
 4003584:	10005226 	beq	r2,zero,40036d0 <___vfprintf_internal_r+0xca0>
 4003588:	d8802d17 	ldw	r2,180(sp)
 400358c:	14c00017 	ldw	r19,0(r2)
 4003590:	15800117 	ldw	r22,4(r2)
 4003594:	10800204 	addi	r2,r2,8
 4003598:	d8802d15 	stw	r2,180(sp)
 400359c:	9080004c 	andi	r2,r18,1
 40035a0:	10019026 	beq	r2,zero,4003be4 <___vfprintf_internal_r+0x11b4>
 40035a4:	9d84b03a 	or	r2,r19,r22
 40035a8:	10036926 	beq	r2,zero,4004350 <___vfprintf_internal_r+0x1920>
 40035ac:	d8c02917 	ldw	r3,164(sp)
 40035b0:	00800c04 	movi	r2,48
 40035b4:	d8802705 	stb	r2,156(sp)
 40035b8:	dc402745 	stb	r17,157(sp)
 40035bc:	d8002785 	stb	zero,158(sp)
 40035c0:	90800094 	ori	r2,r18,2
 40035c4:	18045d16 	blt	r3,zero,400473c <___vfprintf_internal_r+0x1d0c>
 40035c8:	00bfdfc4 	movi	r2,-129
 40035cc:	90a4703a 	and	r18,r18,r2
 40035d0:	94800094 	ori	r18,r18,2
 40035d4:	0039883a 	mov	fp,zero
 40035d8:	d9003917 	ldw	r4,228(sp)
 40035dc:	dc001e04 	addi	r16,sp,120
 40035e0:	988003cc 	andi	r2,r19,15
 40035e4:	b006973a 	slli	r3,r22,28
 40035e8:	2085883a 	add	r2,r4,r2
 40035ec:	9826d13a 	srli	r19,r19,4
 40035f0:	10800003 	ldbu	r2,0(r2)
 40035f4:	b02cd13a 	srli	r22,r22,4
 40035f8:	843fffc4 	addi	r16,r16,-1
 40035fc:	1ce6b03a 	or	r19,r3,r19
 4003600:	80800005 	stb	r2,0(r16)
 4003604:	9d84b03a 	or	r2,r19,r22
 4003608:	103ff51e 	bne	r2,zero,40035e0 <__ram_exceptions_end+0xfbfe3398>
 400360c:	d8c02817 	ldw	r3,160(sp)
 4003610:	1c07c83a 	sub	r3,r3,r16
 4003614:	d8c02e15 	stw	r3,184(sp)
 4003618:	003ecc06 	br	400314c <__ram_exceptions_end+0xfbfe2f04>
 400361c:	18c03fcc 	andi	r3,r3,255
 4003620:	183e9f26 	beq	r3,zero,40030a0 <__ram_exceptions_end+0xfbfe2e58>
 4003624:	d9c02785 	stb	r7,158(sp)
 4003628:	003e9d06 	br	40030a0 <__ram_exceptions_end+0xfbfe2e58>
 400362c:	00c00044 	movi	r3,1
 4003630:	01c00ac4 	movi	r7,43
 4003634:	ac400007 	ldb	r17,0(r21)
 4003638:	003d5e06 	br	4002bb4 <__ram_exceptions_end+0xfbfe296c>
 400363c:	94800814 	ori	r18,r18,32
 4003640:	ac400007 	ldb	r17,0(r21)
 4003644:	003d5b06 	br	4002bb4 <__ram_exceptions_end+0xfbfe296c>
 4003648:	d8c02d17 	ldw	r3,180(sp)
 400364c:	d8002785 	stb	zero,158(sp)
 4003650:	1c000017 	ldw	r16,0(r3)
 4003654:	1cc00104 	addi	r19,r3,4
 4003658:	80041926 	beq	r16,zero,40046c0 <___vfprintf_internal_r+0x1c90>
 400365c:	d9002917 	ldw	r4,164(sp)
 4003660:	2003d016 	blt	r4,zero,40045a4 <___vfprintf_internal_r+0x1b74>
 4003664:	200d883a 	mov	r6,r4
 4003668:	000b883a 	mov	r5,zero
 400366c:	8009883a 	mov	r4,r16
 4003670:	da003d15 	stw	r8,244(sp)
 4003674:	40082400 	call	4008240 <memchr>
 4003678:	da003d17 	ldw	r8,244(sp)
 400367c:	10045426 	beq	r2,zero,40047d0 <___vfprintf_internal_r+0x1da0>
 4003680:	1405c83a 	sub	r2,r2,r16
 4003684:	d8802e15 	stw	r2,184(sp)
 4003688:	1003cc16 	blt	r2,zero,40045bc <___vfprintf_internal_r+0x1b8c>
 400368c:	df002783 	ldbu	fp,158(sp)
 4003690:	d8802a15 	stw	r2,168(sp)
 4003694:	dcc02d15 	stw	r19,180(sp)
 4003698:	d8002915 	stw	zero,164(sp)
 400369c:	d8003215 	stw	zero,200(sp)
 40036a0:	003eb006 	br	4003164 <__ram_exceptions_end+0xfbfe2f1c>
 40036a4:	18c03fcc 	andi	r3,r3,255
 40036a8:	183f9b26 	beq	r3,zero,4003518 <__ram_exceptions_end+0xfbfe32d0>
 40036ac:	d9c02785 	stb	r7,158(sp)
 40036b0:	003f9906 	br	4003518 <__ram_exceptions_end+0xfbfe32d0>
 40036b4:	18c03fcc 	andi	r3,r3,255
 40036b8:	1805551e 	bne	r3,zero,4004c10 <___vfprintf_internal_r+0x21e0>
 40036bc:	01410074 	movhi	r5,1025
 40036c0:	29520d04 	addi	r5,r5,18484
 40036c4:	d9403915 	stw	r5,228(sp)
 40036c8:	9080080c 	andi	r2,r18,32
 40036cc:	103fae1e 	bne	r2,zero,4003588 <__ram_exceptions_end+0xfbfe3340>
 40036d0:	9080040c 	andi	r2,r18,16
 40036d4:	1002de26 	beq	r2,zero,4004250 <___vfprintf_internal_r+0x1820>
 40036d8:	d8c02d17 	ldw	r3,180(sp)
 40036dc:	002d883a 	mov	r22,zero
 40036e0:	1cc00017 	ldw	r19,0(r3)
 40036e4:	18c00104 	addi	r3,r3,4
 40036e8:	d8c02d15 	stw	r3,180(sp)
 40036ec:	003fab06 	br	400359c <__ram_exceptions_end+0xfbfe3354>
 40036f0:	38803fcc 	andi	r2,r7,255
 40036f4:	1080201c 	xori	r2,r2,128
 40036f8:	10bfe004 	addi	r2,r2,-128
 40036fc:	1002d21e 	bne	r2,zero,4004248 <___vfprintf_internal_r+0x1818>
 4003700:	00c00044 	movi	r3,1
 4003704:	01c00804 	movi	r7,32
 4003708:	ac400007 	ldb	r17,0(r21)
 400370c:	003d2906 	br	4002bb4 <__ram_exceptions_end+0xfbfe296c>
 4003710:	94800054 	ori	r18,r18,1
 4003714:	ac400007 	ldb	r17,0(r21)
 4003718:	003d2606 	br	4002bb4 <__ram_exceptions_end+0xfbfe296c>
 400371c:	18c03fcc 	andi	r3,r3,255
 4003720:	183e0526 	beq	r3,zero,4002f38 <__ram_exceptions_end+0xfbfe2cf0>
 4003724:	d9c02785 	stb	r7,158(sp)
 4003728:	003e0306 	br	4002f38 <__ram_exceptions_end+0xfbfe2cf0>
 400372c:	94801014 	ori	r18,r18,64
 4003730:	ac400007 	ldb	r17,0(r21)
 4003734:	003d1f06 	br	4002bb4 <__ram_exceptions_end+0xfbfe296c>
 4003738:	ac400007 	ldb	r17,0(r21)
 400373c:	8a438726 	beq	r17,r9,400455c <___vfprintf_internal_r+0x1b2c>
 4003740:	94800414 	ori	r18,r18,16
 4003744:	003d1b06 	br	4002bb4 <__ram_exceptions_end+0xfbfe296c>
 4003748:	18c03fcc 	andi	r3,r3,255
 400374c:	1805341e 	bne	r3,zero,4004c20 <___vfprintf_internal_r+0x21f0>
 4003750:	9080080c 	andi	r2,r18,32
 4003754:	1002cd26 	beq	r2,zero,400428c <___vfprintf_internal_r+0x185c>
 4003758:	d9402d17 	ldw	r5,180(sp)
 400375c:	d9002f17 	ldw	r4,188(sp)
 4003760:	28800017 	ldw	r2,0(r5)
 4003764:	2007d7fa 	srai	r3,r4,31
 4003768:	29400104 	addi	r5,r5,4
 400376c:	d9402d15 	stw	r5,180(sp)
 4003770:	11000015 	stw	r4,0(r2)
 4003774:	10c00115 	stw	r3,4(r2)
 4003778:	003ce506 	br	4002b10 <__ram_exceptions_end+0xfbfe28c8>
 400377c:	d8c02d17 	ldw	r3,180(sp)
 4003780:	d9002d17 	ldw	r4,180(sp)
 4003784:	d8002785 	stb	zero,158(sp)
 4003788:	18800017 	ldw	r2,0(r3)
 400378c:	21000104 	addi	r4,r4,4
 4003790:	00c00044 	movi	r3,1
 4003794:	d8c02a15 	stw	r3,168(sp)
 4003798:	d8801405 	stb	r2,80(sp)
 400379c:	d9002d15 	stw	r4,180(sp)
 40037a0:	d8c02e15 	stw	r3,184(sp)
 40037a4:	d8002915 	stw	zero,164(sp)
 40037a8:	d8003215 	stw	zero,200(sp)
 40037ac:	dc001404 	addi	r16,sp,80
 40037b0:	0039883a 	mov	fp,zero
 40037b4:	003e7206 	br	4003180 <__ram_exceptions_end+0xfbfe2f38>
 40037b8:	01010074 	movhi	r4,1025
 40037bc:	21120d04 	addi	r4,r4,18484
 40037c0:	0039883a 	mov	fp,zero
 40037c4:	d9003915 	stw	r4,228(sp)
 40037c8:	04401e04 	movi	r17,120
 40037cc:	003f8206 	br	40035d8 <__ram_exceptions_end+0xfbfe3390>
 40037d0:	18c03fcc 	andi	r3,r3,255
 40037d4:	1805061e 	bne	r3,zero,4004bf0 <___vfprintf_internal_r+0x21c0>
 40037d8:	883d9126 	beq	r17,zero,4002e20 <__ram_exceptions_end+0xfbfe2bd8>
 40037dc:	00c00044 	movi	r3,1
 40037e0:	d8c02a15 	stw	r3,168(sp)
 40037e4:	dc401405 	stb	r17,80(sp)
 40037e8:	d8002785 	stb	zero,158(sp)
 40037ec:	003fec06 	br	40037a0 <__ram_exceptions_end+0xfbfe3558>
 40037f0:	01410074 	movhi	r5,1025
 40037f4:	29520d04 	addi	r5,r5,18484
 40037f8:	d9403915 	stw	r5,228(sp)
 40037fc:	d8c02d15 	stw	r3,180(sp)
 4003800:	1025883a 	mov	r18,r2
 4003804:	04401e04 	movi	r17,120
 4003808:	9d84b03a 	or	r2,r19,r22
 400380c:	1000fc1e 	bne	r2,zero,4003c00 <___vfprintf_internal_r+0x11d0>
 4003810:	0039883a 	mov	fp,zero
 4003814:	00800084 	movi	r2,2
 4003818:	10803fcc 	andi	r2,r2,255
 400381c:	00c00044 	movi	r3,1
 4003820:	10c20f26 	beq	r2,r3,4004060 <___vfprintf_internal_r+0x1630>
 4003824:	00c00084 	movi	r3,2
 4003828:	10fd6326 	beq	r2,r3,4002db8 <__ram_exceptions_end+0xfbfe2b70>
 400382c:	003e2d06 	br	40030e4 <__ram_exceptions_end+0xfbfe2e9c>
 4003830:	d8c02017 	ldw	r3,128(sp)
 4003834:	003e9306 	br	4003284 <__ram_exceptions_end+0xfbfe303c>
 4003838:	00801944 	movi	r2,101
 400383c:	14407e0e 	bge	r2,r17,4003a38 <___vfprintf_internal_r+0x1008>
 4003840:	d9003617 	ldw	r4,216(sp)
 4003844:	d9403817 	ldw	r5,224(sp)
 4003848:	000d883a 	mov	r6,zero
 400384c:	000f883a 	mov	r7,zero
 4003850:	d8c03c15 	stw	r3,240(sp)
 4003854:	da003d15 	stw	r8,244(sp)
 4003858:	400f13c0 	call	400f13c <__eqdf2>
 400385c:	d8c03c17 	ldw	r3,240(sp)
 4003860:	da003d17 	ldw	r8,244(sp)
 4003864:	1000f71e 	bne	r2,zero,4003c44 <___vfprintf_internal_r+0x1214>
 4003868:	d8801f17 	ldw	r2,124(sp)
 400386c:	01010074 	movhi	r4,1025
 4003870:	21121404 	addi	r4,r4,18512
 4003874:	18c00044 	addi	r3,r3,1
 4003878:	10800044 	addi	r2,r2,1
 400387c:	41000015 	stw	r4,0(r8)
 4003880:	01000044 	movi	r4,1
 4003884:	41000115 	stw	r4,4(r8)
 4003888:	d8c02015 	stw	r3,128(sp)
 400388c:	d8801f15 	stw	r2,124(sp)
 4003890:	010001c4 	movi	r4,7
 4003894:	2082b816 	blt	r4,r2,4004378 <___vfprintf_internal_r+0x1948>
 4003898:	42000204 	addi	r8,r8,8
 400389c:	d8802617 	ldw	r2,152(sp)
 40038a0:	d9403317 	ldw	r5,204(sp)
 40038a4:	11400216 	blt	r2,r5,40038b0 <___vfprintf_internal_r+0xe80>
 40038a8:	9080004c 	andi	r2,r18,1
 40038ac:	103ed526 	beq	r2,zero,4003404 <__ram_exceptions_end+0xfbfe31bc>
 40038b0:	d8803717 	ldw	r2,220(sp)
 40038b4:	d9003417 	ldw	r4,208(sp)
 40038b8:	d9403717 	ldw	r5,220(sp)
 40038bc:	1887883a 	add	r3,r3,r2
 40038c0:	d8801f17 	ldw	r2,124(sp)
 40038c4:	41000015 	stw	r4,0(r8)
 40038c8:	41400115 	stw	r5,4(r8)
 40038cc:	10800044 	addi	r2,r2,1
 40038d0:	d8c02015 	stw	r3,128(sp)
 40038d4:	d8801f15 	stw	r2,124(sp)
 40038d8:	010001c4 	movi	r4,7
 40038dc:	20832916 	blt	r4,r2,4004584 <___vfprintf_internal_r+0x1b54>
 40038e0:	42000204 	addi	r8,r8,8
 40038e4:	d8803317 	ldw	r2,204(sp)
 40038e8:	143fffc4 	addi	r16,r2,-1
 40038ec:	043ec50e 	bge	zero,r16,4003404 <__ram_exceptions_end+0xfbfe31bc>
 40038f0:	04400404 	movi	r17,16
 40038f4:	d8801f17 	ldw	r2,124(sp)
 40038f8:	8c00880e 	bge	r17,r16,4003b1c <___vfprintf_internal_r+0x10ec>
 40038fc:	01410074 	movhi	r5,1025
 4003900:	29521c84 	addi	r5,r5,18546
 4003904:	d9402b15 	stw	r5,172(sp)
 4003908:	058001c4 	movi	r22,7
 400390c:	dcc02c17 	ldw	r19,176(sp)
 4003910:	00000306 	br	4003920 <___vfprintf_internal_r+0xef0>
 4003914:	42000204 	addi	r8,r8,8
 4003918:	843ffc04 	addi	r16,r16,-16
 400391c:	8c00820e 	bge	r17,r16,4003b28 <___vfprintf_internal_r+0x10f8>
 4003920:	18c00404 	addi	r3,r3,16
 4003924:	10800044 	addi	r2,r2,1
 4003928:	45000015 	stw	r20,0(r8)
 400392c:	44400115 	stw	r17,4(r8)
 4003930:	d8c02015 	stw	r3,128(sp)
 4003934:	d8801f15 	stw	r2,124(sp)
 4003938:	b0bff60e 	bge	r22,r2,4003914 <__ram_exceptions_end+0xfbfe36cc>
 400393c:	d9801e04 	addi	r6,sp,120
 4003940:	b80b883a 	mov	r5,r23
 4003944:	9809883a 	mov	r4,r19
 4003948:	400b4c40 	call	400b4c4 <__sprint_r>
 400394c:	103d3a1e 	bne	r2,zero,4002e38 <__ram_exceptions_end+0xfbfe2bf0>
 4003950:	d8c02017 	ldw	r3,128(sp)
 4003954:	d8801f17 	ldw	r2,124(sp)
 4003958:	da000404 	addi	r8,sp,16
 400395c:	003fee06 	br	4003918 <__ram_exceptions_end+0xfbfe36d0>
 4003960:	d9403117 	ldw	r5,196(sp)
 4003964:	d8802a17 	ldw	r2,168(sp)
 4003968:	28adc83a 	sub	r22,r5,r2
 400396c:	05be630e 	bge	zero,r22,40032fc <__ram_exceptions_end+0xfbfe30b4>
 4003970:	07000404 	movi	fp,16
 4003974:	d8801f17 	ldw	r2,124(sp)
 4003978:	e5838f0e 	bge	fp,r22,40047b8 <___vfprintf_internal_r+0x1d88>
 400397c:	01410074 	movhi	r5,1025
 4003980:	29521c84 	addi	r5,r5,18546
 4003984:	dc403015 	stw	r17,192(sp)
 4003988:	d9402b15 	stw	r5,172(sp)
 400398c:	b023883a 	mov	r17,r22
 4003990:	04c001c4 	movi	r19,7
 4003994:	a82d883a 	mov	r22,r21
 4003998:	902b883a 	mov	r21,r18
 400399c:	8025883a 	mov	r18,r16
 40039a0:	dc002c17 	ldw	r16,176(sp)
 40039a4:	00000306 	br	40039b4 <___vfprintf_internal_r+0xf84>
 40039a8:	8c7ffc04 	addi	r17,r17,-16
 40039ac:	42000204 	addi	r8,r8,8
 40039b0:	e440110e 	bge	fp,r17,40039f8 <___vfprintf_internal_r+0xfc8>
 40039b4:	18c00404 	addi	r3,r3,16
 40039b8:	10800044 	addi	r2,r2,1
 40039bc:	45000015 	stw	r20,0(r8)
 40039c0:	47000115 	stw	fp,4(r8)
 40039c4:	d8c02015 	stw	r3,128(sp)
 40039c8:	d8801f15 	stw	r2,124(sp)
 40039cc:	98bff60e 	bge	r19,r2,40039a8 <__ram_exceptions_end+0xfbfe3760>
 40039d0:	d9801e04 	addi	r6,sp,120
 40039d4:	b80b883a 	mov	r5,r23
 40039d8:	8009883a 	mov	r4,r16
 40039dc:	400b4c40 	call	400b4c4 <__sprint_r>
 40039e0:	103d151e 	bne	r2,zero,4002e38 <__ram_exceptions_end+0xfbfe2bf0>
 40039e4:	8c7ffc04 	addi	r17,r17,-16
 40039e8:	d8c02017 	ldw	r3,128(sp)
 40039ec:	d8801f17 	ldw	r2,124(sp)
 40039f0:	da000404 	addi	r8,sp,16
 40039f4:	e47fef16 	blt	fp,r17,40039b4 <__ram_exceptions_end+0xfbfe376c>
 40039f8:	9021883a 	mov	r16,r18
 40039fc:	a825883a 	mov	r18,r21
 4003a00:	b02b883a 	mov	r21,r22
 4003a04:	882d883a 	mov	r22,r17
 4003a08:	dc403017 	ldw	r17,192(sp)
 4003a0c:	d9002b17 	ldw	r4,172(sp)
 4003a10:	1d87883a 	add	r3,r3,r22
 4003a14:	10800044 	addi	r2,r2,1
 4003a18:	41000015 	stw	r4,0(r8)
 4003a1c:	45800115 	stw	r22,4(r8)
 4003a20:	d8c02015 	stw	r3,128(sp)
 4003a24:	d8801f15 	stw	r2,124(sp)
 4003a28:	010001c4 	movi	r4,7
 4003a2c:	20818e16 	blt	r4,r2,4004068 <___vfprintf_internal_r+0x1638>
 4003a30:	42000204 	addi	r8,r8,8
 4003a34:	003e3106 	br	40032fc <__ram_exceptions_end+0xfbfe30b4>
 4003a38:	d9403317 	ldw	r5,204(sp)
 4003a3c:	00800044 	movi	r2,1
 4003a40:	18c00044 	addi	r3,r3,1
 4003a44:	1141530e 	bge	r2,r5,4003f94 <___vfprintf_internal_r+0x1564>
 4003a48:	dc401f17 	ldw	r17,124(sp)
 4003a4c:	00800044 	movi	r2,1
 4003a50:	40800115 	stw	r2,4(r8)
 4003a54:	8c400044 	addi	r17,r17,1
 4003a58:	44000015 	stw	r16,0(r8)
 4003a5c:	d8c02015 	stw	r3,128(sp)
 4003a60:	dc401f15 	stw	r17,124(sp)
 4003a64:	008001c4 	movi	r2,7
 4003a68:	14416b16 	blt	r2,r17,4004018 <___vfprintf_internal_r+0x15e8>
 4003a6c:	42000204 	addi	r8,r8,8
 4003a70:	d8803717 	ldw	r2,220(sp)
 4003a74:	d9003417 	ldw	r4,208(sp)
 4003a78:	8c400044 	addi	r17,r17,1
 4003a7c:	10c7883a 	add	r3,r2,r3
 4003a80:	40800115 	stw	r2,4(r8)
 4003a84:	41000015 	stw	r4,0(r8)
 4003a88:	d8c02015 	stw	r3,128(sp)
 4003a8c:	dc401f15 	stw	r17,124(sp)
 4003a90:	008001c4 	movi	r2,7
 4003a94:	14416916 	blt	r2,r17,400403c <___vfprintf_internal_r+0x160c>
 4003a98:	45800204 	addi	r22,r8,8
 4003a9c:	d9003617 	ldw	r4,216(sp)
 4003aa0:	d9403817 	ldw	r5,224(sp)
 4003aa4:	000d883a 	mov	r6,zero
 4003aa8:	000f883a 	mov	r7,zero
 4003aac:	d8c03c15 	stw	r3,240(sp)
 4003ab0:	400f13c0 	call	400f13c <__eqdf2>
 4003ab4:	d8c03c17 	ldw	r3,240(sp)
 4003ab8:	1000bc26 	beq	r2,zero,4003dac <___vfprintf_internal_r+0x137c>
 4003abc:	d9403317 	ldw	r5,204(sp)
 4003ac0:	84000044 	addi	r16,r16,1
 4003ac4:	8c400044 	addi	r17,r17,1
 4003ac8:	28bfffc4 	addi	r2,r5,-1
 4003acc:	1887883a 	add	r3,r3,r2
 4003ad0:	b0800115 	stw	r2,4(r22)
 4003ad4:	b4000015 	stw	r16,0(r22)
 4003ad8:	d8c02015 	stw	r3,128(sp)
 4003adc:	dc401f15 	stw	r17,124(sp)
 4003ae0:	008001c4 	movi	r2,7
 4003ae4:	14414316 	blt	r2,r17,4003ff4 <___vfprintf_internal_r+0x15c4>
 4003ae8:	b5800204 	addi	r22,r22,8
 4003aec:	d9003a17 	ldw	r4,232(sp)
 4003af0:	df0022c4 	addi	fp,sp,139
 4003af4:	8c400044 	addi	r17,r17,1
 4003af8:	20c7883a 	add	r3,r4,r3
 4003afc:	b7000015 	stw	fp,0(r22)
 4003b00:	b1000115 	stw	r4,4(r22)
 4003b04:	d8c02015 	stw	r3,128(sp)
 4003b08:	dc401f15 	stw	r17,124(sp)
 4003b0c:	008001c4 	movi	r2,7
 4003b10:	14400e16 	blt	r2,r17,4003b4c <___vfprintf_internal_r+0x111c>
 4003b14:	b2000204 	addi	r8,r22,8
 4003b18:	003e3a06 	br	4003404 <__ram_exceptions_end+0xfbfe31bc>
 4003b1c:	01010074 	movhi	r4,1025
 4003b20:	21121c84 	addi	r4,r4,18546
 4003b24:	d9002b15 	stw	r4,172(sp)
 4003b28:	d9002b17 	ldw	r4,172(sp)
 4003b2c:	1c07883a 	add	r3,r3,r16
 4003b30:	44000115 	stw	r16,4(r8)
 4003b34:	41000015 	stw	r4,0(r8)
 4003b38:	10800044 	addi	r2,r2,1
 4003b3c:	d8c02015 	stw	r3,128(sp)
 4003b40:	d8801f15 	stw	r2,124(sp)
 4003b44:	010001c4 	movi	r4,7
 4003b48:	20be2d0e 	bge	r4,r2,4003400 <__ram_exceptions_end+0xfbfe31b8>
 4003b4c:	d9002c17 	ldw	r4,176(sp)
 4003b50:	d9801e04 	addi	r6,sp,120
 4003b54:	b80b883a 	mov	r5,r23
 4003b58:	400b4c40 	call	400b4c4 <__sprint_r>
 4003b5c:	103cb61e 	bne	r2,zero,4002e38 <__ram_exceptions_end+0xfbfe2bf0>
 4003b60:	d8c02017 	ldw	r3,128(sp)
 4003b64:	da000404 	addi	r8,sp,16
 4003b68:	003e2606 	br	4003404 <__ram_exceptions_end+0xfbfe31bc>
 4003b6c:	d9002c17 	ldw	r4,176(sp)
 4003b70:	d9801e04 	addi	r6,sp,120
 4003b74:	b80b883a 	mov	r5,r23
 4003b78:	400b4c40 	call	400b4c4 <__sprint_r>
 4003b7c:	103e5d26 	beq	r2,zero,40034f4 <__ram_exceptions_end+0xfbfe32ac>
 4003b80:	003cad06 	br	4002e38 <__ram_exceptions_end+0xfbfe2bf0>
 4003b84:	d9002c17 	ldw	r4,176(sp)
 4003b88:	d9801e04 	addi	r6,sp,120
 4003b8c:	b80b883a 	mov	r5,r23
 4003b90:	400b4c40 	call	400b4c4 <__sprint_r>
 4003b94:	103ca81e 	bne	r2,zero,4002e38 <__ram_exceptions_end+0xfbfe2bf0>
 4003b98:	d8c02017 	ldw	r3,128(sp)
 4003b9c:	da000404 	addi	r8,sp,16
 4003ba0:	003e0b06 	br	40033d0 <__ram_exceptions_end+0xfbfe3188>
 4003ba4:	d9002c17 	ldw	r4,176(sp)
 4003ba8:	d9801e04 	addi	r6,sp,120
 4003bac:	b80b883a 	mov	r5,r23
 4003bb0:	400b4c40 	call	400b4c4 <__sprint_r>
 4003bb4:	103ca01e 	bne	r2,zero,4002e38 <__ram_exceptions_end+0xfbfe2bf0>
 4003bb8:	d8c02017 	ldw	r3,128(sp)
 4003bbc:	da000404 	addi	r8,sp,16
 4003bc0:	003dbd06 	br	40032b8 <__ram_exceptions_end+0xfbfe3070>
 4003bc4:	d9002c17 	ldw	r4,176(sp)
 4003bc8:	d9801e04 	addi	r6,sp,120
 4003bcc:	b80b883a 	mov	r5,r23
 4003bd0:	400b4c40 	call	400b4c4 <__sprint_r>
 4003bd4:	103c981e 	bne	r2,zero,4002e38 <__ram_exceptions_end+0xfbfe2bf0>
 4003bd8:	d8c02017 	ldw	r3,128(sp)
 4003bdc:	da000404 	addi	r8,sp,16
 4003be0:	003dc306 	br	40032f0 <__ram_exceptions_end+0xfbfe30a8>
 4003be4:	d8802917 	ldw	r2,164(sp)
 4003be8:	d8002785 	stb	zero,158(sp)
 4003bec:	103f0616 	blt	r2,zero,4003808 <__ram_exceptions_end+0xfbfe35c0>
 4003bf0:	00ffdfc4 	movi	r3,-129
 4003bf4:	9d84b03a 	or	r2,r19,r22
 4003bf8:	90e4703a 	and	r18,r18,r3
 4003bfc:	103c6b26 	beq	r2,zero,4002dac <__ram_exceptions_end+0xfbfe2b64>
 4003c00:	0039883a 	mov	fp,zero
 4003c04:	003e7406 	br	40035d8 <__ram_exceptions_end+0xfbfe3390>
 4003c08:	9080040c 	andi	r2,r18,16
 4003c0c:	1001b326 	beq	r2,zero,40042dc <___vfprintf_internal_r+0x18ac>
 4003c10:	d9002d17 	ldw	r4,180(sp)
 4003c14:	d9402917 	ldw	r5,164(sp)
 4003c18:	d8002785 	stb	zero,158(sp)
 4003c1c:	20800104 	addi	r2,r4,4
 4003c20:	24c00017 	ldw	r19,0(r4)
 4003c24:	002d883a 	mov	r22,zero
 4003c28:	2801b516 	blt	r5,zero,4004300 <___vfprintf_internal_r+0x18d0>
 4003c2c:	00ffdfc4 	movi	r3,-129
 4003c30:	d8802d15 	stw	r2,180(sp)
 4003c34:	90e4703a 	and	r18,r18,r3
 4003c38:	983d2726 	beq	r19,zero,40030d8 <__ram_exceptions_end+0xfbfe2e90>
 4003c3c:	0039883a 	mov	fp,zero
 4003c40:	003d2a06 	br	40030ec <__ram_exceptions_end+0xfbfe2ea4>
 4003c44:	dc402617 	ldw	r17,152(sp)
 4003c48:	0441d30e 	bge	zero,r17,4004398 <___vfprintf_internal_r+0x1968>
 4003c4c:	dc403217 	ldw	r17,200(sp)
 4003c50:	d8803317 	ldw	r2,204(sp)
 4003c54:	1440010e 	bge	r2,r17,4003c5c <___vfprintf_internal_r+0x122c>
 4003c58:	1023883a 	mov	r17,r2
 4003c5c:	04400a0e 	bge	zero,r17,4003c88 <___vfprintf_internal_r+0x1258>
 4003c60:	d8801f17 	ldw	r2,124(sp)
 4003c64:	1c47883a 	add	r3,r3,r17
 4003c68:	44000015 	stw	r16,0(r8)
 4003c6c:	10800044 	addi	r2,r2,1
 4003c70:	44400115 	stw	r17,4(r8)
 4003c74:	d8c02015 	stw	r3,128(sp)
 4003c78:	d8801f15 	stw	r2,124(sp)
 4003c7c:	010001c4 	movi	r4,7
 4003c80:	20826516 	blt	r4,r2,4004618 <___vfprintf_internal_r+0x1be8>
 4003c84:	42000204 	addi	r8,r8,8
 4003c88:	88026116 	blt	r17,zero,4004610 <___vfprintf_internal_r+0x1be0>
 4003c8c:	d9003217 	ldw	r4,200(sp)
 4003c90:	2463c83a 	sub	r17,r4,r17
 4003c94:	04407b0e 	bge	zero,r17,4003e84 <___vfprintf_internal_r+0x1454>
 4003c98:	05800404 	movi	r22,16
 4003c9c:	d8801f17 	ldw	r2,124(sp)
 4003ca0:	b4419d0e 	bge	r22,r17,4004318 <___vfprintf_internal_r+0x18e8>
 4003ca4:	01010074 	movhi	r4,1025
 4003ca8:	21121c84 	addi	r4,r4,18546
 4003cac:	d9002b15 	stw	r4,172(sp)
 4003cb0:	070001c4 	movi	fp,7
 4003cb4:	dcc02c17 	ldw	r19,176(sp)
 4003cb8:	00000306 	br	4003cc8 <___vfprintf_internal_r+0x1298>
 4003cbc:	42000204 	addi	r8,r8,8
 4003cc0:	8c7ffc04 	addi	r17,r17,-16
 4003cc4:	b441970e 	bge	r22,r17,4004324 <___vfprintf_internal_r+0x18f4>
 4003cc8:	18c00404 	addi	r3,r3,16
 4003ccc:	10800044 	addi	r2,r2,1
 4003cd0:	45000015 	stw	r20,0(r8)
 4003cd4:	45800115 	stw	r22,4(r8)
 4003cd8:	d8c02015 	stw	r3,128(sp)
 4003cdc:	d8801f15 	stw	r2,124(sp)
 4003ce0:	e0bff60e 	bge	fp,r2,4003cbc <__ram_exceptions_end+0xfbfe3a74>
 4003ce4:	d9801e04 	addi	r6,sp,120
 4003ce8:	b80b883a 	mov	r5,r23
 4003cec:	9809883a 	mov	r4,r19
 4003cf0:	400b4c40 	call	400b4c4 <__sprint_r>
 4003cf4:	103c501e 	bne	r2,zero,4002e38 <__ram_exceptions_end+0xfbfe2bf0>
 4003cf8:	d8c02017 	ldw	r3,128(sp)
 4003cfc:	d8801f17 	ldw	r2,124(sp)
 4003d00:	da000404 	addi	r8,sp,16
 4003d04:	003fee06 	br	4003cc0 <__ram_exceptions_end+0xfbfe3a78>
 4003d08:	d9002c17 	ldw	r4,176(sp)
 4003d0c:	d9801e04 	addi	r6,sp,120
 4003d10:	b80b883a 	mov	r5,r23
 4003d14:	400b4c40 	call	400b4c4 <__sprint_r>
 4003d18:	103c471e 	bne	r2,zero,4002e38 <__ram_exceptions_end+0xfbfe2bf0>
 4003d1c:	d8c02017 	ldw	r3,128(sp)
 4003d20:	df002787 	ldb	fp,158(sp)
 4003d24:	da000404 	addi	r8,sp,16
 4003d28:	003d5606 	br	4003284 <__ram_exceptions_end+0xfbfe303c>
 4003d2c:	9080040c 	andi	r2,r18,16
 4003d30:	10016126 	beq	r2,zero,40042b8 <___vfprintf_internal_r+0x1888>
 4003d34:	d8802d17 	ldw	r2,180(sp)
 4003d38:	14c00017 	ldw	r19,0(r2)
 4003d3c:	10800104 	addi	r2,r2,4
 4003d40:	d8802d15 	stw	r2,180(sp)
 4003d44:	982dd7fa 	srai	r22,r19,31
 4003d48:	b005883a 	mov	r2,r22
 4003d4c:	003c8206 	br	4002f58 <__ram_exceptions_end+0xfbfe2d10>
 4003d50:	9080040c 	andi	r2,r18,16
 4003d54:	10003526 	beq	r2,zero,4003e2c <___vfprintf_internal_r+0x13fc>
 4003d58:	d9402d17 	ldw	r5,180(sp)
 4003d5c:	d8c02917 	ldw	r3,164(sp)
 4003d60:	d8002785 	stb	zero,158(sp)
 4003d64:	28800104 	addi	r2,r5,4
 4003d68:	2cc00017 	ldw	r19,0(r5)
 4003d6c:	002d883a 	mov	r22,zero
 4003d70:	18003716 	blt	r3,zero,4003e50 <___vfprintf_internal_r+0x1420>
 4003d74:	00ffdfc4 	movi	r3,-129
 4003d78:	d8802d15 	stw	r2,180(sp)
 4003d7c:	90e4703a 	and	r18,r18,r3
 4003d80:	0039883a 	mov	fp,zero
 4003d84:	983df326 	beq	r19,zero,4003554 <__ram_exceptions_end+0xfbfe330c>
 4003d88:	00800244 	movi	r2,9
 4003d8c:	14fc7b36 	bltu	r2,r19,4002f7c <__ram_exceptions_end+0xfbfe2d34>
 4003d90:	d8c02817 	ldw	r3,160(sp)
 4003d94:	dc001dc4 	addi	r16,sp,119
 4003d98:	9cc00c04 	addi	r19,r19,48
 4003d9c:	1c07c83a 	sub	r3,r3,r16
 4003da0:	dcc01dc5 	stb	r19,119(sp)
 4003da4:	d8c02e15 	stw	r3,184(sp)
 4003da8:	003ce806 	br	400314c <__ram_exceptions_end+0xfbfe2f04>
 4003dac:	d8803317 	ldw	r2,204(sp)
 4003db0:	143fffc4 	addi	r16,r2,-1
 4003db4:	043f4d0e 	bge	zero,r16,4003aec <__ram_exceptions_end+0xfbfe38a4>
 4003db8:	07000404 	movi	fp,16
 4003dbc:	e400810e 	bge	fp,r16,4003fc4 <___vfprintf_internal_r+0x1594>
 4003dc0:	01410074 	movhi	r5,1025
 4003dc4:	29521c84 	addi	r5,r5,18546
 4003dc8:	d9402b15 	stw	r5,172(sp)
 4003dcc:	01c001c4 	movi	r7,7
 4003dd0:	dcc02c17 	ldw	r19,176(sp)
 4003dd4:	00000306 	br	4003de4 <___vfprintf_internal_r+0x13b4>
 4003dd8:	b5800204 	addi	r22,r22,8
 4003ddc:	843ffc04 	addi	r16,r16,-16
 4003de0:	e4007b0e 	bge	fp,r16,4003fd0 <___vfprintf_internal_r+0x15a0>
 4003de4:	18c00404 	addi	r3,r3,16
 4003de8:	8c400044 	addi	r17,r17,1
 4003dec:	b5000015 	stw	r20,0(r22)
 4003df0:	b7000115 	stw	fp,4(r22)
 4003df4:	d8c02015 	stw	r3,128(sp)
 4003df8:	dc401f15 	stw	r17,124(sp)
 4003dfc:	3c7ff60e 	bge	r7,r17,4003dd8 <__ram_exceptions_end+0xfbfe3b90>
 4003e00:	d9801e04 	addi	r6,sp,120
 4003e04:	b80b883a 	mov	r5,r23
 4003e08:	9809883a 	mov	r4,r19
 4003e0c:	d9c03c15 	stw	r7,240(sp)
 4003e10:	400b4c40 	call	400b4c4 <__sprint_r>
 4003e14:	d9c03c17 	ldw	r7,240(sp)
 4003e18:	103c071e 	bne	r2,zero,4002e38 <__ram_exceptions_end+0xfbfe2bf0>
 4003e1c:	d8c02017 	ldw	r3,128(sp)
 4003e20:	dc401f17 	ldw	r17,124(sp)
 4003e24:	dd800404 	addi	r22,sp,16
 4003e28:	003fec06 	br	4003ddc <__ram_exceptions_end+0xfbfe3b94>
 4003e2c:	9080100c 	andi	r2,r18,64
 4003e30:	d8002785 	stb	zero,158(sp)
 4003e34:	10010e26 	beq	r2,zero,4004270 <___vfprintf_internal_r+0x1840>
 4003e38:	d9002d17 	ldw	r4,180(sp)
 4003e3c:	d9402917 	ldw	r5,164(sp)
 4003e40:	002d883a 	mov	r22,zero
 4003e44:	20800104 	addi	r2,r4,4
 4003e48:	24c0000b 	ldhu	r19,0(r4)
 4003e4c:	283fc90e 	bge	r5,zero,4003d74 <__ram_exceptions_end+0xfbfe3b2c>
 4003e50:	d8802d15 	stw	r2,180(sp)
 4003e54:	0039883a 	mov	fp,zero
 4003e58:	9d84b03a 	or	r2,r19,r22
 4003e5c:	103c461e 	bne	r2,zero,4002f78 <__ram_exceptions_end+0xfbfe2d30>
 4003e60:	00800044 	movi	r2,1
 4003e64:	003e6c06 	br	4003818 <__ram_exceptions_end+0xfbfe35d0>
 4003e68:	d9002c17 	ldw	r4,176(sp)
 4003e6c:	d9801e04 	addi	r6,sp,120
 4003e70:	b80b883a 	mov	r5,r23
 4003e74:	400b4c40 	call	400b4c4 <__sprint_r>
 4003e78:	103bef1e 	bne	r2,zero,4002e38 <__ram_exceptions_end+0xfbfe2bf0>
 4003e7c:	d8c02017 	ldw	r3,128(sp)
 4003e80:	da000404 	addi	r8,sp,16
 4003e84:	d9003217 	ldw	r4,200(sp)
 4003e88:	d8802617 	ldw	r2,152(sp)
 4003e8c:	d9403317 	ldw	r5,204(sp)
 4003e90:	8123883a 	add	r17,r16,r4
 4003e94:	11400216 	blt	r2,r5,4003ea0 <___vfprintf_internal_r+0x1470>
 4003e98:	9100004c 	andi	r4,r18,1
 4003e9c:	20000d26 	beq	r4,zero,4003ed4 <___vfprintf_internal_r+0x14a4>
 4003ea0:	d9003717 	ldw	r4,220(sp)
 4003ea4:	d9403417 	ldw	r5,208(sp)
 4003ea8:	1907883a 	add	r3,r3,r4
 4003eac:	d9001f17 	ldw	r4,124(sp)
 4003eb0:	41400015 	stw	r5,0(r8)
 4003eb4:	d9403717 	ldw	r5,220(sp)
 4003eb8:	21000044 	addi	r4,r4,1
 4003ebc:	d8c02015 	stw	r3,128(sp)
 4003ec0:	41400115 	stw	r5,4(r8)
 4003ec4:	d9001f15 	stw	r4,124(sp)
 4003ec8:	014001c4 	movi	r5,7
 4003ecc:	2901e816 	blt	r5,r4,4004670 <___vfprintf_internal_r+0x1c40>
 4003ed0:	42000204 	addi	r8,r8,8
 4003ed4:	d9003317 	ldw	r4,204(sp)
 4003ed8:	8121883a 	add	r16,r16,r4
 4003edc:	2085c83a 	sub	r2,r4,r2
 4003ee0:	8461c83a 	sub	r16,r16,r17
 4003ee4:	1400010e 	bge	r2,r16,4003eec <___vfprintf_internal_r+0x14bc>
 4003ee8:	1021883a 	mov	r16,r2
 4003eec:	04000a0e 	bge	zero,r16,4003f18 <___vfprintf_internal_r+0x14e8>
 4003ef0:	d9001f17 	ldw	r4,124(sp)
 4003ef4:	1c07883a 	add	r3,r3,r16
 4003ef8:	44400015 	stw	r17,0(r8)
 4003efc:	21000044 	addi	r4,r4,1
 4003f00:	44000115 	stw	r16,4(r8)
 4003f04:	d8c02015 	stw	r3,128(sp)
 4003f08:	d9001f15 	stw	r4,124(sp)
 4003f0c:	014001c4 	movi	r5,7
 4003f10:	2901fb16 	blt	r5,r4,4004700 <___vfprintf_internal_r+0x1cd0>
 4003f14:	42000204 	addi	r8,r8,8
 4003f18:	8001f716 	blt	r16,zero,40046f8 <___vfprintf_internal_r+0x1cc8>
 4003f1c:	1421c83a 	sub	r16,r2,r16
 4003f20:	043d380e 	bge	zero,r16,4003404 <__ram_exceptions_end+0xfbfe31bc>
 4003f24:	04400404 	movi	r17,16
 4003f28:	d8801f17 	ldw	r2,124(sp)
 4003f2c:	8c3efb0e 	bge	r17,r16,4003b1c <__ram_exceptions_end+0xfbfe38d4>
 4003f30:	01410074 	movhi	r5,1025
 4003f34:	29521c84 	addi	r5,r5,18546
 4003f38:	d9402b15 	stw	r5,172(sp)
 4003f3c:	058001c4 	movi	r22,7
 4003f40:	dcc02c17 	ldw	r19,176(sp)
 4003f44:	00000306 	br	4003f54 <___vfprintf_internal_r+0x1524>
 4003f48:	42000204 	addi	r8,r8,8
 4003f4c:	843ffc04 	addi	r16,r16,-16
 4003f50:	8c3ef50e 	bge	r17,r16,4003b28 <__ram_exceptions_end+0xfbfe38e0>
 4003f54:	18c00404 	addi	r3,r3,16
 4003f58:	10800044 	addi	r2,r2,1
 4003f5c:	45000015 	stw	r20,0(r8)
 4003f60:	44400115 	stw	r17,4(r8)
 4003f64:	d8c02015 	stw	r3,128(sp)
 4003f68:	d8801f15 	stw	r2,124(sp)
 4003f6c:	b0bff60e 	bge	r22,r2,4003f48 <__ram_exceptions_end+0xfbfe3d00>
 4003f70:	d9801e04 	addi	r6,sp,120
 4003f74:	b80b883a 	mov	r5,r23
 4003f78:	9809883a 	mov	r4,r19
 4003f7c:	400b4c40 	call	400b4c4 <__sprint_r>
 4003f80:	103bad1e 	bne	r2,zero,4002e38 <__ram_exceptions_end+0xfbfe2bf0>
 4003f84:	d8c02017 	ldw	r3,128(sp)
 4003f88:	d8801f17 	ldw	r2,124(sp)
 4003f8c:	da000404 	addi	r8,sp,16
 4003f90:	003fee06 	br	4003f4c <__ram_exceptions_end+0xfbfe3d04>
 4003f94:	9088703a 	and	r4,r18,r2
 4003f98:	203eab1e 	bne	r4,zero,4003a48 <__ram_exceptions_end+0xfbfe3800>
 4003f9c:	dc401f17 	ldw	r17,124(sp)
 4003fa0:	40800115 	stw	r2,4(r8)
 4003fa4:	44000015 	stw	r16,0(r8)
 4003fa8:	8c400044 	addi	r17,r17,1
 4003fac:	d8c02015 	stw	r3,128(sp)
 4003fb0:	dc401f15 	stw	r17,124(sp)
 4003fb4:	008001c4 	movi	r2,7
 4003fb8:	14400e16 	blt	r2,r17,4003ff4 <___vfprintf_internal_r+0x15c4>
 4003fbc:	45800204 	addi	r22,r8,8
 4003fc0:	003eca06 	br	4003aec <__ram_exceptions_end+0xfbfe38a4>
 4003fc4:	01010074 	movhi	r4,1025
 4003fc8:	21121c84 	addi	r4,r4,18546
 4003fcc:	d9002b15 	stw	r4,172(sp)
 4003fd0:	d8802b17 	ldw	r2,172(sp)
 4003fd4:	1c07883a 	add	r3,r3,r16
 4003fd8:	8c400044 	addi	r17,r17,1
 4003fdc:	b0800015 	stw	r2,0(r22)
 4003fe0:	b4000115 	stw	r16,4(r22)
 4003fe4:	d8c02015 	stw	r3,128(sp)
 4003fe8:	dc401f15 	stw	r17,124(sp)
 4003fec:	008001c4 	movi	r2,7
 4003ff0:	147ebd0e 	bge	r2,r17,4003ae8 <__ram_exceptions_end+0xfbfe38a0>
 4003ff4:	d9002c17 	ldw	r4,176(sp)
 4003ff8:	d9801e04 	addi	r6,sp,120
 4003ffc:	b80b883a 	mov	r5,r23
 4004000:	400b4c40 	call	400b4c4 <__sprint_r>
 4004004:	103b8c1e 	bne	r2,zero,4002e38 <__ram_exceptions_end+0xfbfe2bf0>
 4004008:	d8c02017 	ldw	r3,128(sp)
 400400c:	dc401f17 	ldw	r17,124(sp)
 4004010:	dd800404 	addi	r22,sp,16
 4004014:	003eb506 	br	4003aec <__ram_exceptions_end+0xfbfe38a4>
 4004018:	d9002c17 	ldw	r4,176(sp)
 400401c:	d9801e04 	addi	r6,sp,120
 4004020:	b80b883a 	mov	r5,r23
 4004024:	400b4c40 	call	400b4c4 <__sprint_r>
 4004028:	103b831e 	bne	r2,zero,4002e38 <__ram_exceptions_end+0xfbfe2bf0>
 400402c:	d8c02017 	ldw	r3,128(sp)
 4004030:	dc401f17 	ldw	r17,124(sp)
 4004034:	da000404 	addi	r8,sp,16
 4004038:	003e8d06 	br	4003a70 <__ram_exceptions_end+0xfbfe3828>
 400403c:	d9002c17 	ldw	r4,176(sp)
 4004040:	d9801e04 	addi	r6,sp,120
 4004044:	b80b883a 	mov	r5,r23
 4004048:	400b4c40 	call	400b4c4 <__sprint_r>
 400404c:	103b7a1e 	bne	r2,zero,4002e38 <__ram_exceptions_end+0xfbfe2bf0>
 4004050:	d8c02017 	ldw	r3,128(sp)
 4004054:	dc401f17 	ldw	r17,124(sp)
 4004058:	dd800404 	addi	r22,sp,16
 400405c:	003e8f06 	br	4003a9c <__ram_exceptions_end+0xfbfe3854>
 4004060:	0027883a 	mov	r19,zero
 4004064:	003f4a06 	br	4003d90 <__ram_exceptions_end+0xfbfe3b48>
 4004068:	d9002c17 	ldw	r4,176(sp)
 400406c:	d9801e04 	addi	r6,sp,120
 4004070:	b80b883a 	mov	r5,r23
 4004074:	400b4c40 	call	400b4c4 <__sprint_r>
 4004078:	103b6f1e 	bne	r2,zero,4002e38 <__ram_exceptions_end+0xfbfe2bf0>
 400407c:	d8c02017 	ldw	r3,128(sp)
 4004080:	da000404 	addi	r8,sp,16
 4004084:	003c9d06 	br	40032fc <__ram_exceptions_end+0xfbfe30b4>
 4004088:	04e7c83a 	sub	r19,zero,r19
 400408c:	9804c03a 	cmpne	r2,r19,zero
 4004090:	05adc83a 	sub	r22,zero,r22
 4004094:	b0adc83a 	sub	r22,r22,r2
 4004098:	d8802917 	ldw	r2,164(sp)
 400409c:	07000b44 	movi	fp,45
 40040a0:	df002785 	stb	fp,158(sp)
 40040a4:	10017b16 	blt	r2,zero,4004694 <___vfprintf_internal_r+0x1c64>
 40040a8:	00bfdfc4 	movi	r2,-129
 40040ac:	90a4703a 	and	r18,r18,r2
 40040b0:	003bb106 	br	4002f78 <__ram_exceptions_end+0xfbfe2d30>
 40040b4:	d9003617 	ldw	r4,216(sp)
 40040b8:	d9403817 	ldw	r5,224(sp)
 40040bc:	da003d15 	stw	r8,244(sp)
 40040c0:	4009db80 	call	4009db8 <__fpclassifyd>
 40040c4:	da003d17 	ldw	r8,244(sp)
 40040c8:	1000f026 	beq	r2,zero,400448c <___vfprintf_internal_r+0x1a5c>
 40040cc:	d9002917 	ldw	r4,164(sp)
 40040d0:	05bff7c4 	movi	r22,-33
 40040d4:	00bfffc4 	movi	r2,-1
 40040d8:	8dac703a 	and	r22,r17,r22
 40040dc:	20820026 	beq	r4,r2,40048e0 <___vfprintf_internal_r+0x1eb0>
 40040e0:	008011c4 	movi	r2,71
 40040e4:	b081f726 	beq	r22,r2,40048c4 <___vfprintf_internal_r+0x1e94>
 40040e8:	d9003817 	ldw	r4,224(sp)
 40040ec:	90c04014 	ori	r3,r18,256
 40040f0:	d8c02b15 	stw	r3,172(sp)
 40040f4:	20021516 	blt	r4,zero,400494c <___vfprintf_internal_r+0x1f1c>
 40040f8:	dcc03817 	ldw	r19,224(sp)
 40040fc:	d8002a05 	stb	zero,168(sp)
 4004100:	00801984 	movi	r2,102
 4004104:	8881f926 	beq	r17,r2,40048ec <___vfprintf_internal_r+0x1ebc>
 4004108:	00801184 	movi	r2,70
 400410c:	88821c26 	beq	r17,r2,4004980 <___vfprintf_internal_r+0x1f50>
 4004110:	00801144 	movi	r2,69
 4004114:	b081ef26 	beq	r22,r2,40048d4 <___vfprintf_internal_r+0x1ea4>
 4004118:	d8c02917 	ldw	r3,164(sp)
 400411c:	d8802104 	addi	r2,sp,132
 4004120:	d8800315 	stw	r2,12(sp)
 4004124:	d9403617 	ldw	r5,216(sp)
 4004128:	d8802504 	addi	r2,sp,148
 400412c:	d9002c17 	ldw	r4,176(sp)
 4004130:	d8800215 	stw	r2,8(sp)
 4004134:	d8802604 	addi	r2,sp,152
 4004138:	d8c00015 	stw	r3,0(sp)
 400413c:	d8800115 	stw	r2,4(sp)
 4004140:	01c00084 	movi	r7,2
 4004144:	980d883a 	mov	r6,r19
 4004148:	d8c03c15 	stw	r3,240(sp)
 400414c:	da003d15 	stw	r8,244(sp)
 4004150:	40050540 	call	4005054 <_dtoa_r>
 4004154:	1021883a 	mov	r16,r2
 4004158:	008019c4 	movi	r2,103
 400415c:	d8c03c17 	ldw	r3,240(sp)
 4004160:	da003d17 	ldw	r8,244(sp)
 4004164:	88817126 	beq	r17,r2,400472c <___vfprintf_internal_r+0x1cfc>
 4004168:	008011c4 	movi	r2,71
 400416c:	88829226 	beq	r17,r2,4004bb8 <___vfprintf_internal_r+0x2188>
 4004170:	80f9883a 	add	fp,r16,r3
 4004174:	d9003617 	ldw	r4,216(sp)
 4004178:	000d883a 	mov	r6,zero
 400417c:	000f883a 	mov	r7,zero
 4004180:	980b883a 	mov	r5,r19
 4004184:	da003d15 	stw	r8,244(sp)
 4004188:	400f13c0 	call	400f13c <__eqdf2>
 400418c:	da003d17 	ldw	r8,244(sp)
 4004190:	10018d26 	beq	r2,zero,40047c8 <___vfprintf_internal_r+0x1d98>
 4004194:	d8802117 	ldw	r2,132(sp)
 4004198:	1700062e 	bgeu	r2,fp,40041b4 <___vfprintf_internal_r+0x1784>
 400419c:	01000c04 	movi	r4,48
 40041a0:	10c00044 	addi	r3,r2,1
 40041a4:	d8c02115 	stw	r3,132(sp)
 40041a8:	11000005 	stb	r4,0(r2)
 40041ac:	d8802117 	ldw	r2,132(sp)
 40041b0:	173ffb36 	bltu	r2,fp,40041a0 <__ram_exceptions_end+0xfbfe3f58>
 40041b4:	1405c83a 	sub	r2,r2,r16
 40041b8:	d8803315 	stw	r2,204(sp)
 40041bc:	008011c4 	movi	r2,71
 40041c0:	b0817626 	beq	r22,r2,400479c <___vfprintf_internal_r+0x1d6c>
 40041c4:	00801944 	movi	r2,101
 40041c8:	1442810e 	bge	r2,r17,4004bd0 <___vfprintf_internal_r+0x21a0>
 40041cc:	d8c02617 	ldw	r3,152(sp)
 40041d0:	00801984 	movi	r2,102
 40041d4:	d8c03215 	stw	r3,200(sp)
 40041d8:	8881fe26 	beq	r17,r2,40049d4 <___vfprintf_internal_r+0x1fa4>
 40041dc:	d8c03217 	ldw	r3,200(sp)
 40041e0:	d9003317 	ldw	r4,204(sp)
 40041e4:	1901dd16 	blt	r3,r4,400495c <___vfprintf_internal_r+0x1f2c>
 40041e8:	9480004c 	andi	r18,r18,1
 40041ec:	90022b1e 	bne	r18,zero,4004a9c <___vfprintf_internal_r+0x206c>
 40041f0:	1805883a 	mov	r2,r3
 40041f4:	18028016 	blt	r3,zero,4004bf8 <___vfprintf_internal_r+0x21c8>
 40041f8:	d8c03217 	ldw	r3,200(sp)
 40041fc:	044019c4 	movi	r17,103
 4004200:	d8c02e15 	stw	r3,184(sp)
 4004204:	df002a07 	ldb	fp,168(sp)
 4004208:	e001531e 	bne	fp,zero,4004758 <___vfprintf_internal_r+0x1d28>
 400420c:	df002783 	ldbu	fp,158(sp)
 4004210:	d8802a15 	stw	r2,168(sp)
 4004214:	dc802b17 	ldw	r18,172(sp)
 4004218:	d8002915 	stw	zero,164(sp)
 400421c:	003bd106 	br	4003164 <__ram_exceptions_end+0xfbfe2f1c>
 4004220:	d8802d17 	ldw	r2,180(sp)
 4004224:	d8c02d17 	ldw	r3,180(sp)
 4004228:	d9002d17 	ldw	r4,180(sp)
 400422c:	10800017 	ldw	r2,0(r2)
 4004230:	18c00117 	ldw	r3,4(r3)
 4004234:	21000204 	addi	r4,r4,8
 4004238:	d8803615 	stw	r2,216(sp)
 400423c:	d8c03815 	stw	r3,224(sp)
 4004240:	d9002d15 	stw	r4,180(sp)
 4004244:	003b7506 	br	400301c <__ram_exceptions_end+0xfbfe2dd4>
 4004248:	ac400007 	ldb	r17,0(r21)
 400424c:	003a5906 	br	4002bb4 <__ram_exceptions_end+0xfbfe296c>
 4004250:	9080100c 	andi	r2,r18,64
 4004254:	1000a826 	beq	r2,zero,40044f8 <___vfprintf_internal_r+0x1ac8>
 4004258:	d9002d17 	ldw	r4,180(sp)
 400425c:	002d883a 	mov	r22,zero
 4004260:	24c0000b 	ldhu	r19,0(r4)
 4004264:	21000104 	addi	r4,r4,4
 4004268:	d9002d15 	stw	r4,180(sp)
 400426c:	003ccb06 	br	400359c <__ram_exceptions_end+0xfbfe3354>
 4004270:	d8c02d17 	ldw	r3,180(sp)
 4004274:	d9002917 	ldw	r4,164(sp)
 4004278:	002d883a 	mov	r22,zero
 400427c:	18800104 	addi	r2,r3,4
 4004280:	1cc00017 	ldw	r19,0(r3)
 4004284:	203ebb0e 	bge	r4,zero,4003d74 <__ram_exceptions_end+0xfbfe3b2c>
 4004288:	003ef106 	br	4003e50 <__ram_exceptions_end+0xfbfe3c08>
 400428c:	9080040c 	andi	r2,r18,16
 4004290:	1000921e 	bne	r2,zero,40044dc <___vfprintf_internal_r+0x1aac>
 4004294:	9480100c 	andi	r18,r18,64
 4004298:	90013926 	beq	r18,zero,4004780 <___vfprintf_internal_r+0x1d50>
 400429c:	d9002d17 	ldw	r4,180(sp)
 40042a0:	d9402f17 	ldw	r5,188(sp)
 40042a4:	20800017 	ldw	r2,0(r4)
 40042a8:	21000104 	addi	r4,r4,4
 40042ac:	d9002d15 	stw	r4,180(sp)
 40042b0:	1140000d 	sth	r5,0(r2)
 40042b4:	003a1606 	br	4002b10 <__ram_exceptions_end+0xfbfe28c8>
 40042b8:	9080100c 	andi	r2,r18,64
 40042bc:	10008026 	beq	r2,zero,40044c0 <___vfprintf_internal_r+0x1a90>
 40042c0:	d8c02d17 	ldw	r3,180(sp)
 40042c4:	1cc0000f 	ldh	r19,0(r3)
 40042c8:	18c00104 	addi	r3,r3,4
 40042cc:	d8c02d15 	stw	r3,180(sp)
 40042d0:	982dd7fa 	srai	r22,r19,31
 40042d4:	b005883a 	mov	r2,r22
 40042d8:	003b1f06 	br	4002f58 <__ram_exceptions_end+0xfbfe2d10>
 40042dc:	9080100c 	andi	r2,r18,64
 40042e0:	d8002785 	stb	zero,158(sp)
 40042e4:	10008a1e 	bne	r2,zero,4004510 <___vfprintf_internal_r+0x1ae0>
 40042e8:	d9402d17 	ldw	r5,180(sp)
 40042ec:	d8c02917 	ldw	r3,164(sp)
 40042f0:	002d883a 	mov	r22,zero
 40042f4:	28800104 	addi	r2,r5,4
 40042f8:	2cc00017 	ldw	r19,0(r5)
 40042fc:	183e4b0e 	bge	r3,zero,4003c2c <__ram_exceptions_end+0xfbfe39e4>
 4004300:	9d86b03a 	or	r3,r19,r22
 4004304:	d8802d15 	stw	r2,180(sp)
 4004308:	183e4c1e 	bne	r3,zero,4003c3c <__ram_exceptions_end+0xfbfe39f4>
 400430c:	0039883a 	mov	fp,zero
 4004310:	0005883a 	mov	r2,zero
 4004314:	003d4006 	br	4003818 <__ram_exceptions_end+0xfbfe35d0>
 4004318:	01410074 	movhi	r5,1025
 400431c:	29521c84 	addi	r5,r5,18546
 4004320:	d9402b15 	stw	r5,172(sp)
 4004324:	d9402b17 	ldw	r5,172(sp)
 4004328:	1c47883a 	add	r3,r3,r17
 400432c:	10800044 	addi	r2,r2,1
 4004330:	41400015 	stw	r5,0(r8)
 4004334:	44400115 	stw	r17,4(r8)
 4004338:	d8c02015 	stw	r3,128(sp)
 400433c:	d8801f15 	stw	r2,124(sp)
 4004340:	010001c4 	movi	r4,7
 4004344:	20bec816 	blt	r4,r2,4003e68 <__ram_exceptions_end+0xfbfe3c20>
 4004348:	42000204 	addi	r8,r8,8
 400434c:	003ecd06 	br	4003e84 <__ram_exceptions_end+0xfbfe3c3c>
 4004350:	d9002917 	ldw	r4,164(sp)
 4004354:	d8002785 	stb	zero,158(sp)
 4004358:	203d2d16 	blt	r4,zero,4003810 <__ram_exceptions_end+0xfbfe35c8>
 400435c:	00bfdfc4 	movi	r2,-129
 4004360:	90a4703a 	and	r18,r18,r2
 4004364:	003a9106 	br	4002dac <__ram_exceptions_end+0xfbfe2b64>
 4004368:	01010074 	movhi	r4,1025
 400436c:	21121c84 	addi	r4,r4,18546
 4004370:	d9002b15 	stw	r4,172(sp)
 4004374:	003c0c06 	br	40033a8 <__ram_exceptions_end+0xfbfe3160>
 4004378:	d9002c17 	ldw	r4,176(sp)
 400437c:	d9801e04 	addi	r6,sp,120
 4004380:	b80b883a 	mov	r5,r23
 4004384:	400b4c40 	call	400b4c4 <__sprint_r>
 4004388:	103aab1e 	bne	r2,zero,4002e38 <__ram_exceptions_end+0xfbfe2bf0>
 400438c:	d8c02017 	ldw	r3,128(sp)
 4004390:	da000404 	addi	r8,sp,16
 4004394:	003d4106 	br	400389c <__ram_exceptions_end+0xfbfe3654>
 4004398:	d8801f17 	ldw	r2,124(sp)
 400439c:	01410074 	movhi	r5,1025
 40043a0:	01000044 	movi	r4,1
 40043a4:	18c00044 	addi	r3,r3,1
 40043a8:	10800044 	addi	r2,r2,1
 40043ac:	29521404 	addi	r5,r5,18512
 40043b0:	41000115 	stw	r4,4(r8)
 40043b4:	41400015 	stw	r5,0(r8)
 40043b8:	d8c02015 	stw	r3,128(sp)
 40043bc:	d8801f15 	stw	r2,124(sp)
 40043c0:	010001c4 	movi	r4,7
 40043c4:	20805c16 	blt	r4,r2,4004538 <___vfprintf_internal_r+0x1b08>
 40043c8:	42000204 	addi	r8,r8,8
 40043cc:	8800041e 	bne	r17,zero,40043e0 <___vfprintf_internal_r+0x19b0>
 40043d0:	d8803317 	ldw	r2,204(sp)
 40043d4:	1000021e 	bne	r2,zero,40043e0 <___vfprintf_internal_r+0x19b0>
 40043d8:	9080004c 	andi	r2,r18,1
 40043dc:	103c0926 	beq	r2,zero,4003404 <__ram_exceptions_end+0xfbfe31bc>
 40043e0:	d9003717 	ldw	r4,220(sp)
 40043e4:	d8801f17 	ldw	r2,124(sp)
 40043e8:	d9403417 	ldw	r5,208(sp)
 40043ec:	20c7883a 	add	r3,r4,r3
 40043f0:	10800044 	addi	r2,r2,1
 40043f4:	41000115 	stw	r4,4(r8)
 40043f8:	41400015 	stw	r5,0(r8)
 40043fc:	d8c02015 	stw	r3,128(sp)
 4004400:	d8801f15 	stw	r2,124(sp)
 4004404:	010001c4 	movi	r4,7
 4004408:	20812116 	blt	r4,r2,4004890 <___vfprintf_internal_r+0x1e60>
 400440c:	42000204 	addi	r8,r8,8
 4004410:	0463c83a 	sub	r17,zero,r17
 4004414:	0440730e 	bge	zero,r17,40045e4 <___vfprintf_internal_r+0x1bb4>
 4004418:	05800404 	movi	r22,16
 400441c:	b440860e 	bge	r22,r17,4004638 <___vfprintf_internal_r+0x1c08>
 4004420:	01410074 	movhi	r5,1025
 4004424:	29521c84 	addi	r5,r5,18546
 4004428:	d9402b15 	stw	r5,172(sp)
 400442c:	070001c4 	movi	fp,7
 4004430:	dcc02c17 	ldw	r19,176(sp)
 4004434:	00000306 	br	4004444 <___vfprintf_internal_r+0x1a14>
 4004438:	42000204 	addi	r8,r8,8
 400443c:	8c7ffc04 	addi	r17,r17,-16
 4004440:	b440800e 	bge	r22,r17,4004644 <___vfprintf_internal_r+0x1c14>
 4004444:	18c00404 	addi	r3,r3,16
 4004448:	10800044 	addi	r2,r2,1
 400444c:	45000015 	stw	r20,0(r8)
 4004450:	45800115 	stw	r22,4(r8)
 4004454:	d8c02015 	stw	r3,128(sp)
 4004458:	d8801f15 	stw	r2,124(sp)
 400445c:	e0bff60e 	bge	fp,r2,4004438 <__ram_exceptions_end+0xfbfe41f0>
 4004460:	d9801e04 	addi	r6,sp,120
 4004464:	b80b883a 	mov	r5,r23
 4004468:	9809883a 	mov	r4,r19
 400446c:	400b4c40 	call	400b4c4 <__sprint_r>
 4004470:	103a711e 	bne	r2,zero,4002e38 <__ram_exceptions_end+0xfbfe2bf0>
 4004474:	d8c02017 	ldw	r3,128(sp)
 4004478:	d8801f17 	ldw	r2,124(sp)
 400447c:	da000404 	addi	r8,sp,16
 4004480:	003fee06 	br	400443c <__ram_exceptions_end+0xfbfe41f4>
 4004484:	00bfffc4 	movi	r2,-1
 4004488:	003a6f06 	br	4002e48 <__ram_exceptions_end+0xfbfe2c00>
 400448c:	008011c4 	movi	r2,71
 4004490:	1440b816 	blt	r2,r17,4004774 <___vfprintf_internal_r+0x1d44>
 4004494:	04010074 	movhi	r16,1025
 4004498:	84120604 	addi	r16,r16,18456
 400449c:	00c000c4 	movi	r3,3
 40044a0:	00bfdfc4 	movi	r2,-129
 40044a4:	d8c02a15 	stw	r3,168(sp)
 40044a8:	90a4703a 	and	r18,r18,r2
 40044ac:	df002783 	ldbu	fp,158(sp)
 40044b0:	d8c02e15 	stw	r3,184(sp)
 40044b4:	d8002915 	stw	zero,164(sp)
 40044b8:	d8003215 	stw	zero,200(sp)
 40044bc:	003b2906 	br	4003164 <__ram_exceptions_end+0xfbfe2f1c>
 40044c0:	d9002d17 	ldw	r4,180(sp)
 40044c4:	24c00017 	ldw	r19,0(r4)
 40044c8:	21000104 	addi	r4,r4,4
 40044cc:	d9002d15 	stw	r4,180(sp)
 40044d0:	982dd7fa 	srai	r22,r19,31
 40044d4:	b005883a 	mov	r2,r22
 40044d8:	003a9f06 	br	4002f58 <__ram_exceptions_end+0xfbfe2d10>
 40044dc:	d9402d17 	ldw	r5,180(sp)
 40044e0:	d8c02f17 	ldw	r3,188(sp)
 40044e4:	28800017 	ldw	r2,0(r5)
 40044e8:	29400104 	addi	r5,r5,4
 40044ec:	d9402d15 	stw	r5,180(sp)
 40044f0:	10c00015 	stw	r3,0(r2)
 40044f4:	00398606 	br	4002b10 <__ram_exceptions_end+0xfbfe28c8>
 40044f8:	d9402d17 	ldw	r5,180(sp)
 40044fc:	002d883a 	mov	r22,zero
 4004500:	2cc00017 	ldw	r19,0(r5)
 4004504:	29400104 	addi	r5,r5,4
 4004508:	d9402d15 	stw	r5,180(sp)
 400450c:	003c2306 	br	400359c <__ram_exceptions_end+0xfbfe3354>
 4004510:	d8c02d17 	ldw	r3,180(sp)
 4004514:	d9002917 	ldw	r4,164(sp)
 4004518:	002d883a 	mov	r22,zero
 400451c:	18800104 	addi	r2,r3,4
 4004520:	1cc0000b 	ldhu	r19,0(r3)
 4004524:	203dc10e 	bge	r4,zero,4003c2c <__ram_exceptions_end+0xfbfe39e4>
 4004528:	003f7506 	br	4004300 <__ram_exceptions_end+0xfbfe40b8>
 400452c:	04010074 	movhi	r16,1025
 4004530:	84120404 	addi	r16,r16,18448
 4004534:	003acc06 	br	4003068 <__ram_exceptions_end+0xfbfe2e20>
 4004538:	d9002c17 	ldw	r4,176(sp)
 400453c:	d9801e04 	addi	r6,sp,120
 4004540:	b80b883a 	mov	r5,r23
 4004544:	400b4c40 	call	400b4c4 <__sprint_r>
 4004548:	103a3b1e 	bne	r2,zero,4002e38 <__ram_exceptions_end+0xfbfe2bf0>
 400454c:	dc402617 	ldw	r17,152(sp)
 4004550:	d8c02017 	ldw	r3,128(sp)
 4004554:	da000404 	addi	r8,sp,16
 4004558:	003f9c06 	br	40043cc <__ram_exceptions_end+0xfbfe4184>
 400455c:	ac400043 	ldbu	r17,1(r21)
 4004560:	94800814 	ori	r18,r18,32
 4004564:	ad400044 	addi	r21,r21,1
 4004568:	8c403fcc 	andi	r17,r17,255
 400456c:	8c40201c 	xori	r17,r17,128
 4004570:	8c7fe004 	addi	r17,r17,-128
 4004574:	00398f06 	br	4002bb4 <__ram_exceptions_end+0xfbfe296c>
 4004578:	d8c02d15 	stw	r3,180(sp)
 400457c:	0039883a 	mov	fp,zero
 4004580:	003e3506 	br	4003e58 <__ram_exceptions_end+0xfbfe3c10>
 4004584:	d9002c17 	ldw	r4,176(sp)
 4004588:	d9801e04 	addi	r6,sp,120
 400458c:	b80b883a 	mov	r5,r23
 4004590:	400b4c40 	call	400b4c4 <__sprint_r>
 4004594:	103a281e 	bne	r2,zero,4002e38 <__ram_exceptions_end+0xfbfe2bf0>
 4004598:	d8c02017 	ldw	r3,128(sp)
 400459c:	da000404 	addi	r8,sp,16
 40045a0:	003cd006 	br	40038e4 <__ram_exceptions_end+0xfbfe369c>
 40045a4:	8009883a 	mov	r4,r16
 40045a8:	da003d15 	stw	r8,244(sp)
 40045ac:	40007c00 	call	40007c0 <strlen>
 40045b0:	d8802e15 	stw	r2,184(sp)
 40045b4:	da003d17 	ldw	r8,244(sp)
 40045b8:	103c340e 	bge	r2,zero,400368c <__ram_exceptions_end+0xfbfe3444>
 40045bc:	0005883a 	mov	r2,zero
 40045c0:	003c3206 	br	400368c <__ram_exceptions_end+0xfbfe3444>
 40045c4:	d9002c17 	ldw	r4,176(sp)
 40045c8:	d9801e04 	addi	r6,sp,120
 40045cc:	b80b883a 	mov	r5,r23
 40045d0:	400b4c40 	call	400b4c4 <__sprint_r>
 40045d4:	103a181e 	bne	r2,zero,4002e38 <__ram_exceptions_end+0xfbfe2bf0>
 40045d8:	d8c02017 	ldw	r3,128(sp)
 40045dc:	d8801f17 	ldw	r2,124(sp)
 40045e0:	da000404 	addi	r8,sp,16
 40045e4:	d9403317 	ldw	r5,204(sp)
 40045e8:	10800044 	addi	r2,r2,1
 40045ec:	44000015 	stw	r16,0(r8)
 40045f0:	28c7883a 	add	r3,r5,r3
 40045f4:	003b7d06 	br	40033ec <__ram_exceptions_end+0xfbfe31a4>
 40045f8:	01010074 	movhi	r4,1025
 40045fc:	21122084 	addi	r4,r4,18562
 4004600:	d9003515 	stw	r4,212(sp)
 4004604:	003b1406 	br	4003258 <__ram_exceptions_end+0xfbfe3010>
 4004608:	013fffc4 	movi	r4,-1
 400460c:	003a3506 	br	4002ee4 <__ram_exceptions_end+0xfbfe2c9c>
 4004610:	0023883a 	mov	r17,zero
 4004614:	003d9d06 	br	4003c8c <__ram_exceptions_end+0xfbfe3a44>
 4004618:	d9002c17 	ldw	r4,176(sp)
 400461c:	d9801e04 	addi	r6,sp,120
 4004620:	b80b883a 	mov	r5,r23
 4004624:	400b4c40 	call	400b4c4 <__sprint_r>
 4004628:	103a031e 	bne	r2,zero,4002e38 <__ram_exceptions_end+0xfbfe2bf0>
 400462c:	d8c02017 	ldw	r3,128(sp)
 4004630:	da000404 	addi	r8,sp,16
 4004634:	003d9406 	br	4003c88 <__ram_exceptions_end+0xfbfe3a40>
 4004638:	01010074 	movhi	r4,1025
 400463c:	21121c84 	addi	r4,r4,18546
 4004640:	d9002b15 	stw	r4,172(sp)
 4004644:	d9002b17 	ldw	r4,172(sp)
 4004648:	1c47883a 	add	r3,r3,r17
 400464c:	10800044 	addi	r2,r2,1
 4004650:	41000015 	stw	r4,0(r8)
 4004654:	44400115 	stw	r17,4(r8)
 4004658:	d8c02015 	stw	r3,128(sp)
 400465c:	d8801f15 	stw	r2,124(sp)
 4004660:	010001c4 	movi	r4,7
 4004664:	20bfd716 	blt	r4,r2,40045c4 <__ram_exceptions_end+0xfbfe437c>
 4004668:	42000204 	addi	r8,r8,8
 400466c:	003fdd06 	br	40045e4 <__ram_exceptions_end+0xfbfe439c>
 4004670:	d9002c17 	ldw	r4,176(sp)
 4004674:	d9801e04 	addi	r6,sp,120
 4004678:	b80b883a 	mov	r5,r23
 400467c:	400b4c40 	call	400b4c4 <__sprint_r>
 4004680:	1039ed1e 	bne	r2,zero,4002e38 <__ram_exceptions_end+0xfbfe2bf0>
 4004684:	d8802617 	ldw	r2,152(sp)
 4004688:	d8c02017 	ldw	r3,128(sp)
 400468c:	da000404 	addi	r8,sp,16
 4004690:	003e1006 	br	4003ed4 <__ram_exceptions_end+0xfbfe3c8c>
 4004694:	00800044 	movi	r2,1
 4004698:	10803fcc 	andi	r2,r2,255
 400469c:	00c00044 	movi	r3,1
 40046a0:	10fa3526 	beq	r2,r3,4002f78 <__ram_exceptions_end+0xfbfe2d30>
 40046a4:	00c00084 	movi	r3,2
 40046a8:	10fbcb26 	beq	r2,r3,40035d8 <__ram_exceptions_end+0xfbfe3390>
 40046ac:	003a8f06 	br	40030ec <__ram_exceptions_end+0xfbfe2ea4>
 40046b0:	01010074 	movhi	r4,1025
 40046b4:	21122084 	addi	r4,r4,18562
 40046b8:	d9003515 	stw	r4,212(sp)
 40046bc:	003b7606 	br	4003498 <__ram_exceptions_end+0xfbfe3250>
 40046c0:	d8802917 	ldw	r2,164(sp)
 40046c4:	00c00184 	movi	r3,6
 40046c8:	1880012e 	bgeu	r3,r2,40046d0 <___vfprintf_internal_r+0x1ca0>
 40046cc:	1805883a 	mov	r2,r3
 40046d0:	d8802e15 	stw	r2,184(sp)
 40046d4:	1000ef16 	blt	r2,zero,4004a94 <___vfprintf_internal_r+0x2064>
 40046d8:	04010074 	movhi	r16,1025
 40046dc:	d8802a15 	stw	r2,168(sp)
 40046e0:	dcc02d15 	stw	r19,180(sp)
 40046e4:	d8002915 	stw	zero,164(sp)
 40046e8:	d8003215 	stw	zero,200(sp)
 40046ec:	84121204 	addi	r16,r16,18504
 40046f0:	0039883a 	mov	fp,zero
 40046f4:	003aa206 	br	4003180 <__ram_exceptions_end+0xfbfe2f38>
 40046f8:	0021883a 	mov	r16,zero
 40046fc:	003e0706 	br	4003f1c <__ram_exceptions_end+0xfbfe3cd4>
 4004700:	d9002c17 	ldw	r4,176(sp)
 4004704:	d9801e04 	addi	r6,sp,120
 4004708:	b80b883a 	mov	r5,r23
 400470c:	400b4c40 	call	400b4c4 <__sprint_r>
 4004710:	1039c91e 	bne	r2,zero,4002e38 <__ram_exceptions_end+0xfbfe2bf0>
 4004714:	d8802617 	ldw	r2,152(sp)
 4004718:	d9403317 	ldw	r5,204(sp)
 400471c:	d8c02017 	ldw	r3,128(sp)
 4004720:	da000404 	addi	r8,sp,16
 4004724:	2885c83a 	sub	r2,r5,r2
 4004728:	003dfb06 	br	4003f18 <__ram_exceptions_end+0xfbfe3cd0>
 400472c:	9080004c 	andi	r2,r18,1
 4004730:	103e8f1e 	bne	r2,zero,4004170 <__ram_exceptions_end+0xfbfe3f28>
 4004734:	d8802117 	ldw	r2,132(sp)
 4004738:	003e9e06 	br	40041b4 <__ram_exceptions_end+0xfbfe3f6c>
 400473c:	1025883a 	mov	r18,r2
 4004740:	0039883a 	mov	fp,zero
 4004744:	00800084 	movi	r2,2
 4004748:	003fd306 	br	4004698 <__ram_exceptions_end+0xfbfe4450>
 400474c:	07000b44 	movi	fp,45
 4004750:	df002785 	stb	fp,158(sp)
 4004754:	003a4006 	br	4003058 <__ram_exceptions_end+0xfbfe2e10>
 4004758:	00c00b44 	movi	r3,45
 400475c:	d8c02785 	stb	r3,158(sp)
 4004760:	d8802a15 	stw	r2,168(sp)
 4004764:	dc802b17 	ldw	r18,172(sp)
 4004768:	d8002915 	stw	zero,164(sp)
 400476c:	07000b44 	movi	fp,45
 4004770:	003a8006 	br	4003174 <__ram_exceptions_end+0xfbfe2f2c>
 4004774:	04010074 	movhi	r16,1025
 4004778:	84120704 	addi	r16,r16,18460
 400477c:	003f4706 	br	400449c <__ram_exceptions_end+0xfbfe4254>
 4004780:	d8c02d17 	ldw	r3,180(sp)
 4004784:	d9002f17 	ldw	r4,188(sp)
 4004788:	18800017 	ldw	r2,0(r3)
 400478c:	18c00104 	addi	r3,r3,4
 4004790:	d8c02d15 	stw	r3,180(sp)
 4004794:	11000015 	stw	r4,0(r2)
 4004798:	0038dd06 	br	4002b10 <__ram_exceptions_end+0xfbfe28c8>
 400479c:	dd802617 	ldw	r22,152(sp)
 40047a0:	00bfff44 	movi	r2,-3
 40047a4:	b0801c16 	blt	r22,r2,4004818 <___vfprintf_internal_r+0x1de8>
 40047a8:	d9402917 	ldw	r5,164(sp)
 40047ac:	2d801a16 	blt	r5,r22,4004818 <___vfprintf_internal_r+0x1de8>
 40047b0:	dd803215 	stw	r22,200(sp)
 40047b4:	003e8906 	br	40041dc <__ram_exceptions_end+0xfbfe3f94>
 40047b8:	01010074 	movhi	r4,1025
 40047bc:	21121c84 	addi	r4,r4,18546
 40047c0:	d9002b15 	stw	r4,172(sp)
 40047c4:	003c9106 	br	4003a0c <__ram_exceptions_end+0xfbfe37c4>
 40047c8:	e005883a 	mov	r2,fp
 40047cc:	003e7906 	br	40041b4 <__ram_exceptions_end+0xfbfe3f6c>
 40047d0:	d9402917 	ldw	r5,164(sp)
 40047d4:	df002783 	ldbu	fp,158(sp)
 40047d8:	dcc02d15 	stw	r19,180(sp)
 40047dc:	d9402a15 	stw	r5,168(sp)
 40047e0:	d9402e15 	stw	r5,184(sp)
 40047e4:	d8002915 	stw	zero,164(sp)
 40047e8:	d8003215 	stw	zero,200(sp)
 40047ec:	003a5d06 	br	4003164 <__ram_exceptions_end+0xfbfe2f1c>
 40047f0:	9080004c 	andi	r2,r18,1
 40047f4:	0039883a 	mov	fp,zero
 40047f8:	10000426 	beq	r2,zero,400480c <___vfprintf_internal_r+0x1ddc>
 40047fc:	00800c04 	movi	r2,48
 4004800:	dc001dc4 	addi	r16,sp,119
 4004804:	d8801dc5 	stb	r2,119(sp)
 4004808:	003b8006 	br	400360c <__ram_exceptions_end+0xfbfe33c4>
 400480c:	d8002e15 	stw	zero,184(sp)
 4004810:	dc001e04 	addi	r16,sp,120
 4004814:	003a4d06 	br	400314c <__ram_exceptions_end+0xfbfe2f04>
 4004818:	8c7fff84 	addi	r17,r17,-2
 400481c:	b5bfffc4 	addi	r22,r22,-1
 4004820:	dd802615 	stw	r22,152(sp)
 4004824:	dc4022c5 	stb	r17,139(sp)
 4004828:	b000bf16 	blt	r22,zero,4004b28 <___vfprintf_internal_r+0x20f8>
 400482c:	00800ac4 	movi	r2,43
 4004830:	d8802305 	stb	r2,140(sp)
 4004834:	00800244 	movi	r2,9
 4004838:	15807016 	blt	r2,r22,40049fc <___vfprintf_internal_r+0x1fcc>
 400483c:	00800c04 	movi	r2,48
 4004840:	b5800c04 	addi	r22,r22,48
 4004844:	d8802345 	stb	r2,141(sp)
 4004848:	dd802385 	stb	r22,142(sp)
 400484c:	d88023c4 	addi	r2,sp,143
 4004850:	df0022c4 	addi	fp,sp,139
 4004854:	d8c03317 	ldw	r3,204(sp)
 4004858:	1739c83a 	sub	fp,r2,fp
 400485c:	d9003317 	ldw	r4,204(sp)
 4004860:	e0c7883a 	add	r3,fp,r3
 4004864:	df003a15 	stw	fp,232(sp)
 4004868:	d8c02e15 	stw	r3,184(sp)
 400486c:	00800044 	movi	r2,1
 4004870:	1100b30e 	bge	r2,r4,4004b40 <___vfprintf_internal_r+0x2110>
 4004874:	d8c02e17 	ldw	r3,184(sp)
 4004878:	18c00044 	addi	r3,r3,1
 400487c:	d8c02e15 	stw	r3,184(sp)
 4004880:	1805883a 	mov	r2,r3
 4004884:	1800ac16 	blt	r3,zero,4004b38 <___vfprintf_internal_r+0x2108>
 4004888:	d8003215 	stw	zero,200(sp)
 400488c:	003e5d06 	br	4004204 <__ram_exceptions_end+0xfbfe3fbc>
 4004890:	d9002c17 	ldw	r4,176(sp)
 4004894:	d9801e04 	addi	r6,sp,120
 4004898:	b80b883a 	mov	r5,r23
 400489c:	400b4c40 	call	400b4c4 <__sprint_r>
 40048a0:	1039651e 	bne	r2,zero,4002e38 <__ram_exceptions_end+0xfbfe2bf0>
 40048a4:	dc402617 	ldw	r17,152(sp)
 40048a8:	d8c02017 	ldw	r3,128(sp)
 40048ac:	d8801f17 	ldw	r2,124(sp)
 40048b0:	da000404 	addi	r8,sp,16
 40048b4:	003ed606 	br	4004410 <__ram_exceptions_end+0xfbfe41c8>
 40048b8:	582b883a 	mov	r21,r11
 40048bc:	d8002915 	stw	zero,164(sp)
 40048c0:	0038bd06 	br	4002bb8 <__ram_exceptions_end+0xfbfe2970>
 40048c4:	d8802917 	ldw	r2,164(sp)
 40048c8:	103e071e 	bne	r2,zero,40040e8 <__ram_exceptions_end+0xfbfe3ea0>
 40048cc:	dc002915 	stw	r16,164(sp)
 40048d0:	003e0506 	br	40040e8 <__ram_exceptions_end+0xfbfe3ea0>
 40048d4:	d9002917 	ldw	r4,164(sp)
 40048d8:	20c00044 	addi	r3,r4,1
 40048dc:	003e0f06 	br	400411c <__ram_exceptions_end+0xfbfe3ed4>
 40048e0:	01400184 	movi	r5,6
 40048e4:	d9402915 	stw	r5,164(sp)
 40048e8:	003dff06 	br	40040e8 <__ram_exceptions_end+0xfbfe3ea0>
 40048ec:	d8802104 	addi	r2,sp,132
 40048f0:	d8800315 	stw	r2,12(sp)
 40048f4:	d8802504 	addi	r2,sp,148
 40048f8:	d8800215 	stw	r2,8(sp)
 40048fc:	d8802604 	addi	r2,sp,152
 4004900:	d8800115 	stw	r2,4(sp)
 4004904:	d8802917 	ldw	r2,164(sp)
 4004908:	d9403617 	ldw	r5,216(sp)
 400490c:	d9002c17 	ldw	r4,176(sp)
 4004910:	d8800015 	stw	r2,0(sp)
 4004914:	01c000c4 	movi	r7,3
 4004918:	980d883a 	mov	r6,r19
 400491c:	da003d15 	stw	r8,244(sp)
 4004920:	40050540 	call	4005054 <_dtoa_r>
 4004924:	d8c02917 	ldw	r3,164(sp)
 4004928:	da003d17 	ldw	r8,244(sp)
 400492c:	1021883a 	mov	r16,r2
 4004930:	10f9883a 	add	fp,r2,r3
 4004934:	81000007 	ldb	r4,0(r16)
 4004938:	00800c04 	movi	r2,48
 400493c:	20805e26 	beq	r4,r2,4004ab8 <___vfprintf_internal_r+0x2088>
 4004940:	d8c02617 	ldw	r3,152(sp)
 4004944:	e0f9883a 	add	fp,fp,r3
 4004948:	003e0a06 	br	4004174 <__ram_exceptions_end+0xfbfe3f2c>
 400494c:	00c00b44 	movi	r3,45
 4004950:	24e0003c 	xorhi	r19,r4,32768
 4004954:	d8c02a05 	stb	r3,168(sp)
 4004958:	003de906 	br	4004100 <__ram_exceptions_end+0xfbfe3eb8>
 400495c:	d8c03217 	ldw	r3,200(sp)
 4004960:	00c07a0e 	bge	zero,r3,4004b4c <___vfprintf_internal_r+0x211c>
 4004964:	00800044 	movi	r2,1
 4004968:	d9003317 	ldw	r4,204(sp)
 400496c:	1105883a 	add	r2,r2,r4
 4004970:	d8802e15 	stw	r2,184(sp)
 4004974:	10004e16 	blt	r2,zero,4004ab0 <___vfprintf_internal_r+0x2080>
 4004978:	044019c4 	movi	r17,103
 400497c:	003e2106 	br	4004204 <__ram_exceptions_end+0xfbfe3fbc>
 4004980:	d9002917 	ldw	r4,164(sp)
 4004984:	d8802104 	addi	r2,sp,132
 4004988:	d8800315 	stw	r2,12(sp)
 400498c:	d9000015 	stw	r4,0(sp)
 4004990:	d8802504 	addi	r2,sp,148
 4004994:	d9403617 	ldw	r5,216(sp)
 4004998:	d9002c17 	ldw	r4,176(sp)
 400499c:	d8800215 	stw	r2,8(sp)
 40049a0:	d8802604 	addi	r2,sp,152
 40049a4:	d8800115 	stw	r2,4(sp)
 40049a8:	01c000c4 	movi	r7,3
 40049ac:	980d883a 	mov	r6,r19
 40049b0:	da003d15 	stw	r8,244(sp)
 40049b4:	40050540 	call	4005054 <_dtoa_r>
 40049b8:	d8c02917 	ldw	r3,164(sp)
 40049bc:	da003d17 	ldw	r8,244(sp)
 40049c0:	1021883a 	mov	r16,r2
 40049c4:	00801184 	movi	r2,70
 40049c8:	80f9883a 	add	fp,r16,r3
 40049cc:	88bfd926 	beq	r17,r2,4004934 <__ram_exceptions_end+0xfbfe46ec>
 40049d0:	003de806 	br	4004174 <__ram_exceptions_end+0xfbfe3f2c>
 40049d4:	d9002917 	ldw	r4,164(sp)
 40049d8:	00c04d0e 	bge	zero,r3,4004b10 <___vfprintf_internal_r+0x20e0>
 40049dc:	2000441e 	bne	r4,zero,4004af0 <___vfprintf_internal_r+0x20c0>
 40049e0:	9480004c 	andi	r18,r18,1
 40049e4:	9000421e 	bne	r18,zero,4004af0 <___vfprintf_internal_r+0x20c0>
 40049e8:	1805883a 	mov	r2,r3
 40049ec:	18007016 	blt	r3,zero,4004bb0 <___vfprintf_internal_r+0x2180>
 40049f0:	d8c03217 	ldw	r3,200(sp)
 40049f4:	d8c02e15 	stw	r3,184(sp)
 40049f8:	003e0206 	br	4004204 <__ram_exceptions_end+0xfbfe3fbc>
 40049fc:	df0022c4 	addi	fp,sp,139
 4004a00:	dc002915 	stw	r16,164(sp)
 4004a04:	4027883a 	mov	r19,r8
 4004a08:	e021883a 	mov	r16,fp
 4004a0c:	b009883a 	mov	r4,r22
 4004a10:	01400284 	movi	r5,10
 4004a14:	400de780 	call	400de78 <__modsi3>
 4004a18:	10800c04 	addi	r2,r2,48
 4004a1c:	843fffc4 	addi	r16,r16,-1
 4004a20:	b009883a 	mov	r4,r22
 4004a24:	01400284 	movi	r5,10
 4004a28:	80800005 	stb	r2,0(r16)
 4004a2c:	400ddf40 	call	400ddf4 <__divsi3>
 4004a30:	102d883a 	mov	r22,r2
 4004a34:	00800244 	movi	r2,9
 4004a38:	15bff416 	blt	r2,r22,4004a0c <__ram_exceptions_end+0xfbfe47c4>
 4004a3c:	9811883a 	mov	r8,r19
 4004a40:	b0800c04 	addi	r2,r22,48
 4004a44:	8027883a 	mov	r19,r16
 4004a48:	997fffc4 	addi	r5,r19,-1
 4004a4c:	98bfffc5 	stb	r2,-1(r19)
 4004a50:	dc002917 	ldw	r16,164(sp)
 4004a54:	2f006a2e 	bgeu	r5,fp,4004c00 <___vfprintf_internal_r+0x21d0>
 4004a58:	d9c02384 	addi	r7,sp,142
 4004a5c:	3ccfc83a 	sub	r7,r7,r19
 4004a60:	d9002344 	addi	r4,sp,141
 4004a64:	e1cf883a 	add	r7,fp,r7
 4004a68:	00000106 	br	4004a70 <___vfprintf_internal_r+0x2040>
 4004a6c:	28800003 	ldbu	r2,0(r5)
 4004a70:	20800005 	stb	r2,0(r4)
 4004a74:	21000044 	addi	r4,r4,1
 4004a78:	29400044 	addi	r5,r5,1
 4004a7c:	393ffb1e 	bne	r7,r4,4004a6c <__ram_exceptions_end+0xfbfe4824>
 4004a80:	d8802304 	addi	r2,sp,140
 4004a84:	14c5c83a 	sub	r2,r2,r19
 4004a88:	d8c02344 	addi	r3,sp,141
 4004a8c:	1885883a 	add	r2,r3,r2
 4004a90:	003f7006 	br	4004854 <__ram_exceptions_end+0xfbfe460c>
 4004a94:	0005883a 	mov	r2,zero
 4004a98:	003f0f06 	br	40046d8 <__ram_exceptions_end+0xfbfe4490>
 4004a9c:	d8c03217 	ldw	r3,200(sp)
 4004aa0:	18c00044 	addi	r3,r3,1
 4004aa4:	d8c02e15 	stw	r3,184(sp)
 4004aa8:	1805883a 	mov	r2,r3
 4004aac:	183fb20e 	bge	r3,zero,4004978 <__ram_exceptions_end+0xfbfe4730>
 4004ab0:	0005883a 	mov	r2,zero
 4004ab4:	003fb006 	br	4004978 <__ram_exceptions_end+0xfbfe4730>
 4004ab8:	d9003617 	ldw	r4,216(sp)
 4004abc:	000d883a 	mov	r6,zero
 4004ac0:	000f883a 	mov	r7,zero
 4004ac4:	980b883a 	mov	r5,r19
 4004ac8:	d8c03c15 	stw	r3,240(sp)
 4004acc:	da003d15 	stw	r8,244(sp)
 4004ad0:	400f13c0 	call	400f13c <__eqdf2>
 4004ad4:	d8c03c17 	ldw	r3,240(sp)
 4004ad8:	da003d17 	ldw	r8,244(sp)
 4004adc:	103f9826 	beq	r2,zero,4004940 <__ram_exceptions_end+0xfbfe46f8>
 4004ae0:	00800044 	movi	r2,1
 4004ae4:	10c7c83a 	sub	r3,r2,r3
 4004ae8:	d8c02615 	stw	r3,152(sp)
 4004aec:	003f9506 	br	4004944 <__ram_exceptions_end+0xfbfe46fc>
 4004af0:	d9002917 	ldw	r4,164(sp)
 4004af4:	d8c03217 	ldw	r3,200(sp)
 4004af8:	20800044 	addi	r2,r4,1
 4004afc:	1885883a 	add	r2,r3,r2
 4004b00:	d8802e15 	stw	r2,184(sp)
 4004b04:	103dbf0e 	bge	r2,zero,4004204 <__ram_exceptions_end+0xfbfe3fbc>
 4004b08:	0005883a 	mov	r2,zero
 4004b0c:	003dbd06 	br	4004204 <__ram_exceptions_end+0xfbfe3fbc>
 4004b10:	2000211e 	bne	r4,zero,4004b98 <___vfprintf_internal_r+0x2168>
 4004b14:	9480004c 	andi	r18,r18,1
 4004b18:	90001f1e 	bne	r18,zero,4004b98 <___vfprintf_internal_r+0x2168>
 4004b1c:	00800044 	movi	r2,1
 4004b20:	d8802e15 	stw	r2,184(sp)
 4004b24:	003db706 	br	4004204 <__ram_exceptions_end+0xfbfe3fbc>
 4004b28:	00800b44 	movi	r2,45
 4004b2c:	05adc83a 	sub	r22,zero,r22
 4004b30:	d8802305 	stb	r2,140(sp)
 4004b34:	003f3f06 	br	4004834 <__ram_exceptions_end+0xfbfe45ec>
 4004b38:	0005883a 	mov	r2,zero
 4004b3c:	003f5206 	br	4004888 <__ram_exceptions_end+0xfbfe4640>
 4004b40:	90a4703a 	and	r18,r18,r2
 4004b44:	903f4e26 	beq	r18,zero,4004880 <__ram_exceptions_end+0xfbfe4638>
 4004b48:	003f4a06 	br	4004874 <__ram_exceptions_end+0xfbfe462c>
 4004b4c:	00800084 	movi	r2,2
 4004b50:	10c5c83a 	sub	r2,r2,r3
 4004b54:	003f8406 	br	4004968 <__ram_exceptions_end+0xfbfe4720>
 4004b58:	d8802d17 	ldw	r2,180(sp)
 4004b5c:	d9002d17 	ldw	r4,180(sp)
 4004b60:	ac400043 	ldbu	r17,1(r21)
 4004b64:	10800017 	ldw	r2,0(r2)
 4004b68:	582b883a 	mov	r21,r11
 4004b6c:	d8802915 	stw	r2,164(sp)
 4004b70:	20800104 	addi	r2,r4,4
 4004b74:	d9002917 	ldw	r4,164(sp)
 4004b78:	d8802d15 	stw	r2,180(sp)
 4004b7c:	203e7a0e 	bge	r4,zero,4004568 <__ram_exceptions_end+0xfbfe4320>
 4004b80:	8c403fcc 	andi	r17,r17,255
 4004b84:	00bfffc4 	movi	r2,-1
 4004b88:	8c40201c 	xori	r17,r17,128
 4004b8c:	d8802915 	stw	r2,164(sp)
 4004b90:	8c7fe004 	addi	r17,r17,-128
 4004b94:	00380706 	br	4002bb4 <__ram_exceptions_end+0xfbfe296c>
 4004b98:	d8c02917 	ldw	r3,164(sp)
 4004b9c:	18c00084 	addi	r3,r3,2
 4004ba0:	d8c02e15 	stw	r3,184(sp)
 4004ba4:	1805883a 	mov	r2,r3
 4004ba8:	183d960e 	bge	r3,zero,4004204 <__ram_exceptions_end+0xfbfe3fbc>
 4004bac:	003fd606 	br	4004b08 <__ram_exceptions_end+0xfbfe48c0>
 4004bb0:	0005883a 	mov	r2,zero
 4004bb4:	003f8e06 	br	40049f0 <__ram_exceptions_end+0xfbfe47a8>
 4004bb8:	9080004c 	andi	r2,r18,1
 4004bbc:	103f811e 	bne	r2,zero,40049c4 <__ram_exceptions_end+0xfbfe477c>
 4004bc0:	d8802117 	ldw	r2,132(sp)
 4004bc4:	1405c83a 	sub	r2,r2,r16
 4004bc8:	d8803315 	stw	r2,204(sp)
 4004bcc:	b47ef326 	beq	r22,r17,400479c <__ram_exceptions_end+0xfbfe4554>
 4004bd0:	dd802617 	ldw	r22,152(sp)
 4004bd4:	003f1106 	br	400481c <__ram_exceptions_end+0xfbfe45d4>
 4004bd8:	d9c02785 	stb	r7,158(sp)
 4004bdc:	00390406 	br	4002ff0 <__ram_exceptions_end+0xfbfe2da8>
 4004be0:	d9c02785 	stb	r7,158(sp)
 4004be4:	0038d306 	br	4002f34 <__ram_exceptions_end+0xfbfe2cec>
 4004be8:	d9c02785 	stb	r7,158(sp)
 4004bec:	003a6106 	br	4003574 <__ram_exceptions_end+0xfbfe332c>
 4004bf0:	d9c02785 	stb	r7,158(sp)
 4004bf4:	003af806 	br	40037d8 <__ram_exceptions_end+0xfbfe3590>
 4004bf8:	0005883a 	mov	r2,zero
 4004bfc:	003d7e06 	br	40041f8 <__ram_exceptions_end+0xfbfe3fb0>
 4004c00:	d8802344 	addi	r2,sp,141
 4004c04:	003f1306 	br	4004854 <__ram_exceptions_end+0xfbfe460c>
 4004c08:	d9c02785 	stb	r7,158(sp)
 4004c0c:	00392306 	br	400309c <__ram_exceptions_end+0xfbfe2e54>
 4004c10:	d9c02785 	stb	r7,158(sp)
 4004c14:	003aa906 	br	40036bc <__ram_exceptions_end+0xfbfe3474>
 4004c18:	d9c02785 	stb	r7,158(sp)
 4004c1c:	003a3d06 	br	4003514 <__ram_exceptions_end+0xfbfe32cc>
 4004c20:	d9c02785 	stb	r7,158(sp)
 4004c24:	003aca06 	br	4003750 <__ram_exceptions_end+0xfbfe3508>

04004c28 <__vfprintf_internal>:
 4004c28:	00810074 	movhi	r2,1025
 4004c2c:	109a0604 	addi	r2,r2,26648
 4004c30:	300f883a 	mov	r7,r6
 4004c34:	280d883a 	mov	r6,r5
 4004c38:	200b883a 	mov	r5,r4
 4004c3c:	11000017 	ldw	r4,0(r2)
 4004c40:	4002a301 	jmpi	4002a30 <___vfprintf_internal_r>

04004c44 <__sbprintf>:
 4004c44:	2880030b 	ldhu	r2,12(r5)
 4004c48:	2ac01917 	ldw	r11,100(r5)
 4004c4c:	2a80038b 	ldhu	r10,14(r5)
 4004c50:	2a400717 	ldw	r9,28(r5)
 4004c54:	2a000917 	ldw	r8,36(r5)
 4004c58:	defee204 	addi	sp,sp,-1144
 4004c5c:	00c10004 	movi	r3,1024
 4004c60:	dc011a15 	stw	r16,1128(sp)
 4004c64:	10bfff4c 	andi	r2,r2,65533
 4004c68:	2821883a 	mov	r16,r5
 4004c6c:	d8cb883a 	add	r5,sp,r3
 4004c70:	dc811c15 	stw	r18,1136(sp)
 4004c74:	dc411b15 	stw	r17,1132(sp)
 4004c78:	dfc11d15 	stw	ra,1140(sp)
 4004c7c:	2025883a 	mov	r18,r4
 4004c80:	d881030d 	sth	r2,1036(sp)
 4004c84:	dac11915 	stw	r11,1124(sp)
 4004c88:	da81038d 	sth	r10,1038(sp)
 4004c8c:	da410715 	stw	r9,1052(sp)
 4004c90:	da010915 	stw	r8,1060(sp)
 4004c94:	dec10015 	stw	sp,1024(sp)
 4004c98:	dec10415 	stw	sp,1040(sp)
 4004c9c:	d8c10215 	stw	r3,1032(sp)
 4004ca0:	d8c10515 	stw	r3,1044(sp)
 4004ca4:	d8010615 	stw	zero,1048(sp)
 4004ca8:	4002a300 	call	4002a30 <___vfprintf_internal_r>
 4004cac:	1023883a 	mov	r17,r2
 4004cb0:	10000416 	blt	r2,zero,4004cc4 <__sbprintf+0x80>
 4004cb4:	d9410004 	addi	r5,sp,1024
 4004cb8:	9009883a 	mov	r4,r18
 4004cbc:	40068f80 	call	40068f8 <_fflush_r>
 4004cc0:	10000d1e 	bne	r2,zero,4004cf8 <__sbprintf+0xb4>
 4004cc4:	d881030b 	ldhu	r2,1036(sp)
 4004cc8:	1080100c 	andi	r2,r2,64
 4004ccc:	10000326 	beq	r2,zero,4004cdc <__sbprintf+0x98>
 4004cd0:	8080030b 	ldhu	r2,12(r16)
 4004cd4:	10801014 	ori	r2,r2,64
 4004cd8:	8080030d 	sth	r2,12(r16)
 4004cdc:	8805883a 	mov	r2,r17
 4004ce0:	dfc11d17 	ldw	ra,1140(sp)
 4004ce4:	dc811c17 	ldw	r18,1136(sp)
 4004ce8:	dc411b17 	ldw	r17,1132(sp)
 4004cec:	dc011a17 	ldw	r16,1128(sp)
 4004cf0:	dec11e04 	addi	sp,sp,1144
 4004cf4:	f800283a 	ret
 4004cf8:	047fffc4 	movi	r17,-1
 4004cfc:	003ff106 	br	4004cc4 <__ram_exceptions_end+0xfbfe4a7c>

04004d00 <__swsetup_r>:
 4004d00:	00810074 	movhi	r2,1025
 4004d04:	defffd04 	addi	sp,sp,-12
 4004d08:	109a0604 	addi	r2,r2,26648
 4004d0c:	dc400115 	stw	r17,4(sp)
 4004d10:	2023883a 	mov	r17,r4
 4004d14:	11000017 	ldw	r4,0(r2)
 4004d18:	dc000015 	stw	r16,0(sp)
 4004d1c:	dfc00215 	stw	ra,8(sp)
 4004d20:	2821883a 	mov	r16,r5
 4004d24:	20000226 	beq	r4,zero,4004d30 <__swsetup_r+0x30>
 4004d28:	20800e17 	ldw	r2,56(r4)
 4004d2c:	10003126 	beq	r2,zero,4004df4 <__swsetup_r+0xf4>
 4004d30:	8080030b 	ldhu	r2,12(r16)
 4004d34:	10c0020c 	andi	r3,r2,8
 4004d38:	1009883a 	mov	r4,r2
 4004d3c:	18000f26 	beq	r3,zero,4004d7c <__swsetup_r+0x7c>
 4004d40:	80c00417 	ldw	r3,16(r16)
 4004d44:	18001526 	beq	r3,zero,4004d9c <__swsetup_r+0x9c>
 4004d48:	1100004c 	andi	r4,r2,1
 4004d4c:	20001c1e 	bne	r4,zero,4004dc0 <__swsetup_r+0xc0>
 4004d50:	1080008c 	andi	r2,r2,2
 4004d54:	1000291e 	bne	r2,zero,4004dfc <__swsetup_r+0xfc>
 4004d58:	80800517 	ldw	r2,20(r16)
 4004d5c:	80800215 	stw	r2,8(r16)
 4004d60:	18001c26 	beq	r3,zero,4004dd4 <__swsetup_r+0xd4>
 4004d64:	0005883a 	mov	r2,zero
 4004d68:	dfc00217 	ldw	ra,8(sp)
 4004d6c:	dc400117 	ldw	r17,4(sp)
 4004d70:	dc000017 	ldw	r16,0(sp)
 4004d74:	dec00304 	addi	sp,sp,12
 4004d78:	f800283a 	ret
 4004d7c:	2080040c 	andi	r2,r4,16
 4004d80:	10002e26 	beq	r2,zero,4004e3c <__swsetup_r+0x13c>
 4004d84:	2080010c 	andi	r2,r4,4
 4004d88:	10001e1e 	bne	r2,zero,4004e04 <__swsetup_r+0x104>
 4004d8c:	80c00417 	ldw	r3,16(r16)
 4004d90:	20800214 	ori	r2,r4,8
 4004d94:	8080030d 	sth	r2,12(r16)
 4004d98:	183feb1e 	bne	r3,zero,4004d48 <__ram_exceptions_end+0xfbfe4b00>
 4004d9c:	1100a00c 	andi	r4,r2,640
 4004da0:	01408004 	movi	r5,512
 4004da4:	217fe826 	beq	r4,r5,4004d48 <__ram_exceptions_end+0xfbfe4b00>
 4004da8:	800b883a 	mov	r5,r16
 4004dac:	8809883a 	mov	r4,r17
 4004db0:	40078780 	call	4007878 <__smakebuf_r>
 4004db4:	8080030b 	ldhu	r2,12(r16)
 4004db8:	80c00417 	ldw	r3,16(r16)
 4004dbc:	003fe206 	br	4004d48 <__ram_exceptions_end+0xfbfe4b00>
 4004dc0:	80800517 	ldw	r2,20(r16)
 4004dc4:	80000215 	stw	zero,8(r16)
 4004dc8:	0085c83a 	sub	r2,zero,r2
 4004dcc:	80800615 	stw	r2,24(r16)
 4004dd0:	183fe41e 	bne	r3,zero,4004d64 <__ram_exceptions_end+0xfbfe4b1c>
 4004dd4:	80c0030b 	ldhu	r3,12(r16)
 4004dd8:	0005883a 	mov	r2,zero
 4004ddc:	1900200c 	andi	r4,r3,128
 4004de0:	203fe126 	beq	r4,zero,4004d68 <__ram_exceptions_end+0xfbfe4b20>
 4004de4:	18c01014 	ori	r3,r3,64
 4004de8:	80c0030d 	sth	r3,12(r16)
 4004dec:	00bfffc4 	movi	r2,-1
 4004df0:	003fdd06 	br	4004d68 <__ram_exceptions_end+0xfbfe4b20>
 4004df4:	4006cd40 	call	4006cd4 <__sinit>
 4004df8:	003fcd06 	br	4004d30 <__ram_exceptions_end+0xfbfe4ae8>
 4004dfc:	0005883a 	mov	r2,zero
 4004e00:	003fd606 	br	4004d5c <__ram_exceptions_end+0xfbfe4b14>
 4004e04:	81400c17 	ldw	r5,48(r16)
 4004e08:	28000626 	beq	r5,zero,4004e24 <__swsetup_r+0x124>
 4004e0c:	80801004 	addi	r2,r16,64
 4004e10:	28800326 	beq	r5,r2,4004e20 <__swsetup_r+0x120>
 4004e14:	8809883a 	mov	r4,r17
 4004e18:	4006e480 	call	4006e48 <_free_r>
 4004e1c:	8100030b 	ldhu	r4,12(r16)
 4004e20:	80000c15 	stw	zero,48(r16)
 4004e24:	80c00417 	ldw	r3,16(r16)
 4004e28:	00bff6c4 	movi	r2,-37
 4004e2c:	1108703a 	and	r4,r2,r4
 4004e30:	80000115 	stw	zero,4(r16)
 4004e34:	80c00015 	stw	r3,0(r16)
 4004e38:	003fd506 	br	4004d90 <__ram_exceptions_end+0xfbfe4b48>
 4004e3c:	00800244 	movi	r2,9
 4004e40:	88800015 	stw	r2,0(r17)
 4004e44:	20801014 	ori	r2,r4,64
 4004e48:	8080030d 	sth	r2,12(r16)
 4004e4c:	00bfffc4 	movi	r2,-1
 4004e50:	003fc506 	br	4004d68 <__ram_exceptions_end+0xfbfe4b20>

04004e54 <quorem>:
 4004e54:	defff704 	addi	sp,sp,-36
 4004e58:	dc800215 	stw	r18,8(sp)
 4004e5c:	20800417 	ldw	r2,16(r4)
 4004e60:	2c800417 	ldw	r18,16(r5)
 4004e64:	dfc00815 	stw	ra,32(sp)
 4004e68:	ddc00715 	stw	r23,28(sp)
 4004e6c:	dd800615 	stw	r22,24(sp)
 4004e70:	dd400515 	stw	r21,20(sp)
 4004e74:	dd000415 	stw	r20,16(sp)
 4004e78:	dcc00315 	stw	r19,12(sp)
 4004e7c:	dc400115 	stw	r17,4(sp)
 4004e80:	dc000015 	stw	r16,0(sp)
 4004e84:	14807116 	blt	r2,r18,400504c <quorem+0x1f8>
 4004e88:	94bfffc4 	addi	r18,r18,-1
 4004e8c:	94ad883a 	add	r22,r18,r18
 4004e90:	b5ad883a 	add	r22,r22,r22
 4004e94:	2c400504 	addi	r17,r5,20
 4004e98:	8da9883a 	add	r20,r17,r22
 4004e9c:	25400504 	addi	r21,r4,20
 4004ea0:	282f883a 	mov	r23,r5
 4004ea4:	adad883a 	add	r22,r21,r22
 4004ea8:	a1400017 	ldw	r5,0(r20)
 4004eac:	2021883a 	mov	r16,r4
 4004eb0:	b1000017 	ldw	r4,0(r22)
 4004eb4:	29400044 	addi	r5,r5,1
 4004eb8:	400deec0 	call	400deec <__udivsi3>
 4004ebc:	1027883a 	mov	r19,r2
 4004ec0:	10002c26 	beq	r2,zero,4004f74 <quorem+0x120>
 4004ec4:	a813883a 	mov	r9,r21
 4004ec8:	880b883a 	mov	r5,r17
 4004ecc:	0009883a 	mov	r4,zero
 4004ed0:	000d883a 	mov	r6,zero
 4004ed4:	2a000017 	ldw	r8,0(r5)
 4004ed8:	49c00017 	ldw	r7,0(r9)
 4004edc:	29400104 	addi	r5,r5,4
 4004ee0:	40bfffcc 	andi	r2,r8,65535
 4004ee4:	14c5383a 	mul	r2,r2,r19
 4004ee8:	4010d43a 	srli	r8,r8,16
 4004eec:	38ffffcc 	andi	r3,r7,65535
 4004ef0:	1105883a 	add	r2,r2,r4
 4004ef4:	1008d43a 	srli	r4,r2,16
 4004ef8:	44d1383a 	mul	r8,r8,r19
 4004efc:	198d883a 	add	r6,r3,r6
 4004f00:	10ffffcc 	andi	r3,r2,65535
 4004f04:	30c7c83a 	sub	r3,r6,r3
 4004f08:	380ed43a 	srli	r7,r7,16
 4004f0c:	4105883a 	add	r2,r8,r4
 4004f10:	180dd43a 	srai	r6,r3,16
 4004f14:	113fffcc 	andi	r4,r2,65535
 4004f18:	390fc83a 	sub	r7,r7,r4
 4004f1c:	398d883a 	add	r6,r7,r6
 4004f20:	300e943a 	slli	r7,r6,16
 4004f24:	18ffffcc 	andi	r3,r3,65535
 4004f28:	1008d43a 	srli	r4,r2,16
 4004f2c:	38ceb03a 	or	r7,r7,r3
 4004f30:	49c00015 	stw	r7,0(r9)
 4004f34:	300dd43a 	srai	r6,r6,16
 4004f38:	4a400104 	addi	r9,r9,4
 4004f3c:	a17fe52e 	bgeu	r20,r5,4004ed4 <__ram_exceptions_end+0xfbfe4c8c>
 4004f40:	b0800017 	ldw	r2,0(r22)
 4004f44:	10000b1e 	bne	r2,zero,4004f74 <quorem+0x120>
 4004f48:	b0bfff04 	addi	r2,r22,-4
 4004f4c:	a880082e 	bgeu	r21,r2,4004f70 <quorem+0x11c>
 4004f50:	b0ffff17 	ldw	r3,-4(r22)
 4004f54:	18000326 	beq	r3,zero,4004f64 <quorem+0x110>
 4004f58:	00000506 	br	4004f70 <quorem+0x11c>
 4004f5c:	10c00017 	ldw	r3,0(r2)
 4004f60:	1800031e 	bne	r3,zero,4004f70 <quorem+0x11c>
 4004f64:	10bfff04 	addi	r2,r2,-4
 4004f68:	94bfffc4 	addi	r18,r18,-1
 4004f6c:	a8bffb36 	bltu	r21,r2,4004f5c <__ram_exceptions_end+0xfbfe4d14>
 4004f70:	84800415 	stw	r18,16(r16)
 4004f74:	b80b883a 	mov	r5,r23
 4004f78:	8009883a 	mov	r4,r16
 4004f7c:	4008fb80 	call	4008fb8 <__mcmp>
 4004f80:	10002616 	blt	r2,zero,400501c <quorem+0x1c8>
 4004f84:	9cc00044 	addi	r19,r19,1
 4004f88:	a805883a 	mov	r2,r21
 4004f8c:	000b883a 	mov	r5,zero
 4004f90:	11000017 	ldw	r4,0(r2)
 4004f94:	89800017 	ldw	r6,0(r17)
 4004f98:	10800104 	addi	r2,r2,4
 4004f9c:	20ffffcc 	andi	r3,r4,65535
 4004fa0:	194b883a 	add	r5,r3,r5
 4004fa4:	30ffffcc 	andi	r3,r6,65535
 4004fa8:	28c7c83a 	sub	r3,r5,r3
 4004fac:	300cd43a 	srli	r6,r6,16
 4004fb0:	2008d43a 	srli	r4,r4,16
 4004fb4:	180bd43a 	srai	r5,r3,16
 4004fb8:	18ffffcc 	andi	r3,r3,65535
 4004fbc:	2189c83a 	sub	r4,r4,r6
 4004fc0:	2149883a 	add	r4,r4,r5
 4004fc4:	200c943a 	slli	r6,r4,16
 4004fc8:	8c400104 	addi	r17,r17,4
 4004fcc:	200bd43a 	srai	r5,r4,16
 4004fd0:	30c6b03a 	or	r3,r6,r3
 4004fd4:	10ffff15 	stw	r3,-4(r2)
 4004fd8:	a47fed2e 	bgeu	r20,r17,4004f90 <__ram_exceptions_end+0xfbfe4d48>
 4004fdc:	9485883a 	add	r2,r18,r18
 4004fe0:	1085883a 	add	r2,r2,r2
 4004fe4:	a887883a 	add	r3,r21,r2
 4004fe8:	18800017 	ldw	r2,0(r3)
 4004fec:	10000b1e 	bne	r2,zero,400501c <quorem+0x1c8>
 4004ff0:	18bfff04 	addi	r2,r3,-4
 4004ff4:	a880082e 	bgeu	r21,r2,4005018 <quorem+0x1c4>
 4004ff8:	18ffff17 	ldw	r3,-4(r3)
 4004ffc:	18000326 	beq	r3,zero,400500c <quorem+0x1b8>
 4005000:	00000506 	br	4005018 <quorem+0x1c4>
 4005004:	10c00017 	ldw	r3,0(r2)
 4005008:	1800031e 	bne	r3,zero,4005018 <quorem+0x1c4>
 400500c:	10bfff04 	addi	r2,r2,-4
 4005010:	94bfffc4 	addi	r18,r18,-1
 4005014:	a8bffb36 	bltu	r21,r2,4005004 <__ram_exceptions_end+0xfbfe4dbc>
 4005018:	84800415 	stw	r18,16(r16)
 400501c:	9805883a 	mov	r2,r19
 4005020:	dfc00817 	ldw	ra,32(sp)
 4005024:	ddc00717 	ldw	r23,28(sp)
 4005028:	dd800617 	ldw	r22,24(sp)
 400502c:	dd400517 	ldw	r21,20(sp)
 4005030:	dd000417 	ldw	r20,16(sp)
 4005034:	dcc00317 	ldw	r19,12(sp)
 4005038:	dc800217 	ldw	r18,8(sp)
 400503c:	dc400117 	ldw	r17,4(sp)
 4005040:	dc000017 	ldw	r16,0(sp)
 4005044:	dec00904 	addi	sp,sp,36
 4005048:	f800283a 	ret
 400504c:	0005883a 	mov	r2,zero
 4005050:	003ff306 	br	4005020 <__ram_exceptions_end+0xfbfe4dd8>

04005054 <_dtoa_r>:
 4005054:	20801017 	ldw	r2,64(r4)
 4005058:	deffde04 	addi	sp,sp,-136
 400505c:	df002015 	stw	fp,128(sp)
 4005060:	dcc01b15 	stw	r19,108(sp)
 4005064:	dc801a15 	stw	r18,104(sp)
 4005068:	dc401915 	stw	r17,100(sp)
 400506c:	dc001815 	stw	r16,96(sp)
 4005070:	dfc02115 	stw	ra,132(sp)
 4005074:	ddc01f15 	stw	r23,124(sp)
 4005078:	dd801e15 	stw	r22,120(sp)
 400507c:	dd401d15 	stw	r21,116(sp)
 4005080:	dd001c15 	stw	r20,112(sp)
 4005084:	d9c00315 	stw	r7,12(sp)
 4005088:	2039883a 	mov	fp,r4
 400508c:	3023883a 	mov	r17,r6
 4005090:	2825883a 	mov	r18,r5
 4005094:	dc002417 	ldw	r16,144(sp)
 4005098:	3027883a 	mov	r19,r6
 400509c:	10000826 	beq	r2,zero,40050c0 <_dtoa_r+0x6c>
 40050a0:	21801117 	ldw	r6,68(r4)
 40050a4:	00c00044 	movi	r3,1
 40050a8:	100b883a 	mov	r5,r2
 40050ac:	1986983a 	sll	r3,r3,r6
 40050b0:	11800115 	stw	r6,4(r2)
 40050b4:	10c00215 	stw	r3,8(r2)
 40050b8:	40087980 	call	4008798 <_Bfree>
 40050bc:	e0001015 	stw	zero,64(fp)
 40050c0:	88002e16 	blt	r17,zero,400517c <_dtoa_r+0x128>
 40050c4:	80000015 	stw	zero,0(r16)
 40050c8:	889ffc2c 	andhi	r2,r17,32752
 40050cc:	00dffc34 	movhi	r3,32752
 40050d0:	10c01c26 	beq	r2,r3,4005144 <_dtoa_r+0xf0>
 40050d4:	000d883a 	mov	r6,zero
 40050d8:	000f883a 	mov	r7,zero
 40050dc:	9009883a 	mov	r4,r18
 40050e0:	980b883a 	mov	r5,r19
 40050e4:	400f13c0 	call	400f13c <__eqdf2>
 40050e8:	10002b1e 	bne	r2,zero,4005198 <_dtoa_r+0x144>
 40050ec:	d9c02317 	ldw	r7,140(sp)
 40050f0:	00800044 	movi	r2,1
 40050f4:	38800015 	stw	r2,0(r7)
 40050f8:	d8802517 	ldw	r2,148(sp)
 40050fc:	10019e26 	beq	r2,zero,4005778 <_dtoa_r+0x724>
 4005100:	d8c02517 	ldw	r3,148(sp)
 4005104:	00810074 	movhi	r2,1025
 4005108:	10921444 	addi	r2,r2,18513
 400510c:	18800015 	stw	r2,0(r3)
 4005110:	10bfffc4 	addi	r2,r2,-1
 4005114:	dfc02117 	ldw	ra,132(sp)
 4005118:	df002017 	ldw	fp,128(sp)
 400511c:	ddc01f17 	ldw	r23,124(sp)
 4005120:	dd801e17 	ldw	r22,120(sp)
 4005124:	dd401d17 	ldw	r21,116(sp)
 4005128:	dd001c17 	ldw	r20,112(sp)
 400512c:	dcc01b17 	ldw	r19,108(sp)
 4005130:	dc801a17 	ldw	r18,104(sp)
 4005134:	dc401917 	ldw	r17,100(sp)
 4005138:	dc001817 	ldw	r16,96(sp)
 400513c:	dec02204 	addi	sp,sp,136
 4005140:	f800283a 	ret
 4005144:	d8c02317 	ldw	r3,140(sp)
 4005148:	0089c3c4 	movi	r2,9999
 400514c:	18800015 	stw	r2,0(r3)
 4005150:	90017726 	beq	r18,zero,4005730 <_dtoa_r+0x6dc>
 4005154:	00810074 	movhi	r2,1025
 4005158:	10922804 	addi	r2,r2,18592
 400515c:	d9002517 	ldw	r4,148(sp)
 4005160:	203fec26 	beq	r4,zero,4005114 <__ram_exceptions_end+0xfbfe4ecc>
 4005164:	10c000c7 	ldb	r3,3(r2)
 4005168:	1801781e 	bne	r3,zero,400574c <_dtoa_r+0x6f8>
 400516c:	10c000c4 	addi	r3,r2,3
 4005170:	d9802517 	ldw	r6,148(sp)
 4005174:	30c00015 	stw	r3,0(r6)
 4005178:	003fe606 	br	4005114 <__ram_exceptions_end+0xfbfe4ecc>
 400517c:	04e00034 	movhi	r19,32768
 4005180:	9cffffc4 	addi	r19,r19,-1
 4005184:	00800044 	movi	r2,1
 4005188:	8ce6703a 	and	r19,r17,r19
 400518c:	80800015 	stw	r2,0(r16)
 4005190:	9823883a 	mov	r17,r19
 4005194:	003fcc06 	br	40050c8 <__ram_exceptions_end+0xfbfe4e80>
 4005198:	d8800204 	addi	r2,sp,8
 400519c:	d8800015 	stw	r2,0(sp)
 40051a0:	d9c00104 	addi	r7,sp,4
 40051a4:	900b883a 	mov	r5,r18
 40051a8:	980d883a 	mov	r6,r19
 40051ac:	e009883a 	mov	r4,fp
 40051b0:	8820d53a 	srli	r16,r17,20
 40051b4:	40093840 	call	4009384 <__d2b>
 40051b8:	d8800915 	stw	r2,36(sp)
 40051bc:	8001651e 	bne	r16,zero,4005754 <_dtoa_r+0x700>
 40051c0:	dd800217 	ldw	r22,8(sp)
 40051c4:	dc000117 	ldw	r16,4(sp)
 40051c8:	00800804 	movi	r2,32
 40051cc:	b421883a 	add	r16,r22,r16
 40051d0:	80c10c84 	addi	r3,r16,1074
 40051d4:	10c2d10e 	bge	r2,r3,4005d1c <_dtoa_r+0xcc8>
 40051d8:	00801004 	movi	r2,64
 40051dc:	81010484 	addi	r4,r16,1042
 40051e0:	10c7c83a 	sub	r3,r2,r3
 40051e4:	9108d83a 	srl	r4,r18,r4
 40051e8:	88e2983a 	sll	r17,r17,r3
 40051ec:	2448b03a 	or	r4,r4,r17
 40051f0:	40105040 	call	4010504 <__floatunsidf>
 40051f4:	017f8434 	movhi	r5,65040
 40051f8:	01800044 	movi	r6,1
 40051fc:	1009883a 	mov	r4,r2
 4005200:	194b883a 	add	r5,r3,r5
 4005204:	843fffc4 	addi	r16,r16,-1
 4005208:	d9801115 	stw	r6,68(sp)
 400520c:	000d883a 	mov	r6,zero
 4005210:	01cffe34 	movhi	r7,16376
 4005214:	400faac0 	call	400faac <__subdf3>
 4005218:	0198dbf4 	movhi	r6,25455
 400521c:	01cff4f4 	movhi	r7,16339
 4005220:	3190d844 	addi	r6,r6,17249
 4005224:	39e1e9c4 	addi	r7,r7,-30809
 4005228:	1009883a 	mov	r4,r2
 400522c:	180b883a 	mov	r5,r3
 4005230:	400f3940 	call	400f394 <__muldf3>
 4005234:	01a2d874 	movhi	r6,35681
 4005238:	01cff1f4 	movhi	r7,16327
 400523c:	31b22cc4 	addi	r6,r6,-14157
 4005240:	39e28a04 	addi	r7,r7,-30168
 4005244:	180b883a 	mov	r5,r3
 4005248:	1009883a 	mov	r4,r2
 400524c:	400dfa80 	call	400dfa8 <__adddf3>
 4005250:	8009883a 	mov	r4,r16
 4005254:	1029883a 	mov	r20,r2
 4005258:	1823883a 	mov	r17,r3
 400525c:	40104280 	call	4010428 <__floatsidf>
 4005260:	019427f4 	movhi	r6,20639
 4005264:	01cff4f4 	movhi	r7,16339
 4005268:	319e7ec4 	addi	r6,r6,31227
 400526c:	39d104c4 	addi	r7,r7,17427
 4005270:	1009883a 	mov	r4,r2
 4005274:	180b883a 	mov	r5,r3
 4005278:	400f3940 	call	400f394 <__muldf3>
 400527c:	100d883a 	mov	r6,r2
 4005280:	180f883a 	mov	r7,r3
 4005284:	a009883a 	mov	r4,r20
 4005288:	880b883a 	mov	r5,r17
 400528c:	400dfa80 	call	400dfa8 <__adddf3>
 4005290:	1009883a 	mov	r4,r2
 4005294:	180b883a 	mov	r5,r3
 4005298:	1029883a 	mov	r20,r2
 400529c:	1823883a 	mov	r17,r3
 40052a0:	40103a80 	call	40103a8 <__fixdfsi>
 40052a4:	000d883a 	mov	r6,zero
 40052a8:	000f883a 	mov	r7,zero
 40052ac:	a009883a 	mov	r4,r20
 40052b0:	880b883a 	mov	r5,r17
 40052b4:	d8800515 	stw	r2,20(sp)
 40052b8:	400f2a00 	call	400f2a0 <__ledf2>
 40052bc:	10028716 	blt	r2,zero,4005cdc <_dtoa_r+0xc88>
 40052c0:	d8c00517 	ldw	r3,20(sp)
 40052c4:	00800584 	movi	r2,22
 40052c8:	10c27536 	bltu	r2,r3,4005ca0 <_dtoa_r+0xc4c>
 40052cc:	180490fa 	slli	r2,r3,3
 40052d0:	00c10074 	movhi	r3,1025
 40052d4:	18d24404 	addi	r3,r3,18704
 40052d8:	1885883a 	add	r2,r3,r2
 40052dc:	11000017 	ldw	r4,0(r2)
 40052e0:	11400117 	ldw	r5,4(r2)
 40052e4:	900d883a 	mov	r6,r18
 40052e8:	980f883a 	mov	r7,r19
 40052ec:	400f1c40 	call	400f1c4 <__gedf2>
 40052f0:	00828d0e 	bge	zero,r2,4005d28 <_dtoa_r+0xcd4>
 40052f4:	d9000517 	ldw	r4,20(sp)
 40052f8:	d8000e15 	stw	zero,56(sp)
 40052fc:	213fffc4 	addi	r4,r4,-1
 4005300:	d9000515 	stw	r4,20(sp)
 4005304:	b42dc83a 	sub	r22,r22,r16
 4005308:	b5bfffc4 	addi	r22,r22,-1
 400530c:	b0026f16 	blt	r22,zero,4005ccc <_dtoa_r+0xc78>
 4005310:	d8000815 	stw	zero,32(sp)
 4005314:	d9c00517 	ldw	r7,20(sp)
 4005318:	38026416 	blt	r7,zero,4005cac <_dtoa_r+0xc58>
 400531c:	b1ed883a 	add	r22,r22,r7
 4005320:	d9c00d15 	stw	r7,52(sp)
 4005324:	d8000a15 	stw	zero,40(sp)
 4005328:	d9800317 	ldw	r6,12(sp)
 400532c:	00800244 	movi	r2,9
 4005330:	11811436 	bltu	r2,r6,4005784 <_dtoa_r+0x730>
 4005334:	00800144 	movi	r2,5
 4005338:	1184e10e 	bge	r2,r6,40066c0 <_dtoa_r+0x166c>
 400533c:	31bfff04 	addi	r6,r6,-4
 4005340:	d9800315 	stw	r6,12(sp)
 4005344:	0023883a 	mov	r17,zero
 4005348:	d9800317 	ldw	r6,12(sp)
 400534c:	008000c4 	movi	r2,3
 4005350:	30836726 	beq	r6,r2,40060f0 <_dtoa_r+0x109c>
 4005354:	1183410e 	bge	r2,r6,400605c <_dtoa_r+0x1008>
 4005358:	d9c00317 	ldw	r7,12(sp)
 400535c:	00800104 	movi	r2,4
 4005360:	38827c26 	beq	r7,r2,4005d54 <_dtoa_r+0xd00>
 4005364:	00800144 	movi	r2,5
 4005368:	3884c41e 	bne	r7,r2,400667c <_dtoa_r+0x1628>
 400536c:	00800044 	movi	r2,1
 4005370:	d8800b15 	stw	r2,44(sp)
 4005374:	d8c00517 	ldw	r3,20(sp)
 4005378:	d9002217 	ldw	r4,136(sp)
 400537c:	1907883a 	add	r3,r3,r4
 4005380:	19800044 	addi	r6,r3,1
 4005384:	d8c00c15 	stw	r3,48(sp)
 4005388:	d9800615 	stw	r6,24(sp)
 400538c:	0183a40e 	bge	zero,r6,4006220 <_dtoa_r+0x11cc>
 4005390:	d9800617 	ldw	r6,24(sp)
 4005394:	3021883a 	mov	r16,r6
 4005398:	e0001115 	stw	zero,68(fp)
 400539c:	008005c4 	movi	r2,23
 40053a0:	1184c92e 	bgeu	r2,r6,40066c8 <_dtoa_r+0x1674>
 40053a4:	00c00044 	movi	r3,1
 40053a8:	00800104 	movi	r2,4
 40053ac:	1085883a 	add	r2,r2,r2
 40053b0:	11000504 	addi	r4,r2,20
 40053b4:	180b883a 	mov	r5,r3
 40053b8:	18c00044 	addi	r3,r3,1
 40053bc:	313ffb2e 	bgeu	r6,r4,40053ac <__ram_exceptions_end+0xfbfe5164>
 40053c0:	e1401115 	stw	r5,68(fp)
 40053c4:	e009883a 	mov	r4,fp
 40053c8:	40086f00 	call	40086f0 <_Balloc>
 40053cc:	d8800715 	stw	r2,28(sp)
 40053d0:	e0801015 	stw	r2,64(fp)
 40053d4:	00800384 	movi	r2,14
 40053d8:	1400f736 	bltu	r2,r16,40057b8 <_dtoa_r+0x764>
 40053dc:	8800f626 	beq	r17,zero,40057b8 <_dtoa_r+0x764>
 40053e0:	d9c00517 	ldw	r7,20(sp)
 40053e4:	01c39a0e 	bge	zero,r7,4006250 <_dtoa_r+0x11fc>
 40053e8:	388003cc 	andi	r2,r7,15
 40053ec:	100490fa 	slli	r2,r2,3
 40053f0:	382bd13a 	srai	r21,r7,4
 40053f4:	00c10074 	movhi	r3,1025
 40053f8:	18d24404 	addi	r3,r3,18704
 40053fc:	1885883a 	add	r2,r3,r2
 4005400:	a8c0040c 	andi	r3,r21,16
 4005404:	12400017 	ldw	r9,0(r2)
 4005408:	12000117 	ldw	r8,4(r2)
 400540c:	18037926 	beq	r3,zero,40061f4 <_dtoa_r+0x11a0>
 4005410:	00810074 	movhi	r2,1025
 4005414:	10923a04 	addi	r2,r2,18664
 4005418:	11800817 	ldw	r6,32(r2)
 400541c:	11c00917 	ldw	r7,36(r2)
 4005420:	9009883a 	mov	r4,r18
 4005424:	980b883a 	mov	r5,r19
 4005428:	da001715 	stw	r8,92(sp)
 400542c:	da401615 	stw	r9,88(sp)
 4005430:	400e8540 	call	400e854 <__divdf3>
 4005434:	da001717 	ldw	r8,92(sp)
 4005438:	da401617 	ldw	r9,88(sp)
 400543c:	ad4003cc 	andi	r21,r21,15
 4005440:	040000c4 	movi	r16,3
 4005444:	1023883a 	mov	r17,r2
 4005448:	1829883a 	mov	r20,r3
 400544c:	a8001126 	beq	r21,zero,4005494 <_dtoa_r+0x440>
 4005450:	05c10074 	movhi	r23,1025
 4005454:	bdd23a04 	addi	r23,r23,18664
 4005458:	4805883a 	mov	r2,r9
 400545c:	4007883a 	mov	r3,r8
 4005460:	a980004c 	andi	r6,r21,1
 4005464:	1009883a 	mov	r4,r2
 4005468:	a82bd07a 	srai	r21,r21,1
 400546c:	180b883a 	mov	r5,r3
 4005470:	30000426 	beq	r6,zero,4005484 <_dtoa_r+0x430>
 4005474:	b9800017 	ldw	r6,0(r23)
 4005478:	b9c00117 	ldw	r7,4(r23)
 400547c:	84000044 	addi	r16,r16,1
 4005480:	400f3940 	call	400f394 <__muldf3>
 4005484:	bdc00204 	addi	r23,r23,8
 4005488:	a83ff51e 	bne	r21,zero,4005460 <__ram_exceptions_end+0xfbfe5218>
 400548c:	1013883a 	mov	r9,r2
 4005490:	1811883a 	mov	r8,r3
 4005494:	480d883a 	mov	r6,r9
 4005498:	400f883a 	mov	r7,r8
 400549c:	8809883a 	mov	r4,r17
 40054a0:	a00b883a 	mov	r5,r20
 40054a4:	400e8540 	call	400e854 <__divdf3>
 40054a8:	d8800f15 	stw	r2,60(sp)
 40054ac:	d8c01015 	stw	r3,64(sp)
 40054b0:	d8c00e17 	ldw	r3,56(sp)
 40054b4:	18000626 	beq	r3,zero,40054d0 <_dtoa_r+0x47c>
 40054b8:	d9000f17 	ldw	r4,60(sp)
 40054bc:	d9401017 	ldw	r5,64(sp)
 40054c0:	000d883a 	mov	r6,zero
 40054c4:	01cffc34 	movhi	r7,16368
 40054c8:	400f2a00 	call	400f2a0 <__ledf2>
 40054cc:	10040b16 	blt	r2,zero,40064fc <_dtoa_r+0x14a8>
 40054d0:	8009883a 	mov	r4,r16
 40054d4:	40104280 	call	4010428 <__floatsidf>
 40054d8:	d9800f17 	ldw	r6,60(sp)
 40054dc:	d9c01017 	ldw	r7,64(sp)
 40054e0:	1009883a 	mov	r4,r2
 40054e4:	180b883a 	mov	r5,r3
 40054e8:	400f3940 	call	400f394 <__muldf3>
 40054ec:	000d883a 	mov	r6,zero
 40054f0:	01d00734 	movhi	r7,16412
 40054f4:	1009883a 	mov	r4,r2
 40054f8:	180b883a 	mov	r5,r3
 40054fc:	400dfa80 	call	400dfa8 <__adddf3>
 4005500:	1021883a 	mov	r16,r2
 4005504:	d8800617 	ldw	r2,24(sp)
 4005508:	047f3034 	movhi	r17,64704
 400550c:	1c63883a 	add	r17,r3,r17
 4005510:	10031826 	beq	r2,zero,4006174 <_dtoa_r+0x1120>
 4005514:	d8c00517 	ldw	r3,20(sp)
 4005518:	db000617 	ldw	r12,24(sp)
 400551c:	d8c01315 	stw	r3,76(sp)
 4005520:	d9000b17 	ldw	r4,44(sp)
 4005524:	20038f26 	beq	r4,zero,4006364 <_dtoa_r+0x1310>
 4005528:	60bfffc4 	addi	r2,r12,-1
 400552c:	100490fa 	slli	r2,r2,3
 4005530:	00c10074 	movhi	r3,1025
 4005534:	18d24404 	addi	r3,r3,18704
 4005538:	1885883a 	add	r2,r3,r2
 400553c:	11800017 	ldw	r6,0(r2)
 4005540:	11c00117 	ldw	r7,4(r2)
 4005544:	d8800717 	ldw	r2,28(sp)
 4005548:	0009883a 	mov	r4,zero
 400554c:	014ff834 	movhi	r5,16352
 4005550:	db001615 	stw	r12,88(sp)
 4005554:	15c00044 	addi	r23,r2,1
 4005558:	400e8540 	call	400e854 <__divdf3>
 400555c:	800d883a 	mov	r6,r16
 4005560:	880f883a 	mov	r7,r17
 4005564:	1009883a 	mov	r4,r2
 4005568:	180b883a 	mov	r5,r3
 400556c:	400faac0 	call	400faac <__subdf3>
 4005570:	d9401017 	ldw	r5,64(sp)
 4005574:	d9000f17 	ldw	r4,60(sp)
 4005578:	102b883a 	mov	r21,r2
 400557c:	d8c01215 	stw	r3,72(sp)
 4005580:	40103a80 	call	40103a8 <__fixdfsi>
 4005584:	1009883a 	mov	r4,r2
 4005588:	1029883a 	mov	r20,r2
 400558c:	40104280 	call	4010428 <__floatsidf>
 4005590:	d9000f17 	ldw	r4,60(sp)
 4005594:	d9401017 	ldw	r5,64(sp)
 4005598:	100d883a 	mov	r6,r2
 400559c:	180f883a 	mov	r7,r3
 40055a0:	400faac0 	call	400faac <__subdf3>
 40055a4:	1823883a 	mov	r17,r3
 40055a8:	d8c00717 	ldw	r3,28(sp)
 40055ac:	d9401217 	ldw	r5,72(sp)
 40055b0:	a2000c04 	addi	r8,r20,48
 40055b4:	1021883a 	mov	r16,r2
 40055b8:	1a000005 	stb	r8,0(r3)
 40055bc:	800d883a 	mov	r6,r16
 40055c0:	880f883a 	mov	r7,r17
 40055c4:	a809883a 	mov	r4,r21
 40055c8:	4029883a 	mov	r20,r8
 40055cc:	400f1c40 	call	400f1c4 <__gedf2>
 40055d0:	00841d16 	blt	zero,r2,4006648 <_dtoa_r+0x15f4>
 40055d4:	800d883a 	mov	r6,r16
 40055d8:	880f883a 	mov	r7,r17
 40055dc:	0009883a 	mov	r4,zero
 40055e0:	014ffc34 	movhi	r5,16368
 40055e4:	400faac0 	call	400faac <__subdf3>
 40055e8:	d9401217 	ldw	r5,72(sp)
 40055ec:	100d883a 	mov	r6,r2
 40055f0:	180f883a 	mov	r7,r3
 40055f4:	a809883a 	mov	r4,r21
 40055f8:	400f1c40 	call	400f1c4 <__gedf2>
 40055fc:	db001617 	ldw	r12,88(sp)
 4005600:	00840e16 	blt	zero,r2,400663c <_dtoa_r+0x15e8>
 4005604:	00800044 	movi	r2,1
 4005608:	13006b0e 	bge	r2,r12,40057b8 <_dtoa_r+0x764>
 400560c:	d9000717 	ldw	r4,28(sp)
 4005610:	dd800f15 	stw	r22,60(sp)
 4005614:	dcc01015 	stw	r19,64(sp)
 4005618:	2319883a 	add	r12,r4,r12
 400561c:	dcc01217 	ldw	r19,72(sp)
 4005620:	602d883a 	mov	r22,r12
 4005624:	dc801215 	stw	r18,72(sp)
 4005628:	b825883a 	mov	r18,r23
 400562c:	00000906 	br	4005654 <_dtoa_r+0x600>
 4005630:	400faac0 	call	400faac <__subdf3>
 4005634:	a80d883a 	mov	r6,r21
 4005638:	980f883a 	mov	r7,r19
 400563c:	1009883a 	mov	r4,r2
 4005640:	180b883a 	mov	r5,r3
 4005644:	400f2a00 	call	400f2a0 <__ledf2>
 4005648:	1003e816 	blt	r2,zero,40065ec <_dtoa_r+0x1598>
 400564c:	b825883a 	mov	r18,r23
 4005650:	bd83e926 	beq	r23,r22,40065f8 <_dtoa_r+0x15a4>
 4005654:	a809883a 	mov	r4,r21
 4005658:	980b883a 	mov	r5,r19
 400565c:	000d883a 	mov	r6,zero
 4005660:	01d00934 	movhi	r7,16420
 4005664:	400f3940 	call	400f394 <__muldf3>
 4005668:	000d883a 	mov	r6,zero
 400566c:	01d00934 	movhi	r7,16420
 4005670:	8009883a 	mov	r4,r16
 4005674:	880b883a 	mov	r5,r17
 4005678:	102b883a 	mov	r21,r2
 400567c:	1827883a 	mov	r19,r3
 4005680:	400f3940 	call	400f394 <__muldf3>
 4005684:	180b883a 	mov	r5,r3
 4005688:	1009883a 	mov	r4,r2
 400568c:	1821883a 	mov	r16,r3
 4005690:	1023883a 	mov	r17,r2
 4005694:	40103a80 	call	40103a8 <__fixdfsi>
 4005698:	1009883a 	mov	r4,r2
 400569c:	1029883a 	mov	r20,r2
 40056a0:	40104280 	call	4010428 <__floatsidf>
 40056a4:	8809883a 	mov	r4,r17
 40056a8:	800b883a 	mov	r5,r16
 40056ac:	100d883a 	mov	r6,r2
 40056b0:	180f883a 	mov	r7,r3
 40056b4:	400faac0 	call	400faac <__subdf3>
 40056b8:	a5000c04 	addi	r20,r20,48
 40056bc:	a80d883a 	mov	r6,r21
 40056c0:	980f883a 	mov	r7,r19
 40056c4:	1009883a 	mov	r4,r2
 40056c8:	180b883a 	mov	r5,r3
 40056cc:	95000005 	stb	r20,0(r18)
 40056d0:	1021883a 	mov	r16,r2
 40056d4:	1823883a 	mov	r17,r3
 40056d8:	400f2a00 	call	400f2a0 <__ledf2>
 40056dc:	bdc00044 	addi	r23,r23,1
 40056e0:	800d883a 	mov	r6,r16
 40056e4:	880f883a 	mov	r7,r17
 40056e8:	0009883a 	mov	r4,zero
 40056ec:	014ffc34 	movhi	r5,16368
 40056f0:	103fcf0e 	bge	r2,zero,4005630 <__ram_exceptions_end+0xfbfe53e8>
 40056f4:	d8c01317 	ldw	r3,76(sp)
 40056f8:	d8c00515 	stw	r3,20(sp)
 40056fc:	d9400917 	ldw	r5,36(sp)
 4005700:	e009883a 	mov	r4,fp
 4005704:	40087980 	call	4008798 <_Bfree>
 4005708:	d9000517 	ldw	r4,20(sp)
 400570c:	d9802317 	ldw	r6,140(sp)
 4005710:	d9c02517 	ldw	r7,148(sp)
 4005714:	b8000005 	stb	zero,0(r23)
 4005718:	20800044 	addi	r2,r4,1
 400571c:	30800015 	stw	r2,0(r6)
 4005720:	3802aa26 	beq	r7,zero,40061cc <_dtoa_r+0x1178>
 4005724:	3dc00015 	stw	r23,0(r7)
 4005728:	d8800717 	ldw	r2,28(sp)
 400572c:	003e7906 	br	4005114 <__ram_exceptions_end+0xfbfe4ecc>
 4005730:	00800434 	movhi	r2,16
 4005734:	10bfffc4 	addi	r2,r2,-1
 4005738:	88a2703a 	and	r17,r17,r2
 400573c:	883e851e 	bne	r17,zero,4005154 <__ram_exceptions_end+0xfbfe4f0c>
 4005740:	00810074 	movhi	r2,1025
 4005744:	10922504 	addi	r2,r2,18580
 4005748:	003e8406 	br	400515c <__ram_exceptions_end+0xfbfe4f14>
 400574c:	10c00204 	addi	r3,r2,8
 4005750:	003e8706 	br	4005170 <__ram_exceptions_end+0xfbfe4f28>
 4005754:	01400434 	movhi	r5,16
 4005758:	297fffc4 	addi	r5,r5,-1
 400575c:	994a703a 	and	r5,r19,r5
 4005760:	9009883a 	mov	r4,r18
 4005764:	843f0044 	addi	r16,r16,-1023
 4005768:	294ffc34 	orhi	r5,r5,16368
 400576c:	dd800217 	ldw	r22,8(sp)
 4005770:	d8001115 	stw	zero,68(sp)
 4005774:	003ea506 	br	400520c <__ram_exceptions_end+0xfbfe4fc4>
 4005778:	00810074 	movhi	r2,1025
 400577c:	10921404 	addi	r2,r2,18512
 4005780:	003e6406 	br	4005114 <__ram_exceptions_end+0xfbfe4ecc>
 4005784:	e0001115 	stw	zero,68(fp)
 4005788:	000b883a 	mov	r5,zero
 400578c:	e009883a 	mov	r4,fp
 4005790:	40086f00 	call	40086f0 <_Balloc>
 4005794:	01bfffc4 	movi	r6,-1
 4005798:	01c00044 	movi	r7,1
 400579c:	d8800715 	stw	r2,28(sp)
 40057a0:	d9800c15 	stw	r6,48(sp)
 40057a4:	e0801015 	stw	r2,64(fp)
 40057a8:	d8000315 	stw	zero,12(sp)
 40057ac:	d9c00b15 	stw	r7,44(sp)
 40057b0:	d9800615 	stw	r6,24(sp)
 40057b4:	d8002215 	stw	zero,136(sp)
 40057b8:	d8800117 	ldw	r2,4(sp)
 40057bc:	10008916 	blt	r2,zero,40059e4 <_dtoa_r+0x990>
 40057c0:	d9000517 	ldw	r4,20(sp)
 40057c4:	00c00384 	movi	r3,14
 40057c8:	19008616 	blt	r3,r4,40059e4 <_dtoa_r+0x990>
 40057cc:	200490fa 	slli	r2,r4,3
 40057d0:	00c10074 	movhi	r3,1025
 40057d4:	d9802217 	ldw	r6,136(sp)
 40057d8:	18d24404 	addi	r3,r3,18704
 40057dc:	1885883a 	add	r2,r3,r2
 40057e0:	14000017 	ldw	r16,0(r2)
 40057e4:	14400117 	ldw	r17,4(r2)
 40057e8:	30016316 	blt	r6,zero,4005d78 <_dtoa_r+0xd24>
 40057ec:	800d883a 	mov	r6,r16
 40057f0:	880f883a 	mov	r7,r17
 40057f4:	9009883a 	mov	r4,r18
 40057f8:	980b883a 	mov	r5,r19
 40057fc:	400e8540 	call	400e854 <__divdf3>
 4005800:	180b883a 	mov	r5,r3
 4005804:	1009883a 	mov	r4,r2
 4005808:	40103a80 	call	40103a8 <__fixdfsi>
 400580c:	1009883a 	mov	r4,r2
 4005810:	102b883a 	mov	r21,r2
 4005814:	40104280 	call	4010428 <__floatsidf>
 4005818:	800d883a 	mov	r6,r16
 400581c:	880f883a 	mov	r7,r17
 4005820:	1009883a 	mov	r4,r2
 4005824:	180b883a 	mov	r5,r3
 4005828:	400f3940 	call	400f394 <__muldf3>
 400582c:	100d883a 	mov	r6,r2
 4005830:	180f883a 	mov	r7,r3
 4005834:	9009883a 	mov	r4,r18
 4005838:	980b883a 	mov	r5,r19
 400583c:	400faac0 	call	400faac <__subdf3>
 4005840:	d9c00717 	ldw	r7,28(sp)
 4005844:	1009883a 	mov	r4,r2
 4005848:	a8800c04 	addi	r2,r21,48
 400584c:	38800005 	stb	r2,0(r7)
 4005850:	3dc00044 	addi	r23,r7,1
 4005854:	d9c00617 	ldw	r7,24(sp)
 4005858:	01800044 	movi	r6,1
 400585c:	180b883a 	mov	r5,r3
 4005860:	2005883a 	mov	r2,r4
 4005864:	39803826 	beq	r7,r6,4005948 <_dtoa_r+0x8f4>
 4005868:	000d883a 	mov	r6,zero
 400586c:	01d00934 	movhi	r7,16420
 4005870:	400f3940 	call	400f394 <__muldf3>
 4005874:	000d883a 	mov	r6,zero
 4005878:	000f883a 	mov	r7,zero
 400587c:	1009883a 	mov	r4,r2
 4005880:	180b883a 	mov	r5,r3
 4005884:	1025883a 	mov	r18,r2
 4005888:	1827883a 	mov	r19,r3
 400588c:	400f13c0 	call	400f13c <__eqdf2>
 4005890:	103f9a26 	beq	r2,zero,40056fc <__ram_exceptions_end+0xfbfe54b4>
 4005894:	d9c00617 	ldw	r7,24(sp)
 4005898:	d8c00717 	ldw	r3,28(sp)
 400589c:	b829883a 	mov	r20,r23
 40058a0:	38bfffc4 	addi	r2,r7,-1
 40058a4:	18ad883a 	add	r22,r3,r2
 40058a8:	00000a06 	br	40058d4 <_dtoa_r+0x880>
 40058ac:	400f3940 	call	400f394 <__muldf3>
 40058b0:	000d883a 	mov	r6,zero
 40058b4:	000f883a 	mov	r7,zero
 40058b8:	1009883a 	mov	r4,r2
 40058bc:	180b883a 	mov	r5,r3
 40058c0:	1025883a 	mov	r18,r2
 40058c4:	1827883a 	mov	r19,r3
 40058c8:	b829883a 	mov	r20,r23
 40058cc:	400f13c0 	call	400f13c <__eqdf2>
 40058d0:	103f8a26 	beq	r2,zero,40056fc <__ram_exceptions_end+0xfbfe54b4>
 40058d4:	800d883a 	mov	r6,r16
 40058d8:	880f883a 	mov	r7,r17
 40058dc:	9009883a 	mov	r4,r18
 40058e0:	980b883a 	mov	r5,r19
 40058e4:	400e8540 	call	400e854 <__divdf3>
 40058e8:	180b883a 	mov	r5,r3
 40058ec:	1009883a 	mov	r4,r2
 40058f0:	40103a80 	call	40103a8 <__fixdfsi>
 40058f4:	1009883a 	mov	r4,r2
 40058f8:	102b883a 	mov	r21,r2
 40058fc:	40104280 	call	4010428 <__floatsidf>
 4005900:	800d883a 	mov	r6,r16
 4005904:	880f883a 	mov	r7,r17
 4005908:	1009883a 	mov	r4,r2
 400590c:	180b883a 	mov	r5,r3
 4005910:	400f3940 	call	400f394 <__muldf3>
 4005914:	100d883a 	mov	r6,r2
 4005918:	180f883a 	mov	r7,r3
 400591c:	9009883a 	mov	r4,r18
 4005920:	980b883a 	mov	r5,r19
 4005924:	400faac0 	call	400faac <__subdf3>
 4005928:	aa000c04 	addi	r8,r21,48
 400592c:	a2000005 	stb	r8,0(r20)
 4005930:	000d883a 	mov	r6,zero
 4005934:	01d00934 	movhi	r7,16420
 4005938:	1009883a 	mov	r4,r2
 400593c:	180b883a 	mov	r5,r3
 4005940:	a5c00044 	addi	r23,r20,1
 4005944:	b53fd91e 	bne	r22,r20,40058ac <__ram_exceptions_end+0xfbfe5664>
 4005948:	100d883a 	mov	r6,r2
 400594c:	180f883a 	mov	r7,r3
 4005950:	1009883a 	mov	r4,r2
 4005954:	180b883a 	mov	r5,r3
 4005958:	400dfa80 	call	400dfa8 <__adddf3>
 400595c:	100d883a 	mov	r6,r2
 4005960:	180f883a 	mov	r7,r3
 4005964:	8009883a 	mov	r4,r16
 4005968:	880b883a 	mov	r5,r17
 400596c:	1027883a 	mov	r19,r2
 4005970:	1825883a 	mov	r18,r3
 4005974:	400f2a00 	call	400f2a0 <__ledf2>
 4005978:	10000816 	blt	r2,zero,400599c <_dtoa_r+0x948>
 400597c:	980d883a 	mov	r6,r19
 4005980:	900f883a 	mov	r7,r18
 4005984:	8009883a 	mov	r4,r16
 4005988:	880b883a 	mov	r5,r17
 400598c:	400f13c0 	call	400f13c <__eqdf2>
 4005990:	103f5a1e 	bne	r2,zero,40056fc <__ram_exceptions_end+0xfbfe54b4>
 4005994:	ad40004c 	andi	r21,r21,1
 4005998:	a83f5826 	beq	r21,zero,40056fc <__ram_exceptions_end+0xfbfe54b4>
 400599c:	bd3fffc3 	ldbu	r20,-1(r23)
 40059a0:	b8bfffc4 	addi	r2,r23,-1
 40059a4:	1007883a 	mov	r3,r2
 40059a8:	01400e44 	movi	r5,57
 40059ac:	d9800717 	ldw	r6,28(sp)
 40059b0:	00000506 	br	40059c8 <_dtoa_r+0x974>
 40059b4:	18ffffc4 	addi	r3,r3,-1
 40059b8:	11824726 	beq	r2,r6,40062d8 <_dtoa_r+0x1284>
 40059bc:	1d000003 	ldbu	r20,0(r3)
 40059c0:	102f883a 	mov	r23,r2
 40059c4:	10bfffc4 	addi	r2,r2,-1
 40059c8:	a1003fcc 	andi	r4,r20,255
 40059cc:	2100201c 	xori	r4,r4,128
 40059d0:	213fe004 	addi	r4,r4,-128
 40059d4:	217ff726 	beq	r4,r5,40059b4 <__ram_exceptions_end+0xfbfe576c>
 40059d8:	a2000044 	addi	r8,r20,1
 40059dc:	12000005 	stb	r8,0(r2)
 40059e0:	003f4606 	br	40056fc <__ram_exceptions_end+0xfbfe54b4>
 40059e4:	d9000b17 	ldw	r4,44(sp)
 40059e8:	2000c826 	beq	r4,zero,4005d0c <_dtoa_r+0xcb8>
 40059ec:	d9800317 	ldw	r6,12(sp)
 40059f0:	00c00044 	movi	r3,1
 40059f4:	1980f90e 	bge	r3,r6,4005ddc <_dtoa_r+0xd88>
 40059f8:	d8800617 	ldw	r2,24(sp)
 40059fc:	d8c00a17 	ldw	r3,40(sp)
 4005a00:	157fffc4 	addi	r21,r2,-1
 4005a04:	1d41f316 	blt	r3,r21,40061d4 <_dtoa_r+0x1180>
 4005a08:	1d6bc83a 	sub	r21,r3,r21
 4005a0c:	d9c00617 	ldw	r7,24(sp)
 4005a10:	3802aa16 	blt	r7,zero,40064bc <_dtoa_r+0x1468>
 4005a14:	dd000817 	ldw	r20,32(sp)
 4005a18:	d8800617 	ldw	r2,24(sp)
 4005a1c:	d8c00817 	ldw	r3,32(sp)
 4005a20:	01400044 	movi	r5,1
 4005a24:	e009883a 	mov	r4,fp
 4005a28:	1887883a 	add	r3,r3,r2
 4005a2c:	d8c00815 	stw	r3,32(sp)
 4005a30:	b0ad883a 	add	r22,r22,r2
 4005a34:	4008afc0 	call	4008afc <__i2b>
 4005a38:	1023883a 	mov	r17,r2
 4005a3c:	a0000826 	beq	r20,zero,4005a60 <_dtoa_r+0xa0c>
 4005a40:	0580070e 	bge	zero,r22,4005a60 <_dtoa_r+0xa0c>
 4005a44:	a005883a 	mov	r2,r20
 4005a48:	b500b916 	blt	r22,r20,4005d30 <_dtoa_r+0xcdc>
 4005a4c:	d9000817 	ldw	r4,32(sp)
 4005a50:	a0a9c83a 	sub	r20,r20,r2
 4005a54:	b0adc83a 	sub	r22,r22,r2
 4005a58:	2089c83a 	sub	r4,r4,r2
 4005a5c:	d9000815 	stw	r4,32(sp)
 4005a60:	d9800a17 	ldw	r6,40(sp)
 4005a64:	0181810e 	bge	zero,r6,400606c <_dtoa_r+0x1018>
 4005a68:	d9c00b17 	ldw	r7,44(sp)
 4005a6c:	3800b326 	beq	r7,zero,4005d3c <_dtoa_r+0xce8>
 4005a70:	a800b226 	beq	r21,zero,4005d3c <_dtoa_r+0xce8>
 4005a74:	880b883a 	mov	r5,r17
 4005a78:	a80d883a 	mov	r6,r21
 4005a7c:	e009883a 	mov	r4,fp
 4005a80:	4008d300 	call	4008d30 <__pow5mult>
 4005a84:	d9800917 	ldw	r6,36(sp)
 4005a88:	100b883a 	mov	r5,r2
 4005a8c:	e009883a 	mov	r4,fp
 4005a90:	1023883a 	mov	r17,r2
 4005a94:	4008b380 	call	4008b38 <__multiply>
 4005a98:	1021883a 	mov	r16,r2
 4005a9c:	d8800a17 	ldw	r2,40(sp)
 4005aa0:	d9400917 	ldw	r5,36(sp)
 4005aa4:	e009883a 	mov	r4,fp
 4005aa8:	1545c83a 	sub	r2,r2,r21
 4005aac:	d8800a15 	stw	r2,40(sp)
 4005ab0:	40087980 	call	4008798 <_Bfree>
 4005ab4:	d8c00a17 	ldw	r3,40(sp)
 4005ab8:	18009f1e 	bne	r3,zero,4005d38 <_dtoa_r+0xce4>
 4005abc:	05c00044 	movi	r23,1
 4005ac0:	e009883a 	mov	r4,fp
 4005ac4:	b80b883a 	mov	r5,r23
 4005ac8:	4008afc0 	call	4008afc <__i2b>
 4005acc:	d9000d17 	ldw	r4,52(sp)
 4005ad0:	102b883a 	mov	r21,r2
 4005ad4:	2000ce26 	beq	r4,zero,4005e10 <_dtoa_r+0xdbc>
 4005ad8:	200d883a 	mov	r6,r4
 4005adc:	100b883a 	mov	r5,r2
 4005ae0:	e009883a 	mov	r4,fp
 4005ae4:	4008d300 	call	4008d30 <__pow5mult>
 4005ae8:	d9800317 	ldw	r6,12(sp)
 4005aec:	102b883a 	mov	r21,r2
 4005af0:	b981810e 	bge	r23,r6,40060f8 <_dtoa_r+0x10a4>
 4005af4:	0027883a 	mov	r19,zero
 4005af8:	a8800417 	ldw	r2,16(r21)
 4005afc:	05c00804 	movi	r23,32
 4005b00:	10800104 	addi	r2,r2,4
 4005b04:	1085883a 	add	r2,r2,r2
 4005b08:	1085883a 	add	r2,r2,r2
 4005b0c:	a885883a 	add	r2,r21,r2
 4005b10:	11000017 	ldw	r4,0(r2)
 4005b14:	40089e40 	call	40089e4 <__hi0bits>
 4005b18:	b885c83a 	sub	r2,r23,r2
 4005b1c:	1585883a 	add	r2,r2,r22
 4005b20:	108007cc 	andi	r2,r2,31
 4005b24:	1000b326 	beq	r2,zero,4005df4 <_dtoa_r+0xda0>
 4005b28:	00c00804 	movi	r3,32
 4005b2c:	1887c83a 	sub	r3,r3,r2
 4005b30:	01000104 	movi	r4,4
 4005b34:	20c2cd0e 	bge	r4,r3,400666c <_dtoa_r+0x1618>
 4005b38:	00c00704 	movi	r3,28
 4005b3c:	1885c83a 	sub	r2,r3,r2
 4005b40:	d8c00817 	ldw	r3,32(sp)
 4005b44:	a0a9883a 	add	r20,r20,r2
 4005b48:	b0ad883a 	add	r22,r22,r2
 4005b4c:	1887883a 	add	r3,r3,r2
 4005b50:	d8c00815 	stw	r3,32(sp)
 4005b54:	d9800817 	ldw	r6,32(sp)
 4005b58:	0180040e 	bge	zero,r6,4005b6c <_dtoa_r+0xb18>
 4005b5c:	800b883a 	mov	r5,r16
 4005b60:	e009883a 	mov	r4,fp
 4005b64:	4008e700 	call	4008e70 <__lshift>
 4005b68:	1021883a 	mov	r16,r2
 4005b6c:	0580050e 	bge	zero,r22,4005b84 <_dtoa_r+0xb30>
 4005b70:	a80b883a 	mov	r5,r21
 4005b74:	b00d883a 	mov	r6,r22
 4005b78:	e009883a 	mov	r4,fp
 4005b7c:	4008e700 	call	4008e70 <__lshift>
 4005b80:	102b883a 	mov	r21,r2
 4005b84:	d9c00e17 	ldw	r7,56(sp)
 4005b88:	3801211e 	bne	r7,zero,4006010 <_dtoa_r+0xfbc>
 4005b8c:	d9800617 	ldw	r6,24(sp)
 4005b90:	0181380e 	bge	zero,r6,4006074 <_dtoa_r+0x1020>
 4005b94:	d8c00b17 	ldw	r3,44(sp)
 4005b98:	1800ab1e 	bne	r3,zero,4005e48 <_dtoa_r+0xdf4>
 4005b9c:	dc800717 	ldw	r18,28(sp)
 4005ba0:	dcc00617 	ldw	r19,24(sp)
 4005ba4:	9029883a 	mov	r20,r18
 4005ba8:	00000206 	br	4005bb4 <_dtoa_r+0xb60>
 4005bac:	40087c00 	call	40087c0 <__multadd>
 4005bb0:	1021883a 	mov	r16,r2
 4005bb4:	a80b883a 	mov	r5,r21
 4005bb8:	8009883a 	mov	r4,r16
 4005bbc:	4004e540 	call	4004e54 <quorem>
 4005bc0:	10800c04 	addi	r2,r2,48
 4005bc4:	90800005 	stb	r2,0(r18)
 4005bc8:	94800044 	addi	r18,r18,1
 4005bcc:	9507c83a 	sub	r3,r18,r20
 4005bd0:	000f883a 	mov	r7,zero
 4005bd4:	01800284 	movi	r6,10
 4005bd8:	800b883a 	mov	r5,r16
 4005bdc:	e009883a 	mov	r4,fp
 4005be0:	1cfff216 	blt	r3,r19,4005bac <__ram_exceptions_end+0xfbfe5964>
 4005be4:	1011883a 	mov	r8,r2
 4005be8:	d8800617 	ldw	r2,24(sp)
 4005bec:	0082370e 	bge	zero,r2,40064cc <_dtoa_r+0x1478>
 4005bf0:	d9000717 	ldw	r4,28(sp)
 4005bf4:	0025883a 	mov	r18,zero
 4005bf8:	20af883a 	add	r23,r4,r2
 4005bfc:	01800044 	movi	r6,1
 4005c00:	800b883a 	mov	r5,r16
 4005c04:	e009883a 	mov	r4,fp
 4005c08:	da001715 	stw	r8,92(sp)
 4005c0c:	4008e700 	call	4008e70 <__lshift>
 4005c10:	a80b883a 	mov	r5,r21
 4005c14:	1009883a 	mov	r4,r2
 4005c18:	d8800915 	stw	r2,36(sp)
 4005c1c:	4008fb80 	call	4008fb8 <__mcmp>
 4005c20:	da001717 	ldw	r8,92(sp)
 4005c24:	0081800e 	bge	zero,r2,4006228 <_dtoa_r+0x11d4>
 4005c28:	b93fffc3 	ldbu	r4,-1(r23)
 4005c2c:	b8bfffc4 	addi	r2,r23,-1
 4005c30:	1007883a 	mov	r3,r2
 4005c34:	01800e44 	movi	r6,57
 4005c38:	d9c00717 	ldw	r7,28(sp)
 4005c3c:	00000506 	br	4005c54 <_dtoa_r+0xc00>
 4005c40:	18ffffc4 	addi	r3,r3,-1
 4005c44:	11c12326 	beq	r2,r7,40060d4 <_dtoa_r+0x1080>
 4005c48:	19000003 	ldbu	r4,0(r3)
 4005c4c:	102f883a 	mov	r23,r2
 4005c50:	10bfffc4 	addi	r2,r2,-1
 4005c54:	21403fcc 	andi	r5,r4,255
 4005c58:	2940201c 	xori	r5,r5,128
 4005c5c:	297fe004 	addi	r5,r5,-128
 4005c60:	29bff726 	beq	r5,r6,4005c40 <__ram_exceptions_end+0xfbfe59f8>
 4005c64:	21000044 	addi	r4,r4,1
 4005c68:	11000005 	stb	r4,0(r2)
 4005c6c:	a80b883a 	mov	r5,r21
 4005c70:	e009883a 	mov	r4,fp
 4005c74:	40087980 	call	4008798 <_Bfree>
 4005c78:	883ea026 	beq	r17,zero,40056fc <__ram_exceptions_end+0xfbfe54b4>
 4005c7c:	90000426 	beq	r18,zero,4005c90 <_dtoa_r+0xc3c>
 4005c80:	94400326 	beq	r18,r17,4005c90 <_dtoa_r+0xc3c>
 4005c84:	900b883a 	mov	r5,r18
 4005c88:	e009883a 	mov	r4,fp
 4005c8c:	40087980 	call	4008798 <_Bfree>
 4005c90:	880b883a 	mov	r5,r17
 4005c94:	e009883a 	mov	r4,fp
 4005c98:	40087980 	call	4008798 <_Bfree>
 4005c9c:	003e9706 	br	40056fc <__ram_exceptions_end+0xfbfe54b4>
 4005ca0:	01800044 	movi	r6,1
 4005ca4:	d9800e15 	stw	r6,56(sp)
 4005ca8:	003d9606 	br	4005304 <__ram_exceptions_end+0xfbfe50bc>
 4005cac:	d8800817 	ldw	r2,32(sp)
 4005cb0:	d8c00517 	ldw	r3,20(sp)
 4005cb4:	d8000d15 	stw	zero,52(sp)
 4005cb8:	10c5c83a 	sub	r2,r2,r3
 4005cbc:	00c9c83a 	sub	r4,zero,r3
 4005cc0:	d8800815 	stw	r2,32(sp)
 4005cc4:	d9000a15 	stw	r4,40(sp)
 4005cc8:	003d9706 	br	4005328 <__ram_exceptions_end+0xfbfe50e0>
 4005ccc:	05adc83a 	sub	r22,zero,r22
 4005cd0:	dd800815 	stw	r22,32(sp)
 4005cd4:	002d883a 	mov	r22,zero
 4005cd8:	003d8e06 	br	4005314 <__ram_exceptions_end+0xfbfe50cc>
 4005cdc:	d9000517 	ldw	r4,20(sp)
 4005ce0:	40104280 	call	4010428 <__floatsidf>
 4005ce4:	100d883a 	mov	r6,r2
 4005ce8:	180f883a 	mov	r7,r3
 4005cec:	a009883a 	mov	r4,r20
 4005cf0:	880b883a 	mov	r5,r17
 4005cf4:	400f13c0 	call	400f13c <__eqdf2>
 4005cf8:	103d7126 	beq	r2,zero,40052c0 <__ram_exceptions_end+0xfbfe5078>
 4005cfc:	d9c00517 	ldw	r7,20(sp)
 4005d00:	39ffffc4 	addi	r7,r7,-1
 4005d04:	d9c00515 	stw	r7,20(sp)
 4005d08:	003d6d06 	br	40052c0 <__ram_exceptions_end+0xfbfe5078>
 4005d0c:	dd400a17 	ldw	r21,40(sp)
 4005d10:	dd000817 	ldw	r20,32(sp)
 4005d14:	0023883a 	mov	r17,zero
 4005d18:	003f4806 	br	4005a3c <__ram_exceptions_end+0xfbfe57f4>
 4005d1c:	10e3c83a 	sub	r17,r2,r3
 4005d20:	9448983a 	sll	r4,r18,r17
 4005d24:	003d3206 	br	40051f0 <__ram_exceptions_end+0xfbfe4fa8>
 4005d28:	d8000e15 	stw	zero,56(sp)
 4005d2c:	003d7506 	br	4005304 <__ram_exceptions_end+0xfbfe50bc>
 4005d30:	b005883a 	mov	r2,r22
 4005d34:	003f4506 	br	4005a4c <__ram_exceptions_end+0xfbfe5804>
 4005d38:	dc000915 	stw	r16,36(sp)
 4005d3c:	d9800a17 	ldw	r6,40(sp)
 4005d40:	d9400917 	ldw	r5,36(sp)
 4005d44:	e009883a 	mov	r4,fp
 4005d48:	4008d300 	call	4008d30 <__pow5mult>
 4005d4c:	1021883a 	mov	r16,r2
 4005d50:	003f5a06 	br	4005abc <__ram_exceptions_end+0xfbfe5874>
 4005d54:	01c00044 	movi	r7,1
 4005d58:	d9c00b15 	stw	r7,44(sp)
 4005d5c:	d8802217 	ldw	r2,136(sp)
 4005d60:	0081280e 	bge	zero,r2,4006204 <_dtoa_r+0x11b0>
 4005d64:	100d883a 	mov	r6,r2
 4005d68:	1021883a 	mov	r16,r2
 4005d6c:	d8800c15 	stw	r2,48(sp)
 4005d70:	d8800615 	stw	r2,24(sp)
 4005d74:	003d8806 	br	4005398 <__ram_exceptions_end+0xfbfe5150>
 4005d78:	d8800617 	ldw	r2,24(sp)
 4005d7c:	00be9b16 	blt	zero,r2,40057ec <__ram_exceptions_end+0xfbfe55a4>
 4005d80:	10010f1e 	bne	r2,zero,40061c0 <_dtoa_r+0x116c>
 4005d84:	880b883a 	mov	r5,r17
 4005d88:	000d883a 	mov	r6,zero
 4005d8c:	01d00534 	movhi	r7,16404
 4005d90:	8009883a 	mov	r4,r16
 4005d94:	400f3940 	call	400f394 <__muldf3>
 4005d98:	900d883a 	mov	r6,r18
 4005d9c:	980f883a 	mov	r7,r19
 4005da0:	1009883a 	mov	r4,r2
 4005da4:	180b883a 	mov	r5,r3
 4005da8:	400f1c40 	call	400f1c4 <__gedf2>
 4005dac:	002b883a 	mov	r21,zero
 4005db0:	0023883a 	mov	r17,zero
 4005db4:	1000bf16 	blt	r2,zero,40060b4 <_dtoa_r+0x1060>
 4005db8:	d9802217 	ldw	r6,136(sp)
 4005dbc:	ddc00717 	ldw	r23,28(sp)
 4005dc0:	018c303a 	nor	r6,zero,r6
 4005dc4:	d9800515 	stw	r6,20(sp)
 4005dc8:	a80b883a 	mov	r5,r21
 4005dcc:	e009883a 	mov	r4,fp
 4005dd0:	40087980 	call	4008798 <_Bfree>
 4005dd4:	883e4926 	beq	r17,zero,40056fc <__ram_exceptions_end+0xfbfe54b4>
 4005dd8:	003fad06 	br	4005c90 <__ram_exceptions_end+0xfbfe5a48>
 4005ddc:	d9c01117 	ldw	r7,68(sp)
 4005de0:	3801bc26 	beq	r7,zero,40064d4 <_dtoa_r+0x1480>
 4005de4:	10810cc4 	addi	r2,r2,1075
 4005de8:	dd400a17 	ldw	r21,40(sp)
 4005dec:	dd000817 	ldw	r20,32(sp)
 4005df0:	003f0a06 	br	4005a1c <__ram_exceptions_end+0xfbfe57d4>
 4005df4:	00800704 	movi	r2,28
 4005df8:	d9000817 	ldw	r4,32(sp)
 4005dfc:	a0a9883a 	add	r20,r20,r2
 4005e00:	b0ad883a 	add	r22,r22,r2
 4005e04:	2089883a 	add	r4,r4,r2
 4005e08:	d9000815 	stw	r4,32(sp)
 4005e0c:	003f5106 	br	4005b54 <__ram_exceptions_end+0xfbfe590c>
 4005e10:	d8c00317 	ldw	r3,12(sp)
 4005e14:	b8c1fc0e 	bge	r23,r3,4006608 <_dtoa_r+0x15b4>
 4005e18:	0027883a 	mov	r19,zero
 4005e1c:	b805883a 	mov	r2,r23
 4005e20:	003f3e06 	br	4005b1c <__ram_exceptions_end+0xfbfe58d4>
 4005e24:	880b883a 	mov	r5,r17
 4005e28:	e009883a 	mov	r4,fp
 4005e2c:	000f883a 	mov	r7,zero
 4005e30:	01800284 	movi	r6,10
 4005e34:	40087c00 	call	40087c0 <__multadd>
 4005e38:	d9000c17 	ldw	r4,48(sp)
 4005e3c:	1023883a 	mov	r17,r2
 4005e40:	0102040e 	bge	zero,r4,4006654 <_dtoa_r+0x1600>
 4005e44:	d9000615 	stw	r4,24(sp)
 4005e48:	0500050e 	bge	zero,r20,4005e60 <_dtoa_r+0xe0c>
 4005e4c:	880b883a 	mov	r5,r17
 4005e50:	a00d883a 	mov	r6,r20
 4005e54:	e009883a 	mov	r4,fp
 4005e58:	4008e700 	call	4008e70 <__lshift>
 4005e5c:	1023883a 	mov	r17,r2
 4005e60:	9801241e 	bne	r19,zero,40062f4 <_dtoa_r+0x12a0>
 4005e64:	8829883a 	mov	r20,r17
 4005e68:	d9000617 	ldw	r4,24(sp)
 4005e6c:	dcc00717 	ldw	r19,28(sp)
 4005e70:	9480004c 	andi	r18,r18,1
 4005e74:	20bfffc4 	addi	r2,r4,-1
 4005e78:	9885883a 	add	r2,r19,r2
 4005e7c:	d8800415 	stw	r2,16(sp)
 4005e80:	dc800615 	stw	r18,24(sp)
 4005e84:	a80b883a 	mov	r5,r21
 4005e88:	8009883a 	mov	r4,r16
 4005e8c:	4004e540 	call	4004e54 <quorem>
 4005e90:	880b883a 	mov	r5,r17
 4005e94:	8009883a 	mov	r4,r16
 4005e98:	102f883a 	mov	r23,r2
 4005e9c:	4008fb80 	call	4008fb8 <__mcmp>
 4005ea0:	a80b883a 	mov	r5,r21
 4005ea4:	a00d883a 	mov	r6,r20
 4005ea8:	e009883a 	mov	r4,fp
 4005eac:	102d883a 	mov	r22,r2
 4005eb0:	40090180 	call	4009018 <__mdiff>
 4005eb4:	1007883a 	mov	r3,r2
 4005eb8:	10800317 	ldw	r2,12(r2)
 4005ebc:	bc800c04 	addi	r18,r23,48
 4005ec0:	180b883a 	mov	r5,r3
 4005ec4:	10004e1e 	bne	r2,zero,4006000 <_dtoa_r+0xfac>
 4005ec8:	8009883a 	mov	r4,r16
 4005ecc:	d8c01615 	stw	r3,88(sp)
 4005ed0:	4008fb80 	call	4008fb8 <__mcmp>
 4005ed4:	d8c01617 	ldw	r3,88(sp)
 4005ed8:	e009883a 	mov	r4,fp
 4005edc:	d8801615 	stw	r2,88(sp)
 4005ee0:	180b883a 	mov	r5,r3
 4005ee4:	40087980 	call	4008798 <_Bfree>
 4005ee8:	d8801617 	ldw	r2,88(sp)
 4005eec:	1000041e 	bne	r2,zero,4005f00 <_dtoa_r+0xeac>
 4005ef0:	d9800317 	ldw	r6,12(sp)
 4005ef4:	3000021e 	bne	r6,zero,4005f00 <_dtoa_r+0xeac>
 4005ef8:	d8c00617 	ldw	r3,24(sp)
 4005efc:	18003726 	beq	r3,zero,4005fdc <_dtoa_r+0xf88>
 4005f00:	b0002016 	blt	r22,zero,4005f84 <_dtoa_r+0xf30>
 4005f04:	b000041e 	bne	r22,zero,4005f18 <_dtoa_r+0xec4>
 4005f08:	d9000317 	ldw	r4,12(sp)
 4005f0c:	2000021e 	bne	r4,zero,4005f18 <_dtoa_r+0xec4>
 4005f10:	d8c00617 	ldw	r3,24(sp)
 4005f14:	18001b26 	beq	r3,zero,4005f84 <_dtoa_r+0xf30>
 4005f18:	00810716 	blt	zero,r2,4006338 <_dtoa_r+0x12e4>
 4005f1c:	d8c00417 	ldw	r3,16(sp)
 4005f20:	9d800044 	addi	r22,r19,1
 4005f24:	9c800005 	stb	r18,0(r19)
 4005f28:	b02f883a 	mov	r23,r22
 4005f2c:	98c10626 	beq	r19,r3,4006348 <_dtoa_r+0x12f4>
 4005f30:	800b883a 	mov	r5,r16
 4005f34:	000f883a 	mov	r7,zero
 4005f38:	01800284 	movi	r6,10
 4005f3c:	e009883a 	mov	r4,fp
 4005f40:	40087c00 	call	40087c0 <__multadd>
 4005f44:	1021883a 	mov	r16,r2
 4005f48:	000f883a 	mov	r7,zero
 4005f4c:	01800284 	movi	r6,10
 4005f50:	880b883a 	mov	r5,r17
 4005f54:	e009883a 	mov	r4,fp
 4005f58:	8d002526 	beq	r17,r20,4005ff0 <_dtoa_r+0xf9c>
 4005f5c:	40087c00 	call	40087c0 <__multadd>
 4005f60:	a00b883a 	mov	r5,r20
 4005f64:	000f883a 	mov	r7,zero
 4005f68:	01800284 	movi	r6,10
 4005f6c:	e009883a 	mov	r4,fp
 4005f70:	1023883a 	mov	r17,r2
 4005f74:	40087c00 	call	40087c0 <__multadd>
 4005f78:	1029883a 	mov	r20,r2
 4005f7c:	b027883a 	mov	r19,r22
 4005f80:	003fc006 	br	4005e84 <__ram_exceptions_end+0xfbfe5c3c>
 4005f84:	9011883a 	mov	r8,r18
 4005f88:	00800e0e 	bge	zero,r2,4005fc4 <_dtoa_r+0xf70>
 4005f8c:	800b883a 	mov	r5,r16
 4005f90:	01800044 	movi	r6,1
 4005f94:	e009883a 	mov	r4,fp
 4005f98:	da001715 	stw	r8,92(sp)
 4005f9c:	4008e700 	call	4008e70 <__lshift>
 4005fa0:	a80b883a 	mov	r5,r21
 4005fa4:	1009883a 	mov	r4,r2
 4005fa8:	1021883a 	mov	r16,r2
 4005fac:	4008fb80 	call	4008fb8 <__mcmp>
 4005fb0:	da001717 	ldw	r8,92(sp)
 4005fb4:	0081960e 	bge	zero,r2,4006610 <_dtoa_r+0x15bc>
 4005fb8:	00800e44 	movi	r2,57
 4005fbc:	40817026 	beq	r8,r2,4006580 <_dtoa_r+0x152c>
 4005fc0:	ba000c44 	addi	r8,r23,49
 4005fc4:	8825883a 	mov	r18,r17
 4005fc8:	9dc00044 	addi	r23,r19,1
 4005fcc:	9a000005 	stb	r8,0(r19)
 4005fd0:	a023883a 	mov	r17,r20
 4005fd4:	dc000915 	stw	r16,36(sp)
 4005fd8:	003f2406 	br	4005c6c <__ram_exceptions_end+0xfbfe5a24>
 4005fdc:	00800e44 	movi	r2,57
 4005fe0:	9011883a 	mov	r8,r18
 4005fe4:	90816626 	beq	r18,r2,4006580 <_dtoa_r+0x152c>
 4005fe8:	05bff516 	blt	zero,r22,4005fc0 <__ram_exceptions_end+0xfbfe5d78>
 4005fec:	003ff506 	br	4005fc4 <__ram_exceptions_end+0xfbfe5d7c>
 4005ff0:	40087c00 	call	40087c0 <__multadd>
 4005ff4:	1023883a 	mov	r17,r2
 4005ff8:	1029883a 	mov	r20,r2
 4005ffc:	003fdf06 	br	4005f7c <__ram_exceptions_end+0xfbfe5d34>
 4006000:	e009883a 	mov	r4,fp
 4006004:	40087980 	call	4008798 <_Bfree>
 4006008:	00800044 	movi	r2,1
 400600c:	003fbc06 	br	4005f00 <__ram_exceptions_end+0xfbfe5cb8>
 4006010:	a80b883a 	mov	r5,r21
 4006014:	8009883a 	mov	r4,r16
 4006018:	4008fb80 	call	4008fb8 <__mcmp>
 400601c:	103edb0e 	bge	r2,zero,4005b8c <__ram_exceptions_end+0xfbfe5944>
 4006020:	800b883a 	mov	r5,r16
 4006024:	000f883a 	mov	r7,zero
 4006028:	01800284 	movi	r6,10
 400602c:	e009883a 	mov	r4,fp
 4006030:	40087c00 	call	40087c0 <__multadd>
 4006034:	1021883a 	mov	r16,r2
 4006038:	d8800517 	ldw	r2,20(sp)
 400603c:	d8c00b17 	ldw	r3,44(sp)
 4006040:	10bfffc4 	addi	r2,r2,-1
 4006044:	d8800515 	stw	r2,20(sp)
 4006048:	183f761e 	bne	r3,zero,4005e24 <__ram_exceptions_end+0xfbfe5bdc>
 400604c:	d9000c17 	ldw	r4,48(sp)
 4006050:	0101730e 	bge	zero,r4,4006620 <_dtoa_r+0x15cc>
 4006054:	d9000615 	stw	r4,24(sp)
 4006058:	003ed006 	br	4005b9c <__ram_exceptions_end+0xfbfe5954>
 400605c:	00800084 	movi	r2,2
 4006060:	3081861e 	bne	r6,r2,400667c <_dtoa_r+0x1628>
 4006064:	d8000b15 	stw	zero,44(sp)
 4006068:	003f3c06 	br	4005d5c <__ram_exceptions_end+0xfbfe5b14>
 400606c:	dc000917 	ldw	r16,36(sp)
 4006070:	003e9206 	br	4005abc <__ram_exceptions_end+0xfbfe5874>
 4006074:	d9c00317 	ldw	r7,12(sp)
 4006078:	00800084 	movi	r2,2
 400607c:	11fec50e 	bge	r2,r7,4005b94 <__ram_exceptions_end+0xfbfe594c>
 4006080:	d9000617 	ldw	r4,24(sp)
 4006084:	20013c1e 	bne	r4,zero,4006578 <_dtoa_r+0x1524>
 4006088:	a80b883a 	mov	r5,r21
 400608c:	000f883a 	mov	r7,zero
 4006090:	01800144 	movi	r6,5
 4006094:	e009883a 	mov	r4,fp
 4006098:	40087c00 	call	40087c0 <__multadd>
 400609c:	100b883a 	mov	r5,r2
 40060a0:	8009883a 	mov	r4,r16
 40060a4:	102b883a 	mov	r21,r2
 40060a8:	4008fb80 	call	4008fb8 <__mcmp>
 40060ac:	dc000915 	stw	r16,36(sp)
 40060b0:	00bf410e 	bge	zero,r2,4005db8 <__ram_exceptions_end+0xfbfe5b70>
 40060b4:	d9c00717 	ldw	r7,28(sp)
 40060b8:	00800c44 	movi	r2,49
 40060bc:	38800005 	stb	r2,0(r7)
 40060c0:	d8800517 	ldw	r2,20(sp)
 40060c4:	3dc00044 	addi	r23,r7,1
 40060c8:	10800044 	addi	r2,r2,1
 40060cc:	d8800515 	stw	r2,20(sp)
 40060d0:	003f3d06 	br	4005dc8 <__ram_exceptions_end+0xfbfe5b80>
 40060d4:	d9800517 	ldw	r6,20(sp)
 40060d8:	d9c00717 	ldw	r7,28(sp)
 40060dc:	00800c44 	movi	r2,49
 40060e0:	31800044 	addi	r6,r6,1
 40060e4:	d9800515 	stw	r6,20(sp)
 40060e8:	38800005 	stb	r2,0(r7)
 40060ec:	003edf06 	br	4005c6c <__ram_exceptions_end+0xfbfe5a24>
 40060f0:	d8000b15 	stw	zero,44(sp)
 40060f4:	003c9f06 	br	4005374 <__ram_exceptions_end+0xfbfe512c>
 40060f8:	903e7e1e 	bne	r18,zero,4005af4 <__ram_exceptions_end+0xfbfe58ac>
 40060fc:	00800434 	movhi	r2,16
 4006100:	10bfffc4 	addi	r2,r2,-1
 4006104:	9884703a 	and	r2,r19,r2
 4006108:	1000ea1e 	bne	r2,zero,40064b4 <_dtoa_r+0x1460>
 400610c:	9cdffc2c 	andhi	r19,r19,32752
 4006110:	9800e826 	beq	r19,zero,40064b4 <_dtoa_r+0x1460>
 4006114:	d9c00817 	ldw	r7,32(sp)
 4006118:	b5800044 	addi	r22,r22,1
 400611c:	04c00044 	movi	r19,1
 4006120:	39c00044 	addi	r7,r7,1
 4006124:	d9c00815 	stw	r7,32(sp)
 4006128:	d8800d17 	ldw	r2,52(sp)
 400612c:	103e721e 	bne	r2,zero,4005af8 <__ram_exceptions_end+0xfbfe58b0>
 4006130:	00800044 	movi	r2,1
 4006134:	003e7906 	br	4005b1c <__ram_exceptions_end+0xfbfe58d4>
 4006138:	8009883a 	mov	r4,r16
 400613c:	40104280 	call	4010428 <__floatsidf>
 4006140:	d9800f17 	ldw	r6,60(sp)
 4006144:	d9c01017 	ldw	r7,64(sp)
 4006148:	1009883a 	mov	r4,r2
 400614c:	180b883a 	mov	r5,r3
 4006150:	400f3940 	call	400f394 <__muldf3>
 4006154:	000d883a 	mov	r6,zero
 4006158:	01d00734 	movhi	r7,16412
 400615c:	1009883a 	mov	r4,r2
 4006160:	180b883a 	mov	r5,r3
 4006164:	400dfa80 	call	400dfa8 <__adddf3>
 4006168:	047f3034 	movhi	r17,64704
 400616c:	1021883a 	mov	r16,r2
 4006170:	1c63883a 	add	r17,r3,r17
 4006174:	d9000f17 	ldw	r4,60(sp)
 4006178:	d9401017 	ldw	r5,64(sp)
 400617c:	000d883a 	mov	r6,zero
 4006180:	01d00534 	movhi	r7,16404
 4006184:	400faac0 	call	400faac <__subdf3>
 4006188:	800d883a 	mov	r6,r16
 400618c:	880f883a 	mov	r7,r17
 4006190:	1009883a 	mov	r4,r2
 4006194:	180b883a 	mov	r5,r3
 4006198:	102b883a 	mov	r21,r2
 400619c:	1829883a 	mov	r20,r3
 40061a0:	400f1c40 	call	400f1c4 <__gedf2>
 40061a4:	00806c16 	blt	zero,r2,4006358 <_dtoa_r+0x1304>
 40061a8:	89e0003c 	xorhi	r7,r17,32768
 40061ac:	800d883a 	mov	r6,r16
 40061b0:	a809883a 	mov	r4,r21
 40061b4:	a00b883a 	mov	r5,r20
 40061b8:	400f2a00 	call	400f2a0 <__ledf2>
 40061bc:	103d7e0e 	bge	r2,zero,40057b8 <__ram_exceptions_end+0xfbfe5570>
 40061c0:	002b883a 	mov	r21,zero
 40061c4:	0023883a 	mov	r17,zero
 40061c8:	003efb06 	br	4005db8 <__ram_exceptions_end+0xfbfe5b70>
 40061cc:	d8800717 	ldw	r2,28(sp)
 40061d0:	003bd006 	br	4005114 <__ram_exceptions_end+0xfbfe4ecc>
 40061d4:	d9000a17 	ldw	r4,40(sp)
 40061d8:	d9800d17 	ldw	r6,52(sp)
 40061dc:	dd400a15 	stw	r21,40(sp)
 40061e0:	a905c83a 	sub	r2,r21,r4
 40061e4:	308d883a 	add	r6,r6,r2
 40061e8:	d9800d15 	stw	r6,52(sp)
 40061ec:	002b883a 	mov	r21,zero
 40061f0:	003e0606 	br	4005a0c <__ram_exceptions_end+0xfbfe57c4>
 40061f4:	9023883a 	mov	r17,r18
 40061f8:	9829883a 	mov	r20,r19
 40061fc:	04000084 	movi	r16,2
 4006200:	003c9206 	br	400544c <__ram_exceptions_end+0xfbfe5204>
 4006204:	04000044 	movi	r16,1
 4006208:	dc000c15 	stw	r16,48(sp)
 400620c:	dc000615 	stw	r16,24(sp)
 4006210:	dc002215 	stw	r16,136(sp)
 4006214:	e0001115 	stw	zero,68(fp)
 4006218:	000b883a 	mov	r5,zero
 400621c:	003c6906 	br	40053c4 <__ram_exceptions_end+0xfbfe517c>
 4006220:	3021883a 	mov	r16,r6
 4006224:	003ffb06 	br	4006214 <__ram_exceptions_end+0xfbfe5fcc>
 4006228:	1000021e 	bne	r2,zero,4006234 <_dtoa_r+0x11e0>
 400622c:	4200004c 	andi	r8,r8,1
 4006230:	403e7d1e 	bne	r8,zero,4005c28 <__ram_exceptions_end+0xfbfe59e0>
 4006234:	01000c04 	movi	r4,48
 4006238:	00000106 	br	4006240 <_dtoa_r+0x11ec>
 400623c:	102f883a 	mov	r23,r2
 4006240:	b8bfffc4 	addi	r2,r23,-1
 4006244:	10c00007 	ldb	r3,0(r2)
 4006248:	193ffc26 	beq	r3,r4,400623c <__ram_exceptions_end+0xfbfe5ff4>
 400624c:	003e8706 	br	4005c6c <__ram_exceptions_end+0xfbfe5a24>
 4006250:	d8800517 	ldw	r2,20(sp)
 4006254:	00a3c83a 	sub	r17,zero,r2
 4006258:	8800a426 	beq	r17,zero,40064ec <_dtoa_r+0x1498>
 400625c:	888003cc 	andi	r2,r17,15
 4006260:	100490fa 	slli	r2,r2,3
 4006264:	00c10074 	movhi	r3,1025
 4006268:	18d24404 	addi	r3,r3,18704
 400626c:	1885883a 	add	r2,r3,r2
 4006270:	11800017 	ldw	r6,0(r2)
 4006274:	11c00117 	ldw	r7,4(r2)
 4006278:	9009883a 	mov	r4,r18
 400627c:	980b883a 	mov	r5,r19
 4006280:	8823d13a 	srai	r17,r17,4
 4006284:	400f3940 	call	400f394 <__muldf3>
 4006288:	d8800f15 	stw	r2,60(sp)
 400628c:	d8c01015 	stw	r3,64(sp)
 4006290:	8800e826 	beq	r17,zero,4006634 <_dtoa_r+0x15e0>
 4006294:	05010074 	movhi	r20,1025
 4006298:	a5123a04 	addi	r20,r20,18664
 400629c:	04000084 	movi	r16,2
 40062a0:	8980004c 	andi	r6,r17,1
 40062a4:	1009883a 	mov	r4,r2
 40062a8:	8823d07a 	srai	r17,r17,1
 40062ac:	180b883a 	mov	r5,r3
 40062b0:	30000426 	beq	r6,zero,40062c4 <_dtoa_r+0x1270>
 40062b4:	a1800017 	ldw	r6,0(r20)
 40062b8:	a1c00117 	ldw	r7,4(r20)
 40062bc:	84000044 	addi	r16,r16,1
 40062c0:	400f3940 	call	400f394 <__muldf3>
 40062c4:	a5000204 	addi	r20,r20,8
 40062c8:	883ff51e 	bne	r17,zero,40062a0 <__ram_exceptions_end+0xfbfe6058>
 40062cc:	d8800f15 	stw	r2,60(sp)
 40062d0:	d8c01015 	stw	r3,64(sp)
 40062d4:	003c7606 	br	40054b0 <__ram_exceptions_end+0xfbfe5268>
 40062d8:	00c00c04 	movi	r3,48
 40062dc:	10c00005 	stb	r3,0(r2)
 40062e0:	d8c00517 	ldw	r3,20(sp)
 40062e4:	bd3fffc3 	ldbu	r20,-1(r23)
 40062e8:	18c00044 	addi	r3,r3,1
 40062ec:	d8c00515 	stw	r3,20(sp)
 40062f0:	003db906 	br	40059d8 <__ram_exceptions_end+0xfbfe5790>
 40062f4:	89400117 	ldw	r5,4(r17)
 40062f8:	e009883a 	mov	r4,fp
 40062fc:	40086f00 	call	40086f0 <_Balloc>
 4006300:	89800417 	ldw	r6,16(r17)
 4006304:	89400304 	addi	r5,r17,12
 4006308:	11000304 	addi	r4,r2,12
 400630c:	31800084 	addi	r6,r6,2
 4006310:	318d883a 	add	r6,r6,r6
 4006314:	318d883a 	add	r6,r6,r6
 4006318:	1027883a 	mov	r19,r2
 400631c:	40083240 	call	4008324 <memcpy>
 4006320:	01800044 	movi	r6,1
 4006324:	980b883a 	mov	r5,r19
 4006328:	e009883a 	mov	r4,fp
 400632c:	4008e700 	call	4008e70 <__lshift>
 4006330:	1029883a 	mov	r20,r2
 4006334:	003ecc06 	br	4005e68 <__ram_exceptions_end+0xfbfe5c20>
 4006338:	00800e44 	movi	r2,57
 400633c:	90809026 	beq	r18,r2,4006580 <_dtoa_r+0x152c>
 4006340:	92000044 	addi	r8,r18,1
 4006344:	003f1f06 	br	4005fc4 <__ram_exceptions_end+0xfbfe5d7c>
 4006348:	9011883a 	mov	r8,r18
 400634c:	8825883a 	mov	r18,r17
 4006350:	a023883a 	mov	r17,r20
 4006354:	003e2906 	br	4005bfc <__ram_exceptions_end+0xfbfe59b4>
 4006358:	002b883a 	mov	r21,zero
 400635c:	0023883a 	mov	r17,zero
 4006360:	003f5406 	br	40060b4 <__ram_exceptions_end+0xfbfe5e6c>
 4006364:	61bfffc4 	addi	r6,r12,-1
 4006368:	300490fa 	slli	r2,r6,3
 400636c:	00c10074 	movhi	r3,1025
 4006370:	18d24404 	addi	r3,r3,18704
 4006374:	1885883a 	add	r2,r3,r2
 4006378:	11000017 	ldw	r4,0(r2)
 400637c:	11400117 	ldw	r5,4(r2)
 4006380:	d8800717 	ldw	r2,28(sp)
 4006384:	880f883a 	mov	r7,r17
 4006388:	d9801215 	stw	r6,72(sp)
 400638c:	800d883a 	mov	r6,r16
 4006390:	db001615 	stw	r12,88(sp)
 4006394:	15c00044 	addi	r23,r2,1
 4006398:	400f3940 	call	400f394 <__muldf3>
 400639c:	d9401017 	ldw	r5,64(sp)
 40063a0:	d9000f17 	ldw	r4,60(sp)
 40063a4:	d8c01515 	stw	r3,84(sp)
 40063a8:	d8801415 	stw	r2,80(sp)
 40063ac:	40103a80 	call	40103a8 <__fixdfsi>
 40063b0:	1009883a 	mov	r4,r2
 40063b4:	1021883a 	mov	r16,r2
 40063b8:	40104280 	call	4010428 <__floatsidf>
 40063bc:	d9000f17 	ldw	r4,60(sp)
 40063c0:	d9401017 	ldw	r5,64(sp)
 40063c4:	100d883a 	mov	r6,r2
 40063c8:	180f883a 	mov	r7,r3
 40063cc:	400faac0 	call	400faac <__subdf3>
 40063d0:	1829883a 	mov	r20,r3
 40063d4:	d8c00717 	ldw	r3,28(sp)
 40063d8:	84000c04 	addi	r16,r16,48
 40063dc:	1023883a 	mov	r17,r2
 40063e0:	1c000005 	stb	r16,0(r3)
 40063e4:	db001617 	ldw	r12,88(sp)
 40063e8:	00800044 	movi	r2,1
 40063ec:	60802226 	beq	r12,r2,4006478 <_dtoa_r+0x1424>
 40063f0:	d9c00717 	ldw	r7,28(sp)
 40063f4:	8805883a 	mov	r2,r17
 40063f8:	b82b883a 	mov	r21,r23
 40063fc:	3b19883a 	add	r12,r7,r12
 4006400:	6023883a 	mov	r17,r12
 4006404:	a007883a 	mov	r3,r20
 4006408:	dc800f15 	stw	r18,60(sp)
 400640c:	000d883a 	mov	r6,zero
 4006410:	01d00934 	movhi	r7,16420
 4006414:	1009883a 	mov	r4,r2
 4006418:	180b883a 	mov	r5,r3
 400641c:	400f3940 	call	400f394 <__muldf3>
 4006420:	180b883a 	mov	r5,r3
 4006424:	1009883a 	mov	r4,r2
 4006428:	1829883a 	mov	r20,r3
 400642c:	1025883a 	mov	r18,r2
 4006430:	40103a80 	call	40103a8 <__fixdfsi>
 4006434:	1009883a 	mov	r4,r2
 4006438:	1021883a 	mov	r16,r2
 400643c:	40104280 	call	4010428 <__floatsidf>
 4006440:	100d883a 	mov	r6,r2
 4006444:	180f883a 	mov	r7,r3
 4006448:	9009883a 	mov	r4,r18
 400644c:	a00b883a 	mov	r5,r20
 4006450:	84000c04 	addi	r16,r16,48
 4006454:	400faac0 	call	400faac <__subdf3>
 4006458:	ad400044 	addi	r21,r21,1
 400645c:	ac3fffc5 	stb	r16,-1(r21)
 4006460:	ac7fea1e 	bne	r21,r17,400640c <__ram_exceptions_end+0xfbfe61c4>
 4006464:	1023883a 	mov	r17,r2
 4006468:	d8801217 	ldw	r2,72(sp)
 400646c:	dc800f17 	ldw	r18,60(sp)
 4006470:	1829883a 	mov	r20,r3
 4006474:	b8af883a 	add	r23,r23,r2
 4006478:	d9001417 	ldw	r4,80(sp)
 400647c:	d9401517 	ldw	r5,84(sp)
 4006480:	000d883a 	mov	r6,zero
 4006484:	01cff834 	movhi	r7,16352
 4006488:	400dfa80 	call	400dfa8 <__adddf3>
 400648c:	880d883a 	mov	r6,r17
 4006490:	a00f883a 	mov	r7,r20
 4006494:	1009883a 	mov	r4,r2
 4006498:	180b883a 	mov	r5,r3
 400649c:	400f2a00 	call	400f2a0 <__ledf2>
 40064a0:	10003e0e 	bge	r2,zero,400659c <_dtoa_r+0x1548>
 40064a4:	d9001317 	ldw	r4,76(sp)
 40064a8:	bd3fffc3 	ldbu	r20,-1(r23)
 40064ac:	d9000515 	stw	r4,20(sp)
 40064b0:	003d3b06 	br	40059a0 <__ram_exceptions_end+0xfbfe5758>
 40064b4:	0027883a 	mov	r19,zero
 40064b8:	003f1b06 	br	4006128 <__ram_exceptions_end+0xfbfe5ee0>
 40064bc:	d8800817 	ldw	r2,32(sp)
 40064c0:	11e9c83a 	sub	r20,r2,r7
 40064c4:	0005883a 	mov	r2,zero
 40064c8:	003d5406 	br	4005a1c <__ram_exceptions_end+0xfbfe57d4>
 40064cc:	00800044 	movi	r2,1
 40064d0:	003dc706 	br	4005bf0 <__ram_exceptions_end+0xfbfe59a8>
 40064d4:	d8c00217 	ldw	r3,8(sp)
 40064d8:	00800d84 	movi	r2,54
 40064dc:	dd400a17 	ldw	r21,40(sp)
 40064e0:	10c5c83a 	sub	r2,r2,r3
 40064e4:	dd000817 	ldw	r20,32(sp)
 40064e8:	003d4c06 	br	4005a1c <__ram_exceptions_end+0xfbfe57d4>
 40064ec:	dc800f15 	stw	r18,60(sp)
 40064f0:	dcc01015 	stw	r19,64(sp)
 40064f4:	04000084 	movi	r16,2
 40064f8:	003bed06 	br	40054b0 <__ram_exceptions_end+0xfbfe5268>
 40064fc:	d9000617 	ldw	r4,24(sp)
 4006500:	203f0d26 	beq	r4,zero,4006138 <__ram_exceptions_end+0xfbfe5ef0>
 4006504:	d9800c17 	ldw	r6,48(sp)
 4006508:	01bcab0e 	bge	zero,r6,40057b8 <__ram_exceptions_end+0xfbfe5570>
 400650c:	d9401017 	ldw	r5,64(sp)
 4006510:	d9000f17 	ldw	r4,60(sp)
 4006514:	000d883a 	mov	r6,zero
 4006518:	01d00934 	movhi	r7,16420
 400651c:	400f3940 	call	400f394 <__muldf3>
 4006520:	81000044 	addi	r4,r16,1
 4006524:	d8800f15 	stw	r2,60(sp)
 4006528:	d8c01015 	stw	r3,64(sp)
 400652c:	40104280 	call	4010428 <__floatsidf>
 4006530:	d9800f17 	ldw	r6,60(sp)
 4006534:	d9c01017 	ldw	r7,64(sp)
 4006538:	1009883a 	mov	r4,r2
 400653c:	180b883a 	mov	r5,r3
 4006540:	400f3940 	call	400f394 <__muldf3>
 4006544:	01d00734 	movhi	r7,16412
 4006548:	000d883a 	mov	r6,zero
 400654c:	1009883a 	mov	r4,r2
 4006550:	180b883a 	mov	r5,r3
 4006554:	400dfa80 	call	400dfa8 <__adddf3>
 4006558:	d9c00517 	ldw	r7,20(sp)
 400655c:	047f3034 	movhi	r17,64704
 4006560:	1021883a 	mov	r16,r2
 4006564:	39ffffc4 	addi	r7,r7,-1
 4006568:	d9c01315 	stw	r7,76(sp)
 400656c:	1c63883a 	add	r17,r3,r17
 4006570:	db000c17 	ldw	r12,48(sp)
 4006574:	003bea06 	br	4005520 <__ram_exceptions_end+0xfbfe52d8>
 4006578:	dc000915 	stw	r16,36(sp)
 400657c:	003e0e06 	br	4005db8 <__ram_exceptions_end+0xfbfe5b70>
 4006580:	01000e44 	movi	r4,57
 4006584:	8825883a 	mov	r18,r17
 4006588:	9dc00044 	addi	r23,r19,1
 400658c:	99000005 	stb	r4,0(r19)
 4006590:	a023883a 	mov	r17,r20
 4006594:	dc000915 	stw	r16,36(sp)
 4006598:	003da406 	br	4005c2c <__ram_exceptions_end+0xfbfe59e4>
 400659c:	d9801417 	ldw	r6,80(sp)
 40065a0:	d9c01517 	ldw	r7,84(sp)
 40065a4:	0009883a 	mov	r4,zero
 40065a8:	014ff834 	movhi	r5,16352
 40065ac:	400faac0 	call	400faac <__subdf3>
 40065b0:	880d883a 	mov	r6,r17
 40065b4:	a00f883a 	mov	r7,r20
 40065b8:	1009883a 	mov	r4,r2
 40065bc:	180b883a 	mov	r5,r3
 40065c0:	400f1c40 	call	400f1c4 <__gedf2>
 40065c4:	00bc7c0e 	bge	zero,r2,40057b8 <__ram_exceptions_end+0xfbfe5570>
 40065c8:	01000c04 	movi	r4,48
 40065cc:	00000106 	br	40065d4 <_dtoa_r+0x1580>
 40065d0:	102f883a 	mov	r23,r2
 40065d4:	b8bfffc4 	addi	r2,r23,-1
 40065d8:	10c00007 	ldb	r3,0(r2)
 40065dc:	193ffc26 	beq	r3,r4,40065d0 <__ram_exceptions_end+0xfbfe6388>
 40065e0:	d9801317 	ldw	r6,76(sp)
 40065e4:	d9800515 	stw	r6,20(sp)
 40065e8:	003c4406 	br	40056fc <__ram_exceptions_end+0xfbfe54b4>
 40065ec:	d9801317 	ldw	r6,76(sp)
 40065f0:	d9800515 	stw	r6,20(sp)
 40065f4:	003cea06 	br	40059a0 <__ram_exceptions_end+0xfbfe5758>
 40065f8:	dd800f17 	ldw	r22,60(sp)
 40065fc:	dcc01017 	ldw	r19,64(sp)
 4006600:	dc801217 	ldw	r18,72(sp)
 4006604:	003c6c06 	br	40057b8 <__ram_exceptions_end+0xfbfe5570>
 4006608:	903e031e 	bne	r18,zero,4005e18 <__ram_exceptions_end+0xfbfe5bd0>
 400660c:	003ebb06 	br	40060fc <__ram_exceptions_end+0xfbfe5eb4>
 4006610:	103e6c1e 	bne	r2,zero,4005fc4 <__ram_exceptions_end+0xfbfe5d7c>
 4006614:	4080004c 	andi	r2,r8,1
 4006618:	103e6a26 	beq	r2,zero,4005fc4 <__ram_exceptions_end+0xfbfe5d7c>
 400661c:	003e6606 	br	4005fb8 <__ram_exceptions_end+0xfbfe5d70>
 4006620:	d8c00317 	ldw	r3,12(sp)
 4006624:	00800084 	movi	r2,2
 4006628:	10c02916 	blt	r2,r3,40066d0 <_dtoa_r+0x167c>
 400662c:	d9000c17 	ldw	r4,48(sp)
 4006630:	003e8806 	br	4006054 <__ram_exceptions_end+0xfbfe5e0c>
 4006634:	04000084 	movi	r16,2
 4006638:	003b9d06 	br	40054b0 <__ram_exceptions_end+0xfbfe5268>
 400663c:	d9001317 	ldw	r4,76(sp)
 4006640:	d9000515 	stw	r4,20(sp)
 4006644:	003cd606 	br	40059a0 <__ram_exceptions_end+0xfbfe5758>
 4006648:	d8801317 	ldw	r2,76(sp)
 400664c:	d8800515 	stw	r2,20(sp)
 4006650:	003c2a06 	br	40056fc <__ram_exceptions_end+0xfbfe54b4>
 4006654:	d9800317 	ldw	r6,12(sp)
 4006658:	00800084 	movi	r2,2
 400665c:	11801516 	blt	r2,r6,40066b4 <_dtoa_r+0x1660>
 4006660:	d9c00c17 	ldw	r7,48(sp)
 4006664:	d9c00615 	stw	r7,24(sp)
 4006668:	003df706 	br	4005e48 <__ram_exceptions_end+0xfbfe5c00>
 400666c:	193d3926 	beq	r3,r4,4005b54 <__ram_exceptions_end+0xfbfe590c>
 4006670:	00c00f04 	movi	r3,60
 4006674:	1885c83a 	sub	r2,r3,r2
 4006678:	003ddf06 	br	4005df8 <__ram_exceptions_end+0xfbfe5bb0>
 400667c:	e009883a 	mov	r4,fp
 4006680:	e0001115 	stw	zero,68(fp)
 4006684:	000b883a 	mov	r5,zero
 4006688:	40086f00 	call	40086f0 <_Balloc>
 400668c:	d8800715 	stw	r2,28(sp)
 4006690:	d8c00717 	ldw	r3,28(sp)
 4006694:	00bfffc4 	movi	r2,-1
 4006698:	01000044 	movi	r4,1
 400669c:	d8800c15 	stw	r2,48(sp)
 40066a0:	e0c01015 	stw	r3,64(fp)
 40066a4:	d9000b15 	stw	r4,44(sp)
 40066a8:	d8800615 	stw	r2,24(sp)
 40066ac:	d8002215 	stw	zero,136(sp)
 40066b0:	003c4106 	br	40057b8 <__ram_exceptions_end+0xfbfe5570>
 40066b4:	d8c00c17 	ldw	r3,48(sp)
 40066b8:	d8c00615 	stw	r3,24(sp)
 40066bc:	003e7006 	br	4006080 <__ram_exceptions_end+0xfbfe5e38>
 40066c0:	04400044 	movi	r17,1
 40066c4:	003b2006 	br	4005348 <__ram_exceptions_end+0xfbfe5100>
 40066c8:	000b883a 	mov	r5,zero
 40066cc:	003b3d06 	br	40053c4 <__ram_exceptions_end+0xfbfe517c>
 40066d0:	d8800c17 	ldw	r2,48(sp)
 40066d4:	d8800615 	stw	r2,24(sp)
 40066d8:	003e6906 	br	4006080 <__ram_exceptions_end+0xfbfe5e38>

040066dc <__sflush_r>:
 40066dc:	2880030b 	ldhu	r2,12(r5)
 40066e0:	defffb04 	addi	sp,sp,-20
 40066e4:	dcc00315 	stw	r19,12(sp)
 40066e8:	dc400115 	stw	r17,4(sp)
 40066ec:	dfc00415 	stw	ra,16(sp)
 40066f0:	dc800215 	stw	r18,8(sp)
 40066f4:	dc000015 	stw	r16,0(sp)
 40066f8:	10c0020c 	andi	r3,r2,8
 40066fc:	2823883a 	mov	r17,r5
 4006700:	2027883a 	mov	r19,r4
 4006704:	1800311e 	bne	r3,zero,40067cc <__sflush_r+0xf0>
 4006708:	28c00117 	ldw	r3,4(r5)
 400670c:	10820014 	ori	r2,r2,2048
 4006710:	2880030d 	sth	r2,12(r5)
 4006714:	00c04b0e 	bge	zero,r3,4006844 <__sflush_r+0x168>
 4006718:	8a000a17 	ldw	r8,40(r17)
 400671c:	40002326 	beq	r8,zero,40067ac <__sflush_r+0xd0>
 4006720:	9c000017 	ldw	r16,0(r19)
 4006724:	10c4000c 	andi	r3,r2,4096
 4006728:	98000015 	stw	zero,0(r19)
 400672c:	18004826 	beq	r3,zero,4006850 <__sflush_r+0x174>
 4006730:	89801417 	ldw	r6,80(r17)
 4006734:	10c0010c 	andi	r3,r2,4
 4006738:	18000626 	beq	r3,zero,4006754 <__sflush_r+0x78>
 400673c:	88c00117 	ldw	r3,4(r17)
 4006740:	88800c17 	ldw	r2,48(r17)
 4006744:	30cdc83a 	sub	r6,r6,r3
 4006748:	10000226 	beq	r2,zero,4006754 <__sflush_r+0x78>
 400674c:	88800f17 	ldw	r2,60(r17)
 4006750:	308dc83a 	sub	r6,r6,r2
 4006754:	89400717 	ldw	r5,28(r17)
 4006758:	000f883a 	mov	r7,zero
 400675c:	9809883a 	mov	r4,r19
 4006760:	403ee83a 	callr	r8
 4006764:	00ffffc4 	movi	r3,-1
 4006768:	10c04426 	beq	r2,r3,400687c <__sflush_r+0x1a0>
 400676c:	88c0030b 	ldhu	r3,12(r17)
 4006770:	89000417 	ldw	r4,16(r17)
 4006774:	88000115 	stw	zero,4(r17)
 4006778:	197dffcc 	andi	r5,r3,63487
 400677c:	8940030d 	sth	r5,12(r17)
 4006780:	89000015 	stw	r4,0(r17)
 4006784:	18c4000c 	andi	r3,r3,4096
 4006788:	18002c1e 	bne	r3,zero,400683c <__sflush_r+0x160>
 400678c:	89400c17 	ldw	r5,48(r17)
 4006790:	9c000015 	stw	r16,0(r19)
 4006794:	28000526 	beq	r5,zero,40067ac <__sflush_r+0xd0>
 4006798:	88801004 	addi	r2,r17,64
 400679c:	28800226 	beq	r5,r2,40067a8 <__sflush_r+0xcc>
 40067a0:	9809883a 	mov	r4,r19
 40067a4:	4006e480 	call	4006e48 <_free_r>
 40067a8:	88000c15 	stw	zero,48(r17)
 40067ac:	0005883a 	mov	r2,zero
 40067b0:	dfc00417 	ldw	ra,16(sp)
 40067b4:	dcc00317 	ldw	r19,12(sp)
 40067b8:	dc800217 	ldw	r18,8(sp)
 40067bc:	dc400117 	ldw	r17,4(sp)
 40067c0:	dc000017 	ldw	r16,0(sp)
 40067c4:	dec00504 	addi	sp,sp,20
 40067c8:	f800283a 	ret
 40067cc:	2c800417 	ldw	r18,16(r5)
 40067d0:	903ff626 	beq	r18,zero,40067ac <__ram_exceptions_end+0xfbfe6564>
 40067d4:	2c000017 	ldw	r16,0(r5)
 40067d8:	108000cc 	andi	r2,r2,3
 40067dc:	2c800015 	stw	r18,0(r5)
 40067e0:	84a1c83a 	sub	r16,r16,r18
 40067e4:	1000131e 	bne	r2,zero,4006834 <__sflush_r+0x158>
 40067e8:	28800517 	ldw	r2,20(r5)
 40067ec:	88800215 	stw	r2,8(r17)
 40067f0:	04000316 	blt	zero,r16,4006800 <__sflush_r+0x124>
 40067f4:	003fed06 	br	40067ac <__ram_exceptions_end+0xfbfe6564>
 40067f8:	90a5883a 	add	r18,r18,r2
 40067fc:	043feb0e 	bge	zero,r16,40067ac <__ram_exceptions_end+0xfbfe6564>
 4006800:	88800917 	ldw	r2,36(r17)
 4006804:	89400717 	ldw	r5,28(r17)
 4006808:	800f883a 	mov	r7,r16
 400680c:	900d883a 	mov	r6,r18
 4006810:	9809883a 	mov	r4,r19
 4006814:	103ee83a 	callr	r2
 4006818:	80a1c83a 	sub	r16,r16,r2
 400681c:	00bff616 	blt	zero,r2,40067f8 <__ram_exceptions_end+0xfbfe65b0>
 4006820:	88c0030b 	ldhu	r3,12(r17)
 4006824:	00bfffc4 	movi	r2,-1
 4006828:	18c01014 	ori	r3,r3,64
 400682c:	88c0030d 	sth	r3,12(r17)
 4006830:	003fdf06 	br	40067b0 <__ram_exceptions_end+0xfbfe6568>
 4006834:	0005883a 	mov	r2,zero
 4006838:	003fec06 	br	40067ec <__ram_exceptions_end+0xfbfe65a4>
 400683c:	88801415 	stw	r2,80(r17)
 4006840:	003fd206 	br	400678c <__ram_exceptions_end+0xfbfe6544>
 4006844:	28c00f17 	ldw	r3,60(r5)
 4006848:	00ffb316 	blt	zero,r3,4006718 <__ram_exceptions_end+0xfbfe64d0>
 400684c:	003fd706 	br	40067ac <__ram_exceptions_end+0xfbfe6564>
 4006850:	89400717 	ldw	r5,28(r17)
 4006854:	000d883a 	mov	r6,zero
 4006858:	01c00044 	movi	r7,1
 400685c:	9809883a 	mov	r4,r19
 4006860:	403ee83a 	callr	r8
 4006864:	100d883a 	mov	r6,r2
 4006868:	00bfffc4 	movi	r2,-1
 400686c:	30801426 	beq	r6,r2,40068c0 <__sflush_r+0x1e4>
 4006870:	8880030b 	ldhu	r2,12(r17)
 4006874:	8a000a17 	ldw	r8,40(r17)
 4006878:	003fae06 	br	4006734 <__ram_exceptions_end+0xfbfe64ec>
 400687c:	98c00017 	ldw	r3,0(r19)
 4006880:	183fba26 	beq	r3,zero,400676c <__ram_exceptions_end+0xfbfe6524>
 4006884:	01000744 	movi	r4,29
 4006888:	19000626 	beq	r3,r4,40068a4 <__sflush_r+0x1c8>
 400688c:	01000584 	movi	r4,22
 4006890:	19000426 	beq	r3,r4,40068a4 <__sflush_r+0x1c8>
 4006894:	88c0030b 	ldhu	r3,12(r17)
 4006898:	18c01014 	ori	r3,r3,64
 400689c:	88c0030d 	sth	r3,12(r17)
 40068a0:	003fc306 	br	40067b0 <__ram_exceptions_end+0xfbfe6568>
 40068a4:	8880030b 	ldhu	r2,12(r17)
 40068a8:	88c00417 	ldw	r3,16(r17)
 40068ac:	88000115 	stw	zero,4(r17)
 40068b0:	10bdffcc 	andi	r2,r2,63487
 40068b4:	8880030d 	sth	r2,12(r17)
 40068b8:	88c00015 	stw	r3,0(r17)
 40068bc:	003fb306 	br	400678c <__ram_exceptions_end+0xfbfe6544>
 40068c0:	98800017 	ldw	r2,0(r19)
 40068c4:	103fea26 	beq	r2,zero,4006870 <__ram_exceptions_end+0xfbfe6628>
 40068c8:	00c00744 	movi	r3,29
 40068cc:	10c00226 	beq	r2,r3,40068d8 <__sflush_r+0x1fc>
 40068d0:	00c00584 	movi	r3,22
 40068d4:	10c0031e 	bne	r2,r3,40068e4 <__sflush_r+0x208>
 40068d8:	9c000015 	stw	r16,0(r19)
 40068dc:	0005883a 	mov	r2,zero
 40068e0:	003fb306 	br	40067b0 <__ram_exceptions_end+0xfbfe6568>
 40068e4:	88c0030b 	ldhu	r3,12(r17)
 40068e8:	3005883a 	mov	r2,r6
 40068ec:	18c01014 	ori	r3,r3,64
 40068f0:	88c0030d 	sth	r3,12(r17)
 40068f4:	003fae06 	br	40067b0 <__ram_exceptions_end+0xfbfe6568>

040068f8 <_fflush_r>:
 40068f8:	defffd04 	addi	sp,sp,-12
 40068fc:	dc000115 	stw	r16,4(sp)
 4006900:	dfc00215 	stw	ra,8(sp)
 4006904:	2021883a 	mov	r16,r4
 4006908:	20000226 	beq	r4,zero,4006914 <_fflush_r+0x1c>
 400690c:	20800e17 	ldw	r2,56(r4)
 4006910:	10000c26 	beq	r2,zero,4006944 <_fflush_r+0x4c>
 4006914:	2880030f 	ldh	r2,12(r5)
 4006918:	1000051e 	bne	r2,zero,4006930 <_fflush_r+0x38>
 400691c:	0005883a 	mov	r2,zero
 4006920:	dfc00217 	ldw	ra,8(sp)
 4006924:	dc000117 	ldw	r16,4(sp)
 4006928:	dec00304 	addi	sp,sp,12
 400692c:	f800283a 	ret
 4006930:	8009883a 	mov	r4,r16
 4006934:	dfc00217 	ldw	ra,8(sp)
 4006938:	dc000117 	ldw	r16,4(sp)
 400693c:	dec00304 	addi	sp,sp,12
 4006940:	40066dc1 	jmpi	40066dc <__sflush_r>
 4006944:	d9400015 	stw	r5,0(sp)
 4006948:	4006cd40 	call	4006cd4 <__sinit>
 400694c:	d9400017 	ldw	r5,0(sp)
 4006950:	003ff006 	br	4006914 <__ram_exceptions_end+0xfbfe66cc>

04006954 <fflush>:
 4006954:	20000526 	beq	r4,zero,400696c <fflush+0x18>
 4006958:	00810074 	movhi	r2,1025
 400695c:	109a0604 	addi	r2,r2,26648
 4006960:	200b883a 	mov	r5,r4
 4006964:	11000017 	ldw	r4,0(r2)
 4006968:	40068f81 	jmpi	40068f8 <_fflush_r>
 400696c:	00810074 	movhi	r2,1025
 4006970:	109a0504 	addi	r2,r2,26644
 4006974:	11000017 	ldw	r4,0(r2)
 4006978:	01410034 	movhi	r5,1024
 400697c:	295a3e04 	addi	r5,r5,26872
 4006980:	40076d81 	jmpi	40076d8 <_fwalk_reent>

04006984 <__fp_unlock>:
 4006984:	0005883a 	mov	r2,zero
 4006988:	f800283a 	ret

0400698c <_cleanup_r>:
 400698c:	01410074 	movhi	r5,1025
 4006990:	29733804 	addi	r5,r5,-13088
 4006994:	40076d81 	jmpi	40076d8 <_fwalk_reent>

04006998 <__sinit.part.1>:
 4006998:	defff704 	addi	sp,sp,-36
 400699c:	00c10034 	movhi	r3,1024
 40069a0:	dfc00815 	stw	ra,32(sp)
 40069a4:	ddc00715 	stw	r23,28(sp)
 40069a8:	dd800615 	stw	r22,24(sp)
 40069ac:	dd400515 	stw	r21,20(sp)
 40069b0:	dd000415 	stw	r20,16(sp)
 40069b4:	dcc00315 	stw	r19,12(sp)
 40069b8:	dc800215 	stw	r18,8(sp)
 40069bc:	dc400115 	stw	r17,4(sp)
 40069c0:	dc000015 	stw	r16,0(sp)
 40069c4:	18da6304 	addi	r3,r3,27020
 40069c8:	24000117 	ldw	r16,4(r4)
 40069cc:	20c00f15 	stw	r3,60(r4)
 40069d0:	2080bb04 	addi	r2,r4,748
 40069d4:	00c000c4 	movi	r3,3
 40069d8:	20c0b915 	stw	r3,740(r4)
 40069dc:	2080ba15 	stw	r2,744(r4)
 40069e0:	2000b815 	stw	zero,736(r4)
 40069e4:	05c00204 	movi	r23,8
 40069e8:	00800104 	movi	r2,4
 40069ec:	2025883a 	mov	r18,r4
 40069f0:	b80d883a 	mov	r6,r23
 40069f4:	81001704 	addi	r4,r16,92
 40069f8:	000b883a 	mov	r5,zero
 40069fc:	80000015 	stw	zero,0(r16)
 4006a00:	80000115 	stw	zero,4(r16)
 4006a04:	80000215 	stw	zero,8(r16)
 4006a08:	8080030d 	sth	r2,12(r16)
 4006a0c:	80001915 	stw	zero,100(r16)
 4006a10:	8000038d 	sth	zero,14(r16)
 4006a14:	80000415 	stw	zero,16(r16)
 4006a18:	80000515 	stw	zero,20(r16)
 4006a1c:	80000615 	stw	zero,24(r16)
 4006a20:	40085c80 	call	40085c8 <memset>
 4006a24:	05810074 	movhi	r22,1025
 4006a28:	94400217 	ldw	r17,8(r18)
 4006a2c:	05410074 	movhi	r21,1025
 4006a30:	05010074 	movhi	r20,1025
 4006a34:	04c10074 	movhi	r19,1025
 4006a38:	b5a7a004 	addi	r22,r22,-24960
 4006a3c:	ad67b704 	addi	r21,r21,-24868
 4006a40:	a527d604 	addi	r20,r20,-24744
 4006a44:	9ce7ed04 	addi	r19,r19,-24652
 4006a48:	85800815 	stw	r22,32(r16)
 4006a4c:	85400915 	stw	r21,36(r16)
 4006a50:	85000a15 	stw	r20,40(r16)
 4006a54:	84c00b15 	stw	r19,44(r16)
 4006a58:	84000715 	stw	r16,28(r16)
 4006a5c:	00800284 	movi	r2,10
 4006a60:	8880030d 	sth	r2,12(r17)
 4006a64:	00800044 	movi	r2,1
 4006a68:	b80d883a 	mov	r6,r23
 4006a6c:	89001704 	addi	r4,r17,92
 4006a70:	000b883a 	mov	r5,zero
 4006a74:	88000015 	stw	zero,0(r17)
 4006a78:	88000115 	stw	zero,4(r17)
 4006a7c:	88000215 	stw	zero,8(r17)
 4006a80:	88001915 	stw	zero,100(r17)
 4006a84:	8880038d 	sth	r2,14(r17)
 4006a88:	88000415 	stw	zero,16(r17)
 4006a8c:	88000515 	stw	zero,20(r17)
 4006a90:	88000615 	stw	zero,24(r17)
 4006a94:	40085c80 	call	40085c8 <memset>
 4006a98:	94000317 	ldw	r16,12(r18)
 4006a9c:	00800484 	movi	r2,18
 4006aa0:	8c400715 	stw	r17,28(r17)
 4006aa4:	8d800815 	stw	r22,32(r17)
 4006aa8:	8d400915 	stw	r21,36(r17)
 4006aac:	8d000a15 	stw	r20,40(r17)
 4006ab0:	8cc00b15 	stw	r19,44(r17)
 4006ab4:	8080030d 	sth	r2,12(r16)
 4006ab8:	00800084 	movi	r2,2
 4006abc:	80000015 	stw	zero,0(r16)
 4006ac0:	80000115 	stw	zero,4(r16)
 4006ac4:	80000215 	stw	zero,8(r16)
 4006ac8:	80001915 	stw	zero,100(r16)
 4006acc:	8080038d 	sth	r2,14(r16)
 4006ad0:	80000415 	stw	zero,16(r16)
 4006ad4:	80000515 	stw	zero,20(r16)
 4006ad8:	80000615 	stw	zero,24(r16)
 4006adc:	b80d883a 	mov	r6,r23
 4006ae0:	000b883a 	mov	r5,zero
 4006ae4:	81001704 	addi	r4,r16,92
 4006ae8:	40085c80 	call	40085c8 <memset>
 4006aec:	00800044 	movi	r2,1
 4006af0:	84000715 	stw	r16,28(r16)
 4006af4:	85800815 	stw	r22,32(r16)
 4006af8:	85400915 	stw	r21,36(r16)
 4006afc:	85000a15 	stw	r20,40(r16)
 4006b00:	84c00b15 	stw	r19,44(r16)
 4006b04:	90800e15 	stw	r2,56(r18)
 4006b08:	dfc00817 	ldw	ra,32(sp)
 4006b0c:	ddc00717 	ldw	r23,28(sp)
 4006b10:	dd800617 	ldw	r22,24(sp)
 4006b14:	dd400517 	ldw	r21,20(sp)
 4006b18:	dd000417 	ldw	r20,16(sp)
 4006b1c:	dcc00317 	ldw	r19,12(sp)
 4006b20:	dc800217 	ldw	r18,8(sp)
 4006b24:	dc400117 	ldw	r17,4(sp)
 4006b28:	dc000017 	ldw	r16,0(sp)
 4006b2c:	dec00904 	addi	sp,sp,36
 4006b30:	f800283a 	ret

04006b34 <__fp_lock>:
 4006b34:	0005883a 	mov	r2,zero
 4006b38:	f800283a 	ret

04006b3c <__sfmoreglue>:
 4006b3c:	defffc04 	addi	sp,sp,-16
 4006b40:	dc400115 	stw	r17,4(sp)
 4006b44:	2c7fffc4 	addi	r17,r5,-1
 4006b48:	8c401a24 	muli	r17,r17,104
 4006b4c:	dc800215 	stw	r18,8(sp)
 4006b50:	2825883a 	mov	r18,r5
 4006b54:	89401d04 	addi	r5,r17,116
 4006b58:	dc000015 	stw	r16,0(sp)
 4006b5c:	dfc00315 	stw	ra,12(sp)
 4006b60:	4007a340 	call	4007a34 <_malloc_r>
 4006b64:	1021883a 	mov	r16,r2
 4006b68:	10000726 	beq	r2,zero,4006b88 <__sfmoreglue+0x4c>
 4006b6c:	11000304 	addi	r4,r2,12
 4006b70:	10000015 	stw	zero,0(r2)
 4006b74:	14800115 	stw	r18,4(r2)
 4006b78:	11000215 	stw	r4,8(r2)
 4006b7c:	89801a04 	addi	r6,r17,104
 4006b80:	000b883a 	mov	r5,zero
 4006b84:	40085c80 	call	40085c8 <memset>
 4006b88:	8005883a 	mov	r2,r16
 4006b8c:	dfc00317 	ldw	ra,12(sp)
 4006b90:	dc800217 	ldw	r18,8(sp)
 4006b94:	dc400117 	ldw	r17,4(sp)
 4006b98:	dc000017 	ldw	r16,0(sp)
 4006b9c:	dec00404 	addi	sp,sp,16
 4006ba0:	f800283a 	ret

04006ba4 <__sfp>:
 4006ba4:	defffb04 	addi	sp,sp,-20
 4006ba8:	dc000015 	stw	r16,0(sp)
 4006bac:	04010074 	movhi	r16,1025
 4006bb0:	841a0504 	addi	r16,r16,26644
 4006bb4:	dcc00315 	stw	r19,12(sp)
 4006bb8:	2027883a 	mov	r19,r4
 4006bbc:	81000017 	ldw	r4,0(r16)
 4006bc0:	dfc00415 	stw	ra,16(sp)
 4006bc4:	dc800215 	stw	r18,8(sp)
 4006bc8:	20800e17 	ldw	r2,56(r4)
 4006bcc:	dc400115 	stw	r17,4(sp)
 4006bd0:	1000021e 	bne	r2,zero,4006bdc <__sfp+0x38>
 4006bd4:	40069980 	call	4006998 <__sinit.part.1>
 4006bd8:	81000017 	ldw	r4,0(r16)
 4006bdc:	2480b804 	addi	r18,r4,736
 4006be0:	047fffc4 	movi	r17,-1
 4006be4:	91000117 	ldw	r4,4(r18)
 4006be8:	94000217 	ldw	r16,8(r18)
 4006bec:	213fffc4 	addi	r4,r4,-1
 4006bf0:	20000a16 	blt	r4,zero,4006c1c <__sfp+0x78>
 4006bf4:	8080030f 	ldh	r2,12(r16)
 4006bf8:	10000c26 	beq	r2,zero,4006c2c <__sfp+0x88>
 4006bfc:	80c01d04 	addi	r3,r16,116
 4006c00:	00000206 	br	4006c0c <__sfp+0x68>
 4006c04:	18bfe60f 	ldh	r2,-104(r3)
 4006c08:	10000826 	beq	r2,zero,4006c2c <__sfp+0x88>
 4006c0c:	213fffc4 	addi	r4,r4,-1
 4006c10:	1c3ffd04 	addi	r16,r3,-12
 4006c14:	18c01a04 	addi	r3,r3,104
 4006c18:	247ffa1e 	bne	r4,r17,4006c04 <__ram_exceptions_end+0xfbfe69bc>
 4006c1c:	90800017 	ldw	r2,0(r18)
 4006c20:	10001d26 	beq	r2,zero,4006c98 <__sfp+0xf4>
 4006c24:	1025883a 	mov	r18,r2
 4006c28:	003fee06 	br	4006be4 <__ram_exceptions_end+0xfbfe699c>
 4006c2c:	00bfffc4 	movi	r2,-1
 4006c30:	8080038d 	sth	r2,14(r16)
 4006c34:	00800044 	movi	r2,1
 4006c38:	8080030d 	sth	r2,12(r16)
 4006c3c:	80001915 	stw	zero,100(r16)
 4006c40:	80000015 	stw	zero,0(r16)
 4006c44:	80000215 	stw	zero,8(r16)
 4006c48:	80000115 	stw	zero,4(r16)
 4006c4c:	80000415 	stw	zero,16(r16)
 4006c50:	80000515 	stw	zero,20(r16)
 4006c54:	80000615 	stw	zero,24(r16)
 4006c58:	01800204 	movi	r6,8
 4006c5c:	000b883a 	mov	r5,zero
 4006c60:	81001704 	addi	r4,r16,92
 4006c64:	40085c80 	call	40085c8 <memset>
 4006c68:	8005883a 	mov	r2,r16
 4006c6c:	80000c15 	stw	zero,48(r16)
 4006c70:	80000d15 	stw	zero,52(r16)
 4006c74:	80001115 	stw	zero,68(r16)
 4006c78:	80001215 	stw	zero,72(r16)
 4006c7c:	dfc00417 	ldw	ra,16(sp)
 4006c80:	dcc00317 	ldw	r19,12(sp)
 4006c84:	dc800217 	ldw	r18,8(sp)
 4006c88:	dc400117 	ldw	r17,4(sp)
 4006c8c:	dc000017 	ldw	r16,0(sp)
 4006c90:	dec00504 	addi	sp,sp,20
 4006c94:	f800283a 	ret
 4006c98:	01400104 	movi	r5,4
 4006c9c:	9809883a 	mov	r4,r19
 4006ca0:	4006b3c0 	call	4006b3c <__sfmoreglue>
 4006ca4:	90800015 	stw	r2,0(r18)
 4006ca8:	103fde1e 	bne	r2,zero,4006c24 <__ram_exceptions_end+0xfbfe69dc>
 4006cac:	00800304 	movi	r2,12
 4006cb0:	98800015 	stw	r2,0(r19)
 4006cb4:	0005883a 	mov	r2,zero
 4006cb8:	003ff006 	br	4006c7c <__ram_exceptions_end+0xfbfe6a34>

04006cbc <_cleanup>:
 4006cbc:	00810074 	movhi	r2,1025
 4006cc0:	109a0504 	addi	r2,r2,26644
 4006cc4:	11000017 	ldw	r4,0(r2)
 4006cc8:	01410074 	movhi	r5,1025
 4006ccc:	29733804 	addi	r5,r5,-13088
 4006cd0:	40076d81 	jmpi	40076d8 <_fwalk_reent>

04006cd4 <__sinit>:
 4006cd4:	20800e17 	ldw	r2,56(r4)
 4006cd8:	10000126 	beq	r2,zero,4006ce0 <__sinit+0xc>
 4006cdc:	f800283a 	ret
 4006ce0:	40069981 	jmpi	4006998 <__sinit.part.1>

04006ce4 <__sfp_lock_acquire>:
 4006ce4:	f800283a 	ret

04006ce8 <__sfp_lock_release>:
 4006ce8:	f800283a 	ret

04006cec <__sinit_lock_acquire>:
 4006cec:	f800283a 	ret

04006cf0 <__sinit_lock_release>:
 4006cf0:	f800283a 	ret

04006cf4 <__fp_lock_all>:
 4006cf4:	00810074 	movhi	r2,1025
 4006cf8:	109a0604 	addi	r2,r2,26648
 4006cfc:	11000017 	ldw	r4,0(r2)
 4006d00:	01410034 	movhi	r5,1024
 4006d04:	295acd04 	addi	r5,r5,27444
 4006d08:	40076141 	jmpi	4007614 <_fwalk>

04006d0c <__fp_unlock_all>:
 4006d0c:	00810074 	movhi	r2,1025
 4006d10:	109a0604 	addi	r2,r2,26648
 4006d14:	11000017 	ldw	r4,0(r2)
 4006d18:	01410034 	movhi	r5,1024
 4006d1c:	295a6104 	addi	r5,r5,27012
 4006d20:	40076141 	jmpi	4007614 <_fwalk>

04006d24 <_malloc_trim_r>:
 4006d24:	defffb04 	addi	sp,sp,-20
 4006d28:	dcc00315 	stw	r19,12(sp)
 4006d2c:	04c10074 	movhi	r19,1025
 4006d30:	dc800215 	stw	r18,8(sp)
 4006d34:	dc400115 	stw	r17,4(sp)
 4006d38:	dc000015 	stw	r16,0(sp)
 4006d3c:	dfc00415 	stw	ra,16(sp)
 4006d40:	2821883a 	mov	r16,r5
 4006d44:	9cd43104 	addi	r19,r19,20676
 4006d48:	2025883a 	mov	r18,r4
 4006d4c:	4010b8c0 	call	4010b8c <__malloc_lock>
 4006d50:	98800217 	ldw	r2,8(r19)
 4006d54:	14400117 	ldw	r17,4(r2)
 4006d58:	00bfff04 	movi	r2,-4
 4006d5c:	88a2703a 	and	r17,r17,r2
 4006d60:	8c21c83a 	sub	r16,r17,r16
 4006d64:	8403fbc4 	addi	r16,r16,4079
 4006d68:	8020d33a 	srli	r16,r16,12
 4006d6c:	0083ffc4 	movi	r2,4095
 4006d70:	843fffc4 	addi	r16,r16,-1
 4006d74:	8020933a 	slli	r16,r16,12
 4006d78:	1400060e 	bge	r2,r16,4006d94 <_malloc_trim_r+0x70>
 4006d7c:	000b883a 	mov	r5,zero
 4006d80:	9009883a 	mov	r4,r18
 4006d84:	4009e2c0 	call	4009e2c <_sbrk_r>
 4006d88:	98c00217 	ldw	r3,8(r19)
 4006d8c:	1c47883a 	add	r3,r3,r17
 4006d90:	10c00a26 	beq	r2,r3,4006dbc <_malloc_trim_r+0x98>
 4006d94:	9009883a 	mov	r4,r18
 4006d98:	4010bb00 	call	4010bb0 <__malloc_unlock>
 4006d9c:	0005883a 	mov	r2,zero
 4006da0:	dfc00417 	ldw	ra,16(sp)
 4006da4:	dcc00317 	ldw	r19,12(sp)
 4006da8:	dc800217 	ldw	r18,8(sp)
 4006dac:	dc400117 	ldw	r17,4(sp)
 4006db0:	dc000017 	ldw	r16,0(sp)
 4006db4:	dec00504 	addi	sp,sp,20
 4006db8:	f800283a 	ret
 4006dbc:	040bc83a 	sub	r5,zero,r16
 4006dc0:	9009883a 	mov	r4,r18
 4006dc4:	4009e2c0 	call	4009e2c <_sbrk_r>
 4006dc8:	00ffffc4 	movi	r3,-1
 4006dcc:	10c00d26 	beq	r2,r3,4006e04 <_malloc_trim_r+0xe0>
 4006dd0:	00c100b4 	movhi	r3,1026
 4006dd4:	18e1cb04 	addi	r3,r3,-30932
 4006dd8:	18800017 	ldw	r2,0(r3)
 4006ddc:	99000217 	ldw	r4,8(r19)
 4006de0:	8c23c83a 	sub	r17,r17,r16
 4006de4:	8c400054 	ori	r17,r17,1
 4006de8:	1421c83a 	sub	r16,r2,r16
 4006dec:	24400115 	stw	r17,4(r4)
 4006df0:	9009883a 	mov	r4,r18
 4006df4:	1c000015 	stw	r16,0(r3)
 4006df8:	4010bb00 	call	4010bb0 <__malloc_unlock>
 4006dfc:	00800044 	movi	r2,1
 4006e00:	003fe706 	br	4006da0 <__ram_exceptions_end+0xfbfe6b58>
 4006e04:	000b883a 	mov	r5,zero
 4006e08:	9009883a 	mov	r4,r18
 4006e0c:	4009e2c0 	call	4009e2c <_sbrk_r>
 4006e10:	99000217 	ldw	r4,8(r19)
 4006e14:	014003c4 	movi	r5,15
 4006e18:	1107c83a 	sub	r3,r2,r4
 4006e1c:	28ffdd0e 	bge	r5,r3,4006d94 <__ram_exceptions_end+0xfbfe6b4c>
 4006e20:	01410074 	movhi	r5,1025
 4006e24:	295a0804 	addi	r5,r5,26656
 4006e28:	29400017 	ldw	r5,0(r5)
 4006e2c:	18c00054 	ori	r3,r3,1
 4006e30:	20c00115 	stw	r3,4(r4)
 4006e34:	00c100b4 	movhi	r3,1026
 4006e38:	1145c83a 	sub	r2,r2,r5
 4006e3c:	18e1cb04 	addi	r3,r3,-30932
 4006e40:	18800015 	stw	r2,0(r3)
 4006e44:	003fd306 	br	4006d94 <__ram_exceptions_end+0xfbfe6b4c>

04006e48 <_free_r>:
 4006e48:	28004126 	beq	r5,zero,4006f50 <_free_r+0x108>
 4006e4c:	defffd04 	addi	sp,sp,-12
 4006e50:	dc400115 	stw	r17,4(sp)
 4006e54:	dc000015 	stw	r16,0(sp)
 4006e58:	2023883a 	mov	r17,r4
 4006e5c:	2821883a 	mov	r16,r5
 4006e60:	dfc00215 	stw	ra,8(sp)
 4006e64:	4010b8c0 	call	4010b8c <__malloc_lock>
 4006e68:	81ffff17 	ldw	r7,-4(r16)
 4006e6c:	00bfff84 	movi	r2,-2
 4006e70:	01010074 	movhi	r4,1025
 4006e74:	81bffe04 	addi	r6,r16,-8
 4006e78:	3884703a 	and	r2,r7,r2
 4006e7c:	21143104 	addi	r4,r4,20676
 4006e80:	308b883a 	add	r5,r6,r2
 4006e84:	2a400117 	ldw	r9,4(r5)
 4006e88:	22000217 	ldw	r8,8(r4)
 4006e8c:	00ffff04 	movi	r3,-4
 4006e90:	48c6703a 	and	r3,r9,r3
 4006e94:	2a005726 	beq	r5,r8,4006ff4 <_free_r+0x1ac>
 4006e98:	28c00115 	stw	r3,4(r5)
 4006e9c:	39c0004c 	andi	r7,r7,1
 4006ea0:	3800091e 	bne	r7,zero,4006ec8 <_free_r+0x80>
 4006ea4:	823ffe17 	ldw	r8,-8(r16)
 4006ea8:	22400204 	addi	r9,r4,8
 4006eac:	320dc83a 	sub	r6,r6,r8
 4006eb0:	31c00217 	ldw	r7,8(r6)
 4006eb4:	1205883a 	add	r2,r2,r8
 4006eb8:	3a406526 	beq	r7,r9,4007050 <_free_r+0x208>
 4006ebc:	32000317 	ldw	r8,12(r6)
 4006ec0:	3a000315 	stw	r8,12(r7)
 4006ec4:	41c00215 	stw	r7,8(r8)
 4006ec8:	28cf883a 	add	r7,r5,r3
 4006ecc:	39c00117 	ldw	r7,4(r7)
 4006ed0:	39c0004c 	andi	r7,r7,1
 4006ed4:	38003a26 	beq	r7,zero,4006fc0 <_free_r+0x178>
 4006ed8:	10c00054 	ori	r3,r2,1
 4006edc:	30c00115 	stw	r3,4(r6)
 4006ee0:	3087883a 	add	r3,r6,r2
 4006ee4:	18800015 	stw	r2,0(r3)
 4006ee8:	00c07fc4 	movi	r3,511
 4006eec:	18801936 	bltu	r3,r2,4006f54 <_free_r+0x10c>
 4006ef0:	1004d0fa 	srli	r2,r2,3
 4006ef4:	01c00044 	movi	r7,1
 4006ef8:	21400117 	ldw	r5,4(r4)
 4006efc:	10c00044 	addi	r3,r2,1
 4006f00:	18c7883a 	add	r3,r3,r3
 4006f04:	1005d0ba 	srai	r2,r2,2
 4006f08:	18c7883a 	add	r3,r3,r3
 4006f0c:	18c7883a 	add	r3,r3,r3
 4006f10:	1907883a 	add	r3,r3,r4
 4006f14:	3884983a 	sll	r2,r7,r2
 4006f18:	19c00017 	ldw	r7,0(r3)
 4006f1c:	1a3ffe04 	addi	r8,r3,-8
 4006f20:	1144b03a 	or	r2,r2,r5
 4006f24:	32000315 	stw	r8,12(r6)
 4006f28:	31c00215 	stw	r7,8(r6)
 4006f2c:	20800115 	stw	r2,4(r4)
 4006f30:	19800015 	stw	r6,0(r3)
 4006f34:	39800315 	stw	r6,12(r7)
 4006f38:	8809883a 	mov	r4,r17
 4006f3c:	dfc00217 	ldw	ra,8(sp)
 4006f40:	dc400117 	ldw	r17,4(sp)
 4006f44:	dc000017 	ldw	r16,0(sp)
 4006f48:	dec00304 	addi	sp,sp,12
 4006f4c:	4010bb01 	jmpi	4010bb0 <__malloc_unlock>
 4006f50:	f800283a 	ret
 4006f54:	100ad27a 	srli	r5,r2,9
 4006f58:	00c00104 	movi	r3,4
 4006f5c:	19404a36 	bltu	r3,r5,4007088 <_free_r+0x240>
 4006f60:	100ad1ba 	srli	r5,r2,6
 4006f64:	28c00e44 	addi	r3,r5,57
 4006f68:	18c7883a 	add	r3,r3,r3
 4006f6c:	29400e04 	addi	r5,r5,56
 4006f70:	18c7883a 	add	r3,r3,r3
 4006f74:	18c7883a 	add	r3,r3,r3
 4006f78:	1909883a 	add	r4,r3,r4
 4006f7c:	20c00017 	ldw	r3,0(r4)
 4006f80:	01c10074 	movhi	r7,1025
 4006f84:	213ffe04 	addi	r4,r4,-8
 4006f88:	39d43104 	addi	r7,r7,20676
 4006f8c:	20c04426 	beq	r4,r3,40070a0 <_free_r+0x258>
 4006f90:	01ffff04 	movi	r7,-4
 4006f94:	19400117 	ldw	r5,4(r3)
 4006f98:	29ca703a 	and	r5,r5,r7
 4006f9c:	1140022e 	bgeu	r2,r5,4006fa8 <_free_r+0x160>
 4006fa0:	18c00217 	ldw	r3,8(r3)
 4006fa4:	20fffb1e 	bne	r4,r3,4006f94 <__ram_exceptions_end+0xfbfe6d4c>
 4006fa8:	19000317 	ldw	r4,12(r3)
 4006fac:	31000315 	stw	r4,12(r6)
 4006fb0:	30c00215 	stw	r3,8(r6)
 4006fb4:	21800215 	stw	r6,8(r4)
 4006fb8:	19800315 	stw	r6,12(r3)
 4006fbc:	003fde06 	br	4006f38 <__ram_exceptions_end+0xfbfe6cf0>
 4006fc0:	29c00217 	ldw	r7,8(r5)
 4006fc4:	10c5883a 	add	r2,r2,r3
 4006fc8:	00c10074 	movhi	r3,1025
 4006fcc:	18d43304 	addi	r3,r3,20684
 4006fd0:	38c03b26 	beq	r7,r3,40070c0 <_free_r+0x278>
 4006fd4:	2a000317 	ldw	r8,12(r5)
 4006fd8:	11400054 	ori	r5,r2,1
 4006fdc:	3087883a 	add	r3,r6,r2
 4006fe0:	3a000315 	stw	r8,12(r7)
 4006fe4:	41c00215 	stw	r7,8(r8)
 4006fe8:	31400115 	stw	r5,4(r6)
 4006fec:	18800015 	stw	r2,0(r3)
 4006ff0:	003fbd06 	br	4006ee8 <__ram_exceptions_end+0xfbfe6ca0>
 4006ff4:	39c0004c 	andi	r7,r7,1
 4006ff8:	10c5883a 	add	r2,r2,r3
 4006ffc:	3800071e 	bne	r7,zero,400701c <_free_r+0x1d4>
 4007000:	81fffe17 	ldw	r7,-8(r16)
 4007004:	31cdc83a 	sub	r6,r6,r7
 4007008:	30c00317 	ldw	r3,12(r6)
 400700c:	31400217 	ldw	r5,8(r6)
 4007010:	11c5883a 	add	r2,r2,r7
 4007014:	28c00315 	stw	r3,12(r5)
 4007018:	19400215 	stw	r5,8(r3)
 400701c:	10c00054 	ori	r3,r2,1
 4007020:	30c00115 	stw	r3,4(r6)
 4007024:	00c10074 	movhi	r3,1025
 4007028:	18da0904 	addi	r3,r3,26660
 400702c:	18c00017 	ldw	r3,0(r3)
 4007030:	21800215 	stw	r6,8(r4)
 4007034:	10ffc036 	bltu	r2,r3,4006f38 <__ram_exceptions_end+0xfbfe6cf0>
 4007038:	008100b4 	movhi	r2,1026
 400703c:	10a14204 	addi	r2,r2,-31480
 4007040:	11400017 	ldw	r5,0(r2)
 4007044:	8809883a 	mov	r4,r17
 4007048:	4006d240 	call	4006d24 <_malloc_trim_r>
 400704c:	003fba06 	br	4006f38 <__ram_exceptions_end+0xfbfe6cf0>
 4007050:	28c9883a 	add	r4,r5,r3
 4007054:	21000117 	ldw	r4,4(r4)
 4007058:	2100004c 	andi	r4,r4,1
 400705c:	2000391e 	bne	r4,zero,4007144 <_free_r+0x2fc>
 4007060:	29c00217 	ldw	r7,8(r5)
 4007064:	29000317 	ldw	r4,12(r5)
 4007068:	1885883a 	add	r2,r3,r2
 400706c:	10c00054 	ori	r3,r2,1
 4007070:	39000315 	stw	r4,12(r7)
 4007074:	21c00215 	stw	r7,8(r4)
 4007078:	30c00115 	stw	r3,4(r6)
 400707c:	308d883a 	add	r6,r6,r2
 4007080:	30800015 	stw	r2,0(r6)
 4007084:	003fac06 	br	4006f38 <__ram_exceptions_end+0xfbfe6cf0>
 4007088:	00c00504 	movi	r3,20
 400708c:	19401536 	bltu	r3,r5,40070e4 <_free_r+0x29c>
 4007090:	28c01704 	addi	r3,r5,92
 4007094:	18c7883a 	add	r3,r3,r3
 4007098:	294016c4 	addi	r5,r5,91
 400709c:	003fb406 	br	4006f70 <__ram_exceptions_end+0xfbfe6d28>
 40070a0:	280bd0ba 	srai	r5,r5,2
 40070a4:	00c00044 	movi	r3,1
 40070a8:	38800117 	ldw	r2,4(r7)
 40070ac:	194a983a 	sll	r5,r3,r5
 40070b0:	2007883a 	mov	r3,r4
 40070b4:	2884b03a 	or	r2,r5,r2
 40070b8:	38800115 	stw	r2,4(r7)
 40070bc:	003fbb06 	br	4006fac <__ram_exceptions_end+0xfbfe6d64>
 40070c0:	21800515 	stw	r6,20(r4)
 40070c4:	21800415 	stw	r6,16(r4)
 40070c8:	10c00054 	ori	r3,r2,1
 40070cc:	31c00315 	stw	r7,12(r6)
 40070d0:	31c00215 	stw	r7,8(r6)
 40070d4:	30c00115 	stw	r3,4(r6)
 40070d8:	308d883a 	add	r6,r6,r2
 40070dc:	30800015 	stw	r2,0(r6)
 40070e0:	003f9506 	br	4006f38 <__ram_exceptions_end+0xfbfe6cf0>
 40070e4:	00c01504 	movi	r3,84
 40070e8:	19400536 	bltu	r3,r5,4007100 <_free_r+0x2b8>
 40070ec:	100ad33a 	srli	r5,r2,12
 40070f0:	28c01bc4 	addi	r3,r5,111
 40070f4:	18c7883a 	add	r3,r3,r3
 40070f8:	29401b84 	addi	r5,r5,110
 40070fc:	003f9c06 	br	4006f70 <__ram_exceptions_end+0xfbfe6d28>
 4007100:	00c05504 	movi	r3,340
 4007104:	19400536 	bltu	r3,r5,400711c <_free_r+0x2d4>
 4007108:	100ad3fa 	srli	r5,r2,15
 400710c:	28c01e04 	addi	r3,r5,120
 4007110:	18c7883a 	add	r3,r3,r3
 4007114:	29401dc4 	addi	r5,r5,119
 4007118:	003f9506 	br	4006f70 <__ram_exceptions_end+0xfbfe6d28>
 400711c:	00c15504 	movi	r3,1364
 4007120:	19400536 	bltu	r3,r5,4007138 <_free_r+0x2f0>
 4007124:	100ad4ba 	srli	r5,r2,18
 4007128:	28c01f44 	addi	r3,r5,125
 400712c:	18c7883a 	add	r3,r3,r3
 4007130:	29401f04 	addi	r5,r5,124
 4007134:	003f8e06 	br	4006f70 <__ram_exceptions_end+0xfbfe6d28>
 4007138:	00c03f84 	movi	r3,254
 400713c:	01401f84 	movi	r5,126
 4007140:	003f8b06 	br	4006f70 <__ram_exceptions_end+0xfbfe6d28>
 4007144:	10c00054 	ori	r3,r2,1
 4007148:	30c00115 	stw	r3,4(r6)
 400714c:	308d883a 	add	r6,r6,r2
 4007150:	30800015 	stw	r2,0(r6)
 4007154:	003f7806 	br	4006f38 <__ram_exceptions_end+0xfbfe6cf0>

04007158 <__sfvwrite_r>:
 4007158:	30800217 	ldw	r2,8(r6)
 400715c:	10006726 	beq	r2,zero,40072fc <__sfvwrite_r+0x1a4>
 4007160:	28c0030b 	ldhu	r3,12(r5)
 4007164:	defff404 	addi	sp,sp,-48
 4007168:	dd400715 	stw	r21,28(sp)
 400716c:	dd000615 	stw	r20,24(sp)
 4007170:	dc000215 	stw	r16,8(sp)
 4007174:	dfc00b15 	stw	ra,44(sp)
 4007178:	df000a15 	stw	fp,40(sp)
 400717c:	ddc00915 	stw	r23,36(sp)
 4007180:	dd800815 	stw	r22,32(sp)
 4007184:	dcc00515 	stw	r19,20(sp)
 4007188:	dc800415 	stw	r18,16(sp)
 400718c:	dc400315 	stw	r17,12(sp)
 4007190:	1880020c 	andi	r2,r3,8
 4007194:	2821883a 	mov	r16,r5
 4007198:	202b883a 	mov	r21,r4
 400719c:	3029883a 	mov	r20,r6
 40071a0:	10002726 	beq	r2,zero,4007240 <__sfvwrite_r+0xe8>
 40071a4:	28800417 	ldw	r2,16(r5)
 40071a8:	10002526 	beq	r2,zero,4007240 <__sfvwrite_r+0xe8>
 40071ac:	1880008c 	andi	r2,r3,2
 40071b0:	a4400017 	ldw	r17,0(r20)
 40071b4:	10002a26 	beq	r2,zero,4007260 <__sfvwrite_r+0x108>
 40071b8:	05a00034 	movhi	r22,32768
 40071bc:	0027883a 	mov	r19,zero
 40071c0:	0025883a 	mov	r18,zero
 40071c4:	b5bf0004 	addi	r22,r22,-1024
 40071c8:	980d883a 	mov	r6,r19
 40071cc:	a809883a 	mov	r4,r21
 40071d0:	90004626 	beq	r18,zero,40072ec <__sfvwrite_r+0x194>
 40071d4:	900f883a 	mov	r7,r18
 40071d8:	b480022e 	bgeu	r22,r18,40071e4 <__sfvwrite_r+0x8c>
 40071dc:	01e00034 	movhi	r7,32768
 40071e0:	39ff0004 	addi	r7,r7,-1024
 40071e4:	80800917 	ldw	r2,36(r16)
 40071e8:	81400717 	ldw	r5,28(r16)
 40071ec:	103ee83a 	callr	r2
 40071f0:	0080570e 	bge	zero,r2,4007350 <__sfvwrite_r+0x1f8>
 40071f4:	a0c00217 	ldw	r3,8(r20)
 40071f8:	98a7883a 	add	r19,r19,r2
 40071fc:	90a5c83a 	sub	r18,r18,r2
 4007200:	1885c83a 	sub	r2,r3,r2
 4007204:	a0800215 	stw	r2,8(r20)
 4007208:	103fef1e 	bne	r2,zero,40071c8 <__ram_exceptions_end+0xfbfe6f80>
 400720c:	0005883a 	mov	r2,zero
 4007210:	dfc00b17 	ldw	ra,44(sp)
 4007214:	df000a17 	ldw	fp,40(sp)
 4007218:	ddc00917 	ldw	r23,36(sp)
 400721c:	dd800817 	ldw	r22,32(sp)
 4007220:	dd400717 	ldw	r21,28(sp)
 4007224:	dd000617 	ldw	r20,24(sp)
 4007228:	dcc00517 	ldw	r19,20(sp)
 400722c:	dc800417 	ldw	r18,16(sp)
 4007230:	dc400317 	ldw	r17,12(sp)
 4007234:	dc000217 	ldw	r16,8(sp)
 4007238:	dec00c04 	addi	sp,sp,48
 400723c:	f800283a 	ret
 4007240:	800b883a 	mov	r5,r16
 4007244:	a809883a 	mov	r4,r21
 4007248:	4004d000 	call	4004d00 <__swsetup_r>
 400724c:	1000eb1e 	bne	r2,zero,40075fc <__sfvwrite_r+0x4a4>
 4007250:	80c0030b 	ldhu	r3,12(r16)
 4007254:	a4400017 	ldw	r17,0(r20)
 4007258:	1880008c 	andi	r2,r3,2
 400725c:	103fd61e 	bne	r2,zero,40071b8 <__ram_exceptions_end+0xfbfe6f70>
 4007260:	1880004c 	andi	r2,r3,1
 4007264:	10003f1e 	bne	r2,zero,4007364 <__sfvwrite_r+0x20c>
 4007268:	0039883a 	mov	fp,zero
 400726c:	0025883a 	mov	r18,zero
 4007270:	90001a26 	beq	r18,zero,40072dc <__sfvwrite_r+0x184>
 4007274:	1880800c 	andi	r2,r3,512
 4007278:	84c00217 	ldw	r19,8(r16)
 400727c:	10002126 	beq	r2,zero,4007304 <__sfvwrite_r+0x1ac>
 4007280:	982f883a 	mov	r23,r19
 4007284:	94c09336 	bltu	r18,r19,40074d4 <__sfvwrite_r+0x37c>
 4007288:	1881200c 	andi	r2,r3,1152
 400728c:	10009e1e 	bne	r2,zero,4007508 <__sfvwrite_r+0x3b0>
 4007290:	81000017 	ldw	r4,0(r16)
 4007294:	b80d883a 	mov	r6,r23
 4007298:	e00b883a 	mov	r5,fp
 400729c:	400846c0 	call	400846c <memmove>
 40072a0:	80c00217 	ldw	r3,8(r16)
 40072a4:	81000017 	ldw	r4,0(r16)
 40072a8:	9005883a 	mov	r2,r18
 40072ac:	1ce7c83a 	sub	r19,r3,r19
 40072b0:	25cf883a 	add	r7,r4,r23
 40072b4:	84c00215 	stw	r19,8(r16)
 40072b8:	81c00015 	stw	r7,0(r16)
 40072bc:	a0c00217 	ldw	r3,8(r20)
 40072c0:	e0b9883a 	add	fp,fp,r2
 40072c4:	90a5c83a 	sub	r18,r18,r2
 40072c8:	18a7c83a 	sub	r19,r3,r2
 40072cc:	a4c00215 	stw	r19,8(r20)
 40072d0:	983fce26 	beq	r19,zero,400720c <__ram_exceptions_end+0xfbfe6fc4>
 40072d4:	80c0030b 	ldhu	r3,12(r16)
 40072d8:	903fe61e 	bne	r18,zero,4007274 <__ram_exceptions_end+0xfbfe702c>
 40072dc:	8f000017 	ldw	fp,0(r17)
 40072e0:	8c800117 	ldw	r18,4(r17)
 40072e4:	8c400204 	addi	r17,r17,8
 40072e8:	003fe106 	br	4007270 <__ram_exceptions_end+0xfbfe7028>
 40072ec:	8cc00017 	ldw	r19,0(r17)
 40072f0:	8c800117 	ldw	r18,4(r17)
 40072f4:	8c400204 	addi	r17,r17,8
 40072f8:	003fb306 	br	40071c8 <__ram_exceptions_end+0xfbfe6f80>
 40072fc:	0005883a 	mov	r2,zero
 4007300:	f800283a 	ret
 4007304:	81000017 	ldw	r4,0(r16)
 4007308:	80800417 	ldw	r2,16(r16)
 400730c:	11005736 	bltu	r2,r4,400746c <__sfvwrite_r+0x314>
 4007310:	85c00517 	ldw	r23,20(r16)
 4007314:	95c05536 	bltu	r18,r23,400746c <__sfvwrite_r+0x314>
 4007318:	00a00034 	movhi	r2,32768
 400731c:	10bfffc4 	addi	r2,r2,-1
 4007320:	9009883a 	mov	r4,r18
 4007324:	1480012e 	bgeu	r2,r18,400732c <__sfvwrite_r+0x1d4>
 4007328:	1009883a 	mov	r4,r2
 400732c:	b80b883a 	mov	r5,r23
 4007330:	400ddf40 	call	400ddf4 <__divsi3>
 4007334:	15cf383a 	mul	r7,r2,r23
 4007338:	81400717 	ldw	r5,28(r16)
 400733c:	80800917 	ldw	r2,36(r16)
 4007340:	e00d883a 	mov	r6,fp
 4007344:	a809883a 	mov	r4,r21
 4007348:	103ee83a 	callr	r2
 400734c:	00bfdb16 	blt	zero,r2,40072bc <__ram_exceptions_end+0xfbfe7074>
 4007350:	8080030b 	ldhu	r2,12(r16)
 4007354:	10801014 	ori	r2,r2,64
 4007358:	8080030d 	sth	r2,12(r16)
 400735c:	00bfffc4 	movi	r2,-1
 4007360:	003fab06 	br	4007210 <__ram_exceptions_end+0xfbfe6fc8>
 4007364:	0027883a 	mov	r19,zero
 4007368:	0011883a 	mov	r8,zero
 400736c:	0039883a 	mov	fp,zero
 4007370:	0025883a 	mov	r18,zero
 4007374:	90001f26 	beq	r18,zero,40073f4 <__sfvwrite_r+0x29c>
 4007378:	40005a26 	beq	r8,zero,40074e4 <__sfvwrite_r+0x38c>
 400737c:	982d883a 	mov	r22,r19
 4007380:	94c0012e 	bgeu	r18,r19,4007388 <__sfvwrite_r+0x230>
 4007384:	902d883a 	mov	r22,r18
 4007388:	81000017 	ldw	r4,0(r16)
 400738c:	80800417 	ldw	r2,16(r16)
 4007390:	b02f883a 	mov	r23,r22
 4007394:	81c00517 	ldw	r7,20(r16)
 4007398:	1100032e 	bgeu	r2,r4,40073a8 <__sfvwrite_r+0x250>
 400739c:	80c00217 	ldw	r3,8(r16)
 40073a0:	38c7883a 	add	r3,r7,r3
 40073a4:	1d801816 	blt	r3,r22,4007408 <__sfvwrite_r+0x2b0>
 40073a8:	b1c03e16 	blt	r22,r7,40074a4 <__sfvwrite_r+0x34c>
 40073ac:	80800917 	ldw	r2,36(r16)
 40073b0:	81400717 	ldw	r5,28(r16)
 40073b4:	e00d883a 	mov	r6,fp
 40073b8:	da000115 	stw	r8,4(sp)
 40073bc:	a809883a 	mov	r4,r21
 40073c0:	103ee83a 	callr	r2
 40073c4:	102f883a 	mov	r23,r2
 40073c8:	da000117 	ldw	r8,4(sp)
 40073cc:	00bfe00e 	bge	zero,r2,4007350 <__ram_exceptions_end+0xfbfe7108>
 40073d0:	9de7c83a 	sub	r19,r19,r23
 40073d4:	98001f26 	beq	r19,zero,4007454 <__sfvwrite_r+0x2fc>
 40073d8:	a0800217 	ldw	r2,8(r20)
 40073dc:	e5f9883a 	add	fp,fp,r23
 40073e0:	95e5c83a 	sub	r18,r18,r23
 40073e4:	15efc83a 	sub	r23,r2,r23
 40073e8:	a5c00215 	stw	r23,8(r20)
 40073ec:	b83f8726 	beq	r23,zero,400720c <__ram_exceptions_end+0xfbfe6fc4>
 40073f0:	903fe11e 	bne	r18,zero,4007378 <__ram_exceptions_end+0xfbfe7130>
 40073f4:	8f000017 	ldw	fp,0(r17)
 40073f8:	8c800117 	ldw	r18,4(r17)
 40073fc:	0011883a 	mov	r8,zero
 4007400:	8c400204 	addi	r17,r17,8
 4007404:	003fdb06 	br	4007374 <__ram_exceptions_end+0xfbfe712c>
 4007408:	180d883a 	mov	r6,r3
 400740c:	e00b883a 	mov	r5,fp
 4007410:	da000115 	stw	r8,4(sp)
 4007414:	d8c00015 	stw	r3,0(sp)
 4007418:	400846c0 	call	400846c <memmove>
 400741c:	d8c00017 	ldw	r3,0(sp)
 4007420:	80800017 	ldw	r2,0(r16)
 4007424:	800b883a 	mov	r5,r16
 4007428:	a809883a 	mov	r4,r21
 400742c:	10c5883a 	add	r2,r2,r3
 4007430:	80800015 	stw	r2,0(r16)
 4007434:	d8c00015 	stw	r3,0(sp)
 4007438:	40068f80 	call	40068f8 <_fflush_r>
 400743c:	d8c00017 	ldw	r3,0(sp)
 4007440:	da000117 	ldw	r8,4(sp)
 4007444:	103fc21e 	bne	r2,zero,4007350 <__ram_exceptions_end+0xfbfe7108>
 4007448:	182f883a 	mov	r23,r3
 400744c:	9de7c83a 	sub	r19,r19,r23
 4007450:	983fe11e 	bne	r19,zero,40073d8 <__ram_exceptions_end+0xfbfe7190>
 4007454:	800b883a 	mov	r5,r16
 4007458:	a809883a 	mov	r4,r21
 400745c:	40068f80 	call	40068f8 <_fflush_r>
 4007460:	103fbb1e 	bne	r2,zero,4007350 <__ram_exceptions_end+0xfbfe7108>
 4007464:	0011883a 	mov	r8,zero
 4007468:	003fdb06 	br	40073d8 <__ram_exceptions_end+0xfbfe7190>
 400746c:	94c0012e 	bgeu	r18,r19,4007474 <__sfvwrite_r+0x31c>
 4007470:	9027883a 	mov	r19,r18
 4007474:	980d883a 	mov	r6,r19
 4007478:	e00b883a 	mov	r5,fp
 400747c:	400846c0 	call	400846c <memmove>
 4007480:	80800217 	ldw	r2,8(r16)
 4007484:	80c00017 	ldw	r3,0(r16)
 4007488:	14c5c83a 	sub	r2,r2,r19
 400748c:	1cc7883a 	add	r3,r3,r19
 4007490:	80800215 	stw	r2,8(r16)
 4007494:	80c00015 	stw	r3,0(r16)
 4007498:	10004326 	beq	r2,zero,40075a8 <__sfvwrite_r+0x450>
 400749c:	9805883a 	mov	r2,r19
 40074a0:	003f8606 	br	40072bc <__ram_exceptions_end+0xfbfe7074>
 40074a4:	b00d883a 	mov	r6,r22
 40074a8:	e00b883a 	mov	r5,fp
 40074ac:	da000115 	stw	r8,4(sp)
 40074b0:	400846c0 	call	400846c <memmove>
 40074b4:	80800217 	ldw	r2,8(r16)
 40074b8:	80c00017 	ldw	r3,0(r16)
 40074bc:	da000117 	ldw	r8,4(sp)
 40074c0:	1585c83a 	sub	r2,r2,r22
 40074c4:	1dad883a 	add	r22,r3,r22
 40074c8:	80800215 	stw	r2,8(r16)
 40074cc:	85800015 	stw	r22,0(r16)
 40074d0:	003fbf06 	br	40073d0 <__ram_exceptions_end+0xfbfe7188>
 40074d4:	81000017 	ldw	r4,0(r16)
 40074d8:	9027883a 	mov	r19,r18
 40074dc:	902f883a 	mov	r23,r18
 40074e0:	003f6c06 	br	4007294 <__ram_exceptions_end+0xfbfe704c>
 40074e4:	900d883a 	mov	r6,r18
 40074e8:	01400284 	movi	r5,10
 40074ec:	e009883a 	mov	r4,fp
 40074f0:	40082400 	call	4008240 <memchr>
 40074f4:	10003e26 	beq	r2,zero,40075f0 <__sfvwrite_r+0x498>
 40074f8:	10800044 	addi	r2,r2,1
 40074fc:	1727c83a 	sub	r19,r2,fp
 4007500:	02000044 	movi	r8,1
 4007504:	003f9d06 	br	400737c <__ram_exceptions_end+0xfbfe7134>
 4007508:	80800517 	ldw	r2,20(r16)
 400750c:	81400417 	ldw	r5,16(r16)
 4007510:	81c00017 	ldw	r7,0(r16)
 4007514:	10a7883a 	add	r19,r2,r2
 4007518:	9885883a 	add	r2,r19,r2
 400751c:	1026d7fa 	srli	r19,r2,31
 4007520:	396dc83a 	sub	r22,r7,r5
 4007524:	b1000044 	addi	r4,r22,1
 4007528:	9885883a 	add	r2,r19,r2
 400752c:	1027d07a 	srai	r19,r2,1
 4007530:	2485883a 	add	r2,r4,r18
 4007534:	980d883a 	mov	r6,r19
 4007538:	9880022e 	bgeu	r19,r2,4007544 <__sfvwrite_r+0x3ec>
 400753c:	1027883a 	mov	r19,r2
 4007540:	100d883a 	mov	r6,r2
 4007544:	18c1000c 	andi	r3,r3,1024
 4007548:	18001c26 	beq	r3,zero,40075bc <__sfvwrite_r+0x464>
 400754c:	300b883a 	mov	r5,r6
 4007550:	a809883a 	mov	r4,r21
 4007554:	4007a340 	call	4007a34 <_malloc_r>
 4007558:	102f883a 	mov	r23,r2
 400755c:	10002926 	beq	r2,zero,4007604 <__sfvwrite_r+0x4ac>
 4007560:	81400417 	ldw	r5,16(r16)
 4007564:	b00d883a 	mov	r6,r22
 4007568:	1009883a 	mov	r4,r2
 400756c:	40083240 	call	4008324 <memcpy>
 4007570:	8080030b 	ldhu	r2,12(r16)
 4007574:	00fedfc4 	movi	r3,-1153
 4007578:	10c4703a 	and	r2,r2,r3
 400757c:	10802014 	ori	r2,r2,128
 4007580:	8080030d 	sth	r2,12(r16)
 4007584:	bd89883a 	add	r4,r23,r22
 4007588:	9d8fc83a 	sub	r7,r19,r22
 400758c:	85c00415 	stw	r23,16(r16)
 4007590:	84c00515 	stw	r19,20(r16)
 4007594:	81000015 	stw	r4,0(r16)
 4007598:	9027883a 	mov	r19,r18
 400759c:	81c00215 	stw	r7,8(r16)
 40075a0:	902f883a 	mov	r23,r18
 40075a4:	003f3b06 	br	4007294 <__ram_exceptions_end+0xfbfe704c>
 40075a8:	800b883a 	mov	r5,r16
 40075ac:	a809883a 	mov	r4,r21
 40075b0:	40068f80 	call	40068f8 <_fflush_r>
 40075b4:	103fb926 	beq	r2,zero,400749c <__ram_exceptions_end+0xfbfe7254>
 40075b8:	003f6506 	br	4007350 <__ram_exceptions_end+0xfbfe7108>
 40075bc:	a809883a 	mov	r4,r21
 40075c0:	40098540 	call	4009854 <_realloc_r>
 40075c4:	102f883a 	mov	r23,r2
 40075c8:	103fee1e 	bne	r2,zero,4007584 <__ram_exceptions_end+0xfbfe733c>
 40075cc:	81400417 	ldw	r5,16(r16)
 40075d0:	a809883a 	mov	r4,r21
 40075d4:	4006e480 	call	4006e48 <_free_r>
 40075d8:	8080030b 	ldhu	r2,12(r16)
 40075dc:	00ffdfc4 	movi	r3,-129
 40075e0:	1884703a 	and	r2,r3,r2
 40075e4:	00c00304 	movi	r3,12
 40075e8:	a8c00015 	stw	r3,0(r21)
 40075ec:	003f5906 	br	4007354 <__ram_exceptions_end+0xfbfe710c>
 40075f0:	94c00044 	addi	r19,r18,1
 40075f4:	02000044 	movi	r8,1
 40075f8:	003f6006 	br	400737c <__ram_exceptions_end+0xfbfe7134>
 40075fc:	00bfffc4 	movi	r2,-1
 4007600:	003f0306 	br	4007210 <__ram_exceptions_end+0xfbfe6fc8>
 4007604:	00800304 	movi	r2,12
 4007608:	a8800015 	stw	r2,0(r21)
 400760c:	8080030b 	ldhu	r2,12(r16)
 4007610:	003f5006 	br	4007354 <__ram_exceptions_end+0xfbfe710c>

04007614 <_fwalk>:
 4007614:	defff704 	addi	sp,sp,-36
 4007618:	dd000415 	stw	r20,16(sp)
 400761c:	dfc00815 	stw	ra,32(sp)
 4007620:	ddc00715 	stw	r23,28(sp)
 4007624:	dd800615 	stw	r22,24(sp)
 4007628:	dd400515 	stw	r21,20(sp)
 400762c:	dcc00315 	stw	r19,12(sp)
 4007630:	dc800215 	stw	r18,8(sp)
 4007634:	dc400115 	stw	r17,4(sp)
 4007638:	dc000015 	stw	r16,0(sp)
 400763c:	2500b804 	addi	r20,r4,736
 4007640:	a0002326 	beq	r20,zero,40076d0 <_fwalk+0xbc>
 4007644:	282b883a 	mov	r21,r5
 4007648:	002f883a 	mov	r23,zero
 400764c:	05800044 	movi	r22,1
 4007650:	04ffffc4 	movi	r19,-1
 4007654:	a4400117 	ldw	r17,4(r20)
 4007658:	a4800217 	ldw	r18,8(r20)
 400765c:	8c7fffc4 	addi	r17,r17,-1
 4007660:	88000d16 	blt	r17,zero,4007698 <_fwalk+0x84>
 4007664:	94000304 	addi	r16,r18,12
 4007668:	94800384 	addi	r18,r18,14
 400766c:	8080000b 	ldhu	r2,0(r16)
 4007670:	8c7fffc4 	addi	r17,r17,-1
 4007674:	813ffd04 	addi	r4,r16,-12
 4007678:	b080042e 	bgeu	r22,r2,400768c <_fwalk+0x78>
 400767c:	9080000f 	ldh	r2,0(r18)
 4007680:	14c00226 	beq	r2,r19,400768c <_fwalk+0x78>
 4007684:	a83ee83a 	callr	r21
 4007688:	b8aeb03a 	or	r23,r23,r2
 400768c:	84001a04 	addi	r16,r16,104
 4007690:	94801a04 	addi	r18,r18,104
 4007694:	8cfff51e 	bne	r17,r19,400766c <__ram_exceptions_end+0xfbfe7424>
 4007698:	a5000017 	ldw	r20,0(r20)
 400769c:	a03fed1e 	bne	r20,zero,4007654 <__ram_exceptions_end+0xfbfe740c>
 40076a0:	b805883a 	mov	r2,r23
 40076a4:	dfc00817 	ldw	ra,32(sp)
 40076a8:	ddc00717 	ldw	r23,28(sp)
 40076ac:	dd800617 	ldw	r22,24(sp)
 40076b0:	dd400517 	ldw	r21,20(sp)
 40076b4:	dd000417 	ldw	r20,16(sp)
 40076b8:	dcc00317 	ldw	r19,12(sp)
 40076bc:	dc800217 	ldw	r18,8(sp)
 40076c0:	dc400117 	ldw	r17,4(sp)
 40076c4:	dc000017 	ldw	r16,0(sp)
 40076c8:	dec00904 	addi	sp,sp,36
 40076cc:	f800283a 	ret
 40076d0:	002f883a 	mov	r23,zero
 40076d4:	003ff206 	br	40076a0 <__ram_exceptions_end+0xfbfe7458>

040076d8 <_fwalk_reent>:
 40076d8:	defff704 	addi	sp,sp,-36
 40076dc:	dd000415 	stw	r20,16(sp)
 40076e0:	dfc00815 	stw	ra,32(sp)
 40076e4:	ddc00715 	stw	r23,28(sp)
 40076e8:	dd800615 	stw	r22,24(sp)
 40076ec:	dd400515 	stw	r21,20(sp)
 40076f0:	dcc00315 	stw	r19,12(sp)
 40076f4:	dc800215 	stw	r18,8(sp)
 40076f8:	dc400115 	stw	r17,4(sp)
 40076fc:	dc000015 	stw	r16,0(sp)
 4007700:	2500b804 	addi	r20,r4,736
 4007704:	a0002326 	beq	r20,zero,4007794 <_fwalk_reent+0xbc>
 4007708:	282b883a 	mov	r21,r5
 400770c:	2027883a 	mov	r19,r4
 4007710:	002f883a 	mov	r23,zero
 4007714:	05800044 	movi	r22,1
 4007718:	04bfffc4 	movi	r18,-1
 400771c:	a4400117 	ldw	r17,4(r20)
 4007720:	a4000217 	ldw	r16,8(r20)
 4007724:	8c7fffc4 	addi	r17,r17,-1
 4007728:	88000c16 	blt	r17,zero,400775c <_fwalk_reent+0x84>
 400772c:	84000304 	addi	r16,r16,12
 4007730:	8080000b 	ldhu	r2,0(r16)
 4007734:	8c7fffc4 	addi	r17,r17,-1
 4007738:	817ffd04 	addi	r5,r16,-12
 400773c:	b080052e 	bgeu	r22,r2,4007754 <_fwalk_reent+0x7c>
 4007740:	8080008f 	ldh	r2,2(r16)
 4007744:	9809883a 	mov	r4,r19
 4007748:	14800226 	beq	r2,r18,4007754 <_fwalk_reent+0x7c>
 400774c:	a83ee83a 	callr	r21
 4007750:	b8aeb03a 	or	r23,r23,r2
 4007754:	84001a04 	addi	r16,r16,104
 4007758:	8cbff51e 	bne	r17,r18,4007730 <__ram_exceptions_end+0xfbfe74e8>
 400775c:	a5000017 	ldw	r20,0(r20)
 4007760:	a03fee1e 	bne	r20,zero,400771c <__ram_exceptions_end+0xfbfe74d4>
 4007764:	b805883a 	mov	r2,r23
 4007768:	dfc00817 	ldw	ra,32(sp)
 400776c:	ddc00717 	ldw	r23,28(sp)
 4007770:	dd800617 	ldw	r22,24(sp)
 4007774:	dd400517 	ldw	r21,20(sp)
 4007778:	dd000417 	ldw	r20,16(sp)
 400777c:	dcc00317 	ldw	r19,12(sp)
 4007780:	dc800217 	ldw	r18,8(sp)
 4007784:	dc400117 	ldw	r17,4(sp)
 4007788:	dc000017 	ldw	r16,0(sp)
 400778c:	dec00904 	addi	sp,sp,36
 4007790:	f800283a 	ret
 4007794:	002f883a 	mov	r23,zero
 4007798:	003ff206 	br	4007764 <__ram_exceptions_end+0xfbfe751c>

0400779c <_setlocale_r>:
 400779c:	30001b26 	beq	r6,zero,400780c <_setlocale_r+0x70>
 40077a0:	01410074 	movhi	r5,1025
 40077a4:	defffe04 	addi	sp,sp,-8
 40077a8:	29522a04 	addi	r5,r5,18600
 40077ac:	3009883a 	mov	r4,r6
 40077b0:	dc000015 	stw	r16,0(sp)
 40077b4:	dfc00115 	stw	ra,4(sp)
 40077b8:	3021883a 	mov	r16,r6
 40077bc:	40006e40 	call	40006e4 <strcmp>
 40077c0:	1000061e 	bne	r2,zero,40077dc <_setlocale_r+0x40>
 40077c4:	00810074 	movhi	r2,1025
 40077c8:	10922904 	addi	r2,r2,18596
 40077cc:	dfc00117 	ldw	ra,4(sp)
 40077d0:	dc000017 	ldw	r16,0(sp)
 40077d4:	dec00204 	addi	sp,sp,8
 40077d8:	f800283a 	ret
 40077dc:	01410074 	movhi	r5,1025
 40077e0:	29522904 	addi	r5,r5,18596
 40077e4:	8009883a 	mov	r4,r16
 40077e8:	40006e40 	call	40006e4 <strcmp>
 40077ec:	103ff526 	beq	r2,zero,40077c4 <__ram_exceptions_end+0xfbfe757c>
 40077f0:	01410074 	movhi	r5,1025
 40077f4:	29520c04 	addi	r5,r5,18480
 40077f8:	8009883a 	mov	r4,r16
 40077fc:	40006e40 	call	40006e4 <strcmp>
 4007800:	103ff026 	beq	r2,zero,40077c4 <__ram_exceptions_end+0xfbfe757c>
 4007804:	0005883a 	mov	r2,zero
 4007808:	003ff006 	br	40077cc <__ram_exceptions_end+0xfbfe7584>
 400780c:	00810074 	movhi	r2,1025
 4007810:	10922904 	addi	r2,r2,18596
 4007814:	f800283a 	ret

04007818 <__locale_charset>:
 4007818:	00810074 	movhi	r2,1025
 400781c:	10941b04 	addi	r2,r2,20588
 4007820:	f800283a 	ret

04007824 <__locale_mb_cur_max>:
 4007824:	00810074 	movhi	r2,1025
 4007828:	109a0704 	addi	r2,r2,26652
 400782c:	10800017 	ldw	r2,0(r2)
 4007830:	f800283a 	ret

04007834 <__locale_msgcharset>:
 4007834:	00810074 	movhi	r2,1025
 4007838:	10941304 	addi	r2,r2,20556
 400783c:	f800283a 	ret

04007840 <__locale_cjk_lang>:
 4007840:	0005883a 	mov	r2,zero
 4007844:	f800283a 	ret

04007848 <_localeconv_r>:
 4007848:	00810074 	movhi	r2,1025
 400784c:	10942304 	addi	r2,r2,20620
 4007850:	f800283a 	ret

04007854 <setlocale>:
 4007854:	00810074 	movhi	r2,1025
 4007858:	109a0604 	addi	r2,r2,26648
 400785c:	280d883a 	mov	r6,r5
 4007860:	200b883a 	mov	r5,r4
 4007864:	11000017 	ldw	r4,0(r2)
 4007868:	400779c1 	jmpi	400779c <_setlocale_r>

0400786c <localeconv>:
 400786c:	00810074 	movhi	r2,1025
 4007870:	10942304 	addi	r2,r2,20620
 4007874:	f800283a 	ret

04007878 <__smakebuf_r>:
 4007878:	2880030b 	ldhu	r2,12(r5)
 400787c:	10c0008c 	andi	r3,r2,2
 4007880:	1800411e 	bne	r3,zero,4007988 <__smakebuf_r+0x110>
 4007884:	deffec04 	addi	sp,sp,-80
 4007888:	dc000f15 	stw	r16,60(sp)
 400788c:	2821883a 	mov	r16,r5
 4007890:	2940038f 	ldh	r5,14(r5)
 4007894:	dc401015 	stw	r17,64(sp)
 4007898:	dfc01315 	stw	ra,76(sp)
 400789c:	dcc01215 	stw	r19,72(sp)
 40078a0:	dc801115 	stw	r18,68(sp)
 40078a4:	2023883a 	mov	r17,r4
 40078a8:	28001c16 	blt	r5,zero,400791c <__smakebuf_r+0xa4>
 40078ac:	d80d883a 	mov	r6,sp
 40078b0:	400cfec0 	call	400cfec <_fstat_r>
 40078b4:	10001816 	blt	r2,zero,4007918 <__smakebuf_r+0xa0>
 40078b8:	d8800117 	ldw	r2,4(sp)
 40078bc:	00e00014 	movui	r3,32768
 40078c0:	10bc000c 	andi	r2,r2,61440
 40078c4:	14c80020 	cmpeqi	r19,r2,8192
 40078c8:	10c03726 	beq	r2,r3,40079a8 <__smakebuf_r+0x130>
 40078cc:	80c0030b 	ldhu	r3,12(r16)
 40078d0:	18c20014 	ori	r3,r3,2048
 40078d4:	80c0030d 	sth	r3,12(r16)
 40078d8:	00c80004 	movi	r3,8192
 40078dc:	10c0521e 	bne	r2,r3,4007a28 <__smakebuf_r+0x1b0>
 40078e0:	8140038f 	ldh	r5,14(r16)
 40078e4:	8809883a 	mov	r4,r17
 40078e8:	400d0480 	call	400d048 <_isatty_r>
 40078ec:	10004c26 	beq	r2,zero,4007a20 <__smakebuf_r+0x1a8>
 40078f0:	8080030b 	ldhu	r2,12(r16)
 40078f4:	80c010c4 	addi	r3,r16,67
 40078f8:	80c00015 	stw	r3,0(r16)
 40078fc:	10800054 	ori	r2,r2,1
 4007900:	8080030d 	sth	r2,12(r16)
 4007904:	00800044 	movi	r2,1
 4007908:	80c00415 	stw	r3,16(r16)
 400790c:	80800515 	stw	r2,20(r16)
 4007910:	04810004 	movi	r18,1024
 4007914:	00000706 	br	4007934 <__smakebuf_r+0xbc>
 4007918:	8080030b 	ldhu	r2,12(r16)
 400791c:	10c0200c 	andi	r3,r2,128
 4007920:	18001f1e 	bne	r3,zero,40079a0 <__smakebuf_r+0x128>
 4007924:	04810004 	movi	r18,1024
 4007928:	10820014 	ori	r2,r2,2048
 400792c:	8080030d 	sth	r2,12(r16)
 4007930:	0027883a 	mov	r19,zero
 4007934:	900b883a 	mov	r5,r18
 4007938:	8809883a 	mov	r4,r17
 400793c:	4007a340 	call	4007a34 <_malloc_r>
 4007940:	10002c26 	beq	r2,zero,40079f4 <__smakebuf_r+0x17c>
 4007944:	80c0030b 	ldhu	r3,12(r16)
 4007948:	01010034 	movhi	r4,1024
 400794c:	211a6304 	addi	r4,r4,27020
 4007950:	89000f15 	stw	r4,60(r17)
 4007954:	18c02014 	ori	r3,r3,128
 4007958:	80c0030d 	sth	r3,12(r16)
 400795c:	80800015 	stw	r2,0(r16)
 4007960:	80800415 	stw	r2,16(r16)
 4007964:	84800515 	stw	r18,20(r16)
 4007968:	98001a1e 	bne	r19,zero,40079d4 <__smakebuf_r+0x15c>
 400796c:	dfc01317 	ldw	ra,76(sp)
 4007970:	dcc01217 	ldw	r19,72(sp)
 4007974:	dc801117 	ldw	r18,68(sp)
 4007978:	dc401017 	ldw	r17,64(sp)
 400797c:	dc000f17 	ldw	r16,60(sp)
 4007980:	dec01404 	addi	sp,sp,80
 4007984:	f800283a 	ret
 4007988:	288010c4 	addi	r2,r5,67
 400798c:	28800015 	stw	r2,0(r5)
 4007990:	28800415 	stw	r2,16(r5)
 4007994:	00800044 	movi	r2,1
 4007998:	28800515 	stw	r2,20(r5)
 400799c:	f800283a 	ret
 40079a0:	04801004 	movi	r18,64
 40079a4:	003fe006 	br	4007928 <__ram_exceptions_end+0xfbfe76e0>
 40079a8:	81000a17 	ldw	r4,40(r16)
 40079ac:	00c10074 	movhi	r3,1025
 40079b0:	18e7d604 	addi	r3,r3,-24744
 40079b4:	20ffc51e 	bne	r4,r3,40078cc <__ram_exceptions_end+0xfbfe7684>
 40079b8:	8080030b 	ldhu	r2,12(r16)
 40079bc:	04810004 	movi	r18,1024
 40079c0:	84801315 	stw	r18,76(r16)
 40079c4:	1484b03a 	or	r2,r2,r18
 40079c8:	8080030d 	sth	r2,12(r16)
 40079cc:	0027883a 	mov	r19,zero
 40079d0:	003fd806 	br	4007934 <__ram_exceptions_end+0xfbfe76ec>
 40079d4:	8140038f 	ldh	r5,14(r16)
 40079d8:	8809883a 	mov	r4,r17
 40079dc:	400d0480 	call	400d048 <_isatty_r>
 40079e0:	103fe226 	beq	r2,zero,400796c <__ram_exceptions_end+0xfbfe7724>
 40079e4:	8080030b 	ldhu	r2,12(r16)
 40079e8:	10800054 	ori	r2,r2,1
 40079ec:	8080030d 	sth	r2,12(r16)
 40079f0:	003fde06 	br	400796c <__ram_exceptions_end+0xfbfe7724>
 40079f4:	8080030b 	ldhu	r2,12(r16)
 40079f8:	10c0800c 	andi	r3,r2,512
 40079fc:	183fdb1e 	bne	r3,zero,400796c <__ram_exceptions_end+0xfbfe7724>
 4007a00:	10800094 	ori	r2,r2,2
 4007a04:	80c010c4 	addi	r3,r16,67
 4007a08:	8080030d 	sth	r2,12(r16)
 4007a0c:	00800044 	movi	r2,1
 4007a10:	80c00015 	stw	r3,0(r16)
 4007a14:	80c00415 	stw	r3,16(r16)
 4007a18:	80800515 	stw	r2,20(r16)
 4007a1c:	003fd306 	br	400796c <__ram_exceptions_end+0xfbfe7724>
 4007a20:	04810004 	movi	r18,1024
 4007a24:	003fc306 	br	4007934 <__ram_exceptions_end+0xfbfe76ec>
 4007a28:	0027883a 	mov	r19,zero
 4007a2c:	04810004 	movi	r18,1024
 4007a30:	003fc006 	br	4007934 <__ram_exceptions_end+0xfbfe76ec>

04007a34 <_malloc_r>:
 4007a34:	defff504 	addi	sp,sp,-44
 4007a38:	dc800315 	stw	r18,12(sp)
 4007a3c:	dfc00a15 	stw	ra,40(sp)
 4007a40:	df000915 	stw	fp,36(sp)
 4007a44:	ddc00815 	stw	r23,32(sp)
 4007a48:	dd800715 	stw	r22,28(sp)
 4007a4c:	dd400615 	stw	r21,24(sp)
 4007a50:	dd000515 	stw	r20,20(sp)
 4007a54:	dcc00415 	stw	r19,16(sp)
 4007a58:	dc400215 	stw	r17,8(sp)
 4007a5c:	dc000115 	stw	r16,4(sp)
 4007a60:	288002c4 	addi	r2,r5,11
 4007a64:	00c00584 	movi	r3,22
 4007a68:	2025883a 	mov	r18,r4
 4007a6c:	18807f2e 	bgeu	r3,r2,4007c6c <_malloc_r+0x238>
 4007a70:	047ffe04 	movi	r17,-8
 4007a74:	1462703a 	and	r17,r2,r17
 4007a78:	8800a316 	blt	r17,zero,4007d08 <_malloc_r+0x2d4>
 4007a7c:	8940a236 	bltu	r17,r5,4007d08 <_malloc_r+0x2d4>
 4007a80:	4010b8c0 	call	4010b8c <__malloc_lock>
 4007a84:	00807dc4 	movi	r2,503
 4007a88:	1441e92e 	bgeu	r2,r17,4008230 <_malloc_r+0x7fc>
 4007a8c:	8804d27a 	srli	r2,r17,9
 4007a90:	1000a126 	beq	r2,zero,4007d18 <_malloc_r+0x2e4>
 4007a94:	00c00104 	movi	r3,4
 4007a98:	18811e36 	bltu	r3,r2,4007f14 <_malloc_r+0x4e0>
 4007a9c:	8804d1ba 	srli	r2,r17,6
 4007aa0:	12000e44 	addi	r8,r2,57
 4007aa4:	11c00e04 	addi	r7,r2,56
 4007aa8:	4209883a 	add	r4,r8,r8
 4007aac:	04c10074 	movhi	r19,1025
 4007ab0:	2109883a 	add	r4,r4,r4
 4007ab4:	9cd43104 	addi	r19,r19,20676
 4007ab8:	2109883a 	add	r4,r4,r4
 4007abc:	9909883a 	add	r4,r19,r4
 4007ac0:	24000117 	ldw	r16,4(r4)
 4007ac4:	213ffe04 	addi	r4,r4,-8
 4007ac8:	24009726 	beq	r4,r16,4007d28 <_malloc_r+0x2f4>
 4007acc:	80800117 	ldw	r2,4(r16)
 4007ad0:	01bfff04 	movi	r6,-4
 4007ad4:	014003c4 	movi	r5,15
 4007ad8:	1184703a 	and	r2,r2,r6
 4007adc:	1447c83a 	sub	r3,r2,r17
 4007ae0:	28c00716 	blt	r5,r3,4007b00 <_malloc_r+0xcc>
 4007ae4:	1800920e 	bge	r3,zero,4007d30 <_malloc_r+0x2fc>
 4007ae8:	84000317 	ldw	r16,12(r16)
 4007aec:	24008e26 	beq	r4,r16,4007d28 <_malloc_r+0x2f4>
 4007af0:	80800117 	ldw	r2,4(r16)
 4007af4:	1184703a 	and	r2,r2,r6
 4007af8:	1447c83a 	sub	r3,r2,r17
 4007afc:	28fff90e 	bge	r5,r3,4007ae4 <__ram_exceptions_end+0xfbfe789c>
 4007b00:	3809883a 	mov	r4,r7
 4007b04:	01810074 	movhi	r6,1025
 4007b08:	9c000417 	ldw	r16,16(r19)
 4007b0c:	31943104 	addi	r6,r6,20676
 4007b10:	32000204 	addi	r8,r6,8
 4007b14:	82013426 	beq	r16,r8,4007fe8 <_malloc_r+0x5b4>
 4007b18:	80c00117 	ldw	r3,4(r16)
 4007b1c:	00bfff04 	movi	r2,-4
 4007b20:	188e703a 	and	r7,r3,r2
 4007b24:	3c45c83a 	sub	r2,r7,r17
 4007b28:	00c003c4 	movi	r3,15
 4007b2c:	18811f16 	blt	r3,r2,4007fac <_malloc_r+0x578>
 4007b30:	32000515 	stw	r8,20(r6)
 4007b34:	32000415 	stw	r8,16(r6)
 4007b38:	10007f0e 	bge	r2,zero,4007d38 <_malloc_r+0x304>
 4007b3c:	00807fc4 	movi	r2,511
 4007b40:	11c0fd36 	bltu	r2,r7,4007f38 <_malloc_r+0x504>
 4007b44:	3806d0fa 	srli	r3,r7,3
 4007b48:	01c00044 	movi	r7,1
 4007b4c:	30800117 	ldw	r2,4(r6)
 4007b50:	19400044 	addi	r5,r3,1
 4007b54:	294b883a 	add	r5,r5,r5
 4007b58:	1807d0ba 	srai	r3,r3,2
 4007b5c:	294b883a 	add	r5,r5,r5
 4007b60:	294b883a 	add	r5,r5,r5
 4007b64:	298b883a 	add	r5,r5,r6
 4007b68:	38c6983a 	sll	r3,r7,r3
 4007b6c:	29c00017 	ldw	r7,0(r5)
 4007b70:	2a7ffe04 	addi	r9,r5,-8
 4007b74:	1886b03a 	or	r3,r3,r2
 4007b78:	82400315 	stw	r9,12(r16)
 4007b7c:	81c00215 	stw	r7,8(r16)
 4007b80:	30c00115 	stw	r3,4(r6)
 4007b84:	2c000015 	stw	r16,0(r5)
 4007b88:	3c000315 	stw	r16,12(r7)
 4007b8c:	2005d0ba 	srai	r2,r4,2
 4007b90:	01400044 	movi	r5,1
 4007b94:	288a983a 	sll	r5,r5,r2
 4007b98:	19406f36 	bltu	r3,r5,4007d58 <_malloc_r+0x324>
 4007b9c:	28c4703a 	and	r2,r5,r3
 4007ba0:	10000a1e 	bne	r2,zero,4007bcc <_malloc_r+0x198>
 4007ba4:	00bfff04 	movi	r2,-4
 4007ba8:	294b883a 	add	r5,r5,r5
 4007bac:	2088703a 	and	r4,r4,r2
 4007bb0:	28c4703a 	and	r2,r5,r3
 4007bb4:	21000104 	addi	r4,r4,4
 4007bb8:	1000041e 	bne	r2,zero,4007bcc <_malloc_r+0x198>
 4007bbc:	294b883a 	add	r5,r5,r5
 4007bc0:	28c4703a 	and	r2,r5,r3
 4007bc4:	21000104 	addi	r4,r4,4
 4007bc8:	103ffc26 	beq	r2,zero,4007bbc <__ram_exceptions_end+0xfbfe7974>
 4007bcc:	02bfff04 	movi	r10,-4
 4007bd0:	024003c4 	movi	r9,15
 4007bd4:	21800044 	addi	r6,r4,1
 4007bd8:	318d883a 	add	r6,r6,r6
 4007bdc:	318d883a 	add	r6,r6,r6
 4007be0:	318d883a 	add	r6,r6,r6
 4007be4:	998d883a 	add	r6,r19,r6
 4007be8:	333ffe04 	addi	r12,r6,-8
 4007bec:	2017883a 	mov	r11,r4
 4007bf0:	31800104 	addi	r6,r6,4
 4007bf4:	34000017 	ldw	r16,0(r6)
 4007bf8:	31fffd04 	addi	r7,r6,-12
 4007bfc:	81c0041e 	bne	r16,r7,4007c10 <_malloc_r+0x1dc>
 4007c00:	0000fb06 	br	4007ff0 <_malloc_r+0x5bc>
 4007c04:	1801030e 	bge	r3,zero,4008014 <_malloc_r+0x5e0>
 4007c08:	84000317 	ldw	r16,12(r16)
 4007c0c:	81c0f826 	beq	r16,r7,4007ff0 <_malloc_r+0x5bc>
 4007c10:	80800117 	ldw	r2,4(r16)
 4007c14:	1284703a 	and	r2,r2,r10
 4007c18:	1447c83a 	sub	r3,r2,r17
 4007c1c:	48fff90e 	bge	r9,r3,4007c04 <__ram_exceptions_end+0xfbfe79bc>
 4007c20:	80800317 	ldw	r2,12(r16)
 4007c24:	81000217 	ldw	r4,8(r16)
 4007c28:	89400054 	ori	r5,r17,1
 4007c2c:	81400115 	stw	r5,4(r16)
 4007c30:	20800315 	stw	r2,12(r4)
 4007c34:	11000215 	stw	r4,8(r2)
 4007c38:	8463883a 	add	r17,r16,r17
 4007c3c:	9c400515 	stw	r17,20(r19)
 4007c40:	9c400415 	stw	r17,16(r19)
 4007c44:	18800054 	ori	r2,r3,1
 4007c48:	88800115 	stw	r2,4(r17)
 4007c4c:	8a000315 	stw	r8,12(r17)
 4007c50:	8a000215 	stw	r8,8(r17)
 4007c54:	88e3883a 	add	r17,r17,r3
 4007c58:	88c00015 	stw	r3,0(r17)
 4007c5c:	9009883a 	mov	r4,r18
 4007c60:	4010bb00 	call	4010bb0 <__malloc_unlock>
 4007c64:	80800204 	addi	r2,r16,8
 4007c68:	00001b06 	br	4007cd8 <_malloc_r+0x2a4>
 4007c6c:	04400404 	movi	r17,16
 4007c70:	89402536 	bltu	r17,r5,4007d08 <_malloc_r+0x2d4>
 4007c74:	4010b8c0 	call	4010b8c <__malloc_lock>
 4007c78:	00800184 	movi	r2,6
 4007c7c:	01000084 	movi	r4,2
 4007c80:	04c10074 	movhi	r19,1025
 4007c84:	1085883a 	add	r2,r2,r2
 4007c88:	9cd43104 	addi	r19,r19,20676
 4007c8c:	1085883a 	add	r2,r2,r2
 4007c90:	9885883a 	add	r2,r19,r2
 4007c94:	14000117 	ldw	r16,4(r2)
 4007c98:	10fffe04 	addi	r3,r2,-8
 4007c9c:	80c0d926 	beq	r16,r3,4008004 <_malloc_r+0x5d0>
 4007ca0:	80c00117 	ldw	r3,4(r16)
 4007ca4:	81000317 	ldw	r4,12(r16)
 4007ca8:	00bfff04 	movi	r2,-4
 4007cac:	1884703a 	and	r2,r3,r2
 4007cb0:	81400217 	ldw	r5,8(r16)
 4007cb4:	8085883a 	add	r2,r16,r2
 4007cb8:	10c00117 	ldw	r3,4(r2)
 4007cbc:	29000315 	stw	r4,12(r5)
 4007cc0:	21400215 	stw	r5,8(r4)
 4007cc4:	18c00054 	ori	r3,r3,1
 4007cc8:	10c00115 	stw	r3,4(r2)
 4007ccc:	9009883a 	mov	r4,r18
 4007cd0:	4010bb00 	call	4010bb0 <__malloc_unlock>
 4007cd4:	80800204 	addi	r2,r16,8
 4007cd8:	dfc00a17 	ldw	ra,40(sp)
 4007cdc:	df000917 	ldw	fp,36(sp)
 4007ce0:	ddc00817 	ldw	r23,32(sp)
 4007ce4:	dd800717 	ldw	r22,28(sp)
 4007ce8:	dd400617 	ldw	r21,24(sp)
 4007cec:	dd000517 	ldw	r20,20(sp)
 4007cf0:	dcc00417 	ldw	r19,16(sp)
 4007cf4:	dc800317 	ldw	r18,12(sp)
 4007cf8:	dc400217 	ldw	r17,8(sp)
 4007cfc:	dc000117 	ldw	r16,4(sp)
 4007d00:	dec00b04 	addi	sp,sp,44
 4007d04:	f800283a 	ret
 4007d08:	00800304 	movi	r2,12
 4007d0c:	90800015 	stw	r2,0(r18)
 4007d10:	0005883a 	mov	r2,zero
 4007d14:	003ff006 	br	4007cd8 <__ram_exceptions_end+0xfbfe7a90>
 4007d18:	01002004 	movi	r4,128
 4007d1c:	02001004 	movi	r8,64
 4007d20:	01c00fc4 	movi	r7,63
 4007d24:	003f6106 	br	4007aac <__ram_exceptions_end+0xfbfe7864>
 4007d28:	4009883a 	mov	r4,r8
 4007d2c:	003f7506 	br	4007b04 <__ram_exceptions_end+0xfbfe78bc>
 4007d30:	81000317 	ldw	r4,12(r16)
 4007d34:	003fde06 	br	4007cb0 <__ram_exceptions_end+0xfbfe7a68>
 4007d38:	81c5883a 	add	r2,r16,r7
 4007d3c:	11400117 	ldw	r5,4(r2)
 4007d40:	9009883a 	mov	r4,r18
 4007d44:	29400054 	ori	r5,r5,1
 4007d48:	11400115 	stw	r5,4(r2)
 4007d4c:	4010bb00 	call	4010bb0 <__malloc_unlock>
 4007d50:	80800204 	addi	r2,r16,8
 4007d54:	003fe006 	br	4007cd8 <__ram_exceptions_end+0xfbfe7a90>
 4007d58:	9c000217 	ldw	r16,8(r19)
 4007d5c:	00bfff04 	movi	r2,-4
 4007d60:	85800117 	ldw	r22,4(r16)
 4007d64:	b0ac703a 	and	r22,r22,r2
 4007d68:	b4400336 	bltu	r22,r17,4007d78 <_malloc_r+0x344>
 4007d6c:	b445c83a 	sub	r2,r22,r17
 4007d70:	00c003c4 	movi	r3,15
 4007d74:	18805d16 	blt	r3,r2,4007eec <_malloc_r+0x4b8>
 4007d78:	05c10074 	movhi	r23,1025
 4007d7c:	008100b4 	movhi	r2,1026
 4007d80:	10a14204 	addi	r2,r2,-31480
 4007d84:	bdda0804 	addi	r23,r23,26656
 4007d88:	15400017 	ldw	r21,0(r2)
 4007d8c:	b8c00017 	ldw	r3,0(r23)
 4007d90:	00bfffc4 	movi	r2,-1
 4007d94:	858d883a 	add	r6,r16,r22
 4007d98:	8d6b883a 	add	r21,r17,r21
 4007d9c:	1880ea26 	beq	r3,r2,4008148 <_malloc_r+0x714>
 4007da0:	ad4403c4 	addi	r21,r21,4111
 4007da4:	00bc0004 	movi	r2,-4096
 4007da8:	a8aa703a 	and	r21,r21,r2
 4007dac:	a80b883a 	mov	r5,r21
 4007db0:	9009883a 	mov	r4,r18
 4007db4:	d9800015 	stw	r6,0(sp)
 4007db8:	4009e2c0 	call	4009e2c <_sbrk_r>
 4007dbc:	1029883a 	mov	r20,r2
 4007dc0:	00bfffc4 	movi	r2,-1
 4007dc4:	d9800017 	ldw	r6,0(sp)
 4007dc8:	a080e826 	beq	r20,r2,400816c <_malloc_r+0x738>
 4007dcc:	a180a636 	bltu	r20,r6,4008068 <_malloc_r+0x634>
 4007dd0:	070100b4 	movhi	fp,1026
 4007dd4:	e721cb04 	addi	fp,fp,-30932
 4007dd8:	e0800017 	ldw	r2,0(fp)
 4007ddc:	a887883a 	add	r3,r21,r2
 4007de0:	e0c00015 	stw	r3,0(fp)
 4007de4:	3500e626 	beq	r6,r20,4008180 <_malloc_r+0x74c>
 4007de8:	b9000017 	ldw	r4,0(r23)
 4007dec:	00bfffc4 	movi	r2,-1
 4007df0:	2080ee26 	beq	r4,r2,40081ac <_malloc_r+0x778>
 4007df4:	a185c83a 	sub	r2,r20,r6
 4007df8:	10c5883a 	add	r2,r2,r3
 4007dfc:	e0800015 	stw	r2,0(fp)
 4007e00:	a0c001cc 	andi	r3,r20,7
 4007e04:	1800bc26 	beq	r3,zero,40080f8 <_malloc_r+0x6c4>
 4007e08:	a0e9c83a 	sub	r20,r20,r3
 4007e0c:	00840204 	movi	r2,4104
 4007e10:	a5000204 	addi	r20,r20,8
 4007e14:	10c7c83a 	sub	r3,r2,r3
 4007e18:	a545883a 	add	r2,r20,r21
 4007e1c:	1083ffcc 	andi	r2,r2,4095
 4007e20:	18abc83a 	sub	r21,r3,r2
 4007e24:	a80b883a 	mov	r5,r21
 4007e28:	9009883a 	mov	r4,r18
 4007e2c:	4009e2c0 	call	4009e2c <_sbrk_r>
 4007e30:	00ffffc4 	movi	r3,-1
 4007e34:	10c0e126 	beq	r2,r3,40081bc <_malloc_r+0x788>
 4007e38:	1505c83a 	sub	r2,r2,r20
 4007e3c:	1545883a 	add	r2,r2,r21
 4007e40:	10800054 	ori	r2,r2,1
 4007e44:	e0c00017 	ldw	r3,0(fp)
 4007e48:	9d000215 	stw	r20,8(r19)
 4007e4c:	a0800115 	stw	r2,4(r20)
 4007e50:	a8c7883a 	add	r3,r21,r3
 4007e54:	e0c00015 	stw	r3,0(fp)
 4007e58:	84c00e26 	beq	r16,r19,4007e94 <_malloc_r+0x460>
 4007e5c:	018003c4 	movi	r6,15
 4007e60:	3580a72e 	bgeu	r6,r22,4008100 <_malloc_r+0x6cc>
 4007e64:	81400117 	ldw	r5,4(r16)
 4007e68:	013ffe04 	movi	r4,-8
 4007e6c:	b0bffd04 	addi	r2,r22,-12
 4007e70:	1104703a 	and	r2,r2,r4
 4007e74:	2900004c 	andi	r4,r5,1
 4007e78:	2088b03a 	or	r4,r4,r2
 4007e7c:	81000115 	stw	r4,4(r16)
 4007e80:	01400144 	movi	r5,5
 4007e84:	8089883a 	add	r4,r16,r2
 4007e88:	21400115 	stw	r5,4(r4)
 4007e8c:	21400215 	stw	r5,8(r4)
 4007e90:	3080cd36 	bltu	r6,r2,40081c8 <_malloc_r+0x794>
 4007e94:	008100b4 	movhi	r2,1026
 4007e98:	10a14104 	addi	r2,r2,-31484
 4007e9c:	11000017 	ldw	r4,0(r2)
 4007ea0:	20c0012e 	bgeu	r4,r3,4007ea8 <_malloc_r+0x474>
 4007ea4:	10c00015 	stw	r3,0(r2)
 4007ea8:	008100b4 	movhi	r2,1026
 4007eac:	10a14004 	addi	r2,r2,-31488
 4007eb0:	11000017 	ldw	r4,0(r2)
 4007eb4:	9c000217 	ldw	r16,8(r19)
 4007eb8:	20c0012e 	bgeu	r4,r3,4007ec0 <_malloc_r+0x48c>
 4007ebc:	10c00015 	stw	r3,0(r2)
 4007ec0:	80c00117 	ldw	r3,4(r16)
 4007ec4:	00bfff04 	movi	r2,-4
 4007ec8:	1886703a 	and	r3,r3,r2
 4007ecc:	1c45c83a 	sub	r2,r3,r17
 4007ed0:	1c400236 	bltu	r3,r17,4007edc <_malloc_r+0x4a8>
 4007ed4:	00c003c4 	movi	r3,15
 4007ed8:	18800416 	blt	r3,r2,4007eec <_malloc_r+0x4b8>
 4007edc:	9009883a 	mov	r4,r18
 4007ee0:	4010bb00 	call	4010bb0 <__malloc_unlock>
 4007ee4:	0005883a 	mov	r2,zero
 4007ee8:	003f7b06 	br	4007cd8 <__ram_exceptions_end+0xfbfe7a90>
 4007eec:	88c00054 	ori	r3,r17,1
 4007ef0:	80c00115 	stw	r3,4(r16)
 4007ef4:	8463883a 	add	r17,r16,r17
 4007ef8:	10800054 	ori	r2,r2,1
 4007efc:	9c400215 	stw	r17,8(r19)
 4007f00:	88800115 	stw	r2,4(r17)
 4007f04:	9009883a 	mov	r4,r18
 4007f08:	4010bb00 	call	4010bb0 <__malloc_unlock>
 4007f0c:	80800204 	addi	r2,r16,8
 4007f10:	003f7106 	br	4007cd8 <__ram_exceptions_end+0xfbfe7a90>
 4007f14:	00c00504 	movi	r3,20
 4007f18:	18804a2e 	bgeu	r3,r2,4008044 <_malloc_r+0x610>
 4007f1c:	00c01504 	movi	r3,84
 4007f20:	18806e36 	bltu	r3,r2,40080dc <_malloc_r+0x6a8>
 4007f24:	8804d33a 	srli	r2,r17,12
 4007f28:	12001bc4 	addi	r8,r2,111
 4007f2c:	11c01b84 	addi	r7,r2,110
 4007f30:	4209883a 	add	r4,r8,r8
 4007f34:	003edd06 	br	4007aac <__ram_exceptions_end+0xfbfe7864>
 4007f38:	3804d27a 	srli	r2,r7,9
 4007f3c:	00c00104 	movi	r3,4
 4007f40:	1880442e 	bgeu	r3,r2,4008054 <_malloc_r+0x620>
 4007f44:	00c00504 	movi	r3,20
 4007f48:	18808136 	bltu	r3,r2,4008150 <_malloc_r+0x71c>
 4007f4c:	11401704 	addi	r5,r2,92
 4007f50:	10c016c4 	addi	r3,r2,91
 4007f54:	294b883a 	add	r5,r5,r5
 4007f58:	294b883a 	add	r5,r5,r5
 4007f5c:	294b883a 	add	r5,r5,r5
 4007f60:	994b883a 	add	r5,r19,r5
 4007f64:	28800017 	ldw	r2,0(r5)
 4007f68:	01810074 	movhi	r6,1025
 4007f6c:	297ffe04 	addi	r5,r5,-8
 4007f70:	31943104 	addi	r6,r6,20676
 4007f74:	28806526 	beq	r5,r2,400810c <_malloc_r+0x6d8>
 4007f78:	01bfff04 	movi	r6,-4
 4007f7c:	10c00117 	ldw	r3,4(r2)
 4007f80:	1986703a 	and	r3,r3,r6
 4007f84:	38c0022e 	bgeu	r7,r3,4007f90 <_malloc_r+0x55c>
 4007f88:	10800217 	ldw	r2,8(r2)
 4007f8c:	28bffb1e 	bne	r5,r2,4007f7c <__ram_exceptions_end+0xfbfe7d34>
 4007f90:	11400317 	ldw	r5,12(r2)
 4007f94:	98c00117 	ldw	r3,4(r19)
 4007f98:	81400315 	stw	r5,12(r16)
 4007f9c:	80800215 	stw	r2,8(r16)
 4007fa0:	2c000215 	stw	r16,8(r5)
 4007fa4:	14000315 	stw	r16,12(r2)
 4007fa8:	003ef806 	br	4007b8c <__ram_exceptions_end+0xfbfe7944>
 4007fac:	88c00054 	ori	r3,r17,1
 4007fb0:	80c00115 	stw	r3,4(r16)
 4007fb4:	8463883a 	add	r17,r16,r17
 4007fb8:	34400515 	stw	r17,20(r6)
 4007fbc:	34400415 	stw	r17,16(r6)
 4007fc0:	10c00054 	ori	r3,r2,1
 4007fc4:	8a000315 	stw	r8,12(r17)
 4007fc8:	8a000215 	stw	r8,8(r17)
 4007fcc:	88c00115 	stw	r3,4(r17)
 4007fd0:	88a3883a 	add	r17,r17,r2
 4007fd4:	88800015 	stw	r2,0(r17)
 4007fd8:	9009883a 	mov	r4,r18
 4007fdc:	4010bb00 	call	4010bb0 <__malloc_unlock>
 4007fe0:	80800204 	addi	r2,r16,8
 4007fe4:	003f3c06 	br	4007cd8 <__ram_exceptions_end+0xfbfe7a90>
 4007fe8:	30c00117 	ldw	r3,4(r6)
 4007fec:	003ee706 	br	4007b8c <__ram_exceptions_end+0xfbfe7944>
 4007ff0:	5ac00044 	addi	r11,r11,1
 4007ff4:	588000cc 	andi	r2,r11,3
 4007ff8:	31800204 	addi	r6,r6,8
 4007ffc:	103efd1e 	bne	r2,zero,4007bf4 <__ram_exceptions_end+0xfbfe79ac>
 4008000:	00002406 	br	4008094 <_malloc_r+0x660>
 4008004:	14000317 	ldw	r16,12(r2)
 4008008:	143f251e 	bne	r2,r16,4007ca0 <__ram_exceptions_end+0xfbfe7a58>
 400800c:	21000084 	addi	r4,r4,2
 4008010:	003ebc06 	br	4007b04 <__ram_exceptions_end+0xfbfe78bc>
 4008014:	8085883a 	add	r2,r16,r2
 4008018:	10c00117 	ldw	r3,4(r2)
 400801c:	81000317 	ldw	r4,12(r16)
 4008020:	81400217 	ldw	r5,8(r16)
 4008024:	18c00054 	ori	r3,r3,1
 4008028:	10c00115 	stw	r3,4(r2)
 400802c:	29000315 	stw	r4,12(r5)
 4008030:	21400215 	stw	r5,8(r4)
 4008034:	9009883a 	mov	r4,r18
 4008038:	4010bb00 	call	4010bb0 <__malloc_unlock>
 400803c:	80800204 	addi	r2,r16,8
 4008040:	003f2506 	br	4007cd8 <__ram_exceptions_end+0xfbfe7a90>
 4008044:	12001704 	addi	r8,r2,92
 4008048:	11c016c4 	addi	r7,r2,91
 400804c:	4209883a 	add	r4,r8,r8
 4008050:	003e9606 	br	4007aac <__ram_exceptions_end+0xfbfe7864>
 4008054:	3804d1ba 	srli	r2,r7,6
 4008058:	11400e44 	addi	r5,r2,57
 400805c:	10c00e04 	addi	r3,r2,56
 4008060:	294b883a 	add	r5,r5,r5
 4008064:	003fbc06 	br	4007f58 <__ram_exceptions_end+0xfbfe7d10>
 4008068:	84ff5926 	beq	r16,r19,4007dd0 <__ram_exceptions_end+0xfbfe7b88>
 400806c:	00810074 	movhi	r2,1025
 4008070:	10943104 	addi	r2,r2,20676
 4008074:	14000217 	ldw	r16,8(r2)
 4008078:	00bfff04 	movi	r2,-4
 400807c:	80c00117 	ldw	r3,4(r16)
 4008080:	1886703a 	and	r3,r3,r2
 4008084:	003f9106 	br	4007ecc <__ram_exceptions_end+0xfbfe7c84>
 4008088:	60800217 	ldw	r2,8(r12)
 400808c:	213fffc4 	addi	r4,r4,-1
 4008090:	1300651e 	bne	r2,r12,4008228 <_malloc_r+0x7f4>
 4008094:	208000cc 	andi	r2,r4,3
 4008098:	633ffe04 	addi	r12,r12,-8
 400809c:	103ffa1e 	bne	r2,zero,4008088 <__ram_exceptions_end+0xfbfe7e40>
 40080a0:	98800117 	ldw	r2,4(r19)
 40080a4:	0146303a 	nor	r3,zero,r5
 40080a8:	1884703a 	and	r2,r3,r2
 40080ac:	98800115 	stw	r2,4(r19)
 40080b0:	294b883a 	add	r5,r5,r5
 40080b4:	117f2836 	bltu	r2,r5,4007d58 <__ram_exceptions_end+0xfbfe7b10>
 40080b8:	283f2726 	beq	r5,zero,4007d58 <__ram_exceptions_end+0xfbfe7b10>
 40080bc:	2886703a 	and	r3,r5,r2
 40080c0:	5809883a 	mov	r4,r11
 40080c4:	183ec31e 	bne	r3,zero,4007bd4 <__ram_exceptions_end+0xfbfe798c>
 40080c8:	294b883a 	add	r5,r5,r5
 40080cc:	2886703a 	and	r3,r5,r2
 40080d0:	21000104 	addi	r4,r4,4
 40080d4:	183ffc26 	beq	r3,zero,40080c8 <__ram_exceptions_end+0xfbfe7e80>
 40080d8:	003ebe06 	br	4007bd4 <__ram_exceptions_end+0xfbfe798c>
 40080dc:	00c05504 	movi	r3,340
 40080e0:	18801236 	bltu	r3,r2,400812c <_malloc_r+0x6f8>
 40080e4:	8804d3fa 	srli	r2,r17,15
 40080e8:	12001e04 	addi	r8,r2,120
 40080ec:	11c01dc4 	addi	r7,r2,119
 40080f0:	4209883a 	add	r4,r8,r8
 40080f4:	003e6d06 	br	4007aac <__ram_exceptions_end+0xfbfe7864>
 40080f8:	00c40004 	movi	r3,4096
 40080fc:	003f4606 	br	4007e18 <__ram_exceptions_end+0xfbfe7bd0>
 4008100:	00800044 	movi	r2,1
 4008104:	a0800115 	stw	r2,4(r20)
 4008108:	003f7406 	br	4007edc <__ram_exceptions_end+0xfbfe7c94>
 400810c:	1805d0ba 	srai	r2,r3,2
 4008110:	01c00044 	movi	r7,1
 4008114:	30c00117 	ldw	r3,4(r6)
 4008118:	388e983a 	sll	r7,r7,r2
 400811c:	2805883a 	mov	r2,r5
 4008120:	38c6b03a 	or	r3,r7,r3
 4008124:	30c00115 	stw	r3,4(r6)
 4008128:	003f9b06 	br	4007f98 <__ram_exceptions_end+0xfbfe7d50>
 400812c:	00c15504 	movi	r3,1364
 4008130:	18801a36 	bltu	r3,r2,400819c <_malloc_r+0x768>
 4008134:	8804d4ba 	srli	r2,r17,18
 4008138:	12001f44 	addi	r8,r2,125
 400813c:	11c01f04 	addi	r7,r2,124
 4008140:	4209883a 	add	r4,r8,r8
 4008144:	003e5906 	br	4007aac <__ram_exceptions_end+0xfbfe7864>
 4008148:	ad400404 	addi	r21,r21,16
 400814c:	003f1706 	br	4007dac <__ram_exceptions_end+0xfbfe7b64>
 4008150:	00c01504 	movi	r3,84
 4008154:	18802336 	bltu	r3,r2,40081e4 <_malloc_r+0x7b0>
 4008158:	3804d33a 	srli	r2,r7,12
 400815c:	11401bc4 	addi	r5,r2,111
 4008160:	10c01b84 	addi	r3,r2,110
 4008164:	294b883a 	add	r5,r5,r5
 4008168:	003f7b06 	br	4007f58 <__ram_exceptions_end+0xfbfe7d10>
 400816c:	9c000217 	ldw	r16,8(r19)
 4008170:	00bfff04 	movi	r2,-4
 4008174:	80c00117 	ldw	r3,4(r16)
 4008178:	1886703a 	and	r3,r3,r2
 400817c:	003f5306 	br	4007ecc <__ram_exceptions_end+0xfbfe7c84>
 4008180:	3083ffcc 	andi	r2,r6,4095
 4008184:	103f181e 	bne	r2,zero,4007de8 <__ram_exceptions_end+0xfbfe7ba0>
 4008188:	99000217 	ldw	r4,8(r19)
 400818c:	b545883a 	add	r2,r22,r21
 4008190:	10800054 	ori	r2,r2,1
 4008194:	20800115 	stw	r2,4(r4)
 4008198:	003f3e06 	br	4007e94 <__ram_exceptions_end+0xfbfe7c4c>
 400819c:	01003f84 	movi	r4,254
 40081a0:	02001fc4 	movi	r8,127
 40081a4:	01c01f84 	movi	r7,126
 40081a8:	003e4006 	br	4007aac <__ram_exceptions_end+0xfbfe7864>
 40081ac:	00810074 	movhi	r2,1025
 40081b0:	109a0804 	addi	r2,r2,26656
 40081b4:	15000015 	stw	r20,0(r2)
 40081b8:	003f1106 	br	4007e00 <__ram_exceptions_end+0xfbfe7bb8>
 40081bc:	00800044 	movi	r2,1
 40081c0:	002b883a 	mov	r21,zero
 40081c4:	003f1f06 	br	4007e44 <__ram_exceptions_end+0xfbfe7bfc>
 40081c8:	81400204 	addi	r5,r16,8
 40081cc:	9009883a 	mov	r4,r18
 40081d0:	4006e480 	call	4006e48 <_free_r>
 40081d4:	008100b4 	movhi	r2,1026
 40081d8:	10a1cb04 	addi	r2,r2,-30932
 40081dc:	10c00017 	ldw	r3,0(r2)
 40081e0:	003f2c06 	br	4007e94 <__ram_exceptions_end+0xfbfe7c4c>
 40081e4:	00c05504 	movi	r3,340
 40081e8:	18800536 	bltu	r3,r2,4008200 <_malloc_r+0x7cc>
 40081ec:	3804d3fa 	srli	r2,r7,15
 40081f0:	11401e04 	addi	r5,r2,120
 40081f4:	10c01dc4 	addi	r3,r2,119
 40081f8:	294b883a 	add	r5,r5,r5
 40081fc:	003f5606 	br	4007f58 <__ram_exceptions_end+0xfbfe7d10>
 4008200:	00c15504 	movi	r3,1364
 4008204:	18800536 	bltu	r3,r2,400821c <_malloc_r+0x7e8>
 4008208:	3804d4ba 	srli	r2,r7,18
 400820c:	11401f44 	addi	r5,r2,125
 4008210:	10c01f04 	addi	r3,r2,124
 4008214:	294b883a 	add	r5,r5,r5
 4008218:	003f4f06 	br	4007f58 <__ram_exceptions_end+0xfbfe7d10>
 400821c:	01403f84 	movi	r5,254
 4008220:	00c01f84 	movi	r3,126
 4008224:	003f4c06 	br	4007f58 <__ram_exceptions_end+0xfbfe7d10>
 4008228:	98800117 	ldw	r2,4(r19)
 400822c:	003fa006 	br	40080b0 <__ram_exceptions_end+0xfbfe7e68>
 4008230:	8808d0fa 	srli	r4,r17,3
 4008234:	20800044 	addi	r2,r4,1
 4008238:	1085883a 	add	r2,r2,r2
 400823c:	003e9006 	br	4007c80 <__ram_exceptions_end+0xfbfe7a38>

04008240 <memchr>:
 4008240:	208000cc 	andi	r2,r4,3
 4008244:	280f883a 	mov	r7,r5
 4008248:	10003426 	beq	r2,zero,400831c <memchr+0xdc>
 400824c:	30bfffc4 	addi	r2,r6,-1
 4008250:	30001a26 	beq	r6,zero,40082bc <memchr+0x7c>
 4008254:	20c00003 	ldbu	r3,0(r4)
 4008258:	29803fcc 	andi	r6,r5,255
 400825c:	30c0051e 	bne	r6,r3,4008274 <memchr+0x34>
 4008260:	00001806 	br	40082c4 <memchr+0x84>
 4008264:	10001526 	beq	r2,zero,40082bc <memchr+0x7c>
 4008268:	20c00003 	ldbu	r3,0(r4)
 400826c:	10bfffc4 	addi	r2,r2,-1
 4008270:	30c01426 	beq	r6,r3,40082c4 <memchr+0x84>
 4008274:	21000044 	addi	r4,r4,1
 4008278:	20c000cc 	andi	r3,r4,3
 400827c:	183ff91e 	bne	r3,zero,4008264 <__ram_exceptions_end+0xfbfe801c>
 4008280:	020000c4 	movi	r8,3
 4008284:	40801136 	bltu	r8,r2,40082cc <memchr+0x8c>
 4008288:	10000c26 	beq	r2,zero,40082bc <memchr+0x7c>
 400828c:	20c00003 	ldbu	r3,0(r4)
 4008290:	29403fcc 	andi	r5,r5,255
 4008294:	28c00b26 	beq	r5,r3,40082c4 <memchr+0x84>
 4008298:	20c00044 	addi	r3,r4,1
 400829c:	39803fcc 	andi	r6,r7,255
 40082a0:	2089883a 	add	r4,r4,r2
 40082a4:	00000306 	br	40082b4 <memchr+0x74>
 40082a8:	18c00044 	addi	r3,r3,1
 40082ac:	197fffc3 	ldbu	r5,-1(r3)
 40082b0:	31400526 	beq	r6,r5,40082c8 <memchr+0x88>
 40082b4:	1805883a 	mov	r2,r3
 40082b8:	20fffb1e 	bne	r4,r3,40082a8 <__ram_exceptions_end+0xfbfe8060>
 40082bc:	0005883a 	mov	r2,zero
 40082c0:	f800283a 	ret
 40082c4:	2005883a 	mov	r2,r4
 40082c8:	f800283a 	ret
 40082cc:	28c03fcc 	andi	r3,r5,255
 40082d0:	1812923a 	slli	r9,r3,8
 40082d4:	02ffbff4 	movhi	r11,65279
 40082d8:	02a02074 	movhi	r10,32897
 40082dc:	48d2b03a 	or	r9,r9,r3
 40082e0:	4806943a 	slli	r3,r9,16
 40082e4:	5affbfc4 	addi	r11,r11,-257
 40082e8:	52a02004 	addi	r10,r10,-32640
 40082ec:	48d2b03a 	or	r9,r9,r3
 40082f0:	20c00017 	ldw	r3,0(r4)
 40082f4:	48c6f03a 	xor	r3,r9,r3
 40082f8:	1acd883a 	add	r6,r3,r11
 40082fc:	00c6303a 	nor	r3,zero,r3
 4008300:	30c6703a 	and	r3,r6,r3
 4008304:	1a86703a 	and	r3,r3,r10
 4008308:	183fe01e 	bne	r3,zero,400828c <__ram_exceptions_end+0xfbfe8044>
 400830c:	10bfff04 	addi	r2,r2,-4
 4008310:	21000104 	addi	r4,r4,4
 4008314:	40bff636 	bltu	r8,r2,40082f0 <__ram_exceptions_end+0xfbfe80a8>
 4008318:	003fdb06 	br	4008288 <__ram_exceptions_end+0xfbfe8040>
 400831c:	3005883a 	mov	r2,r6
 4008320:	003fd706 	br	4008280 <__ram_exceptions_end+0xfbfe8038>

04008324 <memcpy>:
 4008324:	defffd04 	addi	sp,sp,-12
 4008328:	dfc00215 	stw	ra,8(sp)
 400832c:	dc400115 	stw	r17,4(sp)
 4008330:	dc000015 	stw	r16,0(sp)
 4008334:	00c003c4 	movi	r3,15
 4008338:	2005883a 	mov	r2,r4
 400833c:	1980452e 	bgeu	r3,r6,4008454 <memcpy+0x130>
 4008340:	2906b03a 	or	r3,r5,r4
 4008344:	18c000cc 	andi	r3,r3,3
 4008348:	1800441e 	bne	r3,zero,400845c <memcpy+0x138>
 400834c:	347ffc04 	addi	r17,r6,-16
 4008350:	8822d13a 	srli	r17,r17,4
 4008354:	28c00104 	addi	r3,r5,4
 4008358:	23400104 	addi	r13,r4,4
 400835c:	8820913a 	slli	r16,r17,4
 4008360:	2b000204 	addi	r12,r5,8
 4008364:	22c00204 	addi	r11,r4,8
 4008368:	84000504 	addi	r16,r16,20
 400836c:	2a800304 	addi	r10,r5,12
 4008370:	22400304 	addi	r9,r4,12
 4008374:	2c21883a 	add	r16,r5,r16
 4008378:	2811883a 	mov	r8,r5
 400837c:	200f883a 	mov	r7,r4
 4008380:	41000017 	ldw	r4,0(r8)
 4008384:	1fc00017 	ldw	ra,0(r3)
 4008388:	63c00017 	ldw	r15,0(r12)
 400838c:	39000015 	stw	r4,0(r7)
 4008390:	53800017 	ldw	r14,0(r10)
 4008394:	6fc00015 	stw	ra,0(r13)
 4008398:	5bc00015 	stw	r15,0(r11)
 400839c:	4b800015 	stw	r14,0(r9)
 40083a0:	18c00404 	addi	r3,r3,16
 40083a4:	39c00404 	addi	r7,r7,16
 40083a8:	42000404 	addi	r8,r8,16
 40083ac:	6b400404 	addi	r13,r13,16
 40083b0:	63000404 	addi	r12,r12,16
 40083b4:	5ac00404 	addi	r11,r11,16
 40083b8:	52800404 	addi	r10,r10,16
 40083bc:	4a400404 	addi	r9,r9,16
 40083c0:	1c3fef1e 	bne	r3,r16,4008380 <__ram_exceptions_end+0xfbfe8138>
 40083c4:	89c00044 	addi	r7,r17,1
 40083c8:	380e913a 	slli	r7,r7,4
 40083cc:	310003cc 	andi	r4,r6,15
 40083d0:	02c000c4 	movi	r11,3
 40083d4:	11c7883a 	add	r3,r2,r7
 40083d8:	29cb883a 	add	r5,r5,r7
 40083dc:	5900212e 	bgeu	r11,r4,4008464 <memcpy+0x140>
 40083e0:	1813883a 	mov	r9,r3
 40083e4:	2811883a 	mov	r8,r5
 40083e8:	200f883a 	mov	r7,r4
 40083ec:	42800017 	ldw	r10,0(r8)
 40083f0:	4a400104 	addi	r9,r9,4
 40083f4:	39ffff04 	addi	r7,r7,-4
 40083f8:	4abfff15 	stw	r10,-4(r9)
 40083fc:	42000104 	addi	r8,r8,4
 4008400:	59fffa36 	bltu	r11,r7,40083ec <__ram_exceptions_end+0xfbfe81a4>
 4008404:	213fff04 	addi	r4,r4,-4
 4008408:	2008d0ba 	srli	r4,r4,2
 400840c:	318000cc 	andi	r6,r6,3
 4008410:	21000044 	addi	r4,r4,1
 4008414:	2109883a 	add	r4,r4,r4
 4008418:	2109883a 	add	r4,r4,r4
 400841c:	1907883a 	add	r3,r3,r4
 4008420:	290b883a 	add	r5,r5,r4
 4008424:	30000626 	beq	r6,zero,4008440 <memcpy+0x11c>
 4008428:	198d883a 	add	r6,r3,r6
 400842c:	29c00003 	ldbu	r7,0(r5)
 4008430:	18c00044 	addi	r3,r3,1
 4008434:	29400044 	addi	r5,r5,1
 4008438:	19ffffc5 	stb	r7,-1(r3)
 400843c:	19bffb1e 	bne	r3,r6,400842c <__ram_exceptions_end+0xfbfe81e4>
 4008440:	dfc00217 	ldw	ra,8(sp)
 4008444:	dc400117 	ldw	r17,4(sp)
 4008448:	dc000017 	ldw	r16,0(sp)
 400844c:	dec00304 	addi	sp,sp,12
 4008450:	f800283a 	ret
 4008454:	2007883a 	mov	r3,r4
 4008458:	003ff206 	br	4008424 <__ram_exceptions_end+0xfbfe81dc>
 400845c:	2007883a 	mov	r3,r4
 4008460:	003ff106 	br	4008428 <__ram_exceptions_end+0xfbfe81e0>
 4008464:	200d883a 	mov	r6,r4
 4008468:	003fee06 	br	4008424 <__ram_exceptions_end+0xfbfe81dc>

0400846c <memmove>:
 400846c:	2005883a 	mov	r2,r4
 4008470:	29000b2e 	bgeu	r5,r4,40084a0 <memmove+0x34>
 4008474:	298f883a 	add	r7,r5,r6
 4008478:	21c0092e 	bgeu	r4,r7,40084a0 <memmove+0x34>
 400847c:	2187883a 	add	r3,r4,r6
 4008480:	198bc83a 	sub	r5,r3,r6
 4008484:	30004826 	beq	r6,zero,40085a8 <memmove+0x13c>
 4008488:	39ffffc4 	addi	r7,r7,-1
 400848c:	39000003 	ldbu	r4,0(r7)
 4008490:	18ffffc4 	addi	r3,r3,-1
 4008494:	19000005 	stb	r4,0(r3)
 4008498:	28fffb1e 	bne	r5,r3,4008488 <__ram_exceptions_end+0xfbfe8240>
 400849c:	f800283a 	ret
 40084a0:	00c003c4 	movi	r3,15
 40084a4:	1980412e 	bgeu	r3,r6,40085ac <memmove+0x140>
 40084a8:	2886b03a 	or	r3,r5,r2
 40084ac:	18c000cc 	andi	r3,r3,3
 40084b0:	1800401e 	bne	r3,zero,40085b4 <memmove+0x148>
 40084b4:	33fffc04 	addi	r15,r6,-16
 40084b8:	781ed13a 	srli	r15,r15,4
 40084bc:	28c00104 	addi	r3,r5,4
 40084c0:	13400104 	addi	r13,r2,4
 40084c4:	781c913a 	slli	r14,r15,4
 40084c8:	2b000204 	addi	r12,r5,8
 40084cc:	12c00204 	addi	r11,r2,8
 40084d0:	73800504 	addi	r14,r14,20
 40084d4:	2a800304 	addi	r10,r5,12
 40084d8:	12400304 	addi	r9,r2,12
 40084dc:	2b9d883a 	add	r14,r5,r14
 40084e0:	2811883a 	mov	r8,r5
 40084e4:	100f883a 	mov	r7,r2
 40084e8:	41000017 	ldw	r4,0(r8)
 40084ec:	39c00404 	addi	r7,r7,16
 40084f0:	18c00404 	addi	r3,r3,16
 40084f4:	393ffc15 	stw	r4,-16(r7)
 40084f8:	193ffc17 	ldw	r4,-16(r3)
 40084fc:	6b400404 	addi	r13,r13,16
 4008500:	5ac00404 	addi	r11,r11,16
 4008504:	693ffc15 	stw	r4,-16(r13)
 4008508:	61000017 	ldw	r4,0(r12)
 400850c:	4a400404 	addi	r9,r9,16
 4008510:	42000404 	addi	r8,r8,16
 4008514:	593ffc15 	stw	r4,-16(r11)
 4008518:	51000017 	ldw	r4,0(r10)
 400851c:	63000404 	addi	r12,r12,16
 4008520:	52800404 	addi	r10,r10,16
 4008524:	493ffc15 	stw	r4,-16(r9)
 4008528:	1bbfef1e 	bne	r3,r14,40084e8 <__ram_exceptions_end+0xfbfe82a0>
 400852c:	79000044 	addi	r4,r15,1
 4008530:	2008913a 	slli	r4,r4,4
 4008534:	328003cc 	andi	r10,r6,15
 4008538:	02c000c4 	movi	r11,3
 400853c:	1107883a 	add	r3,r2,r4
 4008540:	290b883a 	add	r5,r5,r4
 4008544:	5a801e2e 	bgeu	r11,r10,40085c0 <memmove+0x154>
 4008548:	1813883a 	mov	r9,r3
 400854c:	2811883a 	mov	r8,r5
 4008550:	500f883a 	mov	r7,r10
 4008554:	41000017 	ldw	r4,0(r8)
 4008558:	4a400104 	addi	r9,r9,4
 400855c:	39ffff04 	addi	r7,r7,-4
 4008560:	493fff15 	stw	r4,-4(r9)
 4008564:	42000104 	addi	r8,r8,4
 4008568:	59fffa36 	bltu	r11,r7,4008554 <__ram_exceptions_end+0xfbfe830c>
 400856c:	513fff04 	addi	r4,r10,-4
 4008570:	2008d0ba 	srli	r4,r4,2
 4008574:	318000cc 	andi	r6,r6,3
 4008578:	21000044 	addi	r4,r4,1
 400857c:	2109883a 	add	r4,r4,r4
 4008580:	2109883a 	add	r4,r4,r4
 4008584:	1907883a 	add	r3,r3,r4
 4008588:	290b883a 	add	r5,r5,r4
 400858c:	30000b26 	beq	r6,zero,40085bc <memmove+0x150>
 4008590:	198d883a 	add	r6,r3,r6
 4008594:	29c00003 	ldbu	r7,0(r5)
 4008598:	18c00044 	addi	r3,r3,1
 400859c:	29400044 	addi	r5,r5,1
 40085a0:	19ffffc5 	stb	r7,-1(r3)
 40085a4:	19bffb1e 	bne	r3,r6,4008594 <__ram_exceptions_end+0xfbfe834c>
 40085a8:	f800283a 	ret
 40085ac:	1007883a 	mov	r3,r2
 40085b0:	003ff606 	br	400858c <__ram_exceptions_end+0xfbfe8344>
 40085b4:	1007883a 	mov	r3,r2
 40085b8:	003ff506 	br	4008590 <__ram_exceptions_end+0xfbfe8348>
 40085bc:	f800283a 	ret
 40085c0:	500d883a 	mov	r6,r10
 40085c4:	003ff106 	br	400858c <__ram_exceptions_end+0xfbfe8344>

040085c8 <memset>:
 40085c8:	20c000cc 	andi	r3,r4,3
 40085cc:	2005883a 	mov	r2,r4
 40085d0:	18004426 	beq	r3,zero,40086e4 <memset+0x11c>
 40085d4:	31ffffc4 	addi	r7,r6,-1
 40085d8:	30004026 	beq	r6,zero,40086dc <memset+0x114>
 40085dc:	2813883a 	mov	r9,r5
 40085e0:	200d883a 	mov	r6,r4
 40085e4:	2007883a 	mov	r3,r4
 40085e8:	00000406 	br	40085fc <memset+0x34>
 40085ec:	3a3fffc4 	addi	r8,r7,-1
 40085f0:	31800044 	addi	r6,r6,1
 40085f4:	38003926 	beq	r7,zero,40086dc <memset+0x114>
 40085f8:	400f883a 	mov	r7,r8
 40085fc:	18c00044 	addi	r3,r3,1
 4008600:	32400005 	stb	r9,0(r6)
 4008604:	1a0000cc 	andi	r8,r3,3
 4008608:	403ff81e 	bne	r8,zero,40085ec <__ram_exceptions_end+0xfbfe83a4>
 400860c:	010000c4 	movi	r4,3
 4008610:	21c02d2e 	bgeu	r4,r7,40086c8 <memset+0x100>
 4008614:	29003fcc 	andi	r4,r5,255
 4008618:	200c923a 	slli	r6,r4,8
 400861c:	3108b03a 	or	r4,r6,r4
 4008620:	200c943a 	slli	r6,r4,16
 4008624:	218cb03a 	or	r6,r4,r6
 4008628:	010003c4 	movi	r4,15
 400862c:	21c0182e 	bgeu	r4,r7,4008690 <memset+0xc8>
 4008630:	3b3ffc04 	addi	r12,r7,-16
 4008634:	6018d13a 	srli	r12,r12,4
 4008638:	1a000104 	addi	r8,r3,4
 400863c:	1ac00204 	addi	r11,r3,8
 4008640:	6008913a 	slli	r4,r12,4
 4008644:	1a800304 	addi	r10,r3,12
 4008648:	1813883a 	mov	r9,r3
 400864c:	21000504 	addi	r4,r4,20
 4008650:	1909883a 	add	r4,r3,r4
 4008654:	49800015 	stw	r6,0(r9)
 4008658:	41800015 	stw	r6,0(r8)
 400865c:	59800015 	stw	r6,0(r11)
 4008660:	51800015 	stw	r6,0(r10)
 4008664:	42000404 	addi	r8,r8,16
 4008668:	4a400404 	addi	r9,r9,16
 400866c:	5ac00404 	addi	r11,r11,16
 4008670:	52800404 	addi	r10,r10,16
 4008674:	413ff71e 	bne	r8,r4,4008654 <__ram_exceptions_end+0xfbfe840c>
 4008678:	63000044 	addi	r12,r12,1
 400867c:	6018913a 	slli	r12,r12,4
 4008680:	39c003cc 	andi	r7,r7,15
 4008684:	010000c4 	movi	r4,3
 4008688:	1b07883a 	add	r3,r3,r12
 400868c:	21c00e2e 	bgeu	r4,r7,40086c8 <memset+0x100>
 4008690:	1813883a 	mov	r9,r3
 4008694:	3811883a 	mov	r8,r7
 4008698:	010000c4 	movi	r4,3
 400869c:	49800015 	stw	r6,0(r9)
 40086a0:	423fff04 	addi	r8,r8,-4
 40086a4:	4a400104 	addi	r9,r9,4
 40086a8:	223ffc36 	bltu	r4,r8,400869c <__ram_exceptions_end+0xfbfe8454>
 40086ac:	393fff04 	addi	r4,r7,-4
 40086b0:	2008d0ba 	srli	r4,r4,2
 40086b4:	39c000cc 	andi	r7,r7,3
 40086b8:	21000044 	addi	r4,r4,1
 40086bc:	2109883a 	add	r4,r4,r4
 40086c0:	2109883a 	add	r4,r4,r4
 40086c4:	1907883a 	add	r3,r3,r4
 40086c8:	38000526 	beq	r7,zero,40086e0 <memset+0x118>
 40086cc:	19cf883a 	add	r7,r3,r7
 40086d0:	19400005 	stb	r5,0(r3)
 40086d4:	18c00044 	addi	r3,r3,1
 40086d8:	38fffd1e 	bne	r7,r3,40086d0 <__ram_exceptions_end+0xfbfe8488>
 40086dc:	f800283a 	ret
 40086e0:	f800283a 	ret
 40086e4:	2007883a 	mov	r3,r4
 40086e8:	300f883a 	mov	r7,r6
 40086ec:	003fc706 	br	400860c <__ram_exceptions_end+0xfbfe83c4>

040086f0 <_Balloc>:
 40086f0:	20801317 	ldw	r2,76(r4)
 40086f4:	defffc04 	addi	sp,sp,-16
 40086f8:	dc400115 	stw	r17,4(sp)
 40086fc:	dc000015 	stw	r16,0(sp)
 4008700:	dfc00315 	stw	ra,12(sp)
 4008704:	dc800215 	stw	r18,8(sp)
 4008708:	2023883a 	mov	r17,r4
 400870c:	2821883a 	mov	r16,r5
 4008710:	10000f26 	beq	r2,zero,4008750 <_Balloc+0x60>
 4008714:	8407883a 	add	r3,r16,r16
 4008718:	18c7883a 	add	r3,r3,r3
 400871c:	10c7883a 	add	r3,r2,r3
 4008720:	18800017 	ldw	r2,0(r3)
 4008724:	10001126 	beq	r2,zero,400876c <_Balloc+0x7c>
 4008728:	11000017 	ldw	r4,0(r2)
 400872c:	19000015 	stw	r4,0(r3)
 4008730:	10000415 	stw	zero,16(r2)
 4008734:	10000315 	stw	zero,12(r2)
 4008738:	dfc00317 	ldw	ra,12(sp)
 400873c:	dc800217 	ldw	r18,8(sp)
 4008740:	dc400117 	ldw	r17,4(sp)
 4008744:	dc000017 	ldw	r16,0(sp)
 4008748:	dec00404 	addi	sp,sp,16
 400874c:	f800283a 	ret
 4008750:	01800844 	movi	r6,33
 4008754:	01400104 	movi	r5,4
 4008758:	400cc1c0 	call	400cc1c <_calloc_r>
 400875c:	88801315 	stw	r2,76(r17)
 4008760:	103fec1e 	bne	r2,zero,4008714 <__ram_exceptions_end+0xfbfe84cc>
 4008764:	0005883a 	mov	r2,zero
 4008768:	003ff306 	br	4008738 <__ram_exceptions_end+0xfbfe84f0>
 400876c:	01400044 	movi	r5,1
 4008770:	2c24983a 	sll	r18,r5,r16
 4008774:	8809883a 	mov	r4,r17
 4008778:	91800144 	addi	r6,r18,5
 400877c:	318d883a 	add	r6,r6,r6
 4008780:	318d883a 	add	r6,r6,r6
 4008784:	400cc1c0 	call	400cc1c <_calloc_r>
 4008788:	103ff626 	beq	r2,zero,4008764 <__ram_exceptions_end+0xfbfe851c>
 400878c:	14000115 	stw	r16,4(r2)
 4008790:	14800215 	stw	r18,8(r2)
 4008794:	003fe606 	br	4008730 <__ram_exceptions_end+0xfbfe84e8>

04008798 <_Bfree>:
 4008798:	28000826 	beq	r5,zero,40087bc <_Bfree+0x24>
 400879c:	28c00117 	ldw	r3,4(r5)
 40087a0:	20801317 	ldw	r2,76(r4)
 40087a4:	18c7883a 	add	r3,r3,r3
 40087a8:	18c7883a 	add	r3,r3,r3
 40087ac:	10c5883a 	add	r2,r2,r3
 40087b0:	10c00017 	ldw	r3,0(r2)
 40087b4:	28c00015 	stw	r3,0(r5)
 40087b8:	11400015 	stw	r5,0(r2)
 40087bc:	f800283a 	ret

040087c0 <__multadd>:
 40087c0:	defffa04 	addi	sp,sp,-24
 40087c4:	dc800315 	stw	r18,12(sp)
 40087c8:	dc400215 	stw	r17,8(sp)
 40087cc:	dc000115 	stw	r16,4(sp)
 40087d0:	2823883a 	mov	r17,r5
 40087d4:	2c000417 	ldw	r16,16(r5)
 40087d8:	dfc00515 	stw	ra,20(sp)
 40087dc:	dcc00415 	stw	r19,16(sp)
 40087e0:	2025883a 	mov	r18,r4
 40087e4:	29400504 	addi	r5,r5,20
 40087e8:	0011883a 	mov	r8,zero
 40087ec:	28c00017 	ldw	r3,0(r5)
 40087f0:	29400104 	addi	r5,r5,4
 40087f4:	42000044 	addi	r8,r8,1
 40087f8:	18bfffcc 	andi	r2,r3,65535
 40087fc:	1185383a 	mul	r2,r2,r6
 4008800:	1806d43a 	srli	r3,r3,16
 4008804:	11cf883a 	add	r7,r2,r7
 4008808:	3808d43a 	srli	r4,r7,16
 400880c:	1987383a 	mul	r3,r3,r6
 4008810:	38bfffcc 	andi	r2,r7,65535
 4008814:	1907883a 	add	r3,r3,r4
 4008818:	1808943a 	slli	r4,r3,16
 400881c:	180ed43a 	srli	r7,r3,16
 4008820:	2085883a 	add	r2,r4,r2
 4008824:	28bfff15 	stw	r2,-4(r5)
 4008828:	443ff016 	blt	r8,r16,40087ec <__ram_exceptions_end+0xfbfe85a4>
 400882c:	38000926 	beq	r7,zero,4008854 <__multadd+0x94>
 4008830:	88800217 	ldw	r2,8(r17)
 4008834:	80800f0e 	bge	r16,r2,4008874 <__multadd+0xb4>
 4008838:	80800144 	addi	r2,r16,5
 400883c:	1085883a 	add	r2,r2,r2
 4008840:	1085883a 	add	r2,r2,r2
 4008844:	8885883a 	add	r2,r17,r2
 4008848:	11c00015 	stw	r7,0(r2)
 400884c:	84000044 	addi	r16,r16,1
 4008850:	8c000415 	stw	r16,16(r17)
 4008854:	8805883a 	mov	r2,r17
 4008858:	dfc00517 	ldw	ra,20(sp)
 400885c:	dcc00417 	ldw	r19,16(sp)
 4008860:	dc800317 	ldw	r18,12(sp)
 4008864:	dc400217 	ldw	r17,8(sp)
 4008868:	dc000117 	ldw	r16,4(sp)
 400886c:	dec00604 	addi	sp,sp,24
 4008870:	f800283a 	ret
 4008874:	89400117 	ldw	r5,4(r17)
 4008878:	9009883a 	mov	r4,r18
 400887c:	d9c00015 	stw	r7,0(sp)
 4008880:	29400044 	addi	r5,r5,1
 4008884:	40086f00 	call	40086f0 <_Balloc>
 4008888:	89800417 	ldw	r6,16(r17)
 400888c:	89400304 	addi	r5,r17,12
 4008890:	11000304 	addi	r4,r2,12
 4008894:	31800084 	addi	r6,r6,2
 4008898:	318d883a 	add	r6,r6,r6
 400889c:	318d883a 	add	r6,r6,r6
 40088a0:	1027883a 	mov	r19,r2
 40088a4:	40083240 	call	4008324 <memcpy>
 40088a8:	d9c00017 	ldw	r7,0(sp)
 40088ac:	88000a26 	beq	r17,zero,40088d8 <__multadd+0x118>
 40088b0:	88c00117 	ldw	r3,4(r17)
 40088b4:	90801317 	ldw	r2,76(r18)
 40088b8:	18c7883a 	add	r3,r3,r3
 40088bc:	18c7883a 	add	r3,r3,r3
 40088c0:	10c5883a 	add	r2,r2,r3
 40088c4:	10c00017 	ldw	r3,0(r2)
 40088c8:	88c00015 	stw	r3,0(r17)
 40088cc:	14400015 	stw	r17,0(r2)
 40088d0:	9823883a 	mov	r17,r19
 40088d4:	003fd806 	br	4008838 <__ram_exceptions_end+0xfbfe85f0>
 40088d8:	9823883a 	mov	r17,r19
 40088dc:	003fd606 	br	4008838 <__ram_exceptions_end+0xfbfe85f0>

040088e0 <__s2b>:
 40088e0:	defff904 	addi	sp,sp,-28
 40088e4:	dc400115 	stw	r17,4(sp)
 40088e8:	dc000015 	stw	r16,0(sp)
 40088ec:	2023883a 	mov	r17,r4
 40088f0:	2821883a 	mov	r16,r5
 40088f4:	39000204 	addi	r4,r7,8
 40088f8:	01400244 	movi	r5,9
 40088fc:	dcc00315 	stw	r19,12(sp)
 4008900:	dc800215 	stw	r18,8(sp)
 4008904:	dfc00615 	stw	ra,24(sp)
 4008908:	dd400515 	stw	r21,20(sp)
 400890c:	dd000415 	stw	r20,16(sp)
 4008910:	3825883a 	mov	r18,r7
 4008914:	3027883a 	mov	r19,r6
 4008918:	400ddf40 	call	400ddf4 <__divsi3>
 400891c:	00c00044 	movi	r3,1
 4008920:	000b883a 	mov	r5,zero
 4008924:	1880030e 	bge	r3,r2,4008934 <__s2b+0x54>
 4008928:	18c7883a 	add	r3,r3,r3
 400892c:	29400044 	addi	r5,r5,1
 4008930:	18bffd16 	blt	r3,r2,4008928 <__ram_exceptions_end+0xfbfe86e0>
 4008934:	8809883a 	mov	r4,r17
 4008938:	40086f00 	call	40086f0 <_Balloc>
 400893c:	d8c00717 	ldw	r3,28(sp)
 4008940:	10c00515 	stw	r3,20(r2)
 4008944:	00c00044 	movi	r3,1
 4008948:	10c00415 	stw	r3,16(r2)
 400894c:	00c00244 	movi	r3,9
 4008950:	1cc0210e 	bge	r3,r19,40089d8 <__s2b+0xf8>
 4008954:	80eb883a 	add	r21,r16,r3
 4008958:	a829883a 	mov	r20,r21
 400895c:	84e1883a 	add	r16,r16,r19
 4008960:	a1c00007 	ldb	r7,0(r20)
 4008964:	01800284 	movi	r6,10
 4008968:	a5000044 	addi	r20,r20,1
 400896c:	100b883a 	mov	r5,r2
 4008970:	39fff404 	addi	r7,r7,-48
 4008974:	8809883a 	mov	r4,r17
 4008978:	40087c00 	call	40087c0 <__multadd>
 400897c:	a43ff81e 	bne	r20,r16,4008960 <__ram_exceptions_end+0xfbfe8718>
 4008980:	ace1883a 	add	r16,r21,r19
 4008984:	843ffe04 	addi	r16,r16,-8
 4008988:	9c800a0e 	bge	r19,r18,40089b4 <__s2b+0xd4>
 400898c:	94e5c83a 	sub	r18,r18,r19
 4008990:	84a5883a 	add	r18,r16,r18
 4008994:	81c00007 	ldb	r7,0(r16)
 4008998:	01800284 	movi	r6,10
 400899c:	84000044 	addi	r16,r16,1
 40089a0:	100b883a 	mov	r5,r2
 40089a4:	39fff404 	addi	r7,r7,-48
 40089a8:	8809883a 	mov	r4,r17
 40089ac:	40087c00 	call	40087c0 <__multadd>
 40089b0:	84bff81e 	bne	r16,r18,4008994 <__ram_exceptions_end+0xfbfe874c>
 40089b4:	dfc00617 	ldw	ra,24(sp)
 40089b8:	dd400517 	ldw	r21,20(sp)
 40089bc:	dd000417 	ldw	r20,16(sp)
 40089c0:	dcc00317 	ldw	r19,12(sp)
 40089c4:	dc800217 	ldw	r18,8(sp)
 40089c8:	dc400117 	ldw	r17,4(sp)
 40089cc:	dc000017 	ldw	r16,0(sp)
 40089d0:	dec00704 	addi	sp,sp,28
 40089d4:	f800283a 	ret
 40089d8:	84000284 	addi	r16,r16,10
 40089dc:	1827883a 	mov	r19,r3
 40089e0:	003fe906 	br	4008988 <__ram_exceptions_end+0xfbfe8740>

040089e4 <__hi0bits>:
 40089e4:	20bfffec 	andhi	r2,r4,65535
 40089e8:	1000141e 	bne	r2,zero,4008a3c <__hi0bits+0x58>
 40089ec:	2008943a 	slli	r4,r4,16
 40089f0:	00800404 	movi	r2,16
 40089f4:	20ffc02c 	andhi	r3,r4,65280
 40089f8:	1800021e 	bne	r3,zero,4008a04 <__hi0bits+0x20>
 40089fc:	2008923a 	slli	r4,r4,8
 4008a00:	10800204 	addi	r2,r2,8
 4008a04:	20fc002c 	andhi	r3,r4,61440
 4008a08:	1800021e 	bne	r3,zero,4008a14 <__hi0bits+0x30>
 4008a0c:	2008913a 	slli	r4,r4,4
 4008a10:	10800104 	addi	r2,r2,4
 4008a14:	20f0002c 	andhi	r3,r4,49152
 4008a18:	1800031e 	bne	r3,zero,4008a28 <__hi0bits+0x44>
 4008a1c:	2109883a 	add	r4,r4,r4
 4008a20:	10800084 	addi	r2,r2,2
 4008a24:	2109883a 	add	r4,r4,r4
 4008a28:	20000316 	blt	r4,zero,4008a38 <__hi0bits+0x54>
 4008a2c:	2110002c 	andhi	r4,r4,16384
 4008a30:	2000041e 	bne	r4,zero,4008a44 <__hi0bits+0x60>
 4008a34:	00800804 	movi	r2,32
 4008a38:	f800283a 	ret
 4008a3c:	0005883a 	mov	r2,zero
 4008a40:	003fec06 	br	40089f4 <__ram_exceptions_end+0xfbfe87ac>
 4008a44:	10800044 	addi	r2,r2,1
 4008a48:	f800283a 	ret

04008a4c <__lo0bits>:
 4008a4c:	20c00017 	ldw	r3,0(r4)
 4008a50:	188001cc 	andi	r2,r3,7
 4008a54:	10000826 	beq	r2,zero,4008a78 <__lo0bits+0x2c>
 4008a58:	1880004c 	andi	r2,r3,1
 4008a5c:	1000211e 	bne	r2,zero,4008ae4 <__lo0bits+0x98>
 4008a60:	1880008c 	andi	r2,r3,2
 4008a64:	1000211e 	bne	r2,zero,4008aec <__lo0bits+0xa0>
 4008a68:	1806d0ba 	srli	r3,r3,2
 4008a6c:	00800084 	movi	r2,2
 4008a70:	20c00015 	stw	r3,0(r4)
 4008a74:	f800283a 	ret
 4008a78:	18bfffcc 	andi	r2,r3,65535
 4008a7c:	10001326 	beq	r2,zero,4008acc <__lo0bits+0x80>
 4008a80:	0005883a 	mov	r2,zero
 4008a84:	19403fcc 	andi	r5,r3,255
 4008a88:	2800021e 	bne	r5,zero,4008a94 <__lo0bits+0x48>
 4008a8c:	1806d23a 	srli	r3,r3,8
 4008a90:	10800204 	addi	r2,r2,8
 4008a94:	194003cc 	andi	r5,r3,15
 4008a98:	2800021e 	bne	r5,zero,4008aa4 <__lo0bits+0x58>
 4008a9c:	1806d13a 	srli	r3,r3,4
 4008aa0:	10800104 	addi	r2,r2,4
 4008aa4:	194000cc 	andi	r5,r3,3
 4008aa8:	2800021e 	bne	r5,zero,4008ab4 <__lo0bits+0x68>
 4008aac:	1806d0ba 	srli	r3,r3,2
 4008ab0:	10800084 	addi	r2,r2,2
 4008ab4:	1940004c 	andi	r5,r3,1
 4008ab8:	2800081e 	bne	r5,zero,4008adc <__lo0bits+0x90>
 4008abc:	1806d07a 	srli	r3,r3,1
 4008ac0:	1800051e 	bne	r3,zero,4008ad8 <__lo0bits+0x8c>
 4008ac4:	00800804 	movi	r2,32
 4008ac8:	f800283a 	ret
 4008acc:	1806d43a 	srli	r3,r3,16
 4008ad0:	00800404 	movi	r2,16
 4008ad4:	003feb06 	br	4008a84 <__ram_exceptions_end+0xfbfe883c>
 4008ad8:	10800044 	addi	r2,r2,1
 4008adc:	20c00015 	stw	r3,0(r4)
 4008ae0:	f800283a 	ret
 4008ae4:	0005883a 	mov	r2,zero
 4008ae8:	f800283a 	ret
 4008aec:	1806d07a 	srli	r3,r3,1
 4008af0:	00800044 	movi	r2,1
 4008af4:	20c00015 	stw	r3,0(r4)
 4008af8:	f800283a 	ret

04008afc <__i2b>:
 4008afc:	defffd04 	addi	sp,sp,-12
 4008b00:	dc000015 	stw	r16,0(sp)
 4008b04:	04000044 	movi	r16,1
 4008b08:	dc400115 	stw	r17,4(sp)
 4008b0c:	2823883a 	mov	r17,r5
 4008b10:	800b883a 	mov	r5,r16
 4008b14:	dfc00215 	stw	ra,8(sp)
 4008b18:	40086f00 	call	40086f0 <_Balloc>
 4008b1c:	14400515 	stw	r17,20(r2)
 4008b20:	14000415 	stw	r16,16(r2)
 4008b24:	dfc00217 	ldw	ra,8(sp)
 4008b28:	dc400117 	ldw	r17,4(sp)
 4008b2c:	dc000017 	ldw	r16,0(sp)
 4008b30:	dec00304 	addi	sp,sp,12
 4008b34:	f800283a 	ret

04008b38 <__multiply>:
 4008b38:	defffa04 	addi	sp,sp,-24
 4008b3c:	dcc00315 	stw	r19,12(sp)
 4008b40:	dc800215 	stw	r18,8(sp)
 4008b44:	34c00417 	ldw	r19,16(r6)
 4008b48:	2c800417 	ldw	r18,16(r5)
 4008b4c:	dd000415 	stw	r20,16(sp)
 4008b50:	dc400115 	stw	r17,4(sp)
 4008b54:	dfc00515 	stw	ra,20(sp)
 4008b58:	dc000015 	stw	r16,0(sp)
 4008b5c:	2829883a 	mov	r20,r5
 4008b60:	3023883a 	mov	r17,r6
 4008b64:	94c0050e 	bge	r18,r19,4008b7c <__multiply+0x44>
 4008b68:	9007883a 	mov	r3,r18
 4008b6c:	3029883a 	mov	r20,r6
 4008b70:	9825883a 	mov	r18,r19
 4008b74:	2823883a 	mov	r17,r5
 4008b78:	1827883a 	mov	r19,r3
 4008b7c:	a0800217 	ldw	r2,8(r20)
 4008b80:	94e1883a 	add	r16,r18,r19
 4008b84:	a1400117 	ldw	r5,4(r20)
 4008b88:	1400010e 	bge	r2,r16,4008b90 <__multiply+0x58>
 4008b8c:	29400044 	addi	r5,r5,1
 4008b90:	40086f00 	call	40086f0 <_Balloc>
 4008b94:	8415883a 	add	r10,r16,r16
 4008b98:	12c00504 	addi	r11,r2,20
 4008b9c:	5295883a 	add	r10,r10,r10
 4008ba0:	5a95883a 	add	r10,r11,r10
 4008ba4:	5807883a 	mov	r3,r11
 4008ba8:	5a80032e 	bgeu	r11,r10,4008bb8 <__multiply+0x80>
 4008bac:	18000015 	stw	zero,0(r3)
 4008bb0:	18c00104 	addi	r3,r3,4
 4008bb4:	1abffd36 	bltu	r3,r10,4008bac <__ram_exceptions_end+0xfbfe8964>
 4008bb8:	9ce7883a 	add	r19,r19,r19
 4008bbc:	94a5883a 	add	r18,r18,r18
 4008bc0:	89800504 	addi	r6,r17,20
 4008bc4:	9ce7883a 	add	r19,r19,r19
 4008bc8:	a3400504 	addi	r13,r20,20
 4008bcc:	94a5883a 	add	r18,r18,r18
 4008bd0:	34d9883a 	add	r12,r6,r19
 4008bd4:	6c93883a 	add	r9,r13,r18
 4008bd8:	3300422e 	bgeu	r6,r12,4008ce4 <__multiply+0x1ac>
 4008bdc:	37c00017 	ldw	ra,0(r6)
 4008be0:	fbffffcc 	andi	r15,ra,65535
 4008be4:	78001b26 	beq	r15,zero,4008c54 <__multiply+0x11c>
 4008be8:	5811883a 	mov	r8,r11
 4008bec:	681d883a 	mov	r14,r13
 4008bf0:	000f883a 	mov	r7,zero
 4008bf4:	71000017 	ldw	r4,0(r14)
 4008bf8:	40c00017 	ldw	r3,0(r8)
 4008bfc:	73800104 	addi	r14,r14,4
 4008c00:	217fffcc 	andi	r5,r4,65535
 4008c04:	2bcb383a 	mul	r5,r5,r15
 4008c08:	2008d43a 	srli	r4,r4,16
 4008c0c:	1c7fffcc 	andi	r17,r3,65535
 4008c10:	2c4b883a 	add	r5,r5,r17
 4008c14:	29cb883a 	add	r5,r5,r7
 4008c18:	23c9383a 	mul	r4,r4,r15
 4008c1c:	1806d43a 	srli	r3,r3,16
 4008c20:	280ed43a 	srli	r7,r5,16
 4008c24:	297fffcc 	andi	r5,r5,65535
 4008c28:	20c7883a 	add	r3,r4,r3
 4008c2c:	19c7883a 	add	r3,r3,r7
 4008c30:	1808943a 	slli	r4,r3,16
 4008c34:	4023883a 	mov	r17,r8
 4008c38:	180ed43a 	srli	r7,r3,16
 4008c3c:	214ab03a 	or	r5,r4,r5
 4008c40:	41400015 	stw	r5,0(r8)
 4008c44:	42000104 	addi	r8,r8,4
 4008c48:	727fea36 	bltu	r14,r9,4008bf4 <__ram_exceptions_end+0xfbfe89ac>
 4008c4c:	89c00115 	stw	r7,4(r17)
 4008c50:	37c00017 	ldw	ra,0(r6)
 4008c54:	f83ed43a 	srli	ra,ra,16
 4008c58:	f8001f26 	beq	ra,zero,4008cd8 <__multiply+0x1a0>
 4008c5c:	58c00017 	ldw	r3,0(r11)
 4008c60:	681d883a 	mov	r14,r13
 4008c64:	581f883a 	mov	r15,r11
 4008c68:	1811883a 	mov	r8,r3
 4008c6c:	5825883a 	mov	r18,r11
 4008c70:	000f883a 	mov	r7,zero
 4008c74:	00000106 	br	4008c7c <__multiply+0x144>
 4008c78:	8825883a 	mov	r18,r17
 4008c7c:	7140000b 	ldhu	r5,0(r14)
 4008c80:	4010d43a 	srli	r8,r8,16
 4008c84:	193fffcc 	andi	r4,r3,65535
 4008c88:	2fcb383a 	mul	r5,r5,ra
 4008c8c:	7bc00104 	addi	r15,r15,4
 4008c90:	73800104 	addi	r14,r14,4
 4008c94:	2a0b883a 	add	r5,r5,r8
 4008c98:	29cb883a 	add	r5,r5,r7
 4008c9c:	2806943a 	slli	r3,r5,16
 4008ca0:	94400104 	addi	r17,r18,4
 4008ca4:	280ad43a 	srli	r5,r5,16
 4008ca8:	1908b03a 	or	r4,r3,r4
 4008cac:	793fff15 	stw	r4,-4(r15)
 4008cb0:	70ffff17 	ldw	r3,-4(r14)
 4008cb4:	8a000017 	ldw	r8,0(r17)
 4008cb8:	1806d43a 	srli	r3,r3,16
 4008cbc:	413fffcc 	andi	r4,r8,65535
 4008cc0:	1fc7383a 	mul	r3,r3,ra
 4008cc4:	1907883a 	add	r3,r3,r4
 4008cc8:	1947883a 	add	r3,r3,r5
 4008ccc:	180ed43a 	srli	r7,r3,16
 4008cd0:	727fe936 	bltu	r14,r9,4008c78 <__ram_exceptions_end+0xfbfe8a30>
 4008cd4:	90c00115 	stw	r3,4(r18)
 4008cd8:	31800104 	addi	r6,r6,4
 4008cdc:	5ac00104 	addi	r11,r11,4
 4008ce0:	333fbe36 	bltu	r6,r12,4008bdc <__ram_exceptions_end+0xfbfe8994>
 4008ce4:	0400090e 	bge	zero,r16,4008d0c <__multiply+0x1d4>
 4008ce8:	50ffff17 	ldw	r3,-4(r10)
 4008cec:	52bfff04 	addi	r10,r10,-4
 4008cf0:	18000326 	beq	r3,zero,4008d00 <__multiply+0x1c8>
 4008cf4:	00000506 	br	4008d0c <__multiply+0x1d4>
 4008cf8:	50c00017 	ldw	r3,0(r10)
 4008cfc:	1800031e 	bne	r3,zero,4008d0c <__multiply+0x1d4>
 4008d00:	843fffc4 	addi	r16,r16,-1
 4008d04:	52bfff04 	addi	r10,r10,-4
 4008d08:	803ffb1e 	bne	r16,zero,4008cf8 <__ram_exceptions_end+0xfbfe8ab0>
 4008d0c:	14000415 	stw	r16,16(r2)
 4008d10:	dfc00517 	ldw	ra,20(sp)
 4008d14:	dd000417 	ldw	r20,16(sp)
 4008d18:	dcc00317 	ldw	r19,12(sp)
 4008d1c:	dc800217 	ldw	r18,8(sp)
 4008d20:	dc400117 	ldw	r17,4(sp)
 4008d24:	dc000017 	ldw	r16,0(sp)
 4008d28:	dec00604 	addi	sp,sp,24
 4008d2c:	f800283a 	ret

04008d30 <__pow5mult>:
 4008d30:	defffa04 	addi	sp,sp,-24
 4008d34:	dcc00315 	stw	r19,12(sp)
 4008d38:	dc000015 	stw	r16,0(sp)
 4008d3c:	dfc00515 	stw	ra,20(sp)
 4008d40:	dd000415 	stw	r20,16(sp)
 4008d44:	dc800215 	stw	r18,8(sp)
 4008d48:	dc400115 	stw	r17,4(sp)
 4008d4c:	308000cc 	andi	r2,r6,3
 4008d50:	3021883a 	mov	r16,r6
 4008d54:	2027883a 	mov	r19,r4
 4008d58:	10002f1e 	bne	r2,zero,4008e18 <__pow5mult+0xe8>
 4008d5c:	2825883a 	mov	r18,r5
 4008d60:	8021d0ba 	srai	r16,r16,2
 4008d64:	80001a26 	beq	r16,zero,4008dd0 <__pow5mult+0xa0>
 4008d68:	9c401217 	ldw	r17,72(r19)
 4008d6c:	8800061e 	bne	r17,zero,4008d88 <__pow5mult+0x58>
 4008d70:	00003406 	br	4008e44 <__pow5mult+0x114>
 4008d74:	8021d07a 	srai	r16,r16,1
 4008d78:	80001526 	beq	r16,zero,4008dd0 <__pow5mult+0xa0>
 4008d7c:	88800017 	ldw	r2,0(r17)
 4008d80:	10001c26 	beq	r2,zero,4008df4 <__pow5mult+0xc4>
 4008d84:	1023883a 	mov	r17,r2
 4008d88:	8080004c 	andi	r2,r16,1
 4008d8c:	103ff926 	beq	r2,zero,4008d74 <__ram_exceptions_end+0xfbfe8b2c>
 4008d90:	880d883a 	mov	r6,r17
 4008d94:	900b883a 	mov	r5,r18
 4008d98:	9809883a 	mov	r4,r19
 4008d9c:	4008b380 	call	4008b38 <__multiply>
 4008da0:	90001b26 	beq	r18,zero,4008e10 <__pow5mult+0xe0>
 4008da4:	91000117 	ldw	r4,4(r18)
 4008da8:	98c01317 	ldw	r3,76(r19)
 4008dac:	8021d07a 	srai	r16,r16,1
 4008db0:	2109883a 	add	r4,r4,r4
 4008db4:	2109883a 	add	r4,r4,r4
 4008db8:	1907883a 	add	r3,r3,r4
 4008dbc:	19000017 	ldw	r4,0(r3)
 4008dc0:	91000015 	stw	r4,0(r18)
 4008dc4:	1c800015 	stw	r18,0(r3)
 4008dc8:	1025883a 	mov	r18,r2
 4008dcc:	803feb1e 	bne	r16,zero,4008d7c <__ram_exceptions_end+0xfbfe8b34>
 4008dd0:	9005883a 	mov	r2,r18
 4008dd4:	dfc00517 	ldw	ra,20(sp)
 4008dd8:	dd000417 	ldw	r20,16(sp)
 4008ddc:	dcc00317 	ldw	r19,12(sp)
 4008de0:	dc800217 	ldw	r18,8(sp)
 4008de4:	dc400117 	ldw	r17,4(sp)
 4008de8:	dc000017 	ldw	r16,0(sp)
 4008dec:	dec00604 	addi	sp,sp,24
 4008df0:	f800283a 	ret
 4008df4:	880d883a 	mov	r6,r17
 4008df8:	880b883a 	mov	r5,r17
 4008dfc:	9809883a 	mov	r4,r19
 4008e00:	4008b380 	call	4008b38 <__multiply>
 4008e04:	88800015 	stw	r2,0(r17)
 4008e08:	10000015 	stw	zero,0(r2)
 4008e0c:	003fdd06 	br	4008d84 <__ram_exceptions_end+0xfbfe8b3c>
 4008e10:	1025883a 	mov	r18,r2
 4008e14:	003fd706 	br	4008d74 <__ram_exceptions_end+0xfbfe8b2c>
 4008e18:	10bfffc4 	addi	r2,r2,-1
 4008e1c:	1085883a 	add	r2,r2,r2
 4008e20:	00c10074 	movhi	r3,1025
 4008e24:	18d22d04 	addi	r3,r3,18612
 4008e28:	1085883a 	add	r2,r2,r2
 4008e2c:	1885883a 	add	r2,r3,r2
 4008e30:	11800017 	ldw	r6,0(r2)
 4008e34:	000f883a 	mov	r7,zero
 4008e38:	40087c00 	call	40087c0 <__multadd>
 4008e3c:	1025883a 	mov	r18,r2
 4008e40:	003fc706 	br	4008d60 <__ram_exceptions_end+0xfbfe8b18>
 4008e44:	05000044 	movi	r20,1
 4008e48:	a00b883a 	mov	r5,r20
 4008e4c:	9809883a 	mov	r4,r19
 4008e50:	40086f00 	call	40086f0 <_Balloc>
 4008e54:	1023883a 	mov	r17,r2
 4008e58:	00809c44 	movi	r2,625
 4008e5c:	88800515 	stw	r2,20(r17)
 4008e60:	8d000415 	stw	r20,16(r17)
 4008e64:	9c401215 	stw	r17,72(r19)
 4008e68:	88000015 	stw	zero,0(r17)
 4008e6c:	003fc606 	br	4008d88 <__ram_exceptions_end+0xfbfe8b40>

04008e70 <__lshift>:
 4008e70:	defff904 	addi	sp,sp,-28
 4008e74:	dd400515 	stw	r21,20(sp)
 4008e78:	dcc00315 	stw	r19,12(sp)
 4008e7c:	302bd17a 	srai	r21,r6,5
 4008e80:	2cc00417 	ldw	r19,16(r5)
 4008e84:	28800217 	ldw	r2,8(r5)
 4008e88:	dd000415 	stw	r20,16(sp)
 4008e8c:	ace7883a 	add	r19,r21,r19
 4008e90:	dc800215 	stw	r18,8(sp)
 4008e94:	dc400115 	stw	r17,4(sp)
 4008e98:	dc000015 	stw	r16,0(sp)
 4008e9c:	dfc00615 	stw	ra,24(sp)
 4008ea0:	9c000044 	addi	r16,r19,1
 4008ea4:	2823883a 	mov	r17,r5
 4008ea8:	3029883a 	mov	r20,r6
 4008eac:	2025883a 	mov	r18,r4
 4008eb0:	29400117 	ldw	r5,4(r5)
 4008eb4:	1400030e 	bge	r2,r16,4008ec4 <__lshift+0x54>
 4008eb8:	1085883a 	add	r2,r2,r2
 4008ebc:	29400044 	addi	r5,r5,1
 4008ec0:	143ffd16 	blt	r2,r16,4008eb8 <__ram_exceptions_end+0xfbfe8c70>
 4008ec4:	9009883a 	mov	r4,r18
 4008ec8:	40086f00 	call	40086f0 <_Balloc>
 4008ecc:	10c00504 	addi	r3,r2,20
 4008ed0:	0540070e 	bge	zero,r21,4008ef0 <__lshift+0x80>
 4008ed4:	ad6b883a 	add	r21,r21,r21
 4008ed8:	ad6b883a 	add	r21,r21,r21
 4008edc:	1809883a 	mov	r4,r3
 4008ee0:	1d47883a 	add	r3,r3,r21
 4008ee4:	20000015 	stw	zero,0(r4)
 4008ee8:	21000104 	addi	r4,r4,4
 4008eec:	193ffd1e 	bne	r3,r4,4008ee4 <__ram_exceptions_end+0xfbfe8c9c>
 4008ef0:	8a000417 	ldw	r8,16(r17)
 4008ef4:	89000504 	addi	r4,r17,20
 4008ef8:	a18007cc 	andi	r6,r20,31
 4008efc:	4211883a 	add	r8,r8,r8
 4008f00:	4211883a 	add	r8,r8,r8
 4008f04:	2211883a 	add	r8,r4,r8
 4008f08:	30002326 	beq	r6,zero,4008f98 <__lshift+0x128>
 4008f0c:	02400804 	movi	r9,32
 4008f10:	4993c83a 	sub	r9,r9,r6
 4008f14:	000b883a 	mov	r5,zero
 4008f18:	21c00017 	ldw	r7,0(r4)
 4008f1c:	1815883a 	mov	r10,r3
 4008f20:	18c00104 	addi	r3,r3,4
 4008f24:	398e983a 	sll	r7,r7,r6
 4008f28:	21000104 	addi	r4,r4,4
 4008f2c:	394ab03a 	or	r5,r7,r5
 4008f30:	197fff15 	stw	r5,-4(r3)
 4008f34:	217fff17 	ldw	r5,-4(r4)
 4008f38:	2a4ad83a 	srl	r5,r5,r9
 4008f3c:	223ff636 	bltu	r4,r8,4008f18 <__ram_exceptions_end+0xfbfe8cd0>
 4008f40:	51400115 	stw	r5,4(r10)
 4008f44:	28001a1e 	bne	r5,zero,4008fb0 <__lshift+0x140>
 4008f48:	843fffc4 	addi	r16,r16,-1
 4008f4c:	14000415 	stw	r16,16(r2)
 4008f50:	88000826 	beq	r17,zero,4008f74 <__lshift+0x104>
 4008f54:	89000117 	ldw	r4,4(r17)
 4008f58:	90c01317 	ldw	r3,76(r18)
 4008f5c:	2109883a 	add	r4,r4,r4
 4008f60:	2109883a 	add	r4,r4,r4
 4008f64:	1907883a 	add	r3,r3,r4
 4008f68:	19000017 	ldw	r4,0(r3)
 4008f6c:	89000015 	stw	r4,0(r17)
 4008f70:	1c400015 	stw	r17,0(r3)
 4008f74:	dfc00617 	ldw	ra,24(sp)
 4008f78:	dd400517 	ldw	r21,20(sp)
 4008f7c:	dd000417 	ldw	r20,16(sp)
 4008f80:	dcc00317 	ldw	r19,12(sp)
 4008f84:	dc800217 	ldw	r18,8(sp)
 4008f88:	dc400117 	ldw	r17,4(sp)
 4008f8c:	dc000017 	ldw	r16,0(sp)
 4008f90:	dec00704 	addi	sp,sp,28
 4008f94:	f800283a 	ret
 4008f98:	21400017 	ldw	r5,0(r4)
 4008f9c:	18c00104 	addi	r3,r3,4
 4008fa0:	21000104 	addi	r4,r4,4
 4008fa4:	197fff15 	stw	r5,-4(r3)
 4008fa8:	223ffb36 	bltu	r4,r8,4008f98 <__ram_exceptions_end+0xfbfe8d50>
 4008fac:	003fe606 	br	4008f48 <__ram_exceptions_end+0xfbfe8d00>
 4008fb0:	9c000084 	addi	r16,r19,2
 4008fb4:	003fe406 	br	4008f48 <__ram_exceptions_end+0xfbfe8d00>

04008fb8 <__mcmp>:
 4008fb8:	20800417 	ldw	r2,16(r4)
 4008fbc:	28c00417 	ldw	r3,16(r5)
 4008fc0:	10c5c83a 	sub	r2,r2,r3
 4008fc4:	1000111e 	bne	r2,zero,400900c <__mcmp+0x54>
 4008fc8:	18c7883a 	add	r3,r3,r3
 4008fcc:	18c7883a 	add	r3,r3,r3
 4008fd0:	21000504 	addi	r4,r4,20
 4008fd4:	29400504 	addi	r5,r5,20
 4008fd8:	20c5883a 	add	r2,r4,r3
 4008fdc:	28cb883a 	add	r5,r5,r3
 4008fe0:	00000106 	br	4008fe8 <__mcmp+0x30>
 4008fe4:	20800a2e 	bgeu	r4,r2,4009010 <__mcmp+0x58>
 4008fe8:	10bfff04 	addi	r2,r2,-4
 4008fec:	297fff04 	addi	r5,r5,-4
 4008ff0:	11800017 	ldw	r6,0(r2)
 4008ff4:	28c00017 	ldw	r3,0(r5)
 4008ff8:	30fffa26 	beq	r6,r3,4008fe4 <__ram_exceptions_end+0xfbfe8d9c>
 4008ffc:	30c00236 	bltu	r6,r3,4009008 <__mcmp+0x50>
 4009000:	00800044 	movi	r2,1
 4009004:	f800283a 	ret
 4009008:	00bfffc4 	movi	r2,-1
 400900c:	f800283a 	ret
 4009010:	0005883a 	mov	r2,zero
 4009014:	f800283a 	ret

04009018 <__mdiff>:
 4009018:	28c00417 	ldw	r3,16(r5)
 400901c:	30800417 	ldw	r2,16(r6)
 4009020:	defffa04 	addi	sp,sp,-24
 4009024:	dcc00315 	stw	r19,12(sp)
 4009028:	dc800215 	stw	r18,8(sp)
 400902c:	dfc00515 	stw	ra,20(sp)
 4009030:	dd000415 	stw	r20,16(sp)
 4009034:	dc400115 	stw	r17,4(sp)
 4009038:	dc000015 	stw	r16,0(sp)
 400903c:	1887c83a 	sub	r3,r3,r2
 4009040:	2825883a 	mov	r18,r5
 4009044:	3027883a 	mov	r19,r6
 4009048:	1800141e 	bne	r3,zero,400909c <__mdiff+0x84>
 400904c:	1085883a 	add	r2,r2,r2
 4009050:	1085883a 	add	r2,r2,r2
 4009054:	2a000504 	addi	r8,r5,20
 4009058:	34000504 	addi	r16,r6,20
 400905c:	4087883a 	add	r3,r8,r2
 4009060:	8085883a 	add	r2,r16,r2
 4009064:	00000106 	br	400906c <__mdiff+0x54>
 4009068:	40c0592e 	bgeu	r8,r3,40091d0 <__mdiff+0x1b8>
 400906c:	18ffff04 	addi	r3,r3,-4
 4009070:	10bfff04 	addi	r2,r2,-4
 4009074:	19c00017 	ldw	r7,0(r3)
 4009078:	11400017 	ldw	r5,0(r2)
 400907c:	397ffa26 	beq	r7,r5,4009068 <__ram_exceptions_end+0xfbfe8e20>
 4009080:	3940592e 	bgeu	r7,r5,40091e8 <__mdiff+0x1d0>
 4009084:	9005883a 	mov	r2,r18
 4009088:	4023883a 	mov	r17,r8
 400908c:	9825883a 	mov	r18,r19
 4009090:	05000044 	movi	r20,1
 4009094:	1027883a 	mov	r19,r2
 4009098:	00000406 	br	40090ac <__mdiff+0x94>
 400909c:	18005616 	blt	r3,zero,40091f8 <__mdiff+0x1e0>
 40090a0:	34400504 	addi	r17,r6,20
 40090a4:	2c000504 	addi	r16,r5,20
 40090a8:	0029883a 	mov	r20,zero
 40090ac:	91400117 	ldw	r5,4(r18)
 40090b0:	40086f00 	call	40086f0 <_Balloc>
 40090b4:	92400417 	ldw	r9,16(r18)
 40090b8:	9b000417 	ldw	r12,16(r19)
 40090bc:	12c00504 	addi	r11,r2,20
 40090c0:	4a51883a 	add	r8,r9,r9
 40090c4:	6319883a 	add	r12,r12,r12
 40090c8:	4211883a 	add	r8,r8,r8
 40090cc:	6319883a 	add	r12,r12,r12
 40090d0:	15000315 	stw	r20,12(r2)
 40090d4:	8211883a 	add	r8,r16,r8
 40090d8:	8b19883a 	add	r12,r17,r12
 40090dc:	0007883a 	mov	r3,zero
 40090e0:	81400017 	ldw	r5,0(r16)
 40090e4:	89c00017 	ldw	r7,0(r17)
 40090e8:	59800104 	addi	r6,r11,4
 40090ec:	293fffcc 	andi	r4,r5,65535
 40090f0:	20c7883a 	add	r3,r4,r3
 40090f4:	393fffcc 	andi	r4,r7,65535
 40090f8:	1909c83a 	sub	r4,r3,r4
 40090fc:	280ad43a 	srli	r5,r5,16
 4009100:	380ed43a 	srli	r7,r7,16
 4009104:	2007d43a 	srai	r3,r4,16
 4009108:	213fffcc 	andi	r4,r4,65535
 400910c:	29cbc83a 	sub	r5,r5,r7
 4009110:	28c7883a 	add	r3,r5,r3
 4009114:	180a943a 	slli	r5,r3,16
 4009118:	8c400104 	addi	r17,r17,4
 400911c:	84000104 	addi	r16,r16,4
 4009120:	2908b03a 	or	r4,r5,r4
 4009124:	59000015 	stw	r4,0(r11)
 4009128:	1807d43a 	srai	r3,r3,16
 400912c:	3015883a 	mov	r10,r6
 4009130:	3017883a 	mov	r11,r6
 4009134:	8b3fea36 	bltu	r17,r12,40090e0 <__ram_exceptions_end+0xfbfe8e98>
 4009138:	8200162e 	bgeu	r16,r8,4009194 <__mdiff+0x17c>
 400913c:	8017883a 	mov	r11,r16
 4009140:	59400017 	ldw	r5,0(r11)
 4009144:	31800104 	addi	r6,r6,4
 4009148:	5ac00104 	addi	r11,r11,4
 400914c:	293fffcc 	andi	r4,r5,65535
 4009150:	20c7883a 	add	r3,r4,r3
 4009154:	280ed43a 	srli	r7,r5,16
 4009158:	180bd43a 	srai	r5,r3,16
 400915c:	193fffcc 	andi	r4,r3,65535
 4009160:	3947883a 	add	r3,r7,r5
 4009164:	180a943a 	slli	r5,r3,16
 4009168:	1807d43a 	srai	r3,r3,16
 400916c:	2908b03a 	or	r4,r5,r4
 4009170:	313fff15 	stw	r4,-4(r6)
 4009174:	5a3ff236 	bltu	r11,r8,4009140 <__ram_exceptions_end+0xfbfe8ef8>
 4009178:	0406303a 	nor	r3,zero,r16
 400917c:	1a07883a 	add	r3,r3,r8
 4009180:	1806d0ba 	srli	r3,r3,2
 4009184:	18c00044 	addi	r3,r3,1
 4009188:	18c7883a 	add	r3,r3,r3
 400918c:	18c7883a 	add	r3,r3,r3
 4009190:	50d5883a 	add	r10,r10,r3
 4009194:	50ffff04 	addi	r3,r10,-4
 4009198:	2000041e 	bne	r4,zero,40091ac <__mdiff+0x194>
 400919c:	18ffff04 	addi	r3,r3,-4
 40091a0:	19000017 	ldw	r4,0(r3)
 40091a4:	4a7fffc4 	addi	r9,r9,-1
 40091a8:	203ffc26 	beq	r4,zero,400919c <__ram_exceptions_end+0xfbfe8f54>
 40091ac:	12400415 	stw	r9,16(r2)
 40091b0:	dfc00517 	ldw	ra,20(sp)
 40091b4:	dd000417 	ldw	r20,16(sp)
 40091b8:	dcc00317 	ldw	r19,12(sp)
 40091bc:	dc800217 	ldw	r18,8(sp)
 40091c0:	dc400117 	ldw	r17,4(sp)
 40091c4:	dc000017 	ldw	r16,0(sp)
 40091c8:	dec00604 	addi	sp,sp,24
 40091cc:	f800283a 	ret
 40091d0:	000b883a 	mov	r5,zero
 40091d4:	40086f00 	call	40086f0 <_Balloc>
 40091d8:	00c00044 	movi	r3,1
 40091dc:	10c00415 	stw	r3,16(r2)
 40091e0:	10000515 	stw	zero,20(r2)
 40091e4:	003ff206 	br	40091b0 <__ram_exceptions_end+0xfbfe8f68>
 40091e8:	8023883a 	mov	r17,r16
 40091ec:	0029883a 	mov	r20,zero
 40091f0:	4021883a 	mov	r16,r8
 40091f4:	003fad06 	br	40090ac <__ram_exceptions_end+0xfbfe8e64>
 40091f8:	9005883a 	mov	r2,r18
 40091fc:	94400504 	addi	r17,r18,20
 4009200:	9c000504 	addi	r16,r19,20
 4009204:	9825883a 	mov	r18,r19
 4009208:	05000044 	movi	r20,1
 400920c:	1027883a 	mov	r19,r2
 4009210:	003fa606 	br	40090ac <__ram_exceptions_end+0xfbfe8e64>

04009214 <__ulp>:
 4009214:	295ffc2c 	andhi	r5,r5,32752
 4009218:	00bf3034 	movhi	r2,64704
 400921c:	2887883a 	add	r3,r5,r2
 4009220:	00c0020e 	bge	zero,r3,400922c <__ulp+0x18>
 4009224:	0005883a 	mov	r2,zero
 4009228:	f800283a 	ret
 400922c:	00c7c83a 	sub	r3,zero,r3
 4009230:	1807d53a 	srai	r3,r3,20
 4009234:	008004c4 	movi	r2,19
 4009238:	10c00b0e 	bge	r2,r3,4009268 <__ulp+0x54>
 400923c:	18bffb04 	addi	r2,r3,-20
 4009240:	01000784 	movi	r4,30
 4009244:	0007883a 	mov	r3,zero
 4009248:	20800516 	blt	r4,r2,4009260 <__ulp+0x4c>
 400924c:	010007c4 	movi	r4,31
 4009250:	2089c83a 	sub	r4,r4,r2
 4009254:	00800044 	movi	r2,1
 4009258:	1104983a 	sll	r2,r2,r4
 400925c:	f800283a 	ret
 4009260:	00800044 	movi	r2,1
 4009264:	f800283a 	ret
 4009268:	01400234 	movhi	r5,8
 400926c:	28c7d83a 	sra	r3,r5,r3
 4009270:	0005883a 	mov	r2,zero
 4009274:	f800283a 	ret

04009278 <__b2d>:
 4009278:	defffa04 	addi	sp,sp,-24
 400927c:	dc000015 	stw	r16,0(sp)
 4009280:	24000417 	ldw	r16,16(r4)
 4009284:	dc400115 	stw	r17,4(sp)
 4009288:	24400504 	addi	r17,r4,20
 400928c:	8421883a 	add	r16,r16,r16
 4009290:	8421883a 	add	r16,r16,r16
 4009294:	8c21883a 	add	r16,r17,r16
 4009298:	dc800215 	stw	r18,8(sp)
 400929c:	84bfff17 	ldw	r18,-4(r16)
 40092a0:	dd000415 	stw	r20,16(sp)
 40092a4:	dcc00315 	stw	r19,12(sp)
 40092a8:	9009883a 	mov	r4,r18
 40092ac:	2829883a 	mov	r20,r5
 40092b0:	dfc00515 	stw	ra,20(sp)
 40092b4:	40089e40 	call	40089e4 <__hi0bits>
 40092b8:	00c00804 	movi	r3,32
 40092bc:	1889c83a 	sub	r4,r3,r2
 40092c0:	a1000015 	stw	r4,0(r20)
 40092c4:	01000284 	movi	r4,10
 40092c8:	84ffff04 	addi	r19,r16,-4
 40092cc:	20801216 	blt	r4,r2,4009318 <__b2d+0xa0>
 40092d0:	018002c4 	movi	r6,11
 40092d4:	308dc83a 	sub	r6,r6,r2
 40092d8:	9186d83a 	srl	r3,r18,r6
 40092dc:	18cffc34 	orhi	r3,r3,16368
 40092e0:	8cc0212e 	bgeu	r17,r19,4009368 <__b2d+0xf0>
 40092e4:	813ffe17 	ldw	r4,-8(r16)
 40092e8:	218cd83a 	srl	r6,r4,r6
 40092ec:	10800544 	addi	r2,r2,21
 40092f0:	9084983a 	sll	r2,r18,r2
 40092f4:	1184b03a 	or	r2,r2,r6
 40092f8:	dfc00517 	ldw	ra,20(sp)
 40092fc:	dd000417 	ldw	r20,16(sp)
 4009300:	dcc00317 	ldw	r19,12(sp)
 4009304:	dc800217 	ldw	r18,8(sp)
 4009308:	dc400117 	ldw	r17,4(sp)
 400930c:	dc000017 	ldw	r16,0(sp)
 4009310:	dec00604 	addi	sp,sp,24
 4009314:	f800283a 	ret
 4009318:	8cc00f2e 	bgeu	r17,r19,4009358 <__b2d+0xe0>
 400931c:	117ffd44 	addi	r5,r2,-11
 4009320:	80bffe17 	ldw	r2,-8(r16)
 4009324:	28000e26 	beq	r5,zero,4009360 <__b2d+0xe8>
 4009328:	1949c83a 	sub	r4,r3,r5
 400932c:	9164983a 	sll	r18,r18,r5
 4009330:	1106d83a 	srl	r3,r2,r4
 4009334:	81bffe04 	addi	r6,r16,-8
 4009338:	948ffc34 	orhi	r18,r18,16368
 400933c:	90c6b03a 	or	r3,r18,r3
 4009340:	89800e2e 	bgeu	r17,r6,400937c <__b2d+0x104>
 4009344:	81bffd17 	ldw	r6,-12(r16)
 4009348:	1144983a 	sll	r2,r2,r5
 400934c:	310ad83a 	srl	r5,r6,r4
 4009350:	2884b03a 	or	r2,r5,r2
 4009354:	003fe806 	br	40092f8 <__ram_exceptions_end+0xfbfe90b0>
 4009358:	10bffd44 	addi	r2,r2,-11
 400935c:	1000041e 	bne	r2,zero,4009370 <__b2d+0xf8>
 4009360:	90cffc34 	orhi	r3,r18,16368
 4009364:	003fe406 	br	40092f8 <__ram_exceptions_end+0xfbfe90b0>
 4009368:	000d883a 	mov	r6,zero
 400936c:	003fdf06 	br	40092ec <__ram_exceptions_end+0xfbfe90a4>
 4009370:	90a4983a 	sll	r18,r18,r2
 4009374:	0005883a 	mov	r2,zero
 4009378:	003ff906 	br	4009360 <__ram_exceptions_end+0xfbfe9118>
 400937c:	1144983a 	sll	r2,r2,r5
 4009380:	003fdd06 	br	40092f8 <__ram_exceptions_end+0xfbfe90b0>

04009384 <__d2b>:
 4009384:	defff804 	addi	sp,sp,-32
 4009388:	dc000215 	stw	r16,8(sp)
 400938c:	3021883a 	mov	r16,r6
 4009390:	dc400315 	stw	r17,12(sp)
 4009394:	8022907a 	slli	r17,r16,1
 4009398:	dd000615 	stw	r20,24(sp)
 400939c:	2829883a 	mov	r20,r5
 40093a0:	01400044 	movi	r5,1
 40093a4:	dcc00515 	stw	r19,20(sp)
 40093a8:	dc800415 	stw	r18,16(sp)
 40093ac:	dfc00715 	stw	ra,28(sp)
 40093b0:	3825883a 	mov	r18,r7
 40093b4:	8822d57a 	srli	r17,r17,21
 40093b8:	40086f00 	call	40086f0 <_Balloc>
 40093bc:	1027883a 	mov	r19,r2
 40093c0:	00800434 	movhi	r2,16
 40093c4:	10bfffc4 	addi	r2,r2,-1
 40093c8:	808c703a 	and	r6,r16,r2
 40093cc:	88000126 	beq	r17,zero,40093d4 <__d2b+0x50>
 40093d0:	31800434 	orhi	r6,r6,16
 40093d4:	d9800015 	stw	r6,0(sp)
 40093d8:	a0002426 	beq	r20,zero,400946c <__d2b+0xe8>
 40093dc:	d9000104 	addi	r4,sp,4
 40093e0:	dd000115 	stw	r20,4(sp)
 40093e4:	4008a4c0 	call	4008a4c <__lo0bits>
 40093e8:	d8c00017 	ldw	r3,0(sp)
 40093ec:	10002f1e 	bne	r2,zero,40094ac <__d2b+0x128>
 40093f0:	d9000117 	ldw	r4,4(sp)
 40093f4:	99000515 	stw	r4,20(r19)
 40093f8:	1821003a 	cmpeq	r16,r3,zero
 40093fc:	01000084 	movi	r4,2
 4009400:	2421c83a 	sub	r16,r4,r16
 4009404:	98c00615 	stw	r3,24(r19)
 4009408:	9c000415 	stw	r16,16(r19)
 400940c:	88001f1e 	bne	r17,zero,400948c <__d2b+0x108>
 4009410:	10bef384 	addi	r2,r2,-1074
 4009414:	90800015 	stw	r2,0(r18)
 4009418:	00900034 	movhi	r2,16384
 400941c:	10bfffc4 	addi	r2,r2,-1
 4009420:	8085883a 	add	r2,r16,r2
 4009424:	1085883a 	add	r2,r2,r2
 4009428:	1085883a 	add	r2,r2,r2
 400942c:	9885883a 	add	r2,r19,r2
 4009430:	11000517 	ldw	r4,20(r2)
 4009434:	8020917a 	slli	r16,r16,5
 4009438:	40089e40 	call	40089e4 <__hi0bits>
 400943c:	d8c00817 	ldw	r3,32(sp)
 4009440:	8085c83a 	sub	r2,r16,r2
 4009444:	18800015 	stw	r2,0(r3)
 4009448:	9805883a 	mov	r2,r19
 400944c:	dfc00717 	ldw	ra,28(sp)
 4009450:	dd000617 	ldw	r20,24(sp)
 4009454:	dcc00517 	ldw	r19,20(sp)
 4009458:	dc800417 	ldw	r18,16(sp)
 400945c:	dc400317 	ldw	r17,12(sp)
 4009460:	dc000217 	ldw	r16,8(sp)
 4009464:	dec00804 	addi	sp,sp,32
 4009468:	f800283a 	ret
 400946c:	d809883a 	mov	r4,sp
 4009470:	4008a4c0 	call	4008a4c <__lo0bits>
 4009474:	d8c00017 	ldw	r3,0(sp)
 4009478:	04000044 	movi	r16,1
 400947c:	9c000415 	stw	r16,16(r19)
 4009480:	98c00515 	stw	r3,20(r19)
 4009484:	10800804 	addi	r2,r2,32
 4009488:	883fe126 	beq	r17,zero,4009410 <__ram_exceptions_end+0xfbfe91c8>
 400948c:	00c00d44 	movi	r3,53
 4009490:	8c7ef344 	addi	r17,r17,-1075
 4009494:	88a3883a 	add	r17,r17,r2
 4009498:	1885c83a 	sub	r2,r3,r2
 400949c:	d8c00817 	ldw	r3,32(sp)
 40094a0:	94400015 	stw	r17,0(r18)
 40094a4:	18800015 	stw	r2,0(r3)
 40094a8:	003fe706 	br	4009448 <__ram_exceptions_end+0xfbfe9200>
 40094ac:	01000804 	movi	r4,32
 40094b0:	2089c83a 	sub	r4,r4,r2
 40094b4:	1908983a 	sll	r4,r3,r4
 40094b8:	d9400117 	ldw	r5,4(sp)
 40094bc:	1886d83a 	srl	r3,r3,r2
 40094c0:	2148b03a 	or	r4,r4,r5
 40094c4:	99000515 	stw	r4,20(r19)
 40094c8:	d8c00015 	stw	r3,0(sp)
 40094cc:	003fca06 	br	40093f8 <__ram_exceptions_end+0xfbfe91b0>

040094d0 <__ratio>:
 40094d0:	defff904 	addi	sp,sp,-28
 40094d4:	dc400315 	stw	r17,12(sp)
 40094d8:	2823883a 	mov	r17,r5
 40094dc:	d9400104 	addi	r5,sp,4
 40094e0:	dfc00615 	stw	ra,24(sp)
 40094e4:	dcc00515 	stw	r19,20(sp)
 40094e8:	dc800415 	stw	r18,16(sp)
 40094ec:	2027883a 	mov	r19,r4
 40094f0:	dc000215 	stw	r16,8(sp)
 40094f4:	40092780 	call	4009278 <__b2d>
 40094f8:	d80b883a 	mov	r5,sp
 40094fc:	8809883a 	mov	r4,r17
 4009500:	1025883a 	mov	r18,r2
 4009504:	1821883a 	mov	r16,r3
 4009508:	40092780 	call	4009278 <__b2d>
 400950c:	8a000417 	ldw	r8,16(r17)
 4009510:	99000417 	ldw	r4,16(r19)
 4009514:	d9400117 	ldw	r5,4(sp)
 4009518:	2209c83a 	sub	r4,r4,r8
 400951c:	2010917a 	slli	r8,r4,5
 4009520:	d9000017 	ldw	r4,0(sp)
 4009524:	2909c83a 	sub	r4,r5,r4
 4009528:	4109883a 	add	r4,r8,r4
 400952c:	01000e0e 	bge	zero,r4,4009568 <__ratio+0x98>
 4009530:	2008953a 	slli	r4,r4,20
 4009534:	2421883a 	add	r16,r4,r16
 4009538:	100d883a 	mov	r6,r2
 400953c:	180f883a 	mov	r7,r3
 4009540:	9009883a 	mov	r4,r18
 4009544:	800b883a 	mov	r5,r16
 4009548:	400e8540 	call	400e854 <__divdf3>
 400954c:	dfc00617 	ldw	ra,24(sp)
 4009550:	dcc00517 	ldw	r19,20(sp)
 4009554:	dc800417 	ldw	r18,16(sp)
 4009558:	dc400317 	ldw	r17,12(sp)
 400955c:	dc000217 	ldw	r16,8(sp)
 4009560:	dec00704 	addi	sp,sp,28
 4009564:	f800283a 	ret
 4009568:	2008953a 	slli	r4,r4,20
 400956c:	1907c83a 	sub	r3,r3,r4
 4009570:	003ff106 	br	4009538 <__ram_exceptions_end+0xfbfe92f0>

04009574 <_mprec_log10>:
 4009574:	defffe04 	addi	sp,sp,-8
 4009578:	dc000015 	stw	r16,0(sp)
 400957c:	dfc00115 	stw	ra,4(sp)
 4009580:	008005c4 	movi	r2,23
 4009584:	2021883a 	mov	r16,r4
 4009588:	11000d0e 	bge	r2,r4,40095c0 <_mprec_log10+0x4c>
 400958c:	0005883a 	mov	r2,zero
 4009590:	00cffc34 	movhi	r3,16368
 4009594:	843fffc4 	addi	r16,r16,-1
 4009598:	000d883a 	mov	r6,zero
 400959c:	01d00934 	movhi	r7,16420
 40095a0:	1009883a 	mov	r4,r2
 40095a4:	180b883a 	mov	r5,r3
 40095a8:	400f3940 	call	400f394 <__muldf3>
 40095ac:	803ff91e 	bne	r16,zero,4009594 <__ram_exceptions_end+0xfbfe934c>
 40095b0:	dfc00117 	ldw	ra,4(sp)
 40095b4:	dc000017 	ldw	r16,0(sp)
 40095b8:	dec00204 	addi	sp,sp,8
 40095bc:	f800283a 	ret
 40095c0:	202090fa 	slli	r16,r4,3
 40095c4:	00810074 	movhi	r2,1025
 40095c8:	10924404 	addi	r2,r2,18704
 40095cc:	1421883a 	add	r16,r2,r16
 40095d0:	80800017 	ldw	r2,0(r16)
 40095d4:	80c00117 	ldw	r3,4(r16)
 40095d8:	dfc00117 	ldw	ra,4(sp)
 40095dc:	dc000017 	ldw	r16,0(sp)
 40095e0:	dec00204 	addi	sp,sp,8
 40095e4:	f800283a 	ret

040095e8 <__copybits>:
 40095e8:	297fffc4 	addi	r5,r5,-1
 40095ec:	280fd17a 	srai	r7,r5,5
 40095f0:	30c00417 	ldw	r3,16(r6)
 40095f4:	30800504 	addi	r2,r6,20
 40095f8:	39c00044 	addi	r7,r7,1
 40095fc:	18c7883a 	add	r3,r3,r3
 4009600:	39cf883a 	add	r7,r7,r7
 4009604:	18c7883a 	add	r3,r3,r3
 4009608:	39cf883a 	add	r7,r7,r7
 400960c:	10c7883a 	add	r3,r2,r3
 4009610:	21cf883a 	add	r7,r4,r7
 4009614:	10c00d2e 	bgeu	r2,r3,400964c <__copybits+0x64>
 4009618:	200b883a 	mov	r5,r4
 400961c:	12000017 	ldw	r8,0(r2)
 4009620:	29400104 	addi	r5,r5,4
 4009624:	10800104 	addi	r2,r2,4
 4009628:	2a3fff15 	stw	r8,-4(r5)
 400962c:	10fffb36 	bltu	r2,r3,400961c <__ram_exceptions_end+0xfbfe93d4>
 4009630:	1985c83a 	sub	r2,r3,r6
 4009634:	10bffac4 	addi	r2,r2,-21
 4009638:	1004d0ba 	srli	r2,r2,2
 400963c:	10800044 	addi	r2,r2,1
 4009640:	1085883a 	add	r2,r2,r2
 4009644:	1085883a 	add	r2,r2,r2
 4009648:	2089883a 	add	r4,r4,r2
 400964c:	21c0032e 	bgeu	r4,r7,400965c <__copybits+0x74>
 4009650:	20000015 	stw	zero,0(r4)
 4009654:	21000104 	addi	r4,r4,4
 4009658:	21fffd36 	bltu	r4,r7,4009650 <__ram_exceptions_end+0xfbfe9408>
 400965c:	f800283a 	ret

04009660 <__any_on>:
 4009660:	20c00417 	ldw	r3,16(r4)
 4009664:	2805d17a 	srai	r2,r5,5
 4009668:	21000504 	addi	r4,r4,20
 400966c:	18800d0e 	bge	r3,r2,40096a4 <__any_on+0x44>
 4009670:	18c7883a 	add	r3,r3,r3
 4009674:	18c7883a 	add	r3,r3,r3
 4009678:	20c7883a 	add	r3,r4,r3
 400967c:	20c0192e 	bgeu	r4,r3,40096e4 <__any_on+0x84>
 4009680:	18bfff17 	ldw	r2,-4(r3)
 4009684:	18ffff04 	addi	r3,r3,-4
 4009688:	1000041e 	bne	r2,zero,400969c <__any_on+0x3c>
 400968c:	20c0142e 	bgeu	r4,r3,40096e0 <__any_on+0x80>
 4009690:	18ffff04 	addi	r3,r3,-4
 4009694:	19400017 	ldw	r5,0(r3)
 4009698:	283ffc26 	beq	r5,zero,400968c <__ram_exceptions_end+0xfbfe9444>
 400969c:	00800044 	movi	r2,1
 40096a0:	f800283a 	ret
 40096a4:	10c00a0e 	bge	r2,r3,40096d0 <__any_on+0x70>
 40096a8:	1085883a 	add	r2,r2,r2
 40096ac:	1085883a 	add	r2,r2,r2
 40096b0:	294007cc 	andi	r5,r5,31
 40096b4:	2087883a 	add	r3,r4,r2
 40096b8:	283ff026 	beq	r5,zero,400967c <__ram_exceptions_end+0xfbfe9434>
 40096bc:	19800017 	ldw	r6,0(r3)
 40096c0:	3144d83a 	srl	r2,r6,r5
 40096c4:	114a983a 	sll	r5,r2,r5
 40096c8:	317ff41e 	bne	r6,r5,400969c <__ram_exceptions_end+0xfbfe9454>
 40096cc:	003feb06 	br	400967c <__ram_exceptions_end+0xfbfe9434>
 40096d0:	1085883a 	add	r2,r2,r2
 40096d4:	1085883a 	add	r2,r2,r2
 40096d8:	2087883a 	add	r3,r4,r2
 40096dc:	003fe706 	br	400967c <__ram_exceptions_end+0xfbfe9434>
 40096e0:	f800283a 	ret
 40096e4:	0005883a 	mov	r2,zero
 40096e8:	f800283a 	ret

040096ec <_putc_r>:
 40096ec:	defffc04 	addi	sp,sp,-16
 40096f0:	dc000215 	stw	r16,8(sp)
 40096f4:	dfc00315 	stw	ra,12(sp)
 40096f8:	2021883a 	mov	r16,r4
 40096fc:	20000226 	beq	r4,zero,4009708 <_putc_r+0x1c>
 4009700:	20800e17 	ldw	r2,56(r4)
 4009704:	10001b26 	beq	r2,zero,4009774 <_putc_r+0x88>
 4009708:	30800217 	ldw	r2,8(r6)
 400970c:	10bfffc4 	addi	r2,r2,-1
 4009710:	30800215 	stw	r2,8(r6)
 4009714:	10000a16 	blt	r2,zero,4009740 <_putc_r+0x54>
 4009718:	30800017 	ldw	r2,0(r6)
 400971c:	11400005 	stb	r5,0(r2)
 4009720:	30800017 	ldw	r2,0(r6)
 4009724:	10c00044 	addi	r3,r2,1
 4009728:	30c00015 	stw	r3,0(r6)
 400972c:	10800003 	ldbu	r2,0(r2)
 4009730:	dfc00317 	ldw	ra,12(sp)
 4009734:	dc000217 	ldw	r16,8(sp)
 4009738:	dec00404 	addi	sp,sp,16
 400973c:	f800283a 	ret
 4009740:	30c00617 	ldw	r3,24(r6)
 4009744:	10c00616 	blt	r2,r3,4009760 <_putc_r+0x74>
 4009748:	30800017 	ldw	r2,0(r6)
 400974c:	00c00284 	movi	r3,10
 4009750:	11400005 	stb	r5,0(r2)
 4009754:	30800017 	ldw	r2,0(r6)
 4009758:	11400003 	ldbu	r5,0(r2)
 400975c:	28fff11e 	bne	r5,r3,4009724 <__ram_exceptions_end+0xfbfe94dc>
 4009760:	8009883a 	mov	r4,r16
 4009764:	dfc00317 	ldw	ra,12(sp)
 4009768:	dc000217 	ldw	r16,8(sp)
 400976c:	dec00404 	addi	sp,sp,16
 4009770:	400ca101 	jmpi	400ca10 <__swbuf_r>
 4009774:	d9400015 	stw	r5,0(sp)
 4009778:	d9800115 	stw	r6,4(sp)
 400977c:	4006cd40 	call	4006cd4 <__sinit>
 4009780:	d9800117 	ldw	r6,4(sp)
 4009784:	d9400017 	ldw	r5,0(sp)
 4009788:	003fdf06 	br	4009708 <__ram_exceptions_end+0xfbfe94c0>

0400978c <putc>:
 400978c:	00810074 	movhi	r2,1025
 4009790:	defffc04 	addi	sp,sp,-16
 4009794:	109a0604 	addi	r2,r2,26648
 4009798:	dc000115 	stw	r16,4(sp)
 400979c:	14000017 	ldw	r16,0(r2)
 40097a0:	dc400215 	stw	r17,8(sp)
 40097a4:	dfc00315 	stw	ra,12(sp)
 40097a8:	2023883a 	mov	r17,r4
 40097ac:	80000226 	beq	r16,zero,40097b8 <putc+0x2c>
 40097b0:	80800e17 	ldw	r2,56(r16)
 40097b4:	10001a26 	beq	r2,zero,4009820 <putc+0x94>
 40097b8:	28800217 	ldw	r2,8(r5)
 40097bc:	10bfffc4 	addi	r2,r2,-1
 40097c0:	28800215 	stw	r2,8(r5)
 40097c4:	10000b16 	blt	r2,zero,40097f4 <putc+0x68>
 40097c8:	28800017 	ldw	r2,0(r5)
 40097cc:	14400005 	stb	r17,0(r2)
 40097d0:	28800017 	ldw	r2,0(r5)
 40097d4:	10c00044 	addi	r3,r2,1
 40097d8:	28c00015 	stw	r3,0(r5)
 40097dc:	10800003 	ldbu	r2,0(r2)
 40097e0:	dfc00317 	ldw	ra,12(sp)
 40097e4:	dc400217 	ldw	r17,8(sp)
 40097e8:	dc000117 	ldw	r16,4(sp)
 40097ec:	dec00404 	addi	sp,sp,16
 40097f0:	f800283a 	ret
 40097f4:	28c00617 	ldw	r3,24(r5)
 40097f8:	10c00e16 	blt	r2,r3,4009834 <putc+0xa8>
 40097fc:	28800017 	ldw	r2,0(r5)
 4009800:	01000284 	movi	r4,10
 4009804:	14400005 	stb	r17,0(r2)
 4009808:	28800017 	ldw	r2,0(r5)
 400980c:	10c00003 	ldbu	r3,0(r2)
 4009810:	193ff01e 	bne	r3,r4,40097d4 <__ram_exceptions_end+0xfbfe958c>
 4009814:	280d883a 	mov	r6,r5
 4009818:	180b883a 	mov	r5,r3
 400981c:	00000706 	br	400983c <putc+0xb0>
 4009820:	8009883a 	mov	r4,r16
 4009824:	d9400015 	stw	r5,0(sp)
 4009828:	4006cd40 	call	4006cd4 <__sinit>
 400982c:	d9400017 	ldw	r5,0(sp)
 4009830:	003fe106 	br	40097b8 <__ram_exceptions_end+0xfbfe9570>
 4009834:	280d883a 	mov	r6,r5
 4009838:	880b883a 	mov	r5,r17
 400983c:	8009883a 	mov	r4,r16
 4009840:	dfc00317 	ldw	ra,12(sp)
 4009844:	dc400217 	ldw	r17,8(sp)
 4009848:	dc000117 	ldw	r16,4(sp)
 400984c:	dec00404 	addi	sp,sp,16
 4009850:	400ca101 	jmpi	400ca10 <__swbuf_r>

04009854 <_realloc_r>:
 4009854:	defff604 	addi	sp,sp,-40
 4009858:	dc800215 	stw	r18,8(sp)
 400985c:	dfc00915 	stw	ra,36(sp)
 4009860:	df000815 	stw	fp,32(sp)
 4009864:	ddc00715 	stw	r23,28(sp)
 4009868:	dd800615 	stw	r22,24(sp)
 400986c:	dd400515 	stw	r21,20(sp)
 4009870:	dd000415 	stw	r20,16(sp)
 4009874:	dcc00315 	stw	r19,12(sp)
 4009878:	dc400115 	stw	r17,4(sp)
 400987c:	dc000015 	stw	r16,0(sp)
 4009880:	3025883a 	mov	r18,r6
 4009884:	2800b726 	beq	r5,zero,4009b64 <_realloc_r+0x310>
 4009888:	282b883a 	mov	r21,r5
 400988c:	2029883a 	mov	r20,r4
 4009890:	4010b8c0 	call	4010b8c <__malloc_lock>
 4009894:	a8bfff17 	ldw	r2,-4(r21)
 4009898:	043fff04 	movi	r16,-4
 400989c:	90c002c4 	addi	r3,r18,11
 40098a0:	01000584 	movi	r4,22
 40098a4:	acfffe04 	addi	r19,r21,-8
 40098a8:	1420703a 	and	r16,r2,r16
 40098ac:	20c0332e 	bgeu	r4,r3,400997c <_realloc_r+0x128>
 40098b0:	047ffe04 	movi	r17,-8
 40098b4:	1c62703a 	and	r17,r3,r17
 40098b8:	8807883a 	mov	r3,r17
 40098bc:	88005816 	blt	r17,zero,4009a20 <_realloc_r+0x1cc>
 40098c0:	8c805736 	bltu	r17,r18,4009a20 <_realloc_r+0x1cc>
 40098c4:	80c0300e 	bge	r16,r3,4009988 <_realloc_r+0x134>
 40098c8:	07010074 	movhi	fp,1025
 40098cc:	e7143104 	addi	fp,fp,20676
 40098d0:	e1c00217 	ldw	r7,8(fp)
 40098d4:	9c09883a 	add	r4,r19,r16
 40098d8:	22000117 	ldw	r8,4(r4)
 40098dc:	21c06326 	beq	r4,r7,4009a6c <_realloc_r+0x218>
 40098e0:	017fff84 	movi	r5,-2
 40098e4:	414a703a 	and	r5,r8,r5
 40098e8:	214b883a 	add	r5,r4,r5
 40098ec:	29800117 	ldw	r6,4(r5)
 40098f0:	3180004c 	andi	r6,r6,1
 40098f4:	30003f26 	beq	r6,zero,40099f4 <_realloc_r+0x1a0>
 40098f8:	1080004c 	andi	r2,r2,1
 40098fc:	10008326 	beq	r2,zero,4009b0c <_realloc_r+0x2b8>
 4009900:	900b883a 	mov	r5,r18
 4009904:	a009883a 	mov	r4,r20
 4009908:	4007a340 	call	4007a34 <_malloc_r>
 400990c:	1025883a 	mov	r18,r2
 4009910:	10011e26 	beq	r2,zero,4009d8c <_realloc_r+0x538>
 4009914:	a93fff17 	ldw	r4,-4(r21)
 4009918:	10fffe04 	addi	r3,r2,-8
 400991c:	00bfff84 	movi	r2,-2
 4009920:	2084703a 	and	r2,r4,r2
 4009924:	9885883a 	add	r2,r19,r2
 4009928:	1880ee26 	beq	r3,r2,4009ce4 <_realloc_r+0x490>
 400992c:	81bfff04 	addi	r6,r16,-4
 4009930:	00800904 	movi	r2,36
 4009934:	1180b836 	bltu	r2,r6,4009c18 <_realloc_r+0x3c4>
 4009938:	00c004c4 	movi	r3,19
 400993c:	19809636 	bltu	r3,r6,4009b98 <_realloc_r+0x344>
 4009940:	9005883a 	mov	r2,r18
 4009944:	a807883a 	mov	r3,r21
 4009948:	19000017 	ldw	r4,0(r3)
 400994c:	11000015 	stw	r4,0(r2)
 4009950:	19000117 	ldw	r4,4(r3)
 4009954:	11000115 	stw	r4,4(r2)
 4009958:	18c00217 	ldw	r3,8(r3)
 400995c:	10c00215 	stw	r3,8(r2)
 4009960:	a80b883a 	mov	r5,r21
 4009964:	a009883a 	mov	r4,r20
 4009968:	4006e480 	call	4006e48 <_free_r>
 400996c:	a009883a 	mov	r4,r20
 4009970:	4010bb00 	call	4010bb0 <__malloc_unlock>
 4009974:	9005883a 	mov	r2,r18
 4009978:	00001206 	br	40099c4 <_realloc_r+0x170>
 400997c:	00c00404 	movi	r3,16
 4009980:	1823883a 	mov	r17,r3
 4009984:	003fce06 	br	40098c0 <__ram_exceptions_end+0xfbfe9678>
 4009988:	a825883a 	mov	r18,r21
 400998c:	8445c83a 	sub	r2,r16,r17
 4009990:	00c003c4 	movi	r3,15
 4009994:	18802636 	bltu	r3,r2,4009a30 <_realloc_r+0x1dc>
 4009998:	99800117 	ldw	r6,4(r19)
 400999c:	9c07883a 	add	r3,r19,r16
 40099a0:	3180004c 	andi	r6,r6,1
 40099a4:	3420b03a 	or	r16,r6,r16
 40099a8:	9c000115 	stw	r16,4(r19)
 40099ac:	18800117 	ldw	r2,4(r3)
 40099b0:	10800054 	ori	r2,r2,1
 40099b4:	18800115 	stw	r2,4(r3)
 40099b8:	a009883a 	mov	r4,r20
 40099bc:	4010bb00 	call	4010bb0 <__malloc_unlock>
 40099c0:	9005883a 	mov	r2,r18
 40099c4:	dfc00917 	ldw	ra,36(sp)
 40099c8:	df000817 	ldw	fp,32(sp)
 40099cc:	ddc00717 	ldw	r23,28(sp)
 40099d0:	dd800617 	ldw	r22,24(sp)
 40099d4:	dd400517 	ldw	r21,20(sp)
 40099d8:	dd000417 	ldw	r20,16(sp)
 40099dc:	dcc00317 	ldw	r19,12(sp)
 40099e0:	dc800217 	ldw	r18,8(sp)
 40099e4:	dc400117 	ldw	r17,4(sp)
 40099e8:	dc000017 	ldw	r16,0(sp)
 40099ec:	dec00a04 	addi	sp,sp,40
 40099f0:	f800283a 	ret
 40099f4:	017fff04 	movi	r5,-4
 40099f8:	414a703a 	and	r5,r8,r5
 40099fc:	814d883a 	add	r6,r16,r5
 4009a00:	30c01f16 	blt	r6,r3,4009a80 <_realloc_r+0x22c>
 4009a04:	20800317 	ldw	r2,12(r4)
 4009a08:	20c00217 	ldw	r3,8(r4)
 4009a0c:	a825883a 	mov	r18,r21
 4009a10:	3021883a 	mov	r16,r6
 4009a14:	18800315 	stw	r2,12(r3)
 4009a18:	10c00215 	stw	r3,8(r2)
 4009a1c:	003fdb06 	br	400998c <__ram_exceptions_end+0xfbfe9744>
 4009a20:	00800304 	movi	r2,12
 4009a24:	a0800015 	stw	r2,0(r20)
 4009a28:	0005883a 	mov	r2,zero
 4009a2c:	003fe506 	br	40099c4 <__ram_exceptions_end+0xfbfe977c>
 4009a30:	98c00117 	ldw	r3,4(r19)
 4009a34:	9c4b883a 	add	r5,r19,r17
 4009a38:	11000054 	ori	r4,r2,1
 4009a3c:	18c0004c 	andi	r3,r3,1
 4009a40:	1c62b03a 	or	r17,r3,r17
 4009a44:	9c400115 	stw	r17,4(r19)
 4009a48:	29000115 	stw	r4,4(r5)
 4009a4c:	2885883a 	add	r2,r5,r2
 4009a50:	10c00117 	ldw	r3,4(r2)
 4009a54:	29400204 	addi	r5,r5,8
 4009a58:	a009883a 	mov	r4,r20
 4009a5c:	18c00054 	ori	r3,r3,1
 4009a60:	10c00115 	stw	r3,4(r2)
 4009a64:	4006e480 	call	4006e48 <_free_r>
 4009a68:	003fd306 	br	40099b8 <__ram_exceptions_end+0xfbfe9770>
 4009a6c:	017fff04 	movi	r5,-4
 4009a70:	414a703a 	and	r5,r8,r5
 4009a74:	89800404 	addi	r6,r17,16
 4009a78:	8151883a 	add	r8,r16,r5
 4009a7c:	4180590e 	bge	r8,r6,4009be4 <_realloc_r+0x390>
 4009a80:	1080004c 	andi	r2,r2,1
 4009a84:	103f9e1e 	bne	r2,zero,4009900 <__ram_exceptions_end+0xfbfe96b8>
 4009a88:	adbffe17 	ldw	r22,-8(r21)
 4009a8c:	00bfff04 	movi	r2,-4
 4009a90:	9dadc83a 	sub	r22,r19,r22
 4009a94:	b1800117 	ldw	r6,4(r22)
 4009a98:	3084703a 	and	r2,r6,r2
 4009a9c:	20002026 	beq	r4,zero,4009b20 <_realloc_r+0x2cc>
 4009aa0:	80af883a 	add	r23,r16,r2
 4009aa4:	b96f883a 	add	r23,r23,r5
 4009aa8:	21c05f26 	beq	r4,r7,4009c28 <_realloc_r+0x3d4>
 4009aac:	b8c01c16 	blt	r23,r3,4009b20 <_realloc_r+0x2cc>
 4009ab0:	20800317 	ldw	r2,12(r4)
 4009ab4:	20c00217 	ldw	r3,8(r4)
 4009ab8:	81bfff04 	addi	r6,r16,-4
 4009abc:	01000904 	movi	r4,36
 4009ac0:	18800315 	stw	r2,12(r3)
 4009ac4:	10c00215 	stw	r3,8(r2)
 4009ac8:	b0c00217 	ldw	r3,8(r22)
 4009acc:	b0800317 	ldw	r2,12(r22)
 4009ad0:	b4800204 	addi	r18,r22,8
 4009ad4:	18800315 	stw	r2,12(r3)
 4009ad8:	10c00215 	stw	r3,8(r2)
 4009adc:	21801b36 	bltu	r4,r6,4009b4c <_realloc_r+0x2f8>
 4009ae0:	008004c4 	movi	r2,19
 4009ae4:	1180352e 	bgeu	r2,r6,4009bbc <_realloc_r+0x368>
 4009ae8:	a8800017 	ldw	r2,0(r21)
 4009aec:	b0800215 	stw	r2,8(r22)
 4009af0:	a8800117 	ldw	r2,4(r21)
 4009af4:	b0800315 	stw	r2,12(r22)
 4009af8:	008006c4 	movi	r2,27
 4009afc:	11807f36 	bltu	r2,r6,4009cfc <_realloc_r+0x4a8>
 4009b00:	b0800404 	addi	r2,r22,16
 4009b04:	ad400204 	addi	r21,r21,8
 4009b08:	00002d06 	br	4009bc0 <_realloc_r+0x36c>
 4009b0c:	adbffe17 	ldw	r22,-8(r21)
 4009b10:	00bfff04 	movi	r2,-4
 4009b14:	9dadc83a 	sub	r22,r19,r22
 4009b18:	b1000117 	ldw	r4,4(r22)
 4009b1c:	2084703a 	and	r2,r4,r2
 4009b20:	b03f7726 	beq	r22,zero,4009900 <__ram_exceptions_end+0xfbfe96b8>
 4009b24:	80af883a 	add	r23,r16,r2
 4009b28:	b8ff7516 	blt	r23,r3,4009900 <__ram_exceptions_end+0xfbfe96b8>
 4009b2c:	b0800317 	ldw	r2,12(r22)
 4009b30:	b0c00217 	ldw	r3,8(r22)
 4009b34:	81bfff04 	addi	r6,r16,-4
 4009b38:	01000904 	movi	r4,36
 4009b3c:	18800315 	stw	r2,12(r3)
 4009b40:	10c00215 	stw	r3,8(r2)
 4009b44:	b4800204 	addi	r18,r22,8
 4009b48:	21bfe52e 	bgeu	r4,r6,4009ae0 <__ram_exceptions_end+0xfbfe9898>
 4009b4c:	a80b883a 	mov	r5,r21
 4009b50:	9009883a 	mov	r4,r18
 4009b54:	400846c0 	call	400846c <memmove>
 4009b58:	b821883a 	mov	r16,r23
 4009b5c:	b027883a 	mov	r19,r22
 4009b60:	003f8a06 	br	400998c <__ram_exceptions_end+0xfbfe9744>
 4009b64:	300b883a 	mov	r5,r6
 4009b68:	dfc00917 	ldw	ra,36(sp)
 4009b6c:	df000817 	ldw	fp,32(sp)
 4009b70:	ddc00717 	ldw	r23,28(sp)
 4009b74:	dd800617 	ldw	r22,24(sp)
 4009b78:	dd400517 	ldw	r21,20(sp)
 4009b7c:	dd000417 	ldw	r20,16(sp)
 4009b80:	dcc00317 	ldw	r19,12(sp)
 4009b84:	dc800217 	ldw	r18,8(sp)
 4009b88:	dc400117 	ldw	r17,4(sp)
 4009b8c:	dc000017 	ldw	r16,0(sp)
 4009b90:	dec00a04 	addi	sp,sp,40
 4009b94:	4007a341 	jmpi	4007a34 <_malloc_r>
 4009b98:	a8c00017 	ldw	r3,0(r21)
 4009b9c:	90c00015 	stw	r3,0(r18)
 4009ba0:	a8c00117 	ldw	r3,4(r21)
 4009ba4:	90c00115 	stw	r3,4(r18)
 4009ba8:	00c006c4 	movi	r3,27
 4009bac:	19804536 	bltu	r3,r6,4009cc4 <_realloc_r+0x470>
 4009bb0:	90800204 	addi	r2,r18,8
 4009bb4:	a8c00204 	addi	r3,r21,8
 4009bb8:	003f6306 	br	4009948 <__ram_exceptions_end+0xfbfe9700>
 4009bbc:	9005883a 	mov	r2,r18
 4009bc0:	a8c00017 	ldw	r3,0(r21)
 4009bc4:	b821883a 	mov	r16,r23
 4009bc8:	b027883a 	mov	r19,r22
 4009bcc:	10c00015 	stw	r3,0(r2)
 4009bd0:	a8c00117 	ldw	r3,4(r21)
 4009bd4:	10c00115 	stw	r3,4(r2)
 4009bd8:	a8c00217 	ldw	r3,8(r21)
 4009bdc:	10c00215 	stw	r3,8(r2)
 4009be0:	003f6a06 	br	400998c <__ram_exceptions_end+0xfbfe9744>
 4009be4:	9c67883a 	add	r19,r19,r17
 4009be8:	4445c83a 	sub	r2,r8,r17
 4009bec:	e4c00215 	stw	r19,8(fp)
 4009bf0:	10800054 	ori	r2,r2,1
 4009bf4:	98800115 	stw	r2,4(r19)
 4009bf8:	a8bfff17 	ldw	r2,-4(r21)
 4009bfc:	a009883a 	mov	r4,r20
 4009c00:	1080004c 	andi	r2,r2,1
 4009c04:	1462b03a 	or	r17,r2,r17
 4009c08:	ac7fff15 	stw	r17,-4(r21)
 4009c0c:	4010bb00 	call	4010bb0 <__malloc_unlock>
 4009c10:	a805883a 	mov	r2,r21
 4009c14:	003f6b06 	br	40099c4 <__ram_exceptions_end+0xfbfe977c>
 4009c18:	a80b883a 	mov	r5,r21
 4009c1c:	9009883a 	mov	r4,r18
 4009c20:	400846c0 	call	400846c <memmove>
 4009c24:	003f4e06 	br	4009960 <__ram_exceptions_end+0xfbfe9718>
 4009c28:	89000404 	addi	r4,r17,16
 4009c2c:	b93fbc16 	blt	r23,r4,4009b20 <__ram_exceptions_end+0xfbfe98d8>
 4009c30:	b0800317 	ldw	r2,12(r22)
 4009c34:	b0c00217 	ldw	r3,8(r22)
 4009c38:	81bfff04 	addi	r6,r16,-4
 4009c3c:	01000904 	movi	r4,36
 4009c40:	18800315 	stw	r2,12(r3)
 4009c44:	10c00215 	stw	r3,8(r2)
 4009c48:	b4800204 	addi	r18,r22,8
 4009c4c:	21804336 	bltu	r4,r6,4009d5c <_realloc_r+0x508>
 4009c50:	008004c4 	movi	r2,19
 4009c54:	11803f2e 	bgeu	r2,r6,4009d54 <_realloc_r+0x500>
 4009c58:	a8800017 	ldw	r2,0(r21)
 4009c5c:	b0800215 	stw	r2,8(r22)
 4009c60:	a8800117 	ldw	r2,4(r21)
 4009c64:	b0800315 	stw	r2,12(r22)
 4009c68:	008006c4 	movi	r2,27
 4009c6c:	11803f36 	bltu	r2,r6,4009d6c <_realloc_r+0x518>
 4009c70:	b0800404 	addi	r2,r22,16
 4009c74:	ad400204 	addi	r21,r21,8
 4009c78:	a8c00017 	ldw	r3,0(r21)
 4009c7c:	10c00015 	stw	r3,0(r2)
 4009c80:	a8c00117 	ldw	r3,4(r21)
 4009c84:	10c00115 	stw	r3,4(r2)
 4009c88:	a8c00217 	ldw	r3,8(r21)
 4009c8c:	10c00215 	stw	r3,8(r2)
 4009c90:	b447883a 	add	r3,r22,r17
 4009c94:	bc45c83a 	sub	r2,r23,r17
 4009c98:	e0c00215 	stw	r3,8(fp)
 4009c9c:	10800054 	ori	r2,r2,1
 4009ca0:	18800115 	stw	r2,4(r3)
 4009ca4:	b0800117 	ldw	r2,4(r22)
 4009ca8:	a009883a 	mov	r4,r20
 4009cac:	1080004c 	andi	r2,r2,1
 4009cb0:	1462b03a 	or	r17,r2,r17
 4009cb4:	b4400115 	stw	r17,4(r22)
 4009cb8:	4010bb00 	call	4010bb0 <__malloc_unlock>
 4009cbc:	9005883a 	mov	r2,r18
 4009cc0:	003f4006 	br	40099c4 <__ram_exceptions_end+0xfbfe977c>
 4009cc4:	a8c00217 	ldw	r3,8(r21)
 4009cc8:	90c00215 	stw	r3,8(r18)
 4009ccc:	a8c00317 	ldw	r3,12(r21)
 4009cd0:	90c00315 	stw	r3,12(r18)
 4009cd4:	30801126 	beq	r6,r2,4009d1c <_realloc_r+0x4c8>
 4009cd8:	90800404 	addi	r2,r18,16
 4009cdc:	a8c00404 	addi	r3,r21,16
 4009ce0:	003f1906 	br	4009948 <__ram_exceptions_end+0xfbfe9700>
 4009ce4:	90ffff17 	ldw	r3,-4(r18)
 4009ce8:	00bfff04 	movi	r2,-4
 4009cec:	a825883a 	mov	r18,r21
 4009cf0:	1884703a 	and	r2,r3,r2
 4009cf4:	80a1883a 	add	r16,r16,r2
 4009cf8:	003f2406 	br	400998c <__ram_exceptions_end+0xfbfe9744>
 4009cfc:	a8800217 	ldw	r2,8(r21)
 4009d00:	b0800415 	stw	r2,16(r22)
 4009d04:	a8800317 	ldw	r2,12(r21)
 4009d08:	b0800515 	stw	r2,20(r22)
 4009d0c:	31000a26 	beq	r6,r4,4009d38 <_realloc_r+0x4e4>
 4009d10:	b0800604 	addi	r2,r22,24
 4009d14:	ad400404 	addi	r21,r21,16
 4009d18:	003fa906 	br	4009bc0 <__ram_exceptions_end+0xfbfe9978>
 4009d1c:	a9000417 	ldw	r4,16(r21)
 4009d20:	90800604 	addi	r2,r18,24
 4009d24:	a8c00604 	addi	r3,r21,24
 4009d28:	91000415 	stw	r4,16(r18)
 4009d2c:	a9000517 	ldw	r4,20(r21)
 4009d30:	91000515 	stw	r4,20(r18)
 4009d34:	003f0406 	br	4009948 <__ram_exceptions_end+0xfbfe9700>
 4009d38:	a8c00417 	ldw	r3,16(r21)
 4009d3c:	ad400604 	addi	r21,r21,24
 4009d40:	b0800804 	addi	r2,r22,32
 4009d44:	b0c00615 	stw	r3,24(r22)
 4009d48:	a8ffff17 	ldw	r3,-4(r21)
 4009d4c:	b0c00715 	stw	r3,28(r22)
 4009d50:	003f9b06 	br	4009bc0 <__ram_exceptions_end+0xfbfe9978>
 4009d54:	9005883a 	mov	r2,r18
 4009d58:	003fc706 	br	4009c78 <__ram_exceptions_end+0xfbfe9a30>
 4009d5c:	a80b883a 	mov	r5,r21
 4009d60:	9009883a 	mov	r4,r18
 4009d64:	400846c0 	call	400846c <memmove>
 4009d68:	003fc906 	br	4009c90 <__ram_exceptions_end+0xfbfe9a48>
 4009d6c:	a8800217 	ldw	r2,8(r21)
 4009d70:	b0800415 	stw	r2,16(r22)
 4009d74:	a8800317 	ldw	r2,12(r21)
 4009d78:	b0800515 	stw	r2,20(r22)
 4009d7c:	31000726 	beq	r6,r4,4009d9c <_realloc_r+0x548>
 4009d80:	b0800604 	addi	r2,r22,24
 4009d84:	ad400404 	addi	r21,r21,16
 4009d88:	003fbb06 	br	4009c78 <__ram_exceptions_end+0xfbfe9a30>
 4009d8c:	a009883a 	mov	r4,r20
 4009d90:	4010bb00 	call	4010bb0 <__malloc_unlock>
 4009d94:	0005883a 	mov	r2,zero
 4009d98:	003f0a06 	br	40099c4 <__ram_exceptions_end+0xfbfe977c>
 4009d9c:	a8c00417 	ldw	r3,16(r21)
 4009da0:	ad400604 	addi	r21,r21,24
 4009da4:	b0800804 	addi	r2,r22,32
 4009da8:	b0c00615 	stw	r3,24(r22)
 4009dac:	a8ffff17 	ldw	r3,-4(r21)
 4009db0:	b0c00715 	stw	r3,28(r22)
 4009db4:	003fb006 	br	4009c78 <__ram_exceptions_end+0xfbfe9a30>

04009db8 <__fpclassifyd>:
 4009db8:	00a00034 	movhi	r2,32768
 4009dbc:	10bfffc4 	addi	r2,r2,-1
 4009dc0:	2884703a 	and	r2,r5,r2
 4009dc4:	10000726 	beq	r2,zero,4009de4 <__fpclassifyd+0x2c>
 4009dc8:	00fffc34 	movhi	r3,65520
 4009dcc:	019ff834 	movhi	r6,32736
 4009dd0:	28c7883a 	add	r3,r5,r3
 4009dd4:	31bfffc4 	addi	r6,r6,-1
 4009dd8:	30c00536 	bltu	r6,r3,4009df0 <__fpclassifyd+0x38>
 4009ddc:	00800104 	movi	r2,4
 4009de0:	f800283a 	ret
 4009de4:	2000021e 	bne	r4,zero,4009df0 <__fpclassifyd+0x38>
 4009de8:	00800084 	movi	r2,2
 4009dec:	f800283a 	ret
 4009df0:	00dffc34 	movhi	r3,32752
 4009df4:	019ff834 	movhi	r6,32736
 4009df8:	28cb883a 	add	r5,r5,r3
 4009dfc:	31bfffc4 	addi	r6,r6,-1
 4009e00:	317ff62e 	bgeu	r6,r5,4009ddc <__ram_exceptions_end+0xfbfe9b94>
 4009e04:	01400434 	movhi	r5,16
 4009e08:	297fffc4 	addi	r5,r5,-1
 4009e0c:	28800236 	bltu	r5,r2,4009e18 <__fpclassifyd+0x60>
 4009e10:	008000c4 	movi	r2,3
 4009e14:	f800283a 	ret
 4009e18:	10c00226 	beq	r2,r3,4009e24 <__fpclassifyd+0x6c>
 4009e1c:	0005883a 	mov	r2,zero
 4009e20:	f800283a 	ret
 4009e24:	2005003a 	cmpeq	r2,r4,zero
 4009e28:	f800283a 	ret

04009e2c <_sbrk_r>:
 4009e2c:	defffd04 	addi	sp,sp,-12
 4009e30:	dc000015 	stw	r16,0(sp)
 4009e34:	040100b4 	movhi	r16,1026
 4009e38:	dc400115 	stw	r17,4(sp)
 4009e3c:	84214304 	addi	r16,r16,-31476
 4009e40:	2023883a 	mov	r17,r4
 4009e44:	2809883a 	mov	r4,r5
 4009e48:	dfc00215 	stw	ra,8(sp)
 4009e4c:	80000015 	stw	zero,0(r16)
 4009e50:	4010d700 	call	4010d70 <sbrk>
 4009e54:	00ffffc4 	movi	r3,-1
 4009e58:	10c00526 	beq	r2,r3,4009e70 <_sbrk_r+0x44>
 4009e5c:	dfc00217 	ldw	ra,8(sp)
 4009e60:	dc400117 	ldw	r17,4(sp)
 4009e64:	dc000017 	ldw	r16,0(sp)
 4009e68:	dec00304 	addi	sp,sp,12
 4009e6c:	f800283a 	ret
 4009e70:	80c00017 	ldw	r3,0(r16)
 4009e74:	183ff926 	beq	r3,zero,4009e5c <__ram_exceptions_end+0xfbfe9c14>
 4009e78:	88c00015 	stw	r3,0(r17)
 4009e7c:	003ff706 	br	4009e5c <__ram_exceptions_end+0xfbfe9c14>

04009e80 <__sread>:
 4009e80:	defffe04 	addi	sp,sp,-8
 4009e84:	dc000015 	stw	r16,0(sp)
 4009e88:	2821883a 	mov	r16,r5
 4009e8c:	2940038f 	ldh	r5,14(r5)
 4009e90:	dfc00115 	stw	ra,4(sp)
 4009e94:	400d0fc0 	call	400d0fc <_read_r>
 4009e98:	10000716 	blt	r2,zero,4009eb8 <__sread+0x38>
 4009e9c:	80c01417 	ldw	r3,80(r16)
 4009ea0:	1887883a 	add	r3,r3,r2
 4009ea4:	80c01415 	stw	r3,80(r16)
 4009ea8:	dfc00117 	ldw	ra,4(sp)
 4009eac:	dc000017 	ldw	r16,0(sp)
 4009eb0:	dec00204 	addi	sp,sp,8
 4009eb4:	f800283a 	ret
 4009eb8:	80c0030b 	ldhu	r3,12(r16)
 4009ebc:	18fbffcc 	andi	r3,r3,61439
 4009ec0:	80c0030d 	sth	r3,12(r16)
 4009ec4:	dfc00117 	ldw	ra,4(sp)
 4009ec8:	dc000017 	ldw	r16,0(sp)
 4009ecc:	dec00204 	addi	sp,sp,8
 4009ed0:	f800283a 	ret

04009ed4 <__seofread>:
 4009ed4:	0005883a 	mov	r2,zero
 4009ed8:	f800283a 	ret

04009edc <__swrite>:
 4009edc:	2880030b 	ldhu	r2,12(r5)
 4009ee0:	defffb04 	addi	sp,sp,-20
 4009ee4:	dcc00315 	stw	r19,12(sp)
 4009ee8:	dc800215 	stw	r18,8(sp)
 4009eec:	dc400115 	stw	r17,4(sp)
 4009ef0:	dc000015 	stw	r16,0(sp)
 4009ef4:	dfc00415 	stw	ra,16(sp)
 4009ef8:	10c0400c 	andi	r3,r2,256
 4009efc:	2821883a 	mov	r16,r5
 4009f00:	2023883a 	mov	r17,r4
 4009f04:	3025883a 	mov	r18,r6
 4009f08:	3827883a 	mov	r19,r7
 4009f0c:	18000526 	beq	r3,zero,4009f24 <__swrite+0x48>
 4009f10:	2940038f 	ldh	r5,14(r5)
 4009f14:	01c00084 	movi	r7,2
 4009f18:	000d883a 	mov	r6,zero
 4009f1c:	400d09c0 	call	400d09c <_lseek_r>
 4009f20:	8080030b 	ldhu	r2,12(r16)
 4009f24:	8140038f 	ldh	r5,14(r16)
 4009f28:	10bbffcc 	andi	r2,r2,61439
 4009f2c:	980f883a 	mov	r7,r19
 4009f30:	900d883a 	mov	r6,r18
 4009f34:	8809883a 	mov	r4,r17
 4009f38:	8080030d 	sth	r2,12(r16)
 4009f3c:	dfc00417 	ldw	ra,16(sp)
 4009f40:	dcc00317 	ldw	r19,12(sp)
 4009f44:	dc800217 	ldw	r18,8(sp)
 4009f48:	dc400117 	ldw	r17,4(sp)
 4009f4c:	dc000017 	ldw	r16,0(sp)
 4009f50:	dec00504 	addi	sp,sp,20
 4009f54:	400cb681 	jmpi	400cb68 <_write_r>

04009f58 <__sseek>:
 4009f58:	defffe04 	addi	sp,sp,-8
 4009f5c:	dc000015 	stw	r16,0(sp)
 4009f60:	2821883a 	mov	r16,r5
 4009f64:	2940038f 	ldh	r5,14(r5)
 4009f68:	dfc00115 	stw	ra,4(sp)
 4009f6c:	400d09c0 	call	400d09c <_lseek_r>
 4009f70:	00ffffc4 	movi	r3,-1
 4009f74:	10c00826 	beq	r2,r3,4009f98 <__sseek+0x40>
 4009f78:	80c0030b 	ldhu	r3,12(r16)
 4009f7c:	80801415 	stw	r2,80(r16)
 4009f80:	18c40014 	ori	r3,r3,4096
 4009f84:	80c0030d 	sth	r3,12(r16)
 4009f88:	dfc00117 	ldw	ra,4(sp)
 4009f8c:	dc000017 	ldw	r16,0(sp)
 4009f90:	dec00204 	addi	sp,sp,8
 4009f94:	f800283a 	ret
 4009f98:	80c0030b 	ldhu	r3,12(r16)
 4009f9c:	18fbffcc 	andi	r3,r3,61439
 4009fa0:	80c0030d 	sth	r3,12(r16)
 4009fa4:	dfc00117 	ldw	ra,4(sp)
 4009fa8:	dc000017 	ldw	r16,0(sp)
 4009fac:	dec00204 	addi	sp,sp,8
 4009fb0:	f800283a 	ret

04009fb4 <__sclose>:
 4009fb4:	2940038f 	ldh	r5,14(r5)
 4009fb8:	400cbc81 	jmpi	400cbc8 <_close_r>

04009fbc <__ssprint_r>:
 4009fbc:	30800217 	ldw	r2,8(r6)
 4009fc0:	defff604 	addi	sp,sp,-40
 4009fc4:	dc800215 	stw	r18,8(sp)
 4009fc8:	dfc00915 	stw	ra,36(sp)
 4009fcc:	df000815 	stw	fp,32(sp)
 4009fd0:	ddc00715 	stw	r23,28(sp)
 4009fd4:	dd800615 	stw	r22,24(sp)
 4009fd8:	dd400515 	stw	r21,20(sp)
 4009fdc:	dd000415 	stw	r20,16(sp)
 4009fe0:	dcc00315 	stw	r19,12(sp)
 4009fe4:	dc400115 	stw	r17,4(sp)
 4009fe8:	dc000015 	stw	r16,0(sp)
 4009fec:	3025883a 	mov	r18,r6
 4009ff0:	10005826 	beq	r2,zero,400a154 <__ssprint_r+0x198>
 4009ff4:	2027883a 	mov	r19,r4
 4009ff8:	35c00017 	ldw	r23,0(r6)
 4009ffc:	29000017 	ldw	r4,0(r5)
 400a000:	28800217 	ldw	r2,8(r5)
 400a004:	2823883a 	mov	r17,r5
 400a008:	0039883a 	mov	fp,zero
 400a00c:	0021883a 	mov	r16,zero
 400a010:	80003926 	beq	r16,zero,400a0f8 <__ssprint_r+0x13c>
 400a014:	102b883a 	mov	r21,r2
 400a018:	102d883a 	mov	r22,r2
 400a01c:	80803a36 	bltu	r16,r2,400a108 <__ssprint_r+0x14c>
 400a020:	88c0030b 	ldhu	r3,12(r17)
 400a024:	1881200c 	andi	r2,r3,1152
 400a028:	10002626 	beq	r2,zero,400a0c4 <__ssprint_r+0x108>
 400a02c:	88800517 	ldw	r2,20(r17)
 400a030:	89400417 	ldw	r5,16(r17)
 400a034:	81800044 	addi	r6,r16,1
 400a038:	108f883a 	add	r7,r2,r2
 400a03c:	3885883a 	add	r2,r7,r2
 400a040:	100ed7fa 	srli	r7,r2,31
 400a044:	216dc83a 	sub	r22,r4,r5
 400a048:	3589883a 	add	r4,r6,r22
 400a04c:	3885883a 	add	r2,r7,r2
 400a050:	102bd07a 	srai	r21,r2,1
 400a054:	a80d883a 	mov	r6,r21
 400a058:	a900022e 	bgeu	r21,r4,400a064 <__ssprint_r+0xa8>
 400a05c:	202b883a 	mov	r21,r4
 400a060:	200d883a 	mov	r6,r4
 400a064:	18c1000c 	andi	r3,r3,1024
 400a068:	18002a26 	beq	r3,zero,400a114 <__ssprint_r+0x158>
 400a06c:	300b883a 	mov	r5,r6
 400a070:	9809883a 	mov	r4,r19
 400a074:	4007a340 	call	4007a34 <_malloc_r>
 400a078:	1029883a 	mov	r20,r2
 400a07c:	10002c26 	beq	r2,zero,400a130 <__ssprint_r+0x174>
 400a080:	89400417 	ldw	r5,16(r17)
 400a084:	b00d883a 	mov	r6,r22
 400a088:	1009883a 	mov	r4,r2
 400a08c:	40083240 	call	4008324 <memcpy>
 400a090:	8880030b 	ldhu	r2,12(r17)
 400a094:	00fedfc4 	movi	r3,-1153
 400a098:	10c4703a 	and	r2,r2,r3
 400a09c:	10802014 	ori	r2,r2,128
 400a0a0:	8880030d 	sth	r2,12(r17)
 400a0a4:	a589883a 	add	r4,r20,r22
 400a0a8:	adadc83a 	sub	r22,r21,r22
 400a0ac:	8d400515 	stw	r21,20(r17)
 400a0b0:	8d800215 	stw	r22,8(r17)
 400a0b4:	8d000415 	stw	r20,16(r17)
 400a0b8:	89000015 	stw	r4,0(r17)
 400a0bc:	802b883a 	mov	r21,r16
 400a0c0:	802d883a 	mov	r22,r16
 400a0c4:	b00d883a 	mov	r6,r22
 400a0c8:	e00b883a 	mov	r5,fp
 400a0cc:	400846c0 	call	400846c <memmove>
 400a0d0:	88800217 	ldw	r2,8(r17)
 400a0d4:	89000017 	ldw	r4,0(r17)
 400a0d8:	90c00217 	ldw	r3,8(r18)
 400a0dc:	1545c83a 	sub	r2,r2,r21
 400a0e0:	2589883a 	add	r4,r4,r22
 400a0e4:	88800215 	stw	r2,8(r17)
 400a0e8:	89000015 	stw	r4,0(r17)
 400a0ec:	1c21c83a 	sub	r16,r3,r16
 400a0f0:	94000215 	stw	r16,8(r18)
 400a0f4:	80001726 	beq	r16,zero,400a154 <__ssprint_r+0x198>
 400a0f8:	bf000017 	ldw	fp,0(r23)
 400a0fc:	bc000117 	ldw	r16,4(r23)
 400a100:	bdc00204 	addi	r23,r23,8
 400a104:	003fc206 	br	400a010 <__ram_exceptions_end+0xfbfe9dc8>
 400a108:	802b883a 	mov	r21,r16
 400a10c:	802d883a 	mov	r22,r16
 400a110:	003fec06 	br	400a0c4 <__ram_exceptions_end+0xfbfe9e7c>
 400a114:	9809883a 	mov	r4,r19
 400a118:	40098540 	call	4009854 <_realloc_r>
 400a11c:	1029883a 	mov	r20,r2
 400a120:	103fe01e 	bne	r2,zero,400a0a4 <__ram_exceptions_end+0xfbfe9e5c>
 400a124:	89400417 	ldw	r5,16(r17)
 400a128:	9809883a 	mov	r4,r19
 400a12c:	4006e480 	call	4006e48 <_free_r>
 400a130:	88c0030b 	ldhu	r3,12(r17)
 400a134:	00800304 	movi	r2,12
 400a138:	98800015 	stw	r2,0(r19)
 400a13c:	18c01014 	ori	r3,r3,64
 400a140:	88c0030d 	sth	r3,12(r17)
 400a144:	00bfffc4 	movi	r2,-1
 400a148:	90000215 	stw	zero,8(r18)
 400a14c:	90000115 	stw	zero,4(r18)
 400a150:	00000206 	br	400a15c <__ssprint_r+0x1a0>
 400a154:	90000115 	stw	zero,4(r18)
 400a158:	0005883a 	mov	r2,zero
 400a15c:	dfc00917 	ldw	ra,36(sp)
 400a160:	df000817 	ldw	fp,32(sp)
 400a164:	ddc00717 	ldw	r23,28(sp)
 400a168:	dd800617 	ldw	r22,24(sp)
 400a16c:	dd400517 	ldw	r21,20(sp)
 400a170:	dd000417 	ldw	r20,16(sp)
 400a174:	dcc00317 	ldw	r19,12(sp)
 400a178:	dc800217 	ldw	r18,8(sp)
 400a17c:	dc400117 	ldw	r17,4(sp)
 400a180:	dc000017 	ldw	r16,0(sp)
 400a184:	dec00a04 	addi	sp,sp,40
 400a188:	f800283a 	ret

0400a18c <___svfiprintf_internal_r>:
 400a18c:	2880030b 	ldhu	r2,12(r5)
 400a190:	deffc804 	addi	sp,sp,-224
 400a194:	dcc03115 	stw	r19,196(sp)
 400a198:	dfc03715 	stw	ra,220(sp)
 400a19c:	df003615 	stw	fp,216(sp)
 400a1a0:	ddc03515 	stw	r23,212(sp)
 400a1a4:	dd803415 	stw	r22,208(sp)
 400a1a8:	dd403315 	stw	r21,204(sp)
 400a1ac:	dd003215 	stw	r20,200(sp)
 400a1b0:	dc803015 	stw	r18,192(sp)
 400a1b4:	dc402f15 	stw	r17,188(sp)
 400a1b8:	dc002e15 	stw	r16,184(sp)
 400a1bc:	d9402715 	stw	r5,156(sp)
 400a1c0:	d9002a15 	stw	r4,168(sp)
 400a1c4:	1080200c 	andi	r2,r2,128
 400a1c8:	d9c02315 	stw	r7,140(sp)
 400a1cc:	3027883a 	mov	r19,r6
 400a1d0:	10000226 	beq	r2,zero,400a1dc <___svfiprintf_internal_r+0x50>
 400a1d4:	28800417 	ldw	r2,16(r5)
 400a1d8:	10041d26 	beq	r2,zero,400b250 <___svfiprintf_internal_r+0x10c4>
 400a1dc:	dac01a04 	addi	r11,sp,104
 400a1e0:	dac01e15 	stw	r11,120(sp)
 400a1e4:	d8801e17 	ldw	r2,120(sp)
 400a1e8:	dac019c4 	addi	r11,sp,103
 400a1ec:	dd402a17 	ldw	r21,168(sp)
 400a1f0:	ddc02717 	ldw	r23,156(sp)
 400a1f4:	05810074 	movhi	r22,1025
 400a1f8:	05010074 	movhi	r20,1025
 400a1fc:	dac01f15 	stw	r11,124(sp)
 400a200:	12d7c83a 	sub	r11,r2,r11
 400a204:	b5927a04 	addi	r22,r22,18920
 400a208:	a5127604 	addi	r20,r20,18904
 400a20c:	dec01a15 	stw	sp,104(sp)
 400a210:	d8001c15 	stw	zero,112(sp)
 400a214:	d8001b15 	stw	zero,108(sp)
 400a218:	d811883a 	mov	r8,sp
 400a21c:	d8002915 	stw	zero,164(sp)
 400a220:	d8002515 	stw	zero,148(sp)
 400a224:	dac02b15 	stw	r11,172(sp)
 400a228:	98800007 	ldb	r2,0(r19)
 400a22c:	1002dd26 	beq	r2,zero,400ada4 <___svfiprintf_internal_r+0xc18>
 400a230:	00c00944 	movi	r3,37
 400a234:	9823883a 	mov	r17,r19
 400a238:	10c0021e 	bne	r2,r3,400a244 <___svfiprintf_internal_r+0xb8>
 400a23c:	00001406 	br	400a290 <___svfiprintf_internal_r+0x104>
 400a240:	10c00326 	beq	r2,r3,400a250 <___svfiprintf_internal_r+0xc4>
 400a244:	8c400044 	addi	r17,r17,1
 400a248:	88800007 	ldb	r2,0(r17)
 400a24c:	103ffc1e 	bne	r2,zero,400a240 <__ram_exceptions_end+0xfbfe9ff8>
 400a250:	8ce1c83a 	sub	r16,r17,r19
 400a254:	80000e26 	beq	r16,zero,400a290 <___svfiprintf_internal_r+0x104>
 400a258:	d8c01c17 	ldw	r3,112(sp)
 400a25c:	d8801b17 	ldw	r2,108(sp)
 400a260:	44c00015 	stw	r19,0(r8)
 400a264:	1c07883a 	add	r3,r3,r16
 400a268:	10800044 	addi	r2,r2,1
 400a26c:	d8c01c15 	stw	r3,112(sp)
 400a270:	44000115 	stw	r16,4(r8)
 400a274:	d8801b15 	stw	r2,108(sp)
 400a278:	00c001c4 	movi	r3,7
 400a27c:	18831e16 	blt	r3,r2,400aef8 <___svfiprintf_internal_r+0xd6c>
 400a280:	42000204 	addi	r8,r8,8
 400a284:	dac02517 	ldw	r11,148(sp)
 400a288:	5c17883a 	add	r11,r11,r16
 400a28c:	dac02515 	stw	r11,148(sp)
 400a290:	88800007 	ldb	r2,0(r17)
 400a294:	1002c526 	beq	r2,zero,400adac <___svfiprintf_internal_r+0xc20>
 400a298:	88c00047 	ldb	r3,1(r17)
 400a29c:	8cc00044 	addi	r19,r17,1
 400a2a0:	d8001d85 	stb	zero,118(sp)
 400a2a4:	0009883a 	mov	r4,zero
 400a2a8:	000f883a 	mov	r7,zero
 400a2ac:	043fffc4 	movi	r16,-1
 400a2b0:	d8002415 	stw	zero,144(sp)
 400a2b4:	0025883a 	mov	r18,zero
 400a2b8:	01401604 	movi	r5,88
 400a2bc:	01800244 	movi	r6,9
 400a2c0:	02800a84 	movi	r10,42
 400a2c4:	02401b04 	movi	r9,108
 400a2c8:	9cc00044 	addi	r19,r19,1
 400a2cc:	18bff804 	addi	r2,r3,-32
 400a2d0:	2881dd36 	bltu	r5,r2,400aa48 <___svfiprintf_internal_r+0x8bc>
 400a2d4:	100490ba 	slli	r2,r2,2
 400a2d8:	02c10074 	movhi	r11,1025
 400a2dc:	5ae8bb04 	addi	r11,r11,-23828
 400a2e0:	12c5883a 	add	r2,r2,r11
 400a2e4:	10800017 	ldw	r2,0(r2)
 400a2e8:	1000683a 	jmp	r2
 400a2ec:	0400a4e8 	cmpgeui	r16,zero,659
 400a2f0:	0400aa48 	cmpgei	r16,zero,681
 400a2f4:	0400aa48 	cmpgei	r16,zero,681
 400a2f8:	0400a4dc 	xori	r16,zero,659
 400a2fc:	0400aa48 	cmpgei	r16,zero,681
 400a300:	0400aa48 	cmpgei	r16,zero,681
 400a304:	0400aa48 	cmpgei	r16,zero,681
 400a308:	0400aa48 	cmpgei	r16,zero,681
 400a30c:	0400aa48 	cmpgei	r16,zero,681
 400a310:	0400aa48 	cmpgei	r16,zero,681
 400a314:	0400a450 	cmplti	r16,zero,657
 400a318:	0400a62c 	andhi	r16,zero,664
 400a31c:	0400aa48 	cmpgei	r16,zero,681
 400a320:	0400a47c 	xorhi	r16,zero,657
 400a324:	0400aa7c 	xorhi	r16,zero,681
 400a328:	0400aa48 	cmpgei	r16,zero,681
 400a32c:	0400aa70 	cmpltui	r16,zero,681
 400a330:	0400aa10 	cmplti	r16,zero,680
 400a334:	0400aa10 	cmplti	r16,zero,680
 400a338:	0400aa10 	cmplti	r16,zero,680
 400a33c:	0400aa10 	cmplti	r16,zero,680
 400a340:	0400aa10 	cmplti	r16,zero,680
 400a344:	0400aa10 	cmplti	r16,zero,680
 400a348:	0400aa10 	cmplti	r16,zero,680
 400a34c:	0400aa10 	cmplti	r16,zero,680
 400a350:	0400aa10 	cmplti	r16,zero,680
 400a354:	0400aa48 	cmpgei	r16,zero,681
 400a358:	0400aa48 	cmpgei	r16,zero,681
 400a35c:	0400aa48 	cmpgei	r16,zero,681
 400a360:	0400aa48 	cmpgei	r16,zero,681
 400a364:	0400aa48 	cmpgei	r16,zero,681
 400a368:	0400aa48 	cmpgei	r16,zero,681
 400a36c:	0400aa48 	cmpgei	r16,zero,681
 400a370:	0400aa48 	cmpgei	r16,zero,681
 400a374:	0400aa48 	cmpgei	r16,zero,681
 400a378:	0400aa48 	cmpgei	r16,zero,681
 400a37c:	0400a9ac 	andhi	r16,zero,678
 400a380:	0400aa48 	cmpgei	r16,zero,681
 400a384:	0400aa48 	cmpgei	r16,zero,681
 400a388:	0400aa48 	cmpgei	r16,zero,681
 400a38c:	0400aa48 	cmpgei	r16,zero,681
 400a390:	0400aa48 	cmpgei	r16,zero,681
 400a394:	0400aa48 	cmpgei	r16,zero,681
 400a398:	0400aa48 	cmpgei	r16,zero,681
 400a39c:	0400aa48 	cmpgei	r16,zero,681
 400a3a0:	0400aa48 	cmpgei	r16,zero,681
 400a3a4:	0400aa48 	cmpgei	r16,zero,681
 400a3a8:	0400ab24 	muli	r16,zero,684
 400a3ac:	0400aa48 	cmpgei	r16,zero,681
 400a3b0:	0400aa48 	cmpgei	r16,zero,681
 400a3b4:	0400aa48 	cmpgei	r16,zero,681
 400a3b8:	0400aa48 	cmpgei	r16,zero,681
 400a3bc:	0400aa48 	cmpgei	r16,zero,681
 400a3c0:	0400aabc 	xorhi	r16,zero,682
 400a3c4:	0400aa48 	cmpgei	r16,zero,681
 400a3c8:	0400aa48 	cmpgei	r16,zero,681
 400a3cc:	0400a7f0 	cmpltui	r16,zero,671
 400a3d0:	0400aa48 	cmpgei	r16,zero,681
 400a3d4:	0400aa48 	cmpgei	r16,zero,681
 400a3d8:	0400aa48 	cmpgei	r16,zero,681
 400a3dc:	0400aa48 	cmpgei	r16,zero,681
 400a3e0:	0400aa48 	cmpgei	r16,zero,681
 400a3e4:	0400aa48 	cmpgei	r16,zero,681
 400a3e8:	0400aa48 	cmpgei	r16,zero,681
 400a3ec:	0400aa48 	cmpgei	r16,zero,681
 400a3f0:	0400aa48 	cmpgei	r16,zero,681
 400a3f4:	0400aa48 	cmpgei	r16,zero,681
 400a3f8:	0400a6e0 	cmpeqi	r16,zero,667
 400a3fc:	0400a88c 	andi	r16,zero,674
 400a400:	0400aa48 	cmpgei	r16,zero,681
 400a404:	0400aa48 	cmpgei	r16,zero,681
 400a408:	0400aa48 	cmpgei	r16,zero,681
 400a40c:	0400a880 	call	400a88 <__alt_mem_SDRAM-0x3bff578>
 400a410:	0400a88c 	andi	r16,zero,674
 400a414:	0400aa48 	cmpgei	r16,zero,681
 400a418:	0400aa48 	cmpgei	r16,zero,681
 400a41c:	0400a870 	cmpltui	r16,zero,673
 400a420:	0400aa48 	cmpgei	r16,zero,681
 400a424:	0400a834 	movhi	r16,672
 400a428:	0400a63c 	xorhi	r16,zero,664
 400a42c:	0400a488 	cmpgei	r16,zero,658
 400a430:	0400a9a0 	cmpeqi	r16,zero,678
 400a434:	0400aa48 	cmpgei	r16,zero,681
 400a438:	0400a954 	movui	r16,677
 400a43c:	0400aa48 	cmpgei	r16,zero,681
 400a440:	0400a5ac 	andhi	r16,zero,662
 400a444:	0400aa48 	cmpgei	r16,zero,681
 400a448:	0400aa48 	cmpgei	r16,zero,681
 400a44c:	0400a508 	cmpgei	r16,zero,660
 400a450:	dac02317 	ldw	r11,140(sp)
 400a454:	5ac00017 	ldw	r11,0(r11)
 400a458:	dac02415 	stw	r11,144(sp)
 400a45c:	dac02317 	ldw	r11,140(sp)
 400a460:	58800104 	addi	r2,r11,4
 400a464:	dac02417 	ldw	r11,144(sp)
 400a468:	5802e90e 	bge	r11,zero,400b010 <___svfiprintf_internal_r+0xe84>
 400a46c:	dac02417 	ldw	r11,144(sp)
 400a470:	d8802315 	stw	r2,140(sp)
 400a474:	02d7c83a 	sub	r11,zero,r11
 400a478:	dac02415 	stw	r11,144(sp)
 400a47c:	94800114 	ori	r18,r18,4
 400a480:	98c00007 	ldb	r3,0(r19)
 400a484:	003f9006 	br	400a2c8 <__ram_exceptions_end+0xfbfea080>
 400a488:	00800c04 	movi	r2,48
 400a48c:	dac02317 	ldw	r11,140(sp)
 400a490:	d8801d05 	stb	r2,116(sp)
 400a494:	00801e04 	movi	r2,120
 400a498:	d8801d45 	stb	r2,117(sp)
 400a49c:	d8001d85 	stb	zero,118(sp)
 400a4a0:	58c00104 	addi	r3,r11,4
 400a4a4:	5f000017 	ldw	fp,0(r11)
 400a4a8:	0013883a 	mov	r9,zero
 400a4ac:	90800094 	ori	r2,r18,2
 400a4b0:	80032b16 	blt	r16,zero,400b160 <___svfiprintf_internal_r+0xfd4>
 400a4b4:	00bfdfc4 	movi	r2,-129
 400a4b8:	90a4703a 	and	r18,r18,r2
 400a4bc:	d8c02315 	stw	r3,140(sp)
 400a4c0:	94800094 	ori	r18,r18,2
 400a4c4:	e002dc26 	beq	fp,zero,400b038 <___svfiprintf_internal_r+0xeac>
 400a4c8:	01010074 	movhi	r4,1025
 400a4cc:	21120d04 	addi	r4,r4,18484
 400a4d0:	0015883a 	mov	r10,zero
 400a4d4:	d9002915 	stw	r4,164(sp)
 400a4d8:	00002306 	br	400a568 <___svfiprintf_internal_r+0x3dc>
 400a4dc:	94800054 	ori	r18,r18,1
 400a4e0:	98c00007 	ldb	r3,0(r19)
 400a4e4:	003f7806 	br	400a2c8 <__ram_exceptions_end+0xfbfea080>
 400a4e8:	38803fcc 	andi	r2,r7,255
 400a4ec:	1080201c 	xori	r2,r2,128
 400a4f0:	10bfe004 	addi	r2,r2,-128
 400a4f4:	1002f31e 	bne	r2,zero,400b0c4 <___svfiprintf_internal_r+0xf38>
 400a4f8:	01000044 	movi	r4,1
 400a4fc:	01c00804 	movi	r7,32
 400a500:	98c00007 	ldb	r3,0(r19)
 400a504:	003f7006 	br	400a2c8 <__ram_exceptions_end+0xfbfea080>
 400a508:	21003fcc 	andi	r4,r4,255
 400a50c:	2003aa1e 	bne	r4,zero,400b3b8 <___svfiprintf_internal_r+0x122c>
 400a510:	00810074 	movhi	r2,1025
 400a514:	10920d04 	addi	r2,r2,18484
 400a518:	d8802915 	stw	r2,164(sp)
 400a51c:	9080080c 	andi	r2,r18,32
 400a520:	1000ba26 	beq	r2,zero,400a80c <___svfiprintf_internal_r+0x680>
 400a524:	dac02317 	ldw	r11,140(sp)
 400a528:	5f000017 	ldw	fp,0(r11)
 400a52c:	5a400117 	ldw	r9,4(r11)
 400a530:	5ac00204 	addi	r11,r11,8
 400a534:	dac02315 	stw	r11,140(sp)
 400a538:	9080004c 	andi	r2,r18,1
 400a53c:	10029026 	beq	r2,zero,400af80 <___svfiprintf_internal_r+0xdf4>
 400a540:	e244b03a 	or	r2,fp,r9
 400a544:	1002d41e 	bne	r2,zero,400b098 <___svfiprintf_internal_r+0xf0c>
 400a548:	d8001d85 	stb	zero,118(sp)
 400a54c:	80030b16 	blt	r16,zero,400b17c <___svfiprintf_internal_r+0xff0>
 400a550:	00bfdfc4 	movi	r2,-129
 400a554:	90a4703a 	and	r18,r18,r2
 400a558:	0015883a 	mov	r10,zero
 400a55c:	80002426 	beq	r16,zero,400a5f0 <___svfiprintf_internal_r+0x464>
 400a560:	0039883a 	mov	fp,zero
 400a564:	0013883a 	mov	r9,zero
 400a568:	d9002917 	ldw	r4,164(sp)
 400a56c:	dc401a04 	addi	r17,sp,104
 400a570:	e08003cc 	andi	r2,fp,15
 400a574:	4806973a 	slli	r3,r9,28
 400a578:	2085883a 	add	r2,r4,r2
 400a57c:	e038d13a 	srli	fp,fp,4
 400a580:	10800003 	ldbu	r2,0(r2)
 400a584:	4812d13a 	srli	r9,r9,4
 400a588:	8c7fffc4 	addi	r17,r17,-1
 400a58c:	1f38b03a 	or	fp,r3,fp
 400a590:	88800005 	stb	r2,0(r17)
 400a594:	e244b03a 	or	r2,fp,r9
 400a598:	103ff51e 	bne	r2,zero,400a570 <__ram_exceptions_end+0xfbfea328>
 400a59c:	dac01e17 	ldw	r11,120(sp)
 400a5a0:	5c57c83a 	sub	r11,r11,r17
 400a5a4:	dac02115 	stw	r11,132(sp)
 400a5a8:	00001406 	br	400a5fc <___svfiprintf_internal_r+0x470>
 400a5ac:	21003fcc 	andi	r4,r4,255
 400a5b0:	2003741e 	bne	r4,zero,400b384 <___svfiprintf_internal_r+0x11f8>
 400a5b4:	9080080c 	andi	r2,r18,32
 400a5b8:	10014526 	beq	r2,zero,400aad0 <___svfiprintf_internal_r+0x944>
 400a5bc:	dac02317 	ldw	r11,140(sp)
 400a5c0:	d8001d85 	stb	zero,118(sp)
 400a5c4:	58c00204 	addi	r3,r11,8
 400a5c8:	5f000017 	ldw	fp,0(r11)
 400a5cc:	5a400117 	ldw	r9,4(r11)
 400a5d0:	8002d916 	blt	r16,zero,400b138 <___svfiprintf_internal_r+0xfac>
 400a5d4:	013fdfc4 	movi	r4,-129
 400a5d8:	e244b03a 	or	r2,fp,r9
 400a5dc:	d8c02315 	stw	r3,140(sp)
 400a5e0:	9124703a 	and	r18,r18,r4
 400a5e4:	0015883a 	mov	r10,zero
 400a5e8:	1000b91e 	bne	r2,zero,400a8d0 <___svfiprintf_internal_r+0x744>
 400a5ec:	8002e61e 	bne	r16,zero,400b188 <___svfiprintf_internal_r+0xffc>
 400a5f0:	0021883a 	mov	r16,zero
 400a5f4:	d8002115 	stw	zero,132(sp)
 400a5f8:	dc401a04 	addi	r17,sp,104
 400a5fc:	d8c02117 	ldw	r3,132(sp)
 400a600:	dc002015 	stw	r16,128(sp)
 400a604:	80c0010e 	bge	r16,r3,400a60c <___svfiprintf_internal_r+0x480>
 400a608:	d8c02015 	stw	r3,128(sp)
 400a60c:	52803fcc 	andi	r10,r10,255
 400a610:	5280201c 	xori	r10,r10,128
 400a614:	52bfe004 	addi	r10,r10,-128
 400a618:	50003c26 	beq	r10,zero,400a70c <___svfiprintf_internal_r+0x580>
 400a61c:	dac02017 	ldw	r11,128(sp)
 400a620:	5ac00044 	addi	r11,r11,1
 400a624:	dac02015 	stw	r11,128(sp)
 400a628:	00003806 	br	400a70c <___svfiprintf_internal_r+0x580>
 400a62c:	01000044 	movi	r4,1
 400a630:	01c00ac4 	movi	r7,43
 400a634:	98c00007 	ldb	r3,0(r19)
 400a638:	003f2306 	br	400a2c8 <__ram_exceptions_end+0xfbfea080>
 400a63c:	21003fcc 	andi	r4,r4,255
 400a640:	2003481e 	bne	r4,zero,400b364 <___svfiprintf_internal_r+0x11d8>
 400a644:	9080080c 	andi	r2,r18,32
 400a648:	10013b26 	beq	r2,zero,400ab38 <___svfiprintf_internal_r+0x9ac>
 400a64c:	dac02317 	ldw	r11,140(sp)
 400a650:	d8001d85 	stb	zero,118(sp)
 400a654:	58800204 	addi	r2,r11,8
 400a658:	5f000017 	ldw	fp,0(r11)
 400a65c:	5a400117 	ldw	r9,4(r11)
 400a660:	8002a816 	blt	r16,zero,400b104 <___svfiprintf_internal_r+0xf78>
 400a664:	013fdfc4 	movi	r4,-129
 400a668:	e246b03a 	or	r3,fp,r9
 400a66c:	d8802315 	stw	r2,140(sp)
 400a670:	9124703a 	and	r18,r18,r4
 400a674:	18013c26 	beq	r3,zero,400ab68 <___svfiprintf_internal_r+0x9dc>
 400a678:	0015883a 	mov	r10,zero
 400a67c:	dc401a04 	addi	r17,sp,104
 400a680:	e006d0fa 	srli	r3,fp,3
 400a684:	4808977a 	slli	r4,r9,29
 400a688:	4812d0fa 	srli	r9,r9,3
 400a68c:	e70001cc 	andi	fp,fp,7
 400a690:	e0800c04 	addi	r2,fp,48
 400a694:	8c7fffc4 	addi	r17,r17,-1
 400a698:	20f8b03a 	or	fp,r4,r3
 400a69c:	88800005 	stb	r2,0(r17)
 400a6a0:	e246b03a 	or	r3,fp,r9
 400a6a4:	183ff61e 	bne	r3,zero,400a680 <__ram_exceptions_end+0xfbfea438>
 400a6a8:	90c0004c 	andi	r3,r18,1
 400a6ac:	1800a526 	beq	r3,zero,400a944 <___svfiprintf_internal_r+0x7b8>
 400a6b0:	10803fcc 	andi	r2,r2,255
 400a6b4:	1080201c 	xori	r2,r2,128
 400a6b8:	10bfe004 	addi	r2,r2,-128
 400a6bc:	00c00c04 	movi	r3,48
 400a6c0:	10ffb626 	beq	r2,r3,400a59c <__ram_exceptions_end+0xfbfea354>
 400a6c4:	88ffffc5 	stb	r3,-1(r17)
 400a6c8:	d8c01e17 	ldw	r3,120(sp)
 400a6cc:	88bfffc4 	addi	r2,r17,-1
 400a6d0:	1023883a 	mov	r17,r2
 400a6d4:	1887c83a 	sub	r3,r3,r2
 400a6d8:	d8c02115 	stw	r3,132(sp)
 400a6dc:	003fc706 	br	400a5fc <__ram_exceptions_end+0xfbfea3b4>
 400a6e0:	dac02317 	ldw	r11,140(sp)
 400a6e4:	00c00044 	movi	r3,1
 400a6e8:	d8c02015 	stw	r3,128(sp)
 400a6ec:	58800017 	ldw	r2,0(r11)
 400a6f0:	5ac00104 	addi	r11,r11,4
 400a6f4:	d8001d85 	stb	zero,118(sp)
 400a6f8:	d8801005 	stb	r2,64(sp)
 400a6fc:	dac02315 	stw	r11,140(sp)
 400a700:	d8c02115 	stw	r3,132(sp)
 400a704:	dc401004 	addi	r17,sp,64
 400a708:	0021883a 	mov	r16,zero
 400a70c:	90c0008c 	andi	r3,r18,2
 400a710:	d8c02215 	stw	r3,136(sp)
 400a714:	18000326 	beq	r3,zero,400a724 <___svfiprintf_internal_r+0x598>
 400a718:	dac02017 	ldw	r11,128(sp)
 400a71c:	5ac00084 	addi	r11,r11,2
 400a720:	dac02015 	stw	r11,128(sp)
 400a724:	90c0210c 	andi	r3,r18,132
 400a728:	d8c02615 	stw	r3,152(sp)
 400a72c:	1801131e 	bne	r3,zero,400ab7c <___svfiprintf_internal_r+0x9f0>
 400a730:	dac02417 	ldw	r11,144(sp)
 400a734:	d8c02017 	ldw	r3,128(sp)
 400a738:	58f9c83a 	sub	fp,r11,r3
 400a73c:	07010f0e 	bge	zero,fp,400ab7c <___svfiprintf_internal_r+0x9f0>
 400a740:	02400404 	movi	r9,16
 400a744:	d8c01c17 	ldw	r3,112(sp)
 400a748:	d8801b17 	ldw	r2,108(sp)
 400a74c:	4f02d60e 	bge	r9,fp,400b2a8 <___svfiprintf_internal_r+0x111c>
 400a750:	01410074 	movhi	r5,1025
 400a754:	29527a04 	addi	r5,r5,18920
 400a758:	d9402815 	stw	r5,160(sp)
 400a75c:	028001c4 	movi	r10,7
 400a760:	00000306 	br	400a770 <___svfiprintf_internal_r+0x5e4>
 400a764:	e73ffc04 	addi	fp,fp,-16
 400a768:	42000204 	addi	r8,r8,8
 400a76c:	4f00150e 	bge	r9,fp,400a7c4 <___svfiprintf_internal_r+0x638>
 400a770:	18c00404 	addi	r3,r3,16
 400a774:	10800044 	addi	r2,r2,1
 400a778:	45800015 	stw	r22,0(r8)
 400a77c:	42400115 	stw	r9,4(r8)
 400a780:	d8c01c15 	stw	r3,112(sp)
 400a784:	d8801b15 	stw	r2,108(sp)
 400a788:	50bff60e 	bge	r10,r2,400a764 <__ram_exceptions_end+0xfbfea51c>
 400a78c:	d9801a04 	addi	r6,sp,104
 400a790:	b80b883a 	mov	r5,r23
 400a794:	a809883a 	mov	r4,r21
 400a798:	da402c15 	stw	r9,176(sp)
 400a79c:	da802d15 	stw	r10,180(sp)
 400a7a0:	4009fbc0 	call	4009fbc <__ssprint_r>
 400a7a4:	da402c17 	ldw	r9,176(sp)
 400a7a8:	da802d17 	ldw	r10,180(sp)
 400a7ac:	1001851e 	bne	r2,zero,400adc4 <___svfiprintf_internal_r+0xc38>
 400a7b0:	e73ffc04 	addi	fp,fp,-16
 400a7b4:	d8c01c17 	ldw	r3,112(sp)
 400a7b8:	d8801b17 	ldw	r2,108(sp)
 400a7bc:	d811883a 	mov	r8,sp
 400a7c0:	4f3feb16 	blt	r9,fp,400a770 <__ram_exceptions_end+0xfbfea528>
 400a7c4:	dac02817 	ldw	r11,160(sp)
 400a7c8:	e0c7883a 	add	r3,fp,r3
 400a7cc:	10800044 	addi	r2,r2,1
 400a7d0:	42c00015 	stw	r11,0(r8)
 400a7d4:	47000115 	stw	fp,4(r8)
 400a7d8:	d8c01c15 	stw	r3,112(sp)
 400a7dc:	d8801b15 	stw	r2,108(sp)
 400a7e0:	010001c4 	movi	r4,7
 400a7e4:	2081ee16 	blt	r4,r2,400afa0 <___svfiprintf_internal_r+0xe14>
 400a7e8:	42000204 	addi	r8,r8,8
 400a7ec:	0000e506 	br	400ab84 <___svfiprintf_internal_r+0x9f8>
 400a7f0:	21003fcc 	andi	r4,r4,255
 400a7f4:	2002dd1e 	bne	r4,zero,400b36c <___svfiprintf_internal_r+0x11e0>
 400a7f8:	00810074 	movhi	r2,1025
 400a7fc:	10920804 	addi	r2,r2,18464
 400a800:	d8802915 	stw	r2,164(sp)
 400a804:	9080080c 	andi	r2,r18,32
 400a808:	103f461e 	bne	r2,zero,400a524 <__ram_exceptions_end+0xfbfea2dc>
 400a80c:	9080040c 	andi	r2,r18,16
 400a810:	10022e1e 	bne	r2,zero,400b0cc <___svfiprintf_internal_r+0xf40>
 400a814:	9080100c 	andi	r2,r18,64
 400a818:	dac02317 	ldw	r11,140(sp)
 400a81c:	10027326 	beq	r2,zero,400b1ec <___svfiprintf_internal_r+0x1060>
 400a820:	5f00000b 	ldhu	fp,0(r11)
 400a824:	5ac00104 	addi	r11,r11,4
 400a828:	0013883a 	mov	r9,zero
 400a82c:	dac02315 	stw	r11,140(sp)
 400a830:	003f4106 	br	400a538 <__ram_exceptions_end+0xfbfea2f0>
 400a834:	21003fcc 	andi	r4,r4,255
 400a838:	2002e11e 	bne	r4,zero,400b3c0 <___svfiprintf_internal_r+0x1234>
 400a83c:	9080080c 	andi	r2,r18,32
 400a840:	1002011e 	bne	r2,zero,400b048 <___svfiprintf_internal_r+0xebc>
 400a844:	9080040c 	andi	r2,r18,16
 400a848:	10023e1e 	bne	r2,zero,400b144 <___svfiprintf_internal_r+0xfb8>
 400a84c:	9480100c 	andi	r18,r18,64
 400a850:	90023c26 	beq	r18,zero,400b144 <___svfiprintf_internal_r+0xfb8>
 400a854:	dac02317 	ldw	r11,140(sp)
 400a858:	58800017 	ldw	r2,0(r11)
 400a85c:	5ac00104 	addi	r11,r11,4
 400a860:	dac02315 	stw	r11,140(sp)
 400a864:	dac02517 	ldw	r11,148(sp)
 400a868:	12c0000d 	sth	r11,0(r2)
 400a86c:	003e6e06 	br	400a228 <__ram_exceptions_end+0xfbfe9fe0>
 400a870:	98c00007 	ldb	r3,0(r19)
 400a874:	1a422926 	beq	r3,r9,400b11c <___svfiprintf_internal_r+0xf90>
 400a878:	94800414 	ori	r18,r18,16
 400a87c:	003e9206 	br	400a2c8 <__ram_exceptions_end+0xfbfea080>
 400a880:	94801014 	ori	r18,r18,64
 400a884:	98c00007 	ldb	r3,0(r19)
 400a888:	003e8f06 	br	400a2c8 <__ram_exceptions_end+0xfbfea080>
 400a88c:	21003fcc 	andi	r4,r4,255
 400a890:	2002c71e 	bne	r4,zero,400b3b0 <___svfiprintf_internal_r+0x1224>
 400a894:	9080080c 	andi	r2,r18,32
 400a898:	10004926 	beq	r2,zero,400a9c0 <___svfiprintf_internal_r+0x834>
 400a89c:	dac02317 	ldw	r11,140(sp)
 400a8a0:	58800117 	ldw	r2,4(r11)
 400a8a4:	5f000017 	ldw	fp,0(r11)
 400a8a8:	5ac00204 	addi	r11,r11,8
 400a8ac:	dac02315 	stw	r11,140(sp)
 400a8b0:	1013883a 	mov	r9,r2
 400a8b4:	10004b16 	blt	r2,zero,400a9e4 <___svfiprintf_internal_r+0x858>
 400a8b8:	da801d83 	ldbu	r10,118(sp)
 400a8bc:	8001cb16 	blt	r16,zero,400afec <___svfiprintf_internal_r+0xe60>
 400a8c0:	00ffdfc4 	movi	r3,-129
 400a8c4:	e244b03a 	or	r2,fp,r9
 400a8c8:	90e4703a 	and	r18,r18,r3
 400a8cc:	103f4726 	beq	r2,zero,400a5ec <__ram_exceptions_end+0xfbfea3a4>
 400a8d0:	48008c26 	beq	r9,zero,400ab04 <___svfiprintf_internal_r+0x978>
 400a8d4:	dc802015 	stw	r18,128(sp)
 400a8d8:	dc002115 	stw	r16,132(sp)
 400a8dc:	dc401a04 	addi	r17,sp,104
 400a8e0:	e021883a 	mov	r16,fp
 400a8e4:	da002215 	stw	r8,136(sp)
 400a8e8:	5039883a 	mov	fp,r10
 400a8ec:	4825883a 	mov	r18,r9
 400a8f0:	8009883a 	mov	r4,r16
 400a8f4:	900b883a 	mov	r5,r18
 400a8f8:	01800284 	movi	r6,10
 400a8fc:	000f883a 	mov	r7,zero
 400a900:	400d8bc0 	call	400d8bc <__umoddi3>
 400a904:	10800c04 	addi	r2,r2,48
 400a908:	8c7fffc4 	addi	r17,r17,-1
 400a90c:	8009883a 	mov	r4,r16
 400a910:	900b883a 	mov	r5,r18
 400a914:	88800005 	stb	r2,0(r17)
 400a918:	01800284 	movi	r6,10
 400a91c:	000f883a 	mov	r7,zero
 400a920:	400d3440 	call	400d344 <__udivdi3>
 400a924:	1021883a 	mov	r16,r2
 400a928:	10c4b03a 	or	r2,r2,r3
 400a92c:	1825883a 	mov	r18,r3
 400a930:	103fef1e 	bne	r2,zero,400a8f0 <__ram_exceptions_end+0xfbfea6a8>
 400a934:	dc802017 	ldw	r18,128(sp)
 400a938:	dc002117 	ldw	r16,132(sp)
 400a93c:	da002217 	ldw	r8,136(sp)
 400a940:	e015883a 	mov	r10,fp
 400a944:	d8c01e17 	ldw	r3,120(sp)
 400a948:	1c47c83a 	sub	r3,r3,r17
 400a94c:	d8c02115 	stw	r3,132(sp)
 400a950:	003f2a06 	br	400a5fc <__ram_exceptions_end+0xfbfea3b4>
 400a954:	dac02317 	ldw	r11,140(sp)
 400a958:	d8001d85 	stb	zero,118(sp)
 400a95c:	5c400017 	ldw	r17,0(r11)
 400a960:	5f000104 	addi	fp,r11,4
 400a964:	88022f26 	beq	r17,zero,400b224 <___svfiprintf_internal_r+0x1098>
 400a968:	80022516 	blt	r16,zero,400b200 <___svfiprintf_internal_r+0x1074>
 400a96c:	800d883a 	mov	r6,r16
 400a970:	000b883a 	mov	r5,zero
 400a974:	8809883a 	mov	r4,r17
 400a978:	da002c15 	stw	r8,176(sp)
 400a97c:	40082400 	call	4008240 <memchr>
 400a980:	da002c17 	ldw	r8,176(sp)
 400a984:	10026426 	beq	r2,zero,400b318 <___svfiprintf_internal_r+0x118c>
 400a988:	1445c83a 	sub	r2,r2,r17
 400a98c:	d8802115 	stw	r2,132(sp)
 400a990:	da801d83 	ldbu	r10,118(sp)
 400a994:	df002315 	stw	fp,140(sp)
 400a998:	0021883a 	mov	r16,zero
 400a99c:	003f1706 	br	400a5fc <__ram_exceptions_end+0xfbfea3b4>
 400a9a0:	94800814 	ori	r18,r18,32
 400a9a4:	98c00007 	ldb	r3,0(r19)
 400a9a8:	003e4706 	br	400a2c8 <__ram_exceptions_end+0xfbfea080>
 400a9ac:	21003fcc 	andi	r4,r4,255
 400a9b0:	2002701e 	bne	r4,zero,400b374 <___svfiprintf_internal_r+0x11e8>
 400a9b4:	94800414 	ori	r18,r18,16
 400a9b8:	9080080c 	andi	r2,r18,32
 400a9bc:	103fb71e 	bne	r2,zero,400a89c <__ram_exceptions_end+0xfbfea654>
 400a9c0:	9080040c 	andi	r2,r18,16
 400a9c4:	1001ab26 	beq	r2,zero,400b074 <___svfiprintf_internal_r+0xee8>
 400a9c8:	dac02317 	ldw	r11,140(sp)
 400a9cc:	5f000017 	ldw	fp,0(r11)
 400a9d0:	5ac00104 	addi	r11,r11,4
 400a9d4:	dac02315 	stw	r11,140(sp)
 400a9d8:	e013d7fa 	srai	r9,fp,31
 400a9dc:	4805883a 	mov	r2,r9
 400a9e0:	103fb50e 	bge	r2,zero,400a8b8 <__ram_exceptions_end+0xfbfea670>
 400a9e4:	0739c83a 	sub	fp,zero,fp
 400a9e8:	02800b44 	movi	r10,45
 400a9ec:	e004c03a 	cmpne	r2,fp,zero
 400a9f0:	0253c83a 	sub	r9,zero,r9
 400a9f4:	da801d85 	stb	r10,118(sp)
 400a9f8:	4893c83a 	sub	r9,r9,r2
 400a9fc:	80023016 	blt	r16,zero,400b2c0 <___svfiprintf_internal_r+0x1134>
 400aa00:	00bfdfc4 	movi	r2,-129
 400aa04:	90a4703a 	and	r18,r18,r2
 400aa08:	483fb21e 	bne	r9,zero,400a8d4 <__ram_exceptions_end+0xfbfea68c>
 400aa0c:	00003d06 	br	400ab04 <___svfiprintf_internal_r+0x978>
 400aa10:	9817883a 	mov	r11,r19
 400aa14:	d8002415 	stw	zero,144(sp)
 400aa18:	18bff404 	addi	r2,r3,-48
 400aa1c:	0019883a 	mov	r12,zero
 400aa20:	58c00007 	ldb	r3,0(r11)
 400aa24:	630002a4 	muli	r12,r12,10
 400aa28:	9cc00044 	addi	r19,r19,1
 400aa2c:	9817883a 	mov	r11,r19
 400aa30:	1319883a 	add	r12,r2,r12
 400aa34:	18bff404 	addi	r2,r3,-48
 400aa38:	30bff92e 	bgeu	r6,r2,400aa20 <__ram_exceptions_end+0xfbfea7d8>
 400aa3c:	db002415 	stw	r12,144(sp)
 400aa40:	18bff804 	addi	r2,r3,-32
 400aa44:	28be232e 	bgeu	r5,r2,400a2d4 <__ram_exceptions_end+0xfbfea08c>
 400aa48:	21003fcc 	andi	r4,r4,255
 400aa4c:	20024b1e 	bne	r4,zero,400b37c <___svfiprintf_internal_r+0x11f0>
 400aa50:	1800d626 	beq	r3,zero,400adac <___svfiprintf_internal_r+0xc20>
 400aa54:	02c00044 	movi	r11,1
 400aa58:	dac02015 	stw	r11,128(sp)
 400aa5c:	d8c01005 	stb	r3,64(sp)
 400aa60:	d8001d85 	stb	zero,118(sp)
 400aa64:	dac02115 	stw	r11,132(sp)
 400aa68:	dc401004 	addi	r17,sp,64
 400aa6c:	003f2606 	br	400a708 <__ram_exceptions_end+0xfbfea4c0>
 400aa70:	94802014 	ori	r18,r18,128
 400aa74:	98c00007 	ldb	r3,0(r19)
 400aa78:	003e1306 	br	400a2c8 <__ram_exceptions_end+0xfbfea080>
 400aa7c:	98c00007 	ldb	r3,0(r19)
 400aa80:	9ac00044 	addi	r11,r19,1
 400aa84:	1a822b26 	beq	r3,r10,400b334 <___svfiprintf_internal_r+0x11a8>
 400aa88:	18bff404 	addi	r2,r3,-48
 400aa8c:	0021883a 	mov	r16,zero
 400aa90:	30821e36 	bltu	r6,r2,400b30c <___svfiprintf_internal_r+0x1180>
 400aa94:	58c00007 	ldb	r3,0(r11)
 400aa98:	840002a4 	muli	r16,r16,10
 400aa9c:	5cc00044 	addi	r19,r11,1
 400aaa0:	9817883a 	mov	r11,r19
 400aaa4:	80a1883a 	add	r16,r16,r2
 400aaa8:	18bff404 	addi	r2,r3,-48
 400aaac:	30bff92e 	bgeu	r6,r2,400aa94 <__ram_exceptions_end+0xfbfea84c>
 400aab0:	803e060e 	bge	r16,zero,400a2cc <__ram_exceptions_end+0xfbfea084>
 400aab4:	043fffc4 	movi	r16,-1
 400aab8:	003e0406 	br	400a2cc <__ram_exceptions_end+0xfbfea084>
 400aabc:	21003fcc 	andi	r4,r4,255
 400aac0:	2002371e 	bne	r4,zero,400b3a0 <___svfiprintf_internal_r+0x1214>
 400aac4:	94800414 	ori	r18,r18,16
 400aac8:	9080080c 	andi	r2,r18,32
 400aacc:	103ebb1e 	bne	r2,zero,400a5bc <__ram_exceptions_end+0xfbfea374>
 400aad0:	9080040c 	andi	r2,r18,16
 400aad4:	10013b26 	beq	r2,zero,400afc4 <___svfiprintf_internal_r+0xe38>
 400aad8:	dac02317 	ldw	r11,140(sp)
 400aadc:	d8001d85 	stb	zero,118(sp)
 400aae0:	0013883a 	mov	r9,zero
 400aae4:	58800104 	addi	r2,r11,4
 400aae8:	5f000017 	ldw	fp,0(r11)
 400aaec:	80013d16 	blt	r16,zero,400afe4 <___svfiprintf_internal_r+0xe58>
 400aaf0:	00ffdfc4 	movi	r3,-129
 400aaf4:	d8802315 	stw	r2,140(sp)
 400aaf8:	90e4703a 	and	r18,r18,r3
 400aafc:	0015883a 	mov	r10,zero
 400ab00:	e03eba26 	beq	fp,zero,400a5ec <__ram_exceptions_end+0xfbfea3a4>
 400ab04:	00800244 	movi	r2,9
 400ab08:	173f7236 	bltu	r2,fp,400a8d4 <__ram_exceptions_end+0xfbfea68c>
 400ab0c:	dac02b17 	ldw	r11,172(sp)
 400ab10:	e7000c04 	addi	fp,fp,48
 400ab14:	df0019c5 	stb	fp,103(sp)
 400ab18:	dac02115 	stw	r11,132(sp)
 400ab1c:	dc4019c4 	addi	r17,sp,103
 400ab20:	003eb606 	br	400a5fc <__ram_exceptions_end+0xfbfea3b4>
 400ab24:	21003fcc 	andi	r4,r4,255
 400ab28:	20021f1e 	bne	r4,zero,400b3a8 <___svfiprintf_internal_r+0x121c>
 400ab2c:	94800414 	ori	r18,r18,16
 400ab30:	9080080c 	andi	r2,r18,32
 400ab34:	103ec51e 	bne	r2,zero,400a64c <__ram_exceptions_end+0xfbfea404>
 400ab38:	9080040c 	andi	r2,r18,16
 400ab3c:	10016926 	beq	r2,zero,400b0e4 <___svfiprintf_internal_r+0xf58>
 400ab40:	dac02317 	ldw	r11,140(sp)
 400ab44:	d8001d85 	stb	zero,118(sp)
 400ab48:	0013883a 	mov	r9,zero
 400ab4c:	58800104 	addi	r2,r11,4
 400ab50:	5f000017 	ldw	fp,0(r11)
 400ab54:	80016b16 	blt	r16,zero,400b104 <___svfiprintf_internal_r+0xf78>
 400ab58:	00ffdfc4 	movi	r3,-129
 400ab5c:	d8802315 	stw	r2,140(sp)
 400ab60:	90e4703a 	and	r18,r18,r3
 400ab64:	e03ec41e 	bne	fp,zero,400a678 <__ram_exceptions_end+0xfbfea430>
 400ab68:	0015883a 	mov	r10,zero
 400ab6c:	8001c226 	beq	r16,zero,400b278 <___svfiprintf_internal_r+0x10ec>
 400ab70:	0039883a 	mov	fp,zero
 400ab74:	0013883a 	mov	r9,zero
 400ab78:	003ec006 	br	400a67c <__ram_exceptions_end+0xfbfea434>
 400ab7c:	d8c01c17 	ldw	r3,112(sp)
 400ab80:	d8801b17 	ldw	r2,108(sp)
 400ab84:	d9001d87 	ldb	r4,118(sp)
 400ab88:	20000b26 	beq	r4,zero,400abb8 <___svfiprintf_internal_r+0xa2c>
 400ab8c:	d9001d84 	addi	r4,sp,118
 400ab90:	18c00044 	addi	r3,r3,1
 400ab94:	10800044 	addi	r2,r2,1
 400ab98:	41000015 	stw	r4,0(r8)
 400ab9c:	01000044 	movi	r4,1
 400aba0:	41000115 	stw	r4,4(r8)
 400aba4:	d8c01c15 	stw	r3,112(sp)
 400aba8:	d8801b15 	stw	r2,108(sp)
 400abac:	010001c4 	movi	r4,7
 400abb0:	2080e116 	blt	r4,r2,400af38 <___svfiprintf_internal_r+0xdac>
 400abb4:	42000204 	addi	r8,r8,8
 400abb8:	dac02217 	ldw	r11,136(sp)
 400abbc:	58000b26 	beq	r11,zero,400abec <___svfiprintf_internal_r+0xa60>
 400abc0:	d9001d04 	addi	r4,sp,116
 400abc4:	18c00084 	addi	r3,r3,2
 400abc8:	10800044 	addi	r2,r2,1
 400abcc:	41000015 	stw	r4,0(r8)
 400abd0:	01000084 	movi	r4,2
 400abd4:	41000115 	stw	r4,4(r8)
 400abd8:	d8c01c15 	stw	r3,112(sp)
 400abdc:	d8801b15 	stw	r2,108(sp)
 400abe0:	010001c4 	movi	r4,7
 400abe4:	2080dd16 	blt	r4,r2,400af5c <___svfiprintf_internal_r+0xdd0>
 400abe8:	42000204 	addi	r8,r8,8
 400abec:	dac02617 	ldw	r11,152(sp)
 400abf0:	01002004 	movi	r4,128
 400abf4:	59008426 	beq	r11,r4,400ae08 <___svfiprintf_internal_r+0xc7c>
 400abf8:	dac02117 	ldw	r11,132(sp)
 400abfc:	82e1c83a 	sub	r16,r16,r11
 400ac00:	0400270e 	bge	zero,r16,400aca0 <___svfiprintf_internal_r+0xb14>
 400ac04:	01c00404 	movi	r7,16
 400ac08:	3c016a0e 	bge	r7,r16,400b1b4 <___svfiprintf_internal_r+0x1028>
 400ac0c:	01410074 	movhi	r5,1025
 400ac10:	29527604 	addi	r5,r5,18904
 400ac14:	d9402215 	stw	r5,136(sp)
 400ac18:	070001c4 	movi	fp,7
 400ac1c:	00000306 	br	400ac2c <___svfiprintf_internal_r+0xaa0>
 400ac20:	843ffc04 	addi	r16,r16,-16
 400ac24:	42000204 	addi	r8,r8,8
 400ac28:	3c00130e 	bge	r7,r16,400ac78 <___svfiprintf_internal_r+0xaec>
 400ac2c:	18c00404 	addi	r3,r3,16
 400ac30:	10800044 	addi	r2,r2,1
 400ac34:	45000015 	stw	r20,0(r8)
 400ac38:	41c00115 	stw	r7,4(r8)
 400ac3c:	d8c01c15 	stw	r3,112(sp)
 400ac40:	d8801b15 	stw	r2,108(sp)
 400ac44:	e0bff60e 	bge	fp,r2,400ac20 <__ram_exceptions_end+0xfbfea9d8>
 400ac48:	d9801a04 	addi	r6,sp,104
 400ac4c:	b80b883a 	mov	r5,r23
 400ac50:	a809883a 	mov	r4,r21
 400ac54:	d9c02c15 	stw	r7,176(sp)
 400ac58:	4009fbc0 	call	4009fbc <__ssprint_r>
 400ac5c:	d9c02c17 	ldw	r7,176(sp)
 400ac60:	1000581e 	bne	r2,zero,400adc4 <___svfiprintf_internal_r+0xc38>
 400ac64:	843ffc04 	addi	r16,r16,-16
 400ac68:	d8c01c17 	ldw	r3,112(sp)
 400ac6c:	d8801b17 	ldw	r2,108(sp)
 400ac70:	d811883a 	mov	r8,sp
 400ac74:	3c3fed16 	blt	r7,r16,400ac2c <__ram_exceptions_end+0xfbfea9e4>
 400ac78:	dac02217 	ldw	r11,136(sp)
 400ac7c:	1c07883a 	add	r3,r3,r16
 400ac80:	10800044 	addi	r2,r2,1
 400ac84:	42c00015 	stw	r11,0(r8)
 400ac88:	44000115 	stw	r16,4(r8)
 400ac8c:	d8c01c15 	stw	r3,112(sp)
 400ac90:	d8801b15 	stw	r2,108(sp)
 400ac94:	010001c4 	movi	r4,7
 400ac98:	20809e16 	blt	r4,r2,400af14 <___svfiprintf_internal_r+0xd88>
 400ac9c:	42000204 	addi	r8,r8,8
 400aca0:	dac02117 	ldw	r11,132(sp)
 400aca4:	10800044 	addi	r2,r2,1
 400aca8:	44400015 	stw	r17,0(r8)
 400acac:	58c7883a 	add	r3,r11,r3
 400acb0:	42c00115 	stw	r11,4(r8)
 400acb4:	d8c01c15 	stw	r3,112(sp)
 400acb8:	d8801b15 	stw	r2,108(sp)
 400acbc:	010001c4 	movi	r4,7
 400acc0:	20807f16 	blt	r4,r2,400aec0 <___svfiprintf_internal_r+0xd34>
 400acc4:	42000204 	addi	r8,r8,8
 400acc8:	9480010c 	andi	r18,r18,4
 400accc:	90002926 	beq	r18,zero,400ad74 <___svfiprintf_internal_r+0xbe8>
 400acd0:	dac02417 	ldw	r11,144(sp)
 400acd4:	d8802017 	ldw	r2,128(sp)
 400acd8:	58a1c83a 	sub	r16,r11,r2
 400acdc:	0400250e 	bge	zero,r16,400ad74 <___svfiprintf_internal_r+0xbe8>
 400ace0:	04400404 	movi	r17,16
 400ace4:	d8801b17 	ldw	r2,108(sp)
 400ace8:	8c017c0e 	bge	r17,r16,400b2dc <___svfiprintf_internal_r+0x1150>
 400acec:	01410074 	movhi	r5,1025
 400acf0:	29527a04 	addi	r5,r5,18920
 400acf4:	d9402815 	stw	r5,160(sp)
 400acf8:	048001c4 	movi	r18,7
 400acfc:	00000306 	br	400ad0c <___svfiprintf_internal_r+0xb80>
 400ad00:	843ffc04 	addi	r16,r16,-16
 400ad04:	42000204 	addi	r8,r8,8
 400ad08:	8c00110e 	bge	r17,r16,400ad50 <___svfiprintf_internal_r+0xbc4>
 400ad0c:	18c00404 	addi	r3,r3,16
 400ad10:	10800044 	addi	r2,r2,1
 400ad14:	45800015 	stw	r22,0(r8)
 400ad18:	44400115 	stw	r17,4(r8)
 400ad1c:	d8c01c15 	stw	r3,112(sp)
 400ad20:	d8801b15 	stw	r2,108(sp)
 400ad24:	90bff60e 	bge	r18,r2,400ad00 <__ram_exceptions_end+0xfbfeaab8>
 400ad28:	d9801a04 	addi	r6,sp,104
 400ad2c:	b80b883a 	mov	r5,r23
 400ad30:	a809883a 	mov	r4,r21
 400ad34:	4009fbc0 	call	4009fbc <__ssprint_r>
 400ad38:	1000221e 	bne	r2,zero,400adc4 <___svfiprintf_internal_r+0xc38>
 400ad3c:	843ffc04 	addi	r16,r16,-16
 400ad40:	d8c01c17 	ldw	r3,112(sp)
 400ad44:	d8801b17 	ldw	r2,108(sp)
 400ad48:	d811883a 	mov	r8,sp
 400ad4c:	8c3fef16 	blt	r17,r16,400ad0c <__ram_exceptions_end+0xfbfeaac4>
 400ad50:	dac02817 	ldw	r11,160(sp)
 400ad54:	1c07883a 	add	r3,r3,r16
 400ad58:	10800044 	addi	r2,r2,1
 400ad5c:	42c00015 	stw	r11,0(r8)
 400ad60:	44000115 	stw	r16,4(r8)
 400ad64:	d8c01c15 	stw	r3,112(sp)
 400ad68:	d8801b15 	stw	r2,108(sp)
 400ad6c:	010001c4 	movi	r4,7
 400ad70:	2080aa16 	blt	r4,r2,400b01c <___svfiprintf_internal_r+0xe90>
 400ad74:	d8802417 	ldw	r2,144(sp)
 400ad78:	dac02017 	ldw	r11,128(sp)
 400ad7c:	12c0010e 	bge	r2,r11,400ad84 <___svfiprintf_internal_r+0xbf8>
 400ad80:	5805883a 	mov	r2,r11
 400ad84:	dac02517 	ldw	r11,148(sp)
 400ad88:	5897883a 	add	r11,r11,r2
 400ad8c:	dac02515 	stw	r11,148(sp)
 400ad90:	1800531e 	bne	r3,zero,400aee0 <___svfiprintf_internal_r+0xd54>
 400ad94:	98800007 	ldb	r2,0(r19)
 400ad98:	d8001b15 	stw	zero,108(sp)
 400ad9c:	d811883a 	mov	r8,sp
 400ada0:	103d231e 	bne	r2,zero,400a230 <__ram_exceptions_end+0xfbfe9fe8>
 400ada4:	9823883a 	mov	r17,r19
 400ada8:	003d3906 	br	400a290 <__ram_exceptions_end+0xfbfea048>
 400adac:	d8801c17 	ldw	r2,112(sp)
 400adb0:	10000426 	beq	r2,zero,400adc4 <___svfiprintf_internal_r+0xc38>
 400adb4:	d9402717 	ldw	r5,156(sp)
 400adb8:	d9002a17 	ldw	r4,168(sp)
 400adbc:	d9801a04 	addi	r6,sp,104
 400adc0:	4009fbc0 	call	4009fbc <__ssprint_r>
 400adc4:	dac02717 	ldw	r11,156(sp)
 400adc8:	d8802517 	ldw	r2,148(sp)
 400adcc:	58c0030b 	ldhu	r3,12(r11)
 400add0:	18c0100c 	andi	r3,r3,64
 400add4:	1801381e 	bne	r3,zero,400b2b8 <___svfiprintf_internal_r+0x112c>
 400add8:	dfc03717 	ldw	ra,220(sp)
 400addc:	df003617 	ldw	fp,216(sp)
 400ade0:	ddc03517 	ldw	r23,212(sp)
 400ade4:	dd803417 	ldw	r22,208(sp)
 400ade8:	dd403317 	ldw	r21,204(sp)
 400adec:	dd003217 	ldw	r20,200(sp)
 400adf0:	dcc03117 	ldw	r19,196(sp)
 400adf4:	dc803017 	ldw	r18,192(sp)
 400adf8:	dc402f17 	ldw	r17,188(sp)
 400adfc:	dc002e17 	ldw	r16,184(sp)
 400ae00:	dec03804 	addi	sp,sp,224
 400ae04:	f800283a 	ret
 400ae08:	dac02417 	ldw	r11,144(sp)
 400ae0c:	d9002017 	ldw	r4,128(sp)
 400ae10:	5939c83a 	sub	fp,r11,r4
 400ae14:	073f780e 	bge	zero,fp,400abf8 <__ram_exceptions_end+0xfbfea9b0>
 400ae18:	02400404 	movi	r9,16
 400ae1c:	4f01370e 	bge	r9,fp,400b2fc <___svfiprintf_internal_r+0x1170>
 400ae20:	02c10074 	movhi	r11,1025
 400ae24:	5ad27604 	addi	r11,r11,18904
 400ae28:	dac02215 	stw	r11,136(sp)
 400ae2c:	028001c4 	movi	r10,7
 400ae30:	00000306 	br	400ae40 <___svfiprintf_internal_r+0xcb4>
 400ae34:	e73ffc04 	addi	fp,fp,-16
 400ae38:	42000204 	addi	r8,r8,8
 400ae3c:	4f00150e 	bge	r9,fp,400ae94 <___svfiprintf_internal_r+0xd08>
 400ae40:	18c00404 	addi	r3,r3,16
 400ae44:	10800044 	addi	r2,r2,1
 400ae48:	45000015 	stw	r20,0(r8)
 400ae4c:	42400115 	stw	r9,4(r8)
 400ae50:	d8c01c15 	stw	r3,112(sp)
 400ae54:	d8801b15 	stw	r2,108(sp)
 400ae58:	50bff60e 	bge	r10,r2,400ae34 <__ram_exceptions_end+0xfbfeabec>
 400ae5c:	d9801a04 	addi	r6,sp,104
 400ae60:	b80b883a 	mov	r5,r23
 400ae64:	a809883a 	mov	r4,r21
 400ae68:	da402c15 	stw	r9,176(sp)
 400ae6c:	da802d15 	stw	r10,180(sp)
 400ae70:	4009fbc0 	call	4009fbc <__ssprint_r>
 400ae74:	da402c17 	ldw	r9,176(sp)
 400ae78:	da802d17 	ldw	r10,180(sp)
 400ae7c:	103fd11e 	bne	r2,zero,400adc4 <__ram_exceptions_end+0xfbfeab7c>
 400ae80:	e73ffc04 	addi	fp,fp,-16
 400ae84:	d8c01c17 	ldw	r3,112(sp)
 400ae88:	d8801b17 	ldw	r2,108(sp)
 400ae8c:	d811883a 	mov	r8,sp
 400ae90:	4f3feb16 	blt	r9,fp,400ae40 <__ram_exceptions_end+0xfbfeabf8>
 400ae94:	dac02217 	ldw	r11,136(sp)
 400ae98:	1f07883a 	add	r3,r3,fp
 400ae9c:	10800044 	addi	r2,r2,1
 400aea0:	42c00015 	stw	r11,0(r8)
 400aea4:	47000115 	stw	fp,4(r8)
 400aea8:	d8c01c15 	stw	r3,112(sp)
 400aeac:	d8801b15 	stw	r2,108(sp)
 400aeb0:	010001c4 	movi	r4,7
 400aeb4:	2080b616 	blt	r4,r2,400b190 <___svfiprintf_internal_r+0x1004>
 400aeb8:	42000204 	addi	r8,r8,8
 400aebc:	003f4e06 	br	400abf8 <__ram_exceptions_end+0xfbfea9b0>
 400aec0:	d9801a04 	addi	r6,sp,104
 400aec4:	b80b883a 	mov	r5,r23
 400aec8:	a809883a 	mov	r4,r21
 400aecc:	4009fbc0 	call	4009fbc <__ssprint_r>
 400aed0:	103fbc1e 	bne	r2,zero,400adc4 <__ram_exceptions_end+0xfbfeab7c>
 400aed4:	d8c01c17 	ldw	r3,112(sp)
 400aed8:	d811883a 	mov	r8,sp
 400aedc:	003f7a06 	br	400acc8 <__ram_exceptions_end+0xfbfeaa80>
 400aee0:	d9801a04 	addi	r6,sp,104
 400aee4:	b80b883a 	mov	r5,r23
 400aee8:	a809883a 	mov	r4,r21
 400aeec:	4009fbc0 	call	4009fbc <__ssprint_r>
 400aef0:	103fa826 	beq	r2,zero,400ad94 <__ram_exceptions_end+0xfbfeab4c>
 400aef4:	003fb306 	br	400adc4 <__ram_exceptions_end+0xfbfeab7c>
 400aef8:	d9801a04 	addi	r6,sp,104
 400aefc:	b80b883a 	mov	r5,r23
 400af00:	a809883a 	mov	r4,r21
 400af04:	4009fbc0 	call	4009fbc <__ssprint_r>
 400af08:	103fae1e 	bne	r2,zero,400adc4 <__ram_exceptions_end+0xfbfeab7c>
 400af0c:	d811883a 	mov	r8,sp
 400af10:	003cdc06 	br	400a284 <__ram_exceptions_end+0xfbfea03c>
 400af14:	d9801a04 	addi	r6,sp,104
 400af18:	b80b883a 	mov	r5,r23
 400af1c:	a809883a 	mov	r4,r21
 400af20:	4009fbc0 	call	4009fbc <__ssprint_r>
 400af24:	103fa71e 	bne	r2,zero,400adc4 <__ram_exceptions_end+0xfbfeab7c>
 400af28:	d8c01c17 	ldw	r3,112(sp)
 400af2c:	d8801b17 	ldw	r2,108(sp)
 400af30:	d811883a 	mov	r8,sp
 400af34:	003f5a06 	br	400aca0 <__ram_exceptions_end+0xfbfeaa58>
 400af38:	d9801a04 	addi	r6,sp,104
 400af3c:	b80b883a 	mov	r5,r23
 400af40:	a809883a 	mov	r4,r21
 400af44:	4009fbc0 	call	4009fbc <__ssprint_r>
 400af48:	103f9e1e 	bne	r2,zero,400adc4 <__ram_exceptions_end+0xfbfeab7c>
 400af4c:	d8c01c17 	ldw	r3,112(sp)
 400af50:	d8801b17 	ldw	r2,108(sp)
 400af54:	d811883a 	mov	r8,sp
 400af58:	003f1706 	br	400abb8 <__ram_exceptions_end+0xfbfea970>
 400af5c:	d9801a04 	addi	r6,sp,104
 400af60:	b80b883a 	mov	r5,r23
 400af64:	a809883a 	mov	r4,r21
 400af68:	4009fbc0 	call	4009fbc <__ssprint_r>
 400af6c:	103f951e 	bne	r2,zero,400adc4 <__ram_exceptions_end+0xfbfeab7c>
 400af70:	d8c01c17 	ldw	r3,112(sp)
 400af74:	d8801b17 	ldw	r2,108(sp)
 400af78:	d811883a 	mov	r8,sp
 400af7c:	003f1b06 	br	400abec <__ram_exceptions_end+0xfbfea9a4>
 400af80:	d8001d85 	stb	zero,118(sp)
 400af84:	80007b16 	blt	r16,zero,400b174 <___svfiprintf_internal_r+0xfe8>
 400af88:	00ffdfc4 	movi	r3,-129
 400af8c:	e244b03a 	or	r2,fp,r9
 400af90:	90e4703a 	and	r18,r18,r3
 400af94:	103d7026 	beq	r2,zero,400a558 <__ram_exceptions_end+0xfbfea310>
 400af98:	0015883a 	mov	r10,zero
 400af9c:	003d7206 	br	400a568 <__ram_exceptions_end+0xfbfea320>
 400afa0:	d9801a04 	addi	r6,sp,104
 400afa4:	b80b883a 	mov	r5,r23
 400afa8:	a809883a 	mov	r4,r21
 400afac:	4009fbc0 	call	4009fbc <__ssprint_r>
 400afb0:	103f841e 	bne	r2,zero,400adc4 <__ram_exceptions_end+0xfbfeab7c>
 400afb4:	d8c01c17 	ldw	r3,112(sp)
 400afb8:	d8801b17 	ldw	r2,108(sp)
 400afbc:	d811883a 	mov	r8,sp
 400afc0:	003ef006 	br	400ab84 <__ram_exceptions_end+0xfbfea93c>
 400afc4:	9080100c 	andi	r2,r18,64
 400afc8:	d8001d85 	stb	zero,118(sp)
 400afcc:	dac02317 	ldw	r11,140(sp)
 400afd0:	10008126 	beq	r2,zero,400b1d8 <___svfiprintf_internal_r+0x104c>
 400afd4:	58800104 	addi	r2,r11,4
 400afd8:	5f00000b 	ldhu	fp,0(r11)
 400afdc:	0013883a 	mov	r9,zero
 400afe0:	803ec30e 	bge	r16,zero,400aaf0 <__ram_exceptions_end+0xfbfea8a8>
 400afe4:	d8802315 	stw	r2,140(sp)
 400afe8:	0015883a 	mov	r10,zero
 400afec:	e244b03a 	or	r2,fp,r9
 400aff0:	103e371e 	bne	r2,zero,400a8d0 <__ram_exceptions_end+0xfbfea688>
 400aff4:	00800044 	movi	r2,1
 400aff8:	10803fcc 	andi	r2,r2,255
 400affc:	00c00044 	movi	r3,1
 400b000:	10c06126 	beq	r2,r3,400b188 <___svfiprintf_internal_r+0xffc>
 400b004:	00c00084 	movi	r3,2
 400b008:	10fd5526 	beq	r2,r3,400a560 <__ram_exceptions_end+0xfbfea318>
 400b00c:	003ed806 	br	400ab70 <__ram_exceptions_end+0xfbfea928>
 400b010:	d8802315 	stw	r2,140(sp)
 400b014:	98c00007 	ldb	r3,0(r19)
 400b018:	003cab06 	br	400a2c8 <__ram_exceptions_end+0xfbfea080>
 400b01c:	d9801a04 	addi	r6,sp,104
 400b020:	b80b883a 	mov	r5,r23
 400b024:	a809883a 	mov	r4,r21
 400b028:	4009fbc0 	call	4009fbc <__ssprint_r>
 400b02c:	103f651e 	bne	r2,zero,400adc4 <__ram_exceptions_end+0xfbfeab7c>
 400b030:	d8c01c17 	ldw	r3,112(sp)
 400b034:	003f4f06 	br	400ad74 <__ram_exceptions_end+0xfbfeab2c>
 400b038:	00810074 	movhi	r2,1025
 400b03c:	10920d04 	addi	r2,r2,18484
 400b040:	d8802915 	stw	r2,164(sp)
 400b044:	003d4406 	br	400a558 <__ram_exceptions_end+0xfbfea310>
 400b048:	dac02317 	ldw	r11,140(sp)
 400b04c:	58800017 	ldw	r2,0(r11)
 400b050:	dac02517 	ldw	r11,148(sp)
 400b054:	5807d7fa 	srai	r3,r11,31
 400b058:	dac02317 	ldw	r11,140(sp)
 400b05c:	10c00115 	stw	r3,4(r2)
 400b060:	5ac00104 	addi	r11,r11,4
 400b064:	dac02315 	stw	r11,140(sp)
 400b068:	dac02517 	ldw	r11,148(sp)
 400b06c:	12c00015 	stw	r11,0(r2)
 400b070:	003c6d06 	br	400a228 <__ram_exceptions_end+0xfbfe9fe0>
 400b074:	9080100c 	andi	r2,r18,64
 400b078:	dac02317 	ldw	r11,140(sp)
 400b07c:	103e5326 	beq	r2,zero,400a9cc <__ram_exceptions_end+0xfbfea784>
 400b080:	5f00000f 	ldh	fp,0(r11)
 400b084:	5ac00104 	addi	r11,r11,4
 400b088:	dac02315 	stw	r11,140(sp)
 400b08c:	e013d7fa 	srai	r9,fp,31
 400b090:	4805883a 	mov	r2,r9
 400b094:	003e0706 	br	400a8b4 <__ram_exceptions_end+0xfbfea66c>
 400b098:	00800c04 	movi	r2,48
 400b09c:	d8801d05 	stb	r2,116(sp)
 400b0a0:	d8c01d45 	stb	r3,117(sp)
 400b0a4:	d8001d85 	stb	zero,118(sp)
 400b0a8:	90800094 	ori	r2,r18,2
 400b0ac:	80008f16 	blt	r16,zero,400b2ec <___svfiprintf_internal_r+0x1160>
 400b0b0:	00bfdfc4 	movi	r2,-129
 400b0b4:	90a4703a 	and	r18,r18,r2
 400b0b8:	94800094 	ori	r18,r18,2
 400b0bc:	0015883a 	mov	r10,zero
 400b0c0:	003d2906 	br	400a568 <__ram_exceptions_end+0xfbfea320>
 400b0c4:	98c00007 	ldb	r3,0(r19)
 400b0c8:	003c7f06 	br	400a2c8 <__ram_exceptions_end+0xfbfea080>
 400b0cc:	dac02317 	ldw	r11,140(sp)
 400b0d0:	0013883a 	mov	r9,zero
 400b0d4:	5f000017 	ldw	fp,0(r11)
 400b0d8:	5ac00104 	addi	r11,r11,4
 400b0dc:	dac02315 	stw	r11,140(sp)
 400b0e0:	003d1506 	br	400a538 <__ram_exceptions_end+0xfbfea2f0>
 400b0e4:	9080100c 	andi	r2,r18,64
 400b0e8:	d8001d85 	stb	zero,118(sp)
 400b0ec:	dac02317 	ldw	r11,140(sp)
 400b0f0:	10003426 	beq	r2,zero,400b1c4 <___svfiprintf_internal_r+0x1038>
 400b0f4:	58800104 	addi	r2,r11,4
 400b0f8:	5f00000b 	ldhu	fp,0(r11)
 400b0fc:	0013883a 	mov	r9,zero
 400b100:	803e950e 	bge	r16,zero,400ab58 <__ram_exceptions_end+0xfbfea910>
 400b104:	e246b03a 	or	r3,fp,r9
 400b108:	d8802315 	stw	r2,140(sp)
 400b10c:	183d5a1e 	bne	r3,zero,400a678 <__ram_exceptions_end+0xfbfea430>
 400b110:	0015883a 	mov	r10,zero
 400b114:	0005883a 	mov	r2,zero
 400b118:	003fb706 	br	400aff8 <__ram_exceptions_end+0xfbfeadb0>
 400b11c:	98c00043 	ldbu	r3,1(r19)
 400b120:	94800814 	ori	r18,r18,32
 400b124:	9cc00044 	addi	r19,r19,1
 400b128:	18c03fcc 	andi	r3,r3,255
 400b12c:	18c0201c 	xori	r3,r3,128
 400b130:	18ffe004 	addi	r3,r3,-128
 400b134:	003c6406 	br	400a2c8 <__ram_exceptions_end+0xfbfea080>
 400b138:	d8c02315 	stw	r3,140(sp)
 400b13c:	0015883a 	mov	r10,zero
 400b140:	003faa06 	br	400afec <__ram_exceptions_end+0xfbfeada4>
 400b144:	dac02317 	ldw	r11,140(sp)
 400b148:	58800017 	ldw	r2,0(r11)
 400b14c:	5ac00104 	addi	r11,r11,4
 400b150:	dac02315 	stw	r11,140(sp)
 400b154:	dac02517 	ldw	r11,148(sp)
 400b158:	12c00015 	stw	r11,0(r2)
 400b15c:	003c3206 	br	400a228 <__ram_exceptions_end+0xfbfe9fe0>
 400b160:	01010074 	movhi	r4,1025
 400b164:	21120d04 	addi	r4,r4,18484
 400b168:	d9002915 	stw	r4,164(sp)
 400b16c:	d8c02315 	stw	r3,140(sp)
 400b170:	1025883a 	mov	r18,r2
 400b174:	e244b03a 	or	r2,fp,r9
 400b178:	103f871e 	bne	r2,zero,400af98 <__ram_exceptions_end+0xfbfead50>
 400b17c:	0015883a 	mov	r10,zero
 400b180:	00800084 	movi	r2,2
 400b184:	003f9c06 	br	400aff8 <__ram_exceptions_end+0xfbfeadb0>
 400b188:	0039883a 	mov	fp,zero
 400b18c:	003e5f06 	br	400ab0c <__ram_exceptions_end+0xfbfea8c4>
 400b190:	d9801a04 	addi	r6,sp,104
 400b194:	b80b883a 	mov	r5,r23
 400b198:	a809883a 	mov	r4,r21
 400b19c:	4009fbc0 	call	4009fbc <__ssprint_r>
 400b1a0:	103f081e 	bne	r2,zero,400adc4 <__ram_exceptions_end+0xfbfeab7c>
 400b1a4:	d8c01c17 	ldw	r3,112(sp)
 400b1a8:	d8801b17 	ldw	r2,108(sp)
 400b1ac:	d811883a 	mov	r8,sp
 400b1b0:	003e9106 	br	400abf8 <__ram_exceptions_end+0xfbfea9b0>
 400b1b4:	01010074 	movhi	r4,1025
 400b1b8:	21127604 	addi	r4,r4,18904
 400b1bc:	d9002215 	stw	r4,136(sp)
 400b1c0:	003ead06 	br	400ac78 <__ram_exceptions_end+0xfbfeaa30>
 400b1c4:	58800104 	addi	r2,r11,4
 400b1c8:	5f000017 	ldw	fp,0(r11)
 400b1cc:	0013883a 	mov	r9,zero
 400b1d0:	803e610e 	bge	r16,zero,400ab58 <__ram_exceptions_end+0xfbfea910>
 400b1d4:	003fcb06 	br	400b104 <__ram_exceptions_end+0xfbfeaebc>
 400b1d8:	58800104 	addi	r2,r11,4
 400b1dc:	5f000017 	ldw	fp,0(r11)
 400b1e0:	0013883a 	mov	r9,zero
 400b1e4:	803e420e 	bge	r16,zero,400aaf0 <__ram_exceptions_end+0xfbfea8a8>
 400b1e8:	003f7e06 	br	400afe4 <__ram_exceptions_end+0xfbfead9c>
 400b1ec:	5f000017 	ldw	fp,0(r11)
 400b1f0:	5ac00104 	addi	r11,r11,4
 400b1f4:	0013883a 	mov	r9,zero
 400b1f8:	dac02315 	stw	r11,140(sp)
 400b1fc:	003cce06 	br	400a538 <__ram_exceptions_end+0xfbfea2f0>
 400b200:	8809883a 	mov	r4,r17
 400b204:	da002c15 	stw	r8,176(sp)
 400b208:	40007c00 	call	40007c0 <strlen>
 400b20c:	d8802115 	stw	r2,132(sp)
 400b210:	da801d83 	ldbu	r10,118(sp)
 400b214:	df002315 	stw	fp,140(sp)
 400b218:	0021883a 	mov	r16,zero
 400b21c:	da002c17 	ldw	r8,176(sp)
 400b220:	003cf606 	br	400a5fc <__ram_exceptions_end+0xfbfea3b4>
 400b224:	00800184 	movi	r2,6
 400b228:	1400012e 	bgeu	r2,r16,400b230 <___svfiprintf_internal_r+0x10a4>
 400b22c:	1021883a 	mov	r16,r2
 400b230:	dc002115 	stw	r16,132(sp)
 400b234:	8005883a 	mov	r2,r16
 400b238:	80003c16 	blt	r16,zero,400b32c <___svfiprintf_internal_r+0x11a0>
 400b23c:	04410074 	movhi	r17,1025
 400b240:	d8802015 	stw	r2,128(sp)
 400b244:	df002315 	stw	fp,140(sp)
 400b248:	8c521204 	addi	r17,r17,18504
 400b24c:	003d2e06 	br	400a708 <__ram_exceptions_end+0xfbfea4c0>
 400b250:	04001004 	movi	r16,64
 400b254:	800b883a 	mov	r5,r16
 400b258:	4007a340 	call	4007a34 <_malloc_r>
 400b25c:	dac02717 	ldw	r11,156(sp)
 400b260:	58800015 	stw	r2,0(r11)
 400b264:	58800415 	stw	r2,16(r11)
 400b268:	10004826 	beq	r2,zero,400b38c <___svfiprintf_internal_r+0x1200>
 400b26c:	dac02717 	ldw	r11,156(sp)
 400b270:	5c000515 	stw	r16,20(r11)
 400b274:	003bd906 	br	400a1dc <__ram_exceptions_end+0xfbfe9f94>
 400b278:	9080004c 	andi	r2,r18,1
 400b27c:	0015883a 	mov	r10,zero
 400b280:	10000626 	beq	r2,zero,400b29c <___svfiprintf_internal_r+0x1110>
 400b284:	dac02b17 	ldw	r11,172(sp)
 400b288:	00800c04 	movi	r2,48
 400b28c:	d88019c5 	stb	r2,103(sp)
 400b290:	dac02115 	stw	r11,132(sp)
 400b294:	dc4019c4 	addi	r17,sp,103
 400b298:	003cd806 	br	400a5fc <__ram_exceptions_end+0xfbfea3b4>
 400b29c:	d8002115 	stw	zero,132(sp)
 400b2a0:	dc401a04 	addi	r17,sp,104
 400b2a4:	003cd506 	br	400a5fc <__ram_exceptions_end+0xfbfea3b4>
 400b2a8:	01010074 	movhi	r4,1025
 400b2ac:	21127a04 	addi	r4,r4,18920
 400b2b0:	d9002815 	stw	r4,160(sp)
 400b2b4:	003d4306 	br	400a7c4 <__ram_exceptions_end+0xfbfea57c>
 400b2b8:	00bfffc4 	movi	r2,-1
 400b2bc:	003ec606 	br	400add8 <__ram_exceptions_end+0xfbfeab90>
 400b2c0:	00800044 	movi	r2,1
 400b2c4:	10803fcc 	andi	r2,r2,255
 400b2c8:	00c00044 	movi	r3,1
 400b2cc:	10fd8026 	beq	r2,r3,400a8d0 <__ram_exceptions_end+0xfbfea688>
 400b2d0:	00c00084 	movi	r3,2
 400b2d4:	10fca426 	beq	r2,r3,400a568 <__ram_exceptions_end+0xfbfea320>
 400b2d8:	003ce806 	br	400a67c <__ram_exceptions_end+0xfbfea434>
 400b2dc:	01010074 	movhi	r4,1025
 400b2e0:	21127a04 	addi	r4,r4,18920
 400b2e4:	d9002815 	stw	r4,160(sp)
 400b2e8:	003e9906 	br	400ad50 <__ram_exceptions_end+0xfbfeab08>
 400b2ec:	1025883a 	mov	r18,r2
 400b2f0:	0015883a 	mov	r10,zero
 400b2f4:	00800084 	movi	r2,2
 400b2f8:	003ff206 	br	400b2c4 <__ram_exceptions_end+0xfbfeb07c>
 400b2fc:	01410074 	movhi	r5,1025
 400b300:	29527604 	addi	r5,r5,18904
 400b304:	d9402215 	stw	r5,136(sp)
 400b308:	003ee206 	br	400ae94 <__ram_exceptions_end+0xfbfeac4c>
 400b30c:	5827883a 	mov	r19,r11
 400b310:	0021883a 	mov	r16,zero
 400b314:	003bed06 	br	400a2cc <__ram_exceptions_end+0xfbfea084>
 400b318:	dc002115 	stw	r16,132(sp)
 400b31c:	da801d83 	ldbu	r10,118(sp)
 400b320:	df002315 	stw	fp,140(sp)
 400b324:	0021883a 	mov	r16,zero
 400b328:	003cb406 	br	400a5fc <__ram_exceptions_end+0xfbfea3b4>
 400b32c:	0005883a 	mov	r2,zero
 400b330:	003fc206 	br	400b23c <__ram_exceptions_end+0xfbfeaff4>
 400b334:	d8802317 	ldw	r2,140(sp)
 400b338:	98c00043 	ldbu	r3,1(r19)
 400b33c:	5827883a 	mov	r19,r11
 400b340:	14000017 	ldw	r16,0(r2)
 400b344:	10800104 	addi	r2,r2,4
 400b348:	d8802315 	stw	r2,140(sp)
 400b34c:	803f760e 	bge	r16,zero,400b128 <__ram_exceptions_end+0xfbfeaee0>
 400b350:	18c03fcc 	andi	r3,r3,255
 400b354:	18c0201c 	xori	r3,r3,128
 400b358:	043fffc4 	movi	r16,-1
 400b35c:	18ffe004 	addi	r3,r3,-128
 400b360:	003bd906 	br	400a2c8 <__ram_exceptions_end+0xfbfea080>
 400b364:	d9c01d85 	stb	r7,118(sp)
 400b368:	003cb606 	br	400a644 <__ram_exceptions_end+0xfbfea3fc>
 400b36c:	d9c01d85 	stb	r7,118(sp)
 400b370:	003d2106 	br	400a7f8 <__ram_exceptions_end+0xfbfea5b0>
 400b374:	d9c01d85 	stb	r7,118(sp)
 400b378:	003d8e06 	br	400a9b4 <__ram_exceptions_end+0xfbfea76c>
 400b37c:	d9c01d85 	stb	r7,118(sp)
 400b380:	003db306 	br	400aa50 <__ram_exceptions_end+0xfbfea808>
 400b384:	d9c01d85 	stb	r7,118(sp)
 400b388:	003c8a06 	br	400a5b4 <__ram_exceptions_end+0xfbfea36c>
 400b38c:	dac02a17 	ldw	r11,168(sp)
 400b390:	00800304 	movi	r2,12
 400b394:	58800015 	stw	r2,0(r11)
 400b398:	00bfffc4 	movi	r2,-1
 400b39c:	003e8e06 	br	400add8 <__ram_exceptions_end+0xfbfeab90>
 400b3a0:	d9c01d85 	stb	r7,118(sp)
 400b3a4:	003dc706 	br	400aac4 <__ram_exceptions_end+0xfbfea87c>
 400b3a8:	d9c01d85 	stb	r7,118(sp)
 400b3ac:	003ddf06 	br	400ab2c <__ram_exceptions_end+0xfbfea8e4>
 400b3b0:	d9c01d85 	stb	r7,118(sp)
 400b3b4:	003d3706 	br	400a894 <__ram_exceptions_end+0xfbfea64c>
 400b3b8:	d9c01d85 	stb	r7,118(sp)
 400b3bc:	003c5406 	br	400a510 <__ram_exceptions_end+0xfbfea2c8>
 400b3c0:	d9c01d85 	stb	r7,118(sp)
 400b3c4:	003d1d06 	br	400a83c <__ram_exceptions_end+0xfbfea5f4>

0400b3c8 <__sprint_r.part.0>:
 400b3c8:	28801917 	ldw	r2,100(r5)
 400b3cc:	defff604 	addi	sp,sp,-40
 400b3d0:	dd400515 	stw	r21,20(sp)
 400b3d4:	dfc00915 	stw	ra,36(sp)
 400b3d8:	df000815 	stw	fp,32(sp)
 400b3dc:	ddc00715 	stw	r23,28(sp)
 400b3e0:	dd800615 	stw	r22,24(sp)
 400b3e4:	dd000415 	stw	r20,16(sp)
 400b3e8:	dcc00315 	stw	r19,12(sp)
 400b3ec:	dc800215 	stw	r18,8(sp)
 400b3f0:	dc400115 	stw	r17,4(sp)
 400b3f4:	dc000015 	stw	r16,0(sp)
 400b3f8:	1088000c 	andi	r2,r2,8192
 400b3fc:	302b883a 	mov	r21,r6
 400b400:	10002e26 	beq	r2,zero,400b4bc <__sprint_r.part.0+0xf4>
 400b404:	30800217 	ldw	r2,8(r6)
 400b408:	35800017 	ldw	r22,0(r6)
 400b40c:	10002926 	beq	r2,zero,400b4b4 <__sprint_r.part.0+0xec>
 400b410:	2827883a 	mov	r19,r5
 400b414:	2029883a 	mov	r20,r4
 400b418:	b5c00104 	addi	r23,r22,4
 400b41c:	04bfffc4 	movi	r18,-1
 400b420:	bc400017 	ldw	r17,0(r23)
 400b424:	b4000017 	ldw	r16,0(r22)
 400b428:	0039883a 	mov	fp,zero
 400b42c:	8822d0ba 	srli	r17,r17,2
 400b430:	8800031e 	bne	r17,zero,400b440 <__sprint_r.part.0+0x78>
 400b434:	00001806 	br	400b498 <__sprint_r.part.0+0xd0>
 400b438:	84000104 	addi	r16,r16,4
 400b43c:	8f001526 	beq	r17,fp,400b494 <__sprint_r.part.0+0xcc>
 400b440:	81400017 	ldw	r5,0(r16)
 400b444:	980d883a 	mov	r6,r19
 400b448:	a009883a 	mov	r4,r20
 400b44c:	400cf480 	call	400cf48 <_fputwc_r>
 400b450:	e7000044 	addi	fp,fp,1
 400b454:	14bff81e 	bne	r2,r18,400b438 <__ram_exceptions_end+0xfbfeb1f0>
 400b458:	9005883a 	mov	r2,r18
 400b45c:	a8000215 	stw	zero,8(r21)
 400b460:	a8000115 	stw	zero,4(r21)
 400b464:	dfc00917 	ldw	ra,36(sp)
 400b468:	df000817 	ldw	fp,32(sp)
 400b46c:	ddc00717 	ldw	r23,28(sp)
 400b470:	dd800617 	ldw	r22,24(sp)
 400b474:	dd400517 	ldw	r21,20(sp)
 400b478:	dd000417 	ldw	r20,16(sp)
 400b47c:	dcc00317 	ldw	r19,12(sp)
 400b480:	dc800217 	ldw	r18,8(sp)
 400b484:	dc400117 	ldw	r17,4(sp)
 400b488:	dc000017 	ldw	r16,0(sp)
 400b48c:	dec00a04 	addi	sp,sp,40
 400b490:	f800283a 	ret
 400b494:	a8800217 	ldw	r2,8(r21)
 400b498:	8c63883a 	add	r17,r17,r17
 400b49c:	8c63883a 	add	r17,r17,r17
 400b4a0:	1445c83a 	sub	r2,r2,r17
 400b4a4:	a8800215 	stw	r2,8(r21)
 400b4a8:	b5800204 	addi	r22,r22,8
 400b4ac:	bdc00204 	addi	r23,r23,8
 400b4b0:	103fdb1e 	bne	r2,zero,400b420 <__ram_exceptions_end+0xfbfeb1d8>
 400b4b4:	0005883a 	mov	r2,zero
 400b4b8:	003fe806 	br	400b45c <__ram_exceptions_end+0xfbfeb214>
 400b4bc:	40071580 	call	4007158 <__sfvwrite_r>
 400b4c0:	003fe606 	br	400b45c <__ram_exceptions_end+0xfbfeb214>

0400b4c4 <__sprint_r>:
 400b4c4:	30c00217 	ldw	r3,8(r6)
 400b4c8:	18000126 	beq	r3,zero,400b4d0 <__sprint_r+0xc>
 400b4cc:	400b3c81 	jmpi	400b3c8 <__sprint_r.part.0>
 400b4d0:	30000115 	stw	zero,4(r6)
 400b4d4:	0005883a 	mov	r2,zero
 400b4d8:	f800283a 	ret

0400b4dc <___vfiprintf_internal_r>:
 400b4dc:	deffc904 	addi	sp,sp,-220
 400b4e0:	df003515 	stw	fp,212(sp)
 400b4e4:	dd003115 	stw	r20,196(sp)
 400b4e8:	dfc03615 	stw	ra,216(sp)
 400b4ec:	ddc03415 	stw	r23,208(sp)
 400b4f0:	dd803315 	stw	r22,204(sp)
 400b4f4:	dd403215 	stw	r21,200(sp)
 400b4f8:	dcc03015 	stw	r19,192(sp)
 400b4fc:	dc802f15 	stw	r18,188(sp)
 400b500:	dc402e15 	stw	r17,184(sp)
 400b504:	dc002d15 	stw	r16,180(sp)
 400b508:	d9002015 	stw	r4,128(sp)
 400b50c:	d9c02215 	stw	r7,136(sp)
 400b510:	2829883a 	mov	r20,r5
 400b514:	3039883a 	mov	fp,r6
 400b518:	20000226 	beq	r4,zero,400b524 <___vfiprintf_internal_r+0x48>
 400b51c:	20800e17 	ldw	r2,56(r4)
 400b520:	1000cf26 	beq	r2,zero,400b860 <___vfiprintf_internal_r+0x384>
 400b524:	a080030b 	ldhu	r2,12(r20)
 400b528:	10c8000c 	andi	r3,r2,8192
 400b52c:	1800061e 	bne	r3,zero,400b548 <___vfiprintf_internal_r+0x6c>
 400b530:	a1001917 	ldw	r4,100(r20)
 400b534:	00f7ffc4 	movi	r3,-8193
 400b538:	10880014 	ori	r2,r2,8192
 400b53c:	20c6703a 	and	r3,r4,r3
 400b540:	a080030d 	sth	r2,12(r20)
 400b544:	a0c01915 	stw	r3,100(r20)
 400b548:	10c0020c 	andi	r3,r2,8
 400b54c:	1800a926 	beq	r3,zero,400b7f4 <___vfiprintf_internal_r+0x318>
 400b550:	a0c00417 	ldw	r3,16(r20)
 400b554:	1800a726 	beq	r3,zero,400b7f4 <___vfiprintf_internal_r+0x318>
 400b558:	1080068c 	andi	r2,r2,26
 400b55c:	00c00284 	movi	r3,10
 400b560:	10c0ac26 	beq	r2,r3,400b814 <___vfiprintf_internal_r+0x338>
 400b564:	da801a04 	addi	r10,sp,104
 400b568:	da801e15 	stw	r10,120(sp)
 400b56c:	d8801e17 	ldw	r2,120(sp)
 400b570:	da8019c4 	addi	r10,sp,103
 400b574:	05810074 	movhi	r22,1025
 400b578:	05c10074 	movhi	r23,1025
 400b57c:	da801f15 	stw	r10,124(sp)
 400b580:	1295c83a 	sub	r10,r2,r10
 400b584:	b5928204 	addi	r22,r22,18952
 400b588:	bdd27e04 	addi	r23,r23,18936
 400b58c:	dec01a15 	stw	sp,104(sp)
 400b590:	d8001c15 	stw	zero,112(sp)
 400b594:	d8001b15 	stw	zero,108(sp)
 400b598:	d8002615 	stw	zero,152(sp)
 400b59c:	d8002315 	stw	zero,140(sp)
 400b5a0:	da802715 	stw	r10,156(sp)
 400b5a4:	d811883a 	mov	r8,sp
 400b5a8:	dd002115 	stw	r20,132(sp)
 400b5ac:	e021883a 	mov	r16,fp
 400b5b0:	80800007 	ldb	r2,0(r16)
 400b5b4:	1003ea26 	beq	r2,zero,400c560 <___vfiprintf_internal_r+0x1084>
 400b5b8:	00c00944 	movi	r3,37
 400b5bc:	8025883a 	mov	r18,r16
 400b5c0:	10c0021e 	bne	r2,r3,400b5cc <___vfiprintf_internal_r+0xf0>
 400b5c4:	00001606 	br	400b620 <___vfiprintf_internal_r+0x144>
 400b5c8:	10c00326 	beq	r2,r3,400b5d8 <___vfiprintf_internal_r+0xfc>
 400b5cc:	94800044 	addi	r18,r18,1
 400b5d0:	90800007 	ldb	r2,0(r18)
 400b5d4:	103ffc1e 	bne	r2,zero,400b5c8 <__ram_exceptions_end+0xfbfeb380>
 400b5d8:	9423c83a 	sub	r17,r18,r16
 400b5dc:	88001026 	beq	r17,zero,400b620 <___vfiprintf_internal_r+0x144>
 400b5e0:	d8c01c17 	ldw	r3,112(sp)
 400b5e4:	d8801b17 	ldw	r2,108(sp)
 400b5e8:	44000015 	stw	r16,0(r8)
 400b5ec:	88c7883a 	add	r3,r17,r3
 400b5f0:	10800044 	addi	r2,r2,1
 400b5f4:	44400115 	stw	r17,4(r8)
 400b5f8:	d8c01c15 	stw	r3,112(sp)
 400b5fc:	d8801b15 	stw	r2,108(sp)
 400b600:	010001c4 	movi	r4,7
 400b604:	2080760e 	bge	r4,r2,400b7e0 <___vfiprintf_internal_r+0x304>
 400b608:	1803821e 	bne	r3,zero,400c414 <___vfiprintf_internal_r+0xf38>
 400b60c:	da802317 	ldw	r10,140(sp)
 400b610:	d8001b15 	stw	zero,108(sp)
 400b614:	d811883a 	mov	r8,sp
 400b618:	5455883a 	add	r10,r10,r17
 400b61c:	da802315 	stw	r10,140(sp)
 400b620:	90800007 	ldb	r2,0(r18)
 400b624:	10044626 	beq	r2,zero,400c740 <___vfiprintf_internal_r+0x1264>
 400b628:	90c00047 	ldb	r3,1(r18)
 400b62c:	94000044 	addi	r16,r18,1
 400b630:	d8001d85 	stb	zero,118(sp)
 400b634:	0009883a 	mov	r4,zero
 400b638:	000f883a 	mov	r7,zero
 400b63c:	027fffc4 	movi	r9,-1
 400b640:	0023883a 	mov	r17,zero
 400b644:	0029883a 	mov	r20,zero
 400b648:	01401604 	movi	r5,88
 400b64c:	01800244 	movi	r6,9
 400b650:	03400a84 	movi	r13,42
 400b654:	03001b04 	movi	r12,108
 400b658:	84000044 	addi	r16,r16,1
 400b65c:	18bff804 	addi	r2,r3,-32
 400b660:	28827336 	bltu	r5,r2,400c030 <___vfiprintf_internal_r+0xb54>
 400b664:	100490ba 	slli	r2,r2,2
 400b668:	02810074 	movhi	r10,1025
 400b66c:	52ad9f04 	addi	r10,r10,-18820
 400b670:	1285883a 	add	r2,r2,r10
 400b674:	10800017 	ldw	r2,0(r2)
 400b678:	1000683a 	jmp	r2
 400b67c:	0400bd64 	muli	r16,zero,757
 400b680:	0400c030 	cmpltui	r16,zero,768
 400b684:	0400c030 	cmpltui	r16,zero,768
 400b688:	0400bd84 	movi	r16,758
 400b68c:	0400c030 	cmpltui	r16,zero,768
 400b690:	0400c030 	cmpltui	r16,zero,768
 400b694:	0400c030 	cmpltui	r16,zero,768
 400b698:	0400c030 	cmpltui	r16,zero,768
 400b69c:	0400c030 	cmpltui	r16,zero,768
 400b6a0:	0400c030 	cmpltui	r16,zero,768
 400b6a4:	0400bf6c 	andhi	r16,zero,765
 400b6a8:	0400bf88 	cmpgei	r16,zero,766
 400b6ac:	0400c030 	cmpltui	r16,zero,768
 400b6b0:	0400b870 	cmpltui	r16,zero,737
 400b6b4:	0400bf98 	cmpnei	r16,zero,766
 400b6b8:	0400c030 	cmpltui	r16,zero,768
 400b6bc:	0400bd90 	cmplti	r16,zero,758
 400b6c0:	0400bd9c 	xori	r16,zero,758
 400b6c4:	0400bd9c 	xori	r16,zero,758
 400b6c8:	0400bd9c 	xori	r16,zero,758
 400b6cc:	0400bd9c 	xori	r16,zero,758
 400b6d0:	0400bd9c 	xori	r16,zero,758
 400b6d4:	0400bd9c 	xori	r16,zero,758
 400b6d8:	0400bd9c 	xori	r16,zero,758
 400b6dc:	0400bd9c 	xori	r16,zero,758
 400b6e0:	0400bd9c 	xori	r16,zero,758
 400b6e4:	0400c030 	cmpltui	r16,zero,768
 400b6e8:	0400c030 	cmpltui	r16,zero,768
 400b6ec:	0400c030 	cmpltui	r16,zero,768
 400b6f0:	0400c030 	cmpltui	r16,zero,768
 400b6f4:	0400c030 	cmpltui	r16,zero,768
 400b6f8:	0400c030 	cmpltui	r16,zero,768
 400b6fc:	0400c030 	cmpltui	r16,zero,768
 400b700:	0400c030 	cmpltui	r16,zero,768
 400b704:	0400c030 	cmpltui	r16,zero,768
 400b708:	0400c030 	cmpltui	r16,zero,768
 400b70c:	0400bdc8 	cmpgei	r16,zero,759
 400b710:	0400c030 	cmpltui	r16,zero,768
 400b714:	0400c030 	cmpltui	r16,zero,768
 400b718:	0400c030 	cmpltui	r16,zero,768
 400b71c:	0400c030 	cmpltui	r16,zero,768
 400b720:	0400c030 	cmpltui	r16,zero,768
 400b724:	0400c030 	cmpltui	r16,zero,768
 400b728:	0400c030 	cmpltui	r16,zero,768
 400b72c:	0400c030 	cmpltui	r16,zero,768
 400b730:	0400c030 	cmpltui	r16,zero,768
 400b734:	0400c030 	cmpltui	r16,zero,768
 400b738:	0400be00 	call	400be0 <__alt_mem_SDRAM-0x3bff420>
 400b73c:	0400c030 	cmpltui	r16,zero,768
 400b740:	0400c030 	cmpltui	r16,zero,768
 400b744:	0400c030 	cmpltui	r16,zero,768
 400b748:	0400c030 	cmpltui	r16,zero,768
 400b74c:	0400c030 	cmpltui	r16,zero,768
 400b750:	0400be58 	cmpnei	r16,zero,761
 400b754:	0400c030 	cmpltui	r16,zero,768
 400b758:	0400c030 	cmpltui	r16,zero,768
 400b75c:	0400bec8 	cmpgei	r16,zero,763
 400b760:	0400c030 	cmpltui	r16,zero,768
 400b764:	0400c030 	cmpltui	r16,zero,768
 400b768:	0400c030 	cmpltui	r16,zero,768
 400b76c:	0400c030 	cmpltui	r16,zero,768
 400b770:	0400c030 	cmpltui	r16,zero,768
 400b774:	0400c030 	cmpltui	r16,zero,768
 400b778:	0400c030 	cmpltui	r16,zero,768
 400b77c:	0400c030 	cmpltui	r16,zero,768
 400b780:	0400c030 	cmpltui	r16,zero,768
 400b784:	0400c030 	cmpltui	r16,zero,768
 400b788:	0400bc74 	movhi	r16,753
 400b78c:	0400bca0 	cmpeqi	r16,zero,754
 400b790:	0400c030 	cmpltui	r16,zero,768
 400b794:	0400c030 	cmpltui	r16,zero,768
 400b798:	0400c030 	cmpltui	r16,zero,768
 400b79c:	0400bfd8 	cmpnei	r16,zero,767
 400b7a0:	0400bca0 	cmpeqi	r16,zero,754
 400b7a4:	0400c030 	cmpltui	r16,zero,768
 400b7a8:	0400c030 	cmpltui	r16,zero,768
 400b7ac:	0400bb34 	movhi	r16,748
 400b7b0:	0400c030 	cmpltui	r16,zero,768
 400b7b4:	0400bb44 	movi	r16,749
 400b7b8:	0400bb80 	call	400bb8 <__alt_mem_SDRAM-0x3bff448>
 400b7bc:	0400b87c 	xorhi	r16,zero,737
 400b7c0:	0400bb28 	cmpgeui	r16,zero,748
 400b7c4:	0400c030 	cmpltui	r16,zero,768
 400b7c8:	0400bf04 	movi	r16,764
 400b7cc:	0400c030 	cmpltui	r16,zero,768
 400b7d0:	0400bf5c 	xori	r16,zero,765
 400b7d4:	0400c030 	cmpltui	r16,zero,768
 400b7d8:	0400c030 	cmpltui	r16,zero,768
 400b7dc:	0400bc20 	cmpeqi	r16,zero,752
 400b7e0:	42000204 	addi	r8,r8,8
 400b7e4:	da802317 	ldw	r10,140(sp)
 400b7e8:	5455883a 	add	r10,r10,r17
 400b7ec:	da802315 	stw	r10,140(sp)
 400b7f0:	003f8b06 	br	400b620 <__ram_exceptions_end+0xfbfeb3d8>
 400b7f4:	d9002017 	ldw	r4,128(sp)
 400b7f8:	a00b883a 	mov	r5,r20
 400b7fc:	4004d000 	call	4004d00 <__swsetup_r>
 400b800:	1003b11e 	bne	r2,zero,400c6c8 <___vfiprintf_internal_r+0x11ec>
 400b804:	a080030b 	ldhu	r2,12(r20)
 400b808:	00c00284 	movi	r3,10
 400b80c:	1080068c 	andi	r2,r2,26
 400b810:	10ff541e 	bne	r2,r3,400b564 <__ram_exceptions_end+0xfbfeb31c>
 400b814:	a080038f 	ldh	r2,14(r20)
 400b818:	103f5216 	blt	r2,zero,400b564 <__ram_exceptions_end+0xfbfeb31c>
 400b81c:	d9c02217 	ldw	r7,136(sp)
 400b820:	d9002017 	ldw	r4,128(sp)
 400b824:	e00d883a 	mov	r6,fp
 400b828:	a00b883a 	mov	r5,r20
 400b82c:	400c9540 	call	400c954 <__sbprintf>
 400b830:	dfc03617 	ldw	ra,216(sp)
 400b834:	df003517 	ldw	fp,212(sp)
 400b838:	ddc03417 	ldw	r23,208(sp)
 400b83c:	dd803317 	ldw	r22,204(sp)
 400b840:	dd403217 	ldw	r21,200(sp)
 400b844:	dd003117 	ldw	r20,196(sp)
 400b848:	dcc03017 	ldw	r19,192(sp)
 400b84c:	dc802f17 	ldw	r18,188(sp)
 400b850:	dc402e17 	ldw	r17,184(sp)
 400b854:	dc002d17 	ldw	r16,180(sp)
 400b858:	dec03704 	addi	sp,sp,220
 400b85c:	f800283a 	ret
 400b860:	4006cd40 	call	4006cd4 <__sinit>
 400b864:	003f2f06 	br	400b524 <__ram_exceptions_end+0xfbfeb2dc>
 400b868:	0463c83a 	sub	r17,zero,r17
 400b86c:	d8802215 	stw	r2,136(sp)
 400b870:	a5000114 	ori	r20,r20,4
 400b874:	80c00007 	ldb	r3,0(r16)
 400b878:	003f7706 	br	400b658 <__ram_exceptions_end+0xfbfeb410>
 400b87c:	00800c04 	movi	r2,48
 400b880:	da802217 	ldw	r10,136(sp)
 400b884:	d8801d05 	stb	r2,116(sp)
 400b888:	00801e04 	movi	r2,120
 400b88c:	d8801d45 	stb	r2,117(sp)
 400b890:	d8001d85 	stb	zero,118(sp)
 400b894:	50c00104 	addi	r3,r10,4
 400b898:	54800017 	ldw	r18,0(r10)
 400b89c:	0027883a 	mov	r19,zero
 400b8a0:	a0800094 	ori	r2,r20,2
 400b8a4:	48030b16 	blt	r9,zero,400c4d4 <___vfiprintf_internal_r+0xff8>
 400b8a8:	00bfdfc4 	movi	r2,-129
 400b8ac:	a096703a 	and	r11,r20,r2
 400b8b0:	d8c02215 	stw	r3,136(sp)
 400b8b4:	5d000094 	ori	r20,r11,2
 400b8b8:	90032b1e 	bne	r18,zero,400c568 <___vfiprintf_internal_r+0x108c>
 400b8bc:	00810074 	movhi	r2,1025
 400b8c0:	10920d04 	addi	r2,r2,18484
 400b8c4:	d8802615 	stw	r2,152(sp)
 400b8c8:	0039883a 	mov	fp,zero
 400b8cc:	48017b1e 	bne	r9,zero,400bebc <___vfiprintf_internal_r+0x9e0>
 400b8d0:	0013883a 	mov	r9,zero
 400b8d4:	0027883a 	mov	r19,zero
 400b8d8:	dd401a04 	addi	r21,sp,104
 400b8dc:	4825883a 	mov	r18,r9
 400b8e0:	4cc0010e 	bge	r9,r19,400b8e8 <___vfiprintf_internal_r+0x40c>
 400b8e4:	9825883a 	mov	r18,r19
 400b8e8:	e7003fcc 	andi	fp,fp,255
 400b8ec:	e700201c 	xori	fp,fp,128
 400b8f0:	e73fe004 	addi	fp,fp,-128
 400b8f4:	e0000126 	beq	fp,zero,400b8fc <___vfiprintf_internal_r+0x420>
 400b8f8:	94800044 	addi	r18,r18,1
 400b8fc:	a380008c 	andi	r14,r20,2
 400b900:	70000126 	beq	r14,zero,400b908 <___vfiprintf_internal_r+0x42c>
 400b904:	94800084 	addi	r18,r18,2
 400b908:	a700210c 	andi	fp,r20,132
 400b90c:	e001df1e 	bne	fp,zero,400c08c <___vfiprintf_internal_r+0xbb0>
 400b910:	8c87c83a 	sub	r3,r17,r18
 400b914:	00c1dd0e 	bge	zero,r3,400c08c <___vfiprintf_internal_r+0xbb0>
 400b918:	01c00404 	movi	r7,16
 400b91c:	d8801c17 	ldw	r2,112(sp)
 400b920:	38c3ad0e 	bge	r7,r3,400c7d8 <___vfiprintf_internal_r+0x12fc>
 400b924:	02810074 	movhi	r10,1025
 400b928:	52928204 	addi	r10,r10,18952
 400b92c:	dc002915 	stw	r16,164(sp)
 400b930:	d9801b17 	ldw	r6,108(sp)
 400b934:	da802415 	stw	r10,144(sp)
 400b938:	03c001c4 	movi	r15,7
 400b93c:	da402515 	stw	r9,148(sp)
 400b940:	db802815 	stw	r14,160(sp)
 400b944:	1821883a 	mov	r16,r3
 400b948:	00000506 	br	400b960 <___vfiprintf_internal_r+0x484>
 400b94c:	31400084 	addi	r5,r6,2
 400b950:	42000204 	addi	r8,r8,8
 400b954:	200d883a 	mov	r6,r4
 400b958:	843ffc04 	addi	r16,r16,-16
 400b95c:	3c000d0e 	bge	r7,r16,400b994 <___vfiprintf_internal_r+0x4b8>
 400b960:	10800404 	addi	r2,r2,16
 400b964:	31000044 	addi	r4,r6,1
 400b968:	45800015 	stw	r22,0(r8)
 400b96c:	41c00115 	stw	r7,4(r8)
 400b970:	d8801c15 	stw	r2,112(sp)
 400b974:	d9001b15 	stw	r4,108(sp)
 400b978:	793ff40e 	bge	r15,r4,400b94c <__ram_exceptions_end+0xfbfeb704>
 400b97c:	1001b51e 	bne	r2,zero,400c054 <___vfiprintf_internal_r+0xb78>
 400b980:	843ffc04 	addi	r16,r16,-16
 400b984:	000d883a 	mov	r6,zero
 400b988:	01400044 	movi	r5,1
 400b98c:	d811883a 	mov	r8,sp
 400b990:	3c3ff316 	blt	r7,r16,400b960 <__ram_exceptions_end+0xfbfeb718>
 400b994:	8007883a 	mov	r3,r16
 400b998:	da402517 	ldw	r9,148(sp)
 400b99c:	db802817 	ldw	r14,160(sp)
 400b9a0:	dc002917 	ldw	r16,164(sp)
 400b9a4:	da802417 	ldw	r10,144(sp)
 400b9a8:	1885883a 	add	r2,r3,r2
 400b9ac:	40c00115 	stw	r3,4(r8)
 400b9b0:	42800015 	stw	r10,0(r8)
 400b9b4:	d8801c15 	stw	r2,112(sp)
 400b9b8:	d9401b15 	stw	r5,108(sp)
 400b9bc:	00c001c4 	movi	r3,7
 400b9c0:	19426016 	blt	r3,r5,400c344 <___vfiprintf_internal_r+0xe68>
 400b9c4:	d8c01d87 	ldb	r3,118(sp)
 400b9c8:	42000204 	addi	r8,r8,8
 400b9cc:	29000044 	addi	r4,r5,1
 400b9d0:	1801b31e 	bne	r3,zero,400c0a0 <___vfiprintf_internal_r+0xbc4>
 400b9d4:	7001c026 	beq	r14,zero,400c0d8 <___vfiprintf_internal_r+0xbfc>
 400b9d8:	d8c01d04 	addi	r3,sp,116
 400b9dc:	10800084 	addi	r2,r2,2
 400b9e0:	40c00015 	stw	r3,0(r8)
 400b9e4:	00c00084 	movi	r3,2
 400b9e8:	40c00115 	stw	r3,4(r8)
 400b9ec:	d8801c15 	stw	r2,112(sp)
 400b9f0:	d9001b15 	stw	r4,108(sp)
 400b9f4:	00c001c4 	movi	r3,7
 400b9f8:	1902650e 	bge	r3,r4,400c390 <___vfiprintf_internal_r+0xeb4>
 400b9fc:	10029a1e 	bne	r2,zero,400c468 <___vfiprintf_internal_r+0xf8c>
 400ba00:	00c02004 	movi	r3,128
 400ba04:	01000044 	movi	r4,1
 400ba08:	000b883a 	mov	r5,zero
 400ba0c:	d811883a 	mov	r8,sp
 400ba10:	e0c1b31e 	bne	fp,r3,400c0e0 <___vfiprintf_internal_r+0xc04>
 400ba14:	8cb9c83a 	sub	fp,r17,r18
 400ba18:	0701b10e 	bge	zero,fp,400c0e0 <___vfiprintf_internal_r+0xc04>
 400ba1c:	01c00404 	movi	r7,16
 400ba20:	3f03890e 	bge	r7,fp,400c848 <___vfiprintf_internal_r+0x136c>
 400ba24:	00c10074 	movhi	r3,1025
 400ba28:	18d27e04 	addi	r3,r3,18936
 400ba2c:	d8c02415 	stw	r3,144(sp)
 400ba30:	8007883a 	mov	r3,r16
 400ba34:	034001c4 	movi	r13,7
 400ba38:	e021883a 	mov	r16,fp
 400ba3c:	da402515 	stw	r9,148(sp)
 400ba40:	1839883a 	mov	fp,r3
 400ba44:	00000506 	br	400ba5c <___vfiprintf_internal_r+0x580>
 400ba48:	29800084 	addi	r6,r5,2
 400ba4c:	42000204 	addi	r8,r8,8
 400ba50:	180b883a 	mov	r5,r3
 400ba54:	843ffc04 	addi	r16,r16,-16
 400ba58:	3c000d0e 	bge	r7,r16,400ba90 <___vfiprintf_internal_r+0x5b4>
 400ba5c:	10800404 	addi	r2,r2,16
 400ba60:	28c00044 	addi	r3,r5,1
 400ba64:	45c00015 	stw	r23,0(r8)
 400ba68:	41c00115 	stw	r7,4(r8)
 400ba6c:	d8801c15 	stw	r2,112(sp)
 400ba70:	d8c01b15 	stw	r3,108(sp)
 400ba74:	68fff40e 	bge	r13,r3,400ba48 <__ram_exceptions_end+0xfbfeb800>
 400ba78:	1002241e 	bne	r2,zero,400c30c <___vfiprintf_internal_r+0xe30>
 400ba7c:	843ffc04 	addi	r16,r16,-16
 400ba80:	01800044 	movi	r6,1
 400ba84:	000b883a 	mov	r5,zero
 400ba88:	d811883a 	mov	r8,sp
 400ba8c:	3c3ff316 	blt	r7,r16,400ba5c <__ram_exceptions_end+0xfbfeb814>
 400ba90:	da402517 	ldw	r9,148(sp)
 400ba94:	e007883a 	mov	r3,fp
 400ba98:	8039883a 	mov	fp,r16
 400ba9c:	1821883a 	mov	r16,r3
 400baa0:	d8c02417 	ldw	r3,144(sp)
 400baa4:	1705883a 	add	r2,r2,fp
 400baa8:	47000115 	stw	fp,4(r8)
 400baac:	40c00015 	stw	r3,0(r8)
 400bab0:	d8801c15 	stw	r2,112(sp)
 400bab4:	d9801b15 	stw	r6,108(sp)
 400bab8:	00c001c4 	movi	r3,7
 400babc:	19827616 	blt	r3,r6,400c498 <___vfiprintf_internal_r+0xfbc>
 400bac0:	4cf9c83a 	sub	fp,r9,r19
 400bac4:	42000204 	addi	r8,r8,8
 400bac8:	31000044 	addi	r4,r6,1
 400bacc:	300b883a 	mov	r5,r6
 400bad0:	07018516 	blt	zero,fp,400c0e8 <___vfiprintf_internal_r+0xc0c>
 400bad4:	9885883a 	add	r2,r19,r2
 400bad8:	45400015 	stw	r21,0(r8)
 400badc:	44c00115 	stw	r19,4(r8)
 400bae0:	d8801c15 	stw	r2,112(sp)
 400bae4:	d9001b15 	stw	r4,108(sp)
 400bae8:	00c001c4 	movi	r3,7
 400baec:	1901dd0e 	bge	r3,r4,400c264 <___vfiprintf_internal_r+0xd88>
 400baf0:	1002401e 	bne	r2,zero,400c3f4 <___vfiprintf_internal_r+0xf18>
 400baf4:	d8001b15 	stw	zero,108(sp)
 400baf8:	a2c0010c 	andi	r11,r20,4
 400bafc:	58000226 	beq	r11,zero,400bb08 <___vfiprintf_internal_r+0x62c>
 400bb00:	8ca7c83a 	sub	r19,r17,r18
 400bb04:	04c2f216 	blt	zero,r19,400c6d0 <___vfiprintf_internal_r+0x11f4>
 400bb08:	8c80010e 	bge	r17,r18,400bb10 <___vfiprintf_internal_r+0x634>
 400bb0c:	9023883a 	mov	r17,r18
 400bb10:	da802317 	ldw	r10,140(sp)
 400bb14:	5455883a 	add	r10,r10,r17
 400bb18:	da802315 	stw	r10,140(sp)
 400bb1c:	d8001b15 	stw	zero,108(sp)
 400bb20:	d811883a 	mov	r8,sp
 400bb24:	003ea206 	br	400b5b0 <__ram_exceptions_end+0xfbfeb368>
 400bb28:	a5000814 	ori	r20,r20,32
 400bb2c:	80c00007 	ldb	r3,0(r16)
 400bb30:	003ec906 	br	400b658 <__ram_exceptions_end+0xfbfeb410>
 400bb34:	80c00007 	ldb	r3,0(r16)
 400bb38:	1b030926 	beq	r3,r12,400c760 <___vfiprintf_internal_r+0x1284>
 400bb3c:	a5000414 	ori	r20,r20,16
 400bb40:	003ec506 	br	400b658 <__ram_exceptions_end+0xfbfeb410>
 400bb44:	21003fcc 	andi	r4,r4,255
 400bb48:	20035e1e 	bne	r4,zero,400c8c4 <___vfiprintf_internal_r+0x13e8>
 400bb4c:	a080080c 	andi	r2,r20,32
 400bb50:	1002a526 	beq	r2,zero,400c5e8 <___vfiprintf_internal_r+0x110c>
 400bb54:	da802217 	ldw	r10,136(sp)
 400bb58:	50800017 	ldw	r2,0(r10)
 400bb5c:	da802317 	ldw	r10,140(sp)
 400bb60:	5007d7fa 	srai	r3,r10,31
 400bb64:	da802217 	ldw	r10,136(sp)
 400bb68:	10c00115 	stw	r3,4(r2)
 400bb6c:	52800104 	addi	r10,r10,4
 400bb70:	da802215 	stw	r10,136(sp)
 400bb74:	da802317 	ldw	r10,140(sp)
 400bb78:	12800015 	stw	r10,0(r2)
 400bb7c:	003e8c06 	br	400b5b0 <__ram_exceptions_end+0xfbfeb368>
 400bb80:	21003fcc 	andi	r4,r4,255
 400bb84:	2003511e 	bne	r4,zero,400c8cc <___vfiprintf_internal_r+0x13f0>
 400bb88:	a080080c 	andi	r2,r20,32
 400bb8c:	1000a126 	beq	r2,zero,400be14 <___vfiprintf_internal_r+0x938>
 400bb90:	da802217 	ldw	r10,136(sp)
 400bb94:	d8001d85 	stb	zero,118(sp)
 400bb98:	50800204 	addi	r2,r10,8
 400bb9c:	54800017 	ldw	r18,0(r10)
 400bba0:	54c00117 	ldw	r19,4(r10)
 400bba4:	4802b416 	blt	r9,zero,400c678 <___vfiprintf_internal_r+0x119c>
 400bba8:	013fdfc4 	movi	r4,-129
 400bbac:	94c6b03a 	or	r3,r18,r19
 400bbb0:	d8802215 	stw	r2,136(sp)
 400bbb4:	a128703a 	and	r20,r20,r4
 400bbb8:	1800a226 	beq	r3,zero,400be44 <___vfiprintf_internal_r+0x968>
 400bbbc:	0039883a 	mov	fp,zero
 400bbc0:	dd401a04 	addi	r21,sp,104
 400bbc4:	9006d0fa 	srli	r3,r18,3
 400bbc8:	9808977a 	slli	r4,r19,29
 400bbcc:	9826d0fa 	srli	r19,r19,3
 400bbd0:	948001cc 	andi	r18,r18,7
 400bbd4:	90800c04 	addi	r2,r18,48
 400bbd8:	ad7fffc4 	addi	r21,r21,-1
 400bbdc:	20e4b03a 	or	r18,r4,r3
 400bbe0:	a8800005 	stb	r2,0(r21)
 400bbe4:	94c6b03a 	or	r3,r18,r19
 400bbe8:	183ff61e 	bne	r3,zero,400bbc4 <__ram_exceptions_end+0xfbfeb97c>
 400bbec:	a0c0004c 	andi	r3,r20,1
 400bbf0:	18005926 	beq	r3,zero,400bd58 <___vfiprintf_internal_r+0x87c>
 400bbf4:	10803fcc 	andi	r2,r2,255
 400bbf8:	1080201c 	xori	r2,r2,128
 400bbfc:	10bfe004 	addi	r2,r2,-128
 400bc00:	00c00c04 	movi	r3,48
 400bc04:	10c05426 	beq	r2,r3,400bd58 <___vfiprintf_internal_r+0x87c>
 400bc08:	da801e17 	ldw	r10,120(sp)
 400bc0c:	a8bfffc4 	addi	r2,r21,-1
 400bc10:	a8ffffc5 	stb	r3,-1(r21)
 400bc14:	50a7c83a 	sub	r19,r10,r2
 400bc18:	102b883a 	mov	r21,r2
 400bc1c:	003f2f06 	br	400b8dc <__ram_exceptions_end+0xfbfeb694>
 400bc20:	21003fcc 	andi	r4,r4,255
 400bc24:	2003421e 	bne	r4,zero,400c930 <___vfiprintf_internal_r+0x1454>
 400bc28:	00810074 	movhi	r2,1025
 400bc2c:	10920d04 	addi	r2,r2,18484
 400bc30:	d8802615 	stw	r2,152(sp)
 400bc34:	a080080c 	andi	r2,r20,32
 400bc38:	1000aa26 	beq	r2,zero,400bee4 <___vfiprintf_internal_r+0xa08>
 400bc3c:	da802217 	ldw	r10,136(sp)
 400bc40:	54800017 	ldw	r18,0(r10)
 400bc44:	54c00117 	ldw	r19,4(r10)
 400bc48:	52800204 	addi	r10,r10,8
 400bc4c:	da802215 	stw	r10,136(sp)
 400bc50:	a080004c 	andi	r2,r20,1
 400bc54:	1001d226 	beq	r2,zero,400c3a0 <___vfiprintf_internal_r+0xec4>
 400bc58:	94c4b03a 	or	r2,r18,r19
 400bc5c:	1002351e 	bne	r2,zero,400c534 <___vfiprintf_internal_r+0x1058>
 400bc60:	d8001d85 	stb	zero,118(sp)
 400bc64:	48022216 	blt	r9,zero,400c4f0 <___vfiprintf_internal_r+0x1014>
 400bc68:	00bfdfc4 	movi	r2,-129
 400bc6c:	a0a8703a 	and	r20,r20,r2
 400bc70:	003f1506 	br	400b8c8 <__ram_exceptions_end+0xfbfeb680>
 400bc74:	da802217 	ldw	r10,136(sp)
 400bc78:	04800044 	movi	r18,1
 400bc7c:	d8001d85 	stb	zero,118(sp)
 400bc80:	50800017 	ldw	r2,0(r10)
 400bc84:	52800104 	addi	r10,r10,4
 400bc88:	da802215 	stw	r10,136(sp)
 400bc8c:	d8801005 	stb	r2,64(sp)
 400bc90:	9027883a 	mov	r19,r18
 400bc94:	dd401004 	addi	r21,sp,64
 400bc98:	0013883a 	mov	r9,zero
 400bc9c:	003f1706 	br	400b8fc <__ram_exceptions_end+0xfbfeb6b4>
 400bca0:	21003fcc 	andi	r4,r4,255
 400bca4:	2003201e 	bne	r4,zero,400c928 <___vfiprintf_internal_r+0x144c>
 400bca8:	a080080c 	andi	r2,r20,32
 400bcac:	10004b26 	beq	r2,zero,400bddc <___vfiprintf_internal_r+0x900>
 400bcb0:	da802217 	ldw	r10,136(sp)
 400bcb4:	50800117 	ldw	r2,4(r10)
 400bcb8:	54800017 	ldw	r18,0(r10)
 400bcbc:	52800204 	addi	r10,r10,8
 400bcc0:	da802215 	stw	r10,136(sp)
 400bcc4:	1027883a 	mov	r19,r2
 400bcc8:	10022c16 	blt	r2,zero,400c57c <___vfiprintf_internal_r+0x10a0>
 400bccc:	df001d83 	ldbu	fp,118(sp)
 400bcd0:	48007216 	blt	r9,zero,400be9c <___vfiprintf_internal_r+0x9c0>
 400bcd4:	00ffdfc4 	movi	r3,-129
 400bcd8:	94c4b03a 	or	r2,r18,r19
 400bcdc:	a0e8703a 	and	r20,r20,r3
 400bce0:	1000cc26 	beq	r2,zero,400c014 <___vfiprintf_internal_r+0xb38>
 400bce4:	98021026 	beq	r19,zero,400c528 <___vfiprintf_internal_r+0x104c>
 400bce8:	dc402415 	stw	r17,144(sp)
 400bcec:	dc002515 	stw	r16,148(sp)
 400bcf0:	9823883a 	mov	r17,r19
 400bcf4:	9021883a 	mov	r16,r18
 400bcf8:	dd401a04 	addi	r21,sp,104
 400bcfc:	4825883a 	mov	r18,r9
 400bd00:	4027883a 	mov	r19,r8
 400bd04:	8009883a 	mov	r4,r16
 400bd08:	880b883a 	mov	r5,r17
 400bd0c:	01800284 	movi	r6,10
 400bd10:	000f883a 	mov	r7,zero
 400bd14:	400d8bc0 	call	400d8bc <__umoddi3>
 400bd18:	10800c04 	addi	r2,r2,48
 400bd1c:	ad7fffc4 	addi	r21,r21,-1
 400bd20:	8009883a 	mov	r4,r16
 400bd24:	880b883a 	mov	r5,r17
 400bd28:	a8800005 	stb	r2,0(r21)
 400bd2c:	01800284 	movi	r6,10
 400bd30:	000f883a 	mov	r7,zero
 400bd34:	400d3440 	call	400d344 <__udivdi3>
 400bd38:	1021883a 	mov	r16,r2
 400bd3c:	10c4b03a 	or	r2,r2,r3
 400bd40:	1823883a 	mov	r17,r3
 400bd44:	103fef1e 	bne	r2,zero,400bd04 <__ram_exceptions_end+0xfbfebabc>
 400bd48:	dc402417 	ldw	r17,144(sp)
 400bd4c:	dc002517 	ldw	r16,148(sp)
 400bd50:	9013883a 	mov	r9,r18
 400bd54:	9811883a 	mov	r8,r19
 400bd58:	da801e17 	ldw	r10,120(sp)
 400bd5c:	5567c83a 	sub	r19,r10,r21
 400bd60:	003ede06 	br	400b8dc <__ram_exceptions_end+0xfbfeb694>
 400bd64:	38803fcc 	andi	r2,r7,255
 400bd68:	1080201c 	xori	r2,r2,128
 400bd6c:	10bfe004 	addi	r2,r2,-128
 400bd70:	1002371e 	bne	r2,zero,400c650 <___vfiprintf_internal_r+0x1174>
 400bd74:	01000044 	movi	r4,1
 400bd78:	01c00804 	movi	r7,32
 400bd7c:	80c00007 	ldb	r3,0(r16)
 400bd80:	003e3506 	br	400b658 <__ram_exceptions_end+0xfbfeb410>
 400bd84:	a5000054 	ori	r20,r20,1
 400bd88:	80c00007 	ldb	r3,0(r16)
 400bd8c:	003e3206 	br	400b658 <__ram_exceptions_end+0xfbfeb410>
 400bd90:	a5002014 	ori	r20,r20,128
 400bd94:	80c00007 	ldb	r3,0(r16)
 400bd98:	003e2f06 	br	400b658 <__ram_exceptions_end+0xfbfeb410>
 400bd9c:	8015883a 	mov	r10,r16
 400bda0:	0023883a 	mov	r17,zero
 400bda4:	18bff404 	addi	r2,r3,-48
 400bda8:	50c00007 	ldb	r3,0(r10)
 400bdac:	8c4002a4 	muli	r17,r17,10
 400bdb0:	84000044 	addi	r16,r16,1
 400bdb4:	8015883a 	mov	r10,r16
 400bdb8:	1463883a 	add	r17,r2,r17
 400bdbc:	18bff404 	addi	r2,r3,-48
 400bdc0:	30bff92e 	bgeu	r6,r2,400bda8 <__ram_exceptions_end+0xfbfebb60>
 400bdc4:	003e2506 	br	400b65c <__ram_exceptions_end+0xfbfeb414>
 400bdc8:	21003fcc 	andi	r4,r4,255
 400bdcc:	2002d41e 	bne	r4,zero,400c920 <___vfiprintf_internal_r+0x1444>
 400bdd0:	a5000414 	ori	r20,r20,16
 400bdd4:	a080080c 	andi	r2,r20,32
 400bdd8:	103fb51e 	bne	r2,zero,400bcb0 <__ram_exceptions_end+0xfbfeba68>
 400bddc:	a080040c 	andi	r2,r20,16
 400bde0:	1001f826 	beq	r2,zero,400c5c4 <___vfiprintf_internal_r+0x10e8>
 400bde4:	da802217 	ldw	r10,136(sp)
 400bde8:	54800017 	ldw	r18,0(r10)
 400bdec:	52800104 	addi	r10,r10,4
 400bdf0:	da802215 	stw	r10,136(sp)
 400bdf4:	9027d7fa 	srai	r19,r18,31
 400bdf8:	9805883a 	mov	r2,r19
 400bdfc:	003fb206 	br	400bcc8 <__ram_exceptions_end+0xfbfeba80>
 400be00:	21003fcc 	andi	r4,r4,255
 400be04:	2002c41e 	bne	r4,zero,400c918 <___vfiprintf_internal_r+0x143c>
 400be08:	a5000414 	ori	r20,r20,16
 400be0c:	a080080c 	andi	r2,r20,32
 400be10:	103f5f1e 	bne	r2,zero,400bb90 <__ram_exceptions_end+0xfbfeb948>
 400be14:	a080040c 	andi	r2,r20,16
 400be18:	10020f26 	beq	r2,zero,400c658 <___vfiprintf_internal_r+0x117c>
 400be1c:	da802217 	ldw	r10,136(sp)
 400be20:	d8001d85 	stb	zero,118(sp)
 400be24:	0027883a 	mov	r19,zero
 400be28:	50800104 	addi	r2,r10,4
 400be2c:	54800017 	ldw	r18,0(r10)
 400be30:	48021116 	blt	r9,zero,400c678 <___vfiprintf_internal_r+0x119c>
 400be34:	00ffdfc4 	movi	r3,-129
 400be38:	d8802215 	stw	r2,136(sp)
 400be3c:	a0e8703a 	and	r20,r20,r3
 400be40:	903f5e1e 	bne	r18,zero,400bbbc <__ram_exceptions_end+0xfbfeb974>
 400be44:	0039883a 	mov	fp,zero
 400be48:	4802a626 	beq	r9,zero,400c8e4 <___vfiprintf_internal_r+0x1408>
 400be4c:	0025883a 	mov	r18,zero
 400be50:	0027883a 	mov	r19,zero
 400be54:	003f5a06 	br	400bbc0 <__ram_exceptions_end+0xfbfeb978>
 400be58:	21003fcc 	andi	r4,r4,255
 400be5c:	20029f1e 	bne	r4,zero,400c8dc <___vfiprintf_internal_r+0x1400>
 400be60:	a5000414 	ori	r20,r20,16
 400be64:	a080080c 	andi	r2,r20,32
 400be68:	10005e1e 	bne	r2,zero,400bfe4 <___vfiprintf_internal_r+0xb08>
 400be6c:	a080040c 	andi	r2,r20,16
 400be70:	1001a21e 	bne	r2,zero,400c4fc <___vfiprintf_internal_r+0x1020>
 400be74:	a080100c 	andi	r2,r20,64
 400be78:	d8001d85 	stb	zero,118(sp)
 400be7c:	da802217 	ldw	r10,136(sp)
 400be80:	1002231e 	bne	r2,zero,400c710 <___vfiprintf_internal_r+0x1234>
 400be84:	50800104 	addi	r2,r10,4
 400be88:	54800017 	ldw	r18,0(r10)
 400be8c:	0027883a 	mov	r19,zero
 400be90:	4801a00e 	bge	r9,zero,400c514 <___vfiprintf_internal_r+0x1038>
 400be94:	d8802215 	stw	r2,136(sp)
 400be98:	0039883a 	mov	fp,zero
 400be9c:	94c4b03a 	or	r2,r18,r19
 400bea0:	103f901e 	bne	r2,zero,400bce4 <__ram_exceptions_end+0xfbfeba9c>
 400bea4:	00800044 	movi	r2,1
 400bea8:	10803fcc 	andi	r2,r2,255
 400beac:	00c00044 	movi	r3,1
 400beb0:	10c05926 	beq	r2,r3,400c018 <___vfiprintf_internal_r+0xb3c>
 400beb4:	00c00084 	movi	r3,2
 400beb8:	10ffe41e 	bne	r2,r3,400be4c <__ram_exceptions_end+0xfbfebc04>
 400bebc:	0025883a 	mov	r18,zero
 400bec0:	0027883a 	mov	r19,zero
 400bec4:	00013d06 	br	400c3bc <___vfiprintf_internal_r+0xee0>
 400bec8:	21003fcc 	andi	r4,r4,255
 400becc:	2002811e 	bne	r4,zero,400c8d4 <___vfiprintf_internal_r+0x13f8>
 400bed0:	00810074 	movhi	r2,1025
 400bed4:	10920804 	addi	r2,r2,18464
 400bed8:	d8802615 	stw	r2,152(sp)
 400bedc:	a080080c 	andi	r2,r20,32
 400bee0:	103f561e 	bne	r2,zero,400bc3c <__ram_exceptions_end+0xfbfeb9f4>
 400bee4:	a080040c 	andi	r2,r20,16
 400bee8:	1001d126 	beq	r2,zero,400c630 <___vfiprintf_internal_r+0x1154>
 400beec:	da802217 	ldw	r10,136(sp)
 400bef0:	0027883a 	mov	r19,zero
 400bef4:	54800017 	ldw	r18,0(r10)
 400bef8:	52800104 	addi	r10,r10,4
 400befc:	da802215 	stw	r10,136(sp)
 400bf00:	003f5306 	br	400bc50 <__ram_exceptions_end+0xfbfeba08>
 400bf04:	da802217 	ldw	r10,136(sp)
 400bf08:	d8001d85 	stb	zero,118(sp)
 400bf0c:	55400017 	ldw	r21,0(r10)
 400bf10:	50c00104 	addi	r3,r10,4
 400bf14:	a8024226 	beq	r21,zero,400c820 <___vfiprintf_internal_r+0x1344>
 400bf18:	48021816 	blt	r9,zero,400c77c <___vfiprintf_internal_r+0x12a0>
 400bf1c:	480d883a 	mov	r6,r9
 400bf20:	000b883a 	mov	r5,zero
 400bf24:	a809883a 	mov	r4,r21
 400bf28:	d8c02a15 	stw	r3,168(sp)
 400bf2c:	da002b15 	stw	r8,172(sp)
 400bf30:	da402c15 	stw	r9,176(sp)
 400bf34:	40082400 	call	4008240 <memchr>
 400bf38:	d8c02a17 	ldw	r3,168(sp)
 400bf3c:	da002b17 	ldw	r8,172(sp)
 400bf40:	da402c17 	ldw	r9,176(sp)
 400bf44:	10024826 	beq	r2,zero,400c868 <___vfiprintf_internal_r+0x138c>
 400bf48:	1567c83a 	sub	r19,r2,r21
 400bf4c:	df001d83 	ldbu	fp,118(sp)
 400bf50:	d8c02215 	stw	r3,136(sp)
 400bf54:	0013883a 	mov	r9,zero
 400bf58:	003e6006 	br	400b8dc <__ram_exceptions_end+0xfbfeb694>
 400bf5c:	21003fcc 	andi	r4,r4,255
 400bf60:	203fc026 	beq	r4,zero,400be64 <__ram_exceptions_end+0xfbfebc1c>
 400bf64:	d9c01d85 	stb	r7,118(sp)
 400bf68:	003fbe06 	br	400be64 <__ram_exceptions_end+0xfbfebc1c>
 400bf6c:	da802217 	ldw	r10,136(sp)
 400bf70:	54400017 	ldw	r17,0(r10)
 400bf74:	50800104 	addi	r2,r10,4
 400bf78:	883e3b16 	blt	r17,zero,400b868 <__ram_exceptions_end+0xfbfeb620>
 400bf7c:	d8802215 	stw	r2,136(sp)
 400bf80:	80c00007 	ldb	r3,0(r16)
 400bf84:	003db406 	br	400b658 <__ram_exceptions_end+0xfbfeb410>
 400bf88:	01000044 	movi	r4,1
 400bf8c:	01c00ac4 	movi	r7,43
 400bf90:	80c00007 	ldb	r3,0(r16)
 400bf94:	003db006 	br	400b658 <__ram_exceptions_end+0xfbfeb410>
 400bf98:	80c00007 	ldb	r3,0(r16)
 400bf9c:	82800044 	addi	r10,r16,1
 400bfa0:	1b423c26 	beq	r3,r13,400c894 <___vfiprintf_internal_r+0x13b8>
 400bfa4:	18bff404 	addi	r2,r3,-48
 400bfa8:	0013883a 	mov	r9,zero
 400bfac:	30822b36 	bltu	r6,r2,400c85c <___vfiprintf_internal_r+0x1380>
 400bfb0:	50c00007 	ldb	r3,0(r10)
 400bfb4:	4a4002a4 	muli	r9,r9,10
 400bfb8:	54000044 	addi	r16,r10,1
 400bfbc:	8015883a 	mov	r10,r16
 400bfc0:	4893883a 	add	r9,r9,r2
 400bfc4:	18bff404 	addi	r2,r3,-48
 400bfc8:	30bff92e 	bgeu	r6,r2,400bfb0 <__ram_exceptions_end+0xfbfebd68>
 400bfcc:	483da30e 	bge	r9,zero,400b65c <__ram_exceptions_end+0xfbfeb414>
 400bfd0:	027fffc4 	movi	r9,-1
 400bfd4:	003da106 	br	400b65c <__ram_exceptions_end+0xfbfeb414>
 400bfd8:	a5001014 	ori	r20,r20,64
 400bfdc:	80c00007 	ldb	r3,0(r16)
 400bfe0:	003d9d06 	br	400b658 <__ram_exceptions_end+0xfbfeb410>
 400bfe4:	da802217 	ldw	r10,136(sp)
 400bfe8:	d8001d85 	stb	zero,118(sp)
 400bfec:	50c00204 	addi	r3,r10,8
 400bff0:	54800017 	ldw	r18,0(r10)
 400bff4:	54c00117 	ldw	r19,4(r10)
 400bff8:	4801ca16 	blt	r9,zero,400c724 <___vfiprintf_internal_r+0x1248>
 400bffc:	013fdfc4 	movi	r4,-129
 400c000:	94c4b03a 	or	r2,r18,r19
 400c004:	d8c02215 	stw	r3,136(sp)
 400c008:	a128703a 	and	r20,r20,r4
 400c00c:	0039883a 	mov	fp,zero
 400c010:	103f341e 	bne	r2,zero,400bce4 <__ram_exceptions_end+0xfbfeba9c>
 400c014:	483e2e26 	beq	r9,zero,400b8d0 <__ram_exceptions_end+0xfbfeb688>
 400c018:	0025883a 	mov	r18,zero
 400c01c:	94800c04 	addi	r18,r18,48
 400c020:	dc8019c5 	stb	r18,103(sp)
 400c024:	dcc02717 	ldw	r19,156(sp)
 400c028:	dd4019c4 	addi	r21,sp,103
 400c02c:	003e2b06 	br	400b8dc <__ram_exceptions_end+0xfbfeb694>
 400c030:	21003fcc 	andi	r4,r4,255
 400c034:	2002361e 	bne	r4,zero,400c910 <___vfiprintf_internal_r+0x1434>
 400c038:	1801c126 	beq	r3,zero,400c740 <___vfiprintf_internal_r+0x1264>
 400c03c:	04800044 	movi	r18,1
 400c040:	d8c01005 	stb	r3,64(sp)
 400c044:	d8001d85 	stb	zero,118(sp)
 400c048:	9027883a 	mov	r19,r18
 400c04c:	dd401004 	addi	r21,sp,64
 400c050:	003f1106 	br	400bc98 <__ram_exceptions_end+0xfbfeba50>
 400c054:	d9402117 	ldw	r5,132(sp)
 400c058:	d9002017 	ldw	r4,128(sp)
 400c05c:	d9801a04 	addi	r6,sp,104
 400c060:	d9c02b15 	stw	r7,172(sp)
 400c064:	dbc02a15 	stw	r15,168(sp)
 400c068:	400b3c80 	call	400b3c8 <__sprint_r.part.0>
 400c06c:	d9c02b17 	ldw	r7,172(sp)
 400c070:	dbc02a17 	ldw	r15,168(sp)
 400c074:	10006d1e 	bne	r2,zero,400c22c <___vfiprintf_internal_r+0xd50>
 400c078:	d9801b17 	ldw	r6,108(sp)
 400c07c:	d8801c17 	ldw	r2,112(sp)
 400c080:	d811883a 	mov	r8,sp
 400c084:	31400044 	addi	r5,r6,1
 400c088:	003e3306 	br	400b958 <__ram_exceptions_end+0xfbfeb710>
 400c08c:	d9401b17 	ldw	r5,108(sp)
 400c090:	d8801c17 	ldw	r2,112(sp)
 400c094:	29000044 	addi	r4,r5,1
 400c098:	d8c01d87 	ldb	r3,118(sp)
 400c09c:	183e4d26 	beq	r3,zero,400b9d4 <__ram_exceptions_end+0xfbfeb78c>
 400c0a0:	00c00044 	movi	r3,1
 400c0a4:	d9401d84 	addi	r5,sp,118
 400c0a8:	10c5883a 	add	r2,r2,r3
 400c0ac:	41400015 	stw	r5,0(r8)
 400c0b0:	40c00115 	stw	r3,4(r8)
 400c0b4:	d8801c15 	stw	r2,112(sp)
 400c0b8:	d9001b15 	stw	r4,108(sp)
 400c0bc:	014001c4 	movi	r5,7
 400c0c0:	2900a90e 	bge	r5,r4,400c368 <___vfiprintf_internal_r+0xe8c>
 400c0c4:	1000da1e 	bne	r2,zero,400c430 <___vfiprintf_internal_r+0xf54>
 400c0c8:	7000ab1e 	bne	r14,zero,400c378 <___vfiprintf_internal_r+0xe9c>
 400c0cc:	000b883a 	mov	r5,zero
 400c0d0:	1809883a 	mov	r4,r3
 400c0d4:	d811883a 	mov	r8,sp
 400c0d8:	00c02004 	movi	r3,128
 400c0dc:	e0fe4d26 	beq	fp,r3,400ba14 <__ram_exceptions_end+0xfbfeb7cc>
 400c0e0:	4cf9c83a 	sub	fp,r9,r19
 400c0e4:	073e7b0e 	bge	zero,fp,400bad4 <__ram_exceptions_end+0xfbfeb88c>
 400c0e8:	01c00404 	movi	r7,16
 400c0ec:	3f01900e 	bge	r7,fp,400c730 <___vfiprintf_internal_r+0x1254>
 400c0f0:	00c10074 	movhi	r3,1025
 400c0f4:	18d27e04 	addi	r3,r3,18936
 400c0f8:	d8c02415 	stw	r3,144(sp)
 400c0fc:	034001c4 	movi	r13,7
 400c100:	00000506 	br	400c118 <___vfiprintf_internal_r+0xc3c>
 400c104:	29000084 	addi	r4,r5,2
 400c108:	42000204 	addi	r8,r8,8
 400c10c:	180b883a 	mov	r5,r3
 400c110:	e73ffc04 	addi	fp,fp,-16
 400c114:	3f000d0e 	bge	r7,fp,400c14c <___vfiprintf_internal_r+0xc70>
 400c118:	10800404 	addi	r2,r2,16
 400c11c:	28c00044 	addi	r3,r5,1
 400c120:	45c00015 	stw	r23,0(r8)
 400c124:	41c00115 	stw	r7,4(r8)
 400c128:	d8801c15 	stw	r2,112(sp)
 400c12c:	d8c01b15 	stw	r3,108(sp)
 400c130:	68fff40e 	bge	r13,r3,400c104 <__ram_exceptions_end+0xfbfebebc>
 400c134:	1000101e 	bne	r2,zero,400c178 <___vfiprintf_internal_r+0xc9c>
 400c138:	e73ffc04 	addi	fp,fp,-16
 400c13c:	01000044 	movi	r4,1
 400c140:	000b883a 	mov	r5,zero
 400c144:	d811883a 	mov	r8,sp
 400c148:	3f3ff316 	blt	r7,fp,400c118 <__ram_exceptions_end+0xfbfebed0>
 400c14c:	da802417 	ldw	r10,144(sp)
 400c150:	1705883a 	add	r2,r2,fp
 400c154:	47000115 	stw	fp,4(r8)
 400c158:	42800015 	stw	r10,0(r8)
 400c15c:	d8801c15 	stw	r2,112(sp)
 400c160:	d9001b15 	stw	r4,108(sp)
 400c164:	00c001c4 	movi	r3,7
 400c168:	19003616 	blt	r3,r4,400c244 <___vfiprintf_internal_r+0xd68>
 400c16c:	42000204 	addi	r8,r8,8
 400c170:	21000044 	addi	r4,r4,1
 400c174:	003e5706 	br	400bad4 <__ram_exceptions_end+0xfbfeb88c>
 400c178:	d9402117 	ldw	r5,132(sp)
 400c17c:	d9002017 	ldw	r4,128(sp)
 400c180:	d9801a04 	addi	r6,sp,104
 400c184:	d9c02b15 	stw	r7,172(sp)
 400c188:	db402a15 	stw	r13,168(sp)
 400c18c:	400b3c80 	call	400b3c8 <__sprint_r.part.0>
 400c190:	d9c02b17 	ldw	r7,172(sp)
 400c194:	db402a17 	ldw	r13,168(sp)
 400c198:	1000241e 	bne	r2,zero,400c22c <___vfiprintf_internal_r+0xd50>
 400c19c:	d9401b17 	ldw	r5,108(sp)
 400c1a0:	d8801c17 	ldw	r2,112(sp)
 400c1a4:	d811883a 	mov	r8,sp
 400c1a8:	29000044 	addi	r4,r5,1
 400c1ac:	003fd806 	br	400c110 <__ram_exceptions_end+0xfbfebec8>
 400c1b0:	d9401b17 	ldw	r5,108(sp)
 400c1b4:	00c10074 	movhi	r3,1025
 400c1b8:	18d28204 	addi	r3,r3,18952
 400c1bc:	d8c02415 	stw	r3,144(sp)
 400c1c0:	29400044 	addi	r5,r5,1
 400c1c4:	d8c02417 	ldw	r3,144(sp)
 400c1c8:	14c5883a 	add	r2,r2,r19
 400c1cc:	44c00115 	stw	r19,4(r8)
 400c1d0:	40c00015 	stw	r3,0(r8)
 400c1d4:	d8801c15 	stw	r2,112(sp)
 400c1d8:	d9401b15 	stw	r5,108(sp)
 400c1dc:	00c001c4 	movi	r3,7
 400c1e0:	1940070e 	bge	r3,r5,400c200 <___vfiprintf_internal_r+0xd24>
 400c1e4:	103e4826 	beq	r2,zero,400bb08 <__ram_exceptions_end+0xfbfeb8c0>
 400c1e8:	d9402117 	ldw	r5,132(sp)
 400c1ec:	d9002017 	ldw	r4,128(sp)
 400c1f0:	d9801a04 	addi	r6,sp,104
 400c1f4:	400b3c80 	call	400b3c8 <__sprint_r.part.0>
 400c1f8:	10000c1e 	bne	r2,zero,400c22c <___vfiprintf_internal_r+0xd50>
 400c1fc:	d8801c17 	ldw	r2,112(sp)
 400c200:	8c80010e 	bge	r17,r18,400c208 <___vfiprintf_internal_r+0xd2c>
 400c204:	9023883a 	mov	r17,r18
 400c208:	da802317 	ldw	r10,140(sp)
 400c20c:	5455883a 	add	r10,r10,r17
 400c210:	da802315 	stw	r10,140(sp)
 400c214:	103e4126 	beq	r2,zero,400bb1c <__ram_exceptions_end+0xfbfeb8d4>
 400c218:	d9402117 	ldw	r5,132(sp)
 400c21c:	d9002017 	ldw	r4,128(sp)
 400c220:	d9801a04 	addi	r6,sp,104
 400c224:	400b3c80 	call	400b3c8 <__sprint_r.part.0>
 400c228:	103e3c26 	beq	r2,zero,400bb1c <__ram_exceptions_end+0xfbfeb8d4>
 400c22c:	dd002117 	ldw	r20,132(sp)
 400c230:	a080030b 	ldhu	r2,12(r20)
 400c234:	1080100c 	andi	r2,r2,64
 400c238:	1001231e 	bne	r2,zero,400c6c8 <___vfiprintf_internal_r+0x11ec>
 400c23c:	d8802317 	ldw	r2,140(sp)
 400c240:	003d7b06 	br	400b830 <__ram_exceptions_end+0xfbfeb5e8>
 400c244:	1000991e 	bne	r2,zero,400c4ac <___vfiprintf_internal_r+0xfd0>
 400c248:	00c00044 	movi	r3,1
 400c24c:	9805883a 	mov	r2,r19
 400c250:	dd400015 	stw	r21,0(sp)
 400c254:	dcc00115 	stw	r19,4(sp)
 400c258:	dcc01c15 	stw	r19,112(sp)
 400c25c:	d8c01b15 	stw	r3,108(sp)
 400c260:	d811883a 	mov	r8,sp
 400c264:	42000204 	addi	r8,r8,8
 400c268:	a2c0010c 	andi	r11,r20,4
 400c26c:	583fe426 	beq	r11,zero,400c200 <__ram_exceptions_end+0xfbfebfb8>
 400c270:	8ca7c83a 	sub	r19,r17,r18
 400c274:	04ffe20e 	bge	zero,r19,400c200 <__ram_exceptions_end+0xfbfebfb8>
 400c278:	01c00404 	movi	r7,16
 400c27c:	3cffcc0e 	bge	r7,r19,400c1b0 <__ram_exceptions_end+0xfbfebf68>
 400c280:	02810074 	movhi	r10,1025
 400c284:	52928204 	addi	r10,r10,18952
 400c288:	d9001b17 	ldw	r4,108(sp)
 400c28c:	da802415 	stw	r10,144(sp)
 400c290:	382b883a 	mov	r21,r7
 400c294:	050001c4 	movi	r20,7
 400c298:	df002017 	ldw	fp,128(sp)
 400c29c:	00000506 	br	400c2b4 <___vfiprintf_internal_r+0xdd8>
 400c2a0:	21400084 	addi	r5,r4,2
 400c2a4:	42000204 	addi	r8,r8,8
 400c2a8:	1809883a 	mov	r4,r3
 400c2ac:	9cfffc04 	addi	r19,r19,-16
 400c2b0:	acffc40e 	bge	r21,r19,400c1c4 <__ram_exceptions_end+0xfbfebf7c>
 400c2b4:	10800404 	addi	r2,r2,16
 400c2b8:	20c00044 	addi	r3,r4,1
 400c2bc:	45800015 	stw	r22,0(r8)
 400c2c0:	45400115 	stw	r21,4(r8)
 400c2c4:	d8801c15 	stw	r2,112(sp)
 400c2c8:	d8c01b15 	stw	r3,108(sp)
 400c2cc:	a0fff40e 	bge	r20,r3,400c2a0 <__ram_exceptions_end+0xfbfec058>
 400c2d0:	1000041e 	bne	r2,zero,400c2e4 <___vfiprintf_internal_r+0xe08>
 400c2d4:	01400044 	movi	r5,1
 400c2d8:	0009883a 	mov	r4,zero
 400c2dc:	d811883a 	mov	r8,sp
 400c2e0:	003ff206 	br	400c2ac <__ram_exceptions_end+0xfbfec064>
 400c2e4:	d9402117 	ldw	r5,132(sp)
 400c2e8:	d9801a04 	addi	r6,sp,104
 400c2ec:	e009883a 	mov	r4,fp
 400c2f0:	400b3c80 	call	400b3c8 <__sprint_r.part.0>
 400c2f4:	103fcd1e 	bne	r2,zero,400c22c <__ram_exceptions_end+0xfbfebfe4>
 400c2f8:	d9001b17 	ldw	r4,108(sp)
 400c2fc:	d8801c17 	ldw	r2,112(sp)
 400c300:	d811883a 	mov	r8,sp
 400c304:	21400044 	addi	r5,r4,1
 400c308:	003fe806 	br	400c2ac <__ram_exceptions_end+0xfbfec064>
 400c30c:	d9402117 	ldw	r5,132(sp)
 400c310:	d9002017 	ldw	r4,128(sp)
 400c314:	d9801a04 	addi	r6,sp,104
 400c318:	d9c02b15 	stw	r7,172(sp)
 400c31c:	db402a15 	stw	r13,168(sp)
 400c320:	400b3c80 	call	400b3c8 <__sprint_r.part.0>
 400c324:	d9c02b17 	ldw	r7,172(sp)
 400c328:	db402a17 	ldw	r13,168(sp)
 400c32c:	103fbf1e 	bne	r2,zero,400c22c <__ram_exceptions_end+0xfbfebfe4>
 400c330:	d9401b17 	ldw	r5,108(sp)
 400c334:	d8801c17 	ldw	r2,112(sp)
 400c338:	d811883a 	mov	r8,sp
 400c33c:	29800044 	addi	r6,r5,1
 400c340:	003dc406 	br	400ba54 <__ram_exceptions_end+0xfbfeb80c>
 400c344:	1000d21e 	bne	r2,zero,400c690 <___vfiprintf_internal_r+0x11b4>
 400c348:	d8c01d87 	ldb	r3,118(sp)
 400c34c:	18009526 	beq	r3,zero,400c5a4 <___vfiprintf_internal_r+0x10c8>
 400c350:	00800044 	movi	r2,1
 400c354:	d8c01d84 	addi	r3,sp,118
 400c358:	1009883a 	mov	r4,r2
 400c35c:	d8c00015 	stw	r3,0(sp)
 400c360:	d8800115 	stw	r2,4(sp)
 400c364:	d811883a 	mov	r8,sp
 400c368:	200b883a 	mov	r5,r4
 400c36c:	42000204 	addi	r8,r8,8
 400c370:	21000044 	addi	r4,r4,1
 400c374:	003d9706 	br	400b9d4 <__ram_exceptions_end+0xfbfeb78c>
 400c378:	d9001d04 	addi	r4,sp,116
 400c37c:	00800084 	movi	r2,2
 400c380:	d9000015 	stw	r4,0(sp)
 400c384:	d8800115 	stw	r2,4(sp)
 400c388:	1809883a 	mov	r4,r3
 400c38c:	d811883a 	mov	r8,sp
 400c390:	200b883a 	mov	r5,r4
 400c394:	42000204 	addi	r8,r8,8
 400c398:	21000044 	addi	r4,r4,1
 400c39c:	003f4e06 	br	400c0d8 <__ram_exceptions_end+0xfbfebe90>
 400c3a0:	d8001d85 	stb	zero,118(sp)
 400c3a4:	48005016 	blt	r9,zero,400c4e8 <___vfiprintf_internal_r+0x100c>
 400c3a8:	00ffdfc4 	movi	r3,-129
 400c3ac:	94c4b03a 	or	r2,r18,r19
 400c3b0:	a0e8703a 	and	r20,r20,r3
 400c3b4:	103d4426 	beq	r2,zero,400b8c8 <__ram_exceptions_end+0xfbfeb680>
 400c3b8:	0039883a 	mov	fp,zero
 400c3bc:	d9002617 	ldw	r4,152(sp)
 400c3c0:	dd401a04 	addi	r21,sp,104
 400c3c4:	908003cc 	andi	r2,r18,15
 400c3c8:	9806973a 	slli	r3,r19,28
 400c3cc:	2085883a 	add	r2,r4,r2
 400c3d0:	9024d13a 	srli	r18,r18,4
 400c3d4:	10800003 	ldbu	r2,0(r2)
 400c3d8:	9826d13a 	srli	r19,r19,4
 400c3dc:	ad7fffc4 	addi	r21,r21,-1
 400c3e0:	1ca4b03a 	or	r18,r3,r18
 400c3e4:	a8800005 	stb	r2,0(r21)
 400c3e8:	94c4b03a 	or	r2,r18,r19
 400c3ec:	103ff51e 	bne	r2,zero,400c3c4 <__ram_exceptions_end+0xfbfec17c>
 400c3f0:	003e5906 	br	400bd58 <__ram_exceptions_end+0xfbfebb10>
 400c3f4:	d9402117 	ldw	r5,132(sp)
 400c3f8:	d9002017 	ldw	r4,128(sp)
 400c3fc:	d9801a04 	addi	r6,sp,104
 400c400:	400b3c80 	call	400b3c8 <__sprint_r.part.0>
 400c404:	103f891e 	bne	r2,zero,400c22c <__ram_exceptions_end+0xfbfebfe4>
 400c408:	d8801c17 	ldw	r2,112(sp)
 400c40c:	d811883a 	mov	r8,sp
 400c410:	003f9506 	br	400c268 <__ram_exceptions_end+0xfbfec020>
 400c414:	d9402117 	ldw	r5,132(sp)
 400c418:	d9002017 	ldw	r4,128(sp)
 400c41c:	d9801a04 	addi	r6,sp,104
 400c420:	400b3c80 	call	400b3c8 <__sprint_r.part.0>
 400c424:	103f811e 	bne	r2,zero,400c22c <__ram_exceptions_end+0xfbfebfe4>
 400c428:	d811883a 	mov	r8,sp
 400c42c:	003ced06 	br	400b7e4 <__ram_exceptions_end+0xfbfeb59c>
 400c430:	d9402117 	ldw	r5,132(sp)
 400c434:	d9002017 	ldw	r4,128(sp)
 400c438:	d9801a04 	addi	r6,sp,104
 400c43c:	da402c15 	stw	r9,176(sp)
 400c440:	db802a15 	stw	r14,168(sp)
 400c444:	400b3c80 	call	400b3c8 <__sprint_r.part.0>
 400c448:	da402c17 	ldw	r9,176(sp)
 400c44c:	db802a17 	ldw	r14,168(sp)
 400c450:	103f761e 	bne	r2,zero,400c22c <__ram_exceptions_end+0xfbfebfe4>
 400c454:	d9401b17 	ldw	r5,108(sp)
 400c458:	d8801c17 	ldw	r2,112(sp)
 400c45c:	d811883a 	mov	r8,sp
 400c460:	29000044 	addi	r4,r5,1
 400c464:	003d5b06 	br	400b9d4 <__ram_exceptions_end+0xfbfeb78c>
 400c468:	d9402117 	ldw	r5,132(sp)
 400c46c:	d9002017 	ldw	r4,128(sp)
 400c470:	d9801a04 	addi	r6,sp,104
 400c474:	da402c15 	stw	r9,176(sp)
 400c478:	400b3c80 	call	400b3c8 <__sprint_r.part.0>
 400c47c:	da402c17 	ldw	r9,176(sp)
 400c480:	103f6a1e 	bne	r2,zero,400c22c <__ram_exceptions_end+0xfbfebfe4>
 400c484:	d9401b17 	ldw	r5,108(sp)
 400c488:	d8801c17 	ldw	r2,112(sp)
 400c48c:	d811883a 	mov	r8,sp
 400c490:	29000044 	addi	r4,r5,1
 400c494:	003f1006 	br	400c0d8 <__ram_exceptions_end+0xfbfebe90>
 400c498:	1000c31e 	bne	r2,zero,400c7a8 <___vfiprintf_internal_r+0x12cc>
 400c49c:	01000044 	movi	r4,1
 400c4a0:	000b883a 	mov	r5,zero
 400c4a4:	d811883a 	mov	r8,sp
 400c4a8:	003f0d06 	br	400c0e0 <__ram_exceptions_end+0xfbfebe98>
 400c4ac:	d9402117 	ldw	r5,132(sp)
 400c4b0:	d9002017 	ldw	r4,128(sp)
 400c4b4:	d9801a04 	addi	r6,sp,104
 400c4b8:	400b3c80 	call	400b3c8 <__sprint_r.part.0>
 400c4bc:	103f5b1e 	bne	r2,zero,400c22c <__ram_exceptions_end+0xfbfebfe4>
 400c4c0:	d9001b17 	ldw	r4,108(sp)
 400c4c4:	d8801c17 	ldw	r2,112(sp)
 400c4c8:	d811883a 	mov	r8,sp
 400c4cc:	21000044 	addi	r4,r4,1
 400c4d0:	003d8006 	br	400bad4 <__ram_exceptions_end+0xfbfeb88c>
 400c4d4:	01010074 	movhi	r4,1025
 400c4d8:	21120d04 	addi	r4,r4,18484
 400c4dc:	d9002615 	stw	r4,152(sp)
 400c4e0:	d8c02215 	stw	r3,136(sp)
 400c4e4:	1029883a 	mov	r20,r2
 400c4e8:	94c4b03a 	or	r2,r18,r19
 400c4ec:	103fb21e 	bne	r2,zero,400c3b8 <__ram_exceptions_end+0xfbfec170>
 400c4f0:	0039883a 	mov	fp,zero
 400c4f4:	00800084 	movi	r2,2
 400c4f8:	003e6b06 	br	400bea8 <__ram_exceptions_end+0xfbfebc60>
 400c4fc:	da802217 	ldw	r10,136(sp)
 400c500:	d8001d85 	stb	zero,118(sp)
 400c504:	0027883a 	mov	r19,zero
 400c508:	50800104 	addi	r2,r10,4
 400c50c:	54800017 	ldw	r18,0(r10)
 400c510:	483e6016 	blt	r9,zero,400be94 <__ram_exceptions_end+0xfbfebc4c>
 400c514:	00ffdfc4 	movi	r3,-129
 400c518:	d8802215 	stw	r2,136(sp)
 400c51c:	a0e8703a 	and	r20,r20,r3
 400c520:	0039883a 	mov	fp,zero
 400c524:	903ebb26 	beq	r18,zero,400c014 <__ram_exceptions_end+0xfbfebdcc>
 400c528:	00800244 	movi	r2,9
 400c52c:	14bdee36 	bltu	r2,r18,400bce8 <__ram_exceptions_end+0xfbfebaa0>
 400c530:	003eba06 	br	400c01c <__ram_exceptions_end+0xfbfebdd4>
 400c534:	00800c04 	movi	r2,48
 400c538:	d8c01d45 	stb	r3,117(sp)
 400c53c:	d8801d05 	stb	r2,116(sp)
 400c540:	d8001d85 	stb	zero,118(sp)
 400c544:	a0c00094 	ori	r3,r20,2
 400c548:	4800a916 	blt	r9,zero,400c7f0 <___vfiprintf_internal_r+0x1314>
 400c54c:	00bfdfc4 	movi	r2,-129
 400c550:	a096703a 	and	r11,r20,r2
 400c554:	5d000094 	ori	r20,r11,2
 400c558:	0039883a 	mov	fp,zero
 400c55c:	003f9706 	br	400c3bc <__ram_exceptions_end+0xfbfec174>
 400c560:	8025883a 	mov	r18,r16
 400c564:	003c2e06 	br	400b620 <__ram_exceptions_end+0xfbfeb3d8>
 400c568:	00810074 	movhi	r2,1025
 400c56c:	10920d04 	addi	r2,r2,18484
 400c570:	0039883a 	mov	fp,zero
 400c574:	d8802615 	stw	r2,152(sp)
 400c578:	003f9006 	br	400c3bc <__ram_exceptions_end+0xfbfec174>
 400c57c:	04a5c83a 	sub	r18,zero,r18
 400c580:	07000b44 	movi	fp,45
 400c584:	9004c03a 	cmpne	r2,r18,zero
 400c588:	04e7c83a 	sub	r19,zero,r19
 400c58c:	df001d85 	stb	fp,118(sp)
 400c590:	98a7c83a 	sub	r19,r19,r2
 400c594:	48009f16 	blt	r9,zero,400c814 <___vfiprintf_internal_r+0x1338>
 400c598:	00bfdfc4 	movi	r2,-129
 400c59c:	a0a8703a 	and	r20,r20,r2
 400c5a0:	003dd006 	br	400bce4 <__ram_exceptions_end+0xfbfeba9c>
 400c5a4:	70004c26 	beq	r14,zero,400c6d8 <___vfiprintf_internal_r+0x11fc>
 400c5a8:	00800084 	movi	r2,2
 400c5ac:	d8c01d04 	addi	r3,sp,116
 400c5b0:	d8c00015 	stw	r3,0(sp)
 400c5b4:	d8800115 	stw	r2,4(sp)
 400c5b8:	01000044 	movi	r4,1
 400c5bc:	d811883a 	mov	r8,sp
 400c5c0:	003f7306 	br	400c390 <__ram_exceptions_end+0xfbfec148>
 400c5c4:	a080100c 	andi	r2,r20,64
 400c5c8:	da802217 	ldw	r10,136(sp)
 400c5cc:	103e0626 	beq	r2,zero,400bde8 <__ram_exceptions_end+0xfbfebba0>
 400c5d0:	5480000f 	ldh	r18,0(r10)
 400c5d4:	52800104 	addi	r10,r10,4
 400c5d8:	da802215 	stw	r10,136(sp)
 400c5dc:	9027d7fa 	srai	r19,r18,31
 400c5e0:	9805883a 	mov	r2,r19
 400c5e4:	003db806 	br	400bcc8 <__ram_exceptions_end+0xfbfeba80>
 400c5e8:	a080040c 	andi	r2,r20,16
 400c5ec:	1000091e 	bne	r2,zero,400c614 <___vfiprintf_internal_r+0x1138>
 400c5f0:	a2c0100c 	andi	r11,r20,64
 400c5f4:	58000726 	beq	r11,zero,400c614 <___vfiprintf_internal_r+0x1138>
 400c5f8:	da802217 	ldw	r10,136(sp)
 400c5fc:	50800017 	ldw	r2,0(r10)
 400c600:	52800104 	addi	r10,r10,4
 400c604:	da802215 	stw	r10,136(sp)
 400c608:	da802317 	ldw	r10,140(sp)
 400c60c:	1280000d 	sth	r10,0(r2)
 400c610:	003be706 	br	400b5b0 <__ram_exceptions_end+0xfbfeb368>
 400c614:	da802217 	ldw	r10,136(sp)
 400c618:	50800017 	ldw	r2,0(r10)
 400c61c:	52800104 	addi	r10,r10,4
 400c620:	da802215 	stw	r10,136(sp)
 400c624:	da802317 	ldw	r10,140(sp)
 400c628:	12800015 	stw	r10,0(r2)
 400c62c:	003be006 	br	400b5b0 <__ram_exceptions_end+0xfbfeb368>
 400c630:	a080100c 	andi	r2,r20,64
 400c634:	da802217 	ldw	r10,136(sp)
 400c638:	10003026 	beq	r2,zero,400c6fc <___vfiprintf_internal_r+0x1220>
 400c63c:	5480000b 	ldhu	r18,0(r10)
 400c640:	52800104 	addi	r10,r10,4
 400c644:	0027883a 	mov	r19,zero
 400c648:	da802215 	stw	r10,136(sp)
 400c64c:	003d8006 	br	400bc50 <__ram_exceptions_end+0xfbfeba08>
 400c650:	80c00007 	ldb	r3,0(r16)
 400c654:	003c0006 	br	400b658 <__ram_exceptions_end+0xfbfeb410>
 400c658:	a080100c 	andi	r2,r20,64
 400c65c:	d8001d85 	stb	zero,118(sp)
 400c660:	da802217 	ldw	r10,136(sp)
 400c664:	1000201e 	bne	r2,zero,400c6e8 <___vfiprintf_internal_r+0x120c>
 400c668:	50800104 	addi	r2,r10,4
 400c66c:	54800017 	ldw	r18,0(r10)
 400c670:	0027883a 	mov	r19,zero
 400c674:	483def0e 	bge	r9,zero,400be34 <__ram_exceptions_end+0xfbfebbec>
 400c678:	94c6b03a 	or	r3,r18,r19
 400c67c:	d8802215 	stw	r2,136(sp)
 400c680:	183d4e1e 	bne	r3,zero,400bbbc <__ram_exceptions_end+0xfbfeb974>
 400c684:	0039883a 	mov	fp,zero
 400c688:	0005883a 	mov	r2,zero
 400c68c:	003e0606 	br	400bea8 <__ram_exceptions_end+0xfbfebc60>
 400c690:	d9402117 	ldw	r5,132(sp)
 400c694:	d9002017 	ldw	r4,128(sp)
 400c698:	d9801a04 	addi	r6,sp,104
 400c69c:	da402c15 	stw	r9,176(sp)
 400c6a0:	db802a15 	stw	r14,168(sp)
 400c6a4:	400b3c80 	call	400b3c8 <__sprint_r.part.0>
 400c6a8:	da402c17 	ldw	r9,176(sp)
 400c6ac:	db802a17 	ldw	r14,168(sp)
 400c6b0:	103ede1e 	bne	r2,zero,400c22c <__ram_exceptions_end+0xfbfebfe4>
 400c6b4:	d9401b17 	ldw	r5,108(sp)
 400c6b8:	d8801c17 	ldw	r2,112(sp)
 400c6bc:	d811883a 	mov	r8,sp
 400c6c0:	29000044 	addi	r4,r5,1
 400c6c4:	003e7406 	br	400c098 <__ram_exceptions_end+0xfbfebe50>
 400c6c8:	00bfffc4 	movi	r2,-1
 400c6cc:	003c5806 	br	400b830 <__ram_exceptions_end+0xfbfeb5e8>
 400c6d0:	d811883a 	mov	r8,sp
 400c6d4:	003ee806 	br	400c278 <__ram_exceptions_end+0xfbfec030>
 400c6d8:	000b883a 	mov	r5,zero
 400c6dc:	01000044 	movi	r4,1
 400c6e0:	d811883a 	mov	r8,sp
 400c6e4:	003e7c06 	br	400c0d8 <__ram_exceptions_end+0xfbfebe90>
 400c6e8:	50800104 	addi	r2,r10,4
 400c6ec:	5480000b 	ldhu	r18,0(r10)
 400c6f0:	0027883a 	mov	r19,zero
 400c6f4:	483dcf0e 	bge	r9,zero,400be34 <__ram_exceptions_end+0xfbfebbec>
 400c6f8:	003fdf06 	br	400c678 <__ram_exceptions_end+0xfbfec430>
 400c6fc:	54800017 	ldw	r18,0(r10)
 400c700:	52800104 	addi	r10,r10,4
 400c704:	0027883a 	mov	r19,zero
 400c708:	da802215 	stw	r10,136(sp)
 400c70c:	003d5006 	br	400bc50 <__ram_exceptions_end+0xfbfeba08>
 400c710:	50800104 	addi	r2,r10,4
 400c714:	5480000b 	ldhu	r18,0(r10)
 400c718:	0027883a 	mov	r19,zero
 400c71c:	483f7d0e 	bge	r9,zero,400c514 <__ram_exceptions_end+0xfbfec2cc>
 400c720:	003ddc06 	br	400be94 <__ram_exceptions_end+0xfbfebc4c>
 400c724:	d8c02215 	stw	r3,136(sp)
 400c728:	0039883a 	mov	fp,zero
 400c72c:	003ddb06 	br	400be9c <__ram_exceptions_end+0xfbfebc54>
 400c730:	02810074 	movhi	r10,1025
 400c734:	52927e04 	addi	r10,r10,18936
 400c738:	da802415 	stw	r10,144(sp)
 400c73c:	003e8306 	br	400c14c <__ram_exceptions_end+0xfbfebf04>
 400c740:	d8801c17 	ldw	r2,112(sp)
 400c744:	dd002117 	ldw	r20,132(sp)
 400c748:	103eb926 	beq	r2,zero,400c230 <__ram_exceptions_end+0xfbfebfe8>
 400c74c:	d9002017 	ldw	r4,128(sp)
 400c750:	d9801a04 	addi	r6,sp,104
 400c754:	a00b883a 	mov	r5,r20
 400c758:	400b3c80 	call	400b3c8 <__sprint_r.part.0>
 400c75c:	003eb406 	br	400c230 <__ram_exceptions_end+0xfbfebfe8>
 400c760:	80c00043 	ldbu	r3,1(r16)
 400c764:	a5000814 	ori	r20,r20,32
 400c768:	84000044 	addi	r16,r16,1
 400c76c:	18c03fcc 	andi	r3,r3,255
 400c770:	18c0201c 	xori	r3,r3,128
 400c774:	18ffe004 	addi	r3,r3,-128
 400c778:	003bb706 	br	400b658 <__ram_exceptions_end+0xfbfeb410>
 400c77c:	a809883a 	mov	r4,r21
 400c780:	d8c02a15 	stw	r3,168(sp)
 400c784:	da002b15 	stw	r8,172(sp)
 400c788:	40007c00 	call	40007c0 <strlen>
 400c78c:	d8c02a17 	ldw	r3,168(sp)
 400c790:	1027883a 	mov	r19,r2
 400c794:	df001d83 	ldbu	fp,118(sp)
 400c798:	d8c02215 	stw	r3,136(sp)
 400c79c:	0013883a 	mov	r9,zero
 400c7a0:	da002b17 	ldw	r8,172(sp)
 400c7a4:	003c4d06 	br	400b8dc <__ram_exceptions_end+0xfbfeb694>
 400c7a8:	d9402117 	ldw	r5,132(sp)
 400c7ac:	d9002017 	ldw	r4,128(sp)
 400c7b0:	d9801a04 	addi	r6,sp,104
 400c7b4:	da402c15 	stw	r9,176(sp)
 400c7b8:	400b3c80 	call	400b3c8 <__sprint_r.part.0>
 400c7bc:	da402c17 	ldw	r9,176(sp)
 400c7c0:	103e9a1e 	bne	r2,zero,400c22c <__ram_exceptions_end+0xfbfebfe4>
 400c7c4:	d9401b17 	ldw	r5,108(sp)
 400c7c8:	d8801c17 	ldw	r2,112(sp)
 400c7cc:	d811883a 	mov	r8,sp
 400c7d0:	29000044 	addi	r4,r5,1
 400c7d4:	003e4206 	br	400c0e0 <__ram_exceptions_end+0xfbfebe98>
 400c7d8:	d9401b17 	ldw	r5,108(sp)
 400c7dc:	01010074 	movhi	r4,1025
 400c7e0:	21128204 	addi	r4,r4,18952
 400c7e4:	d9002415 	stw	r4,144(sp)
 400c7e8:	29400044 	addi	r5,r5,1
 400c7ec:	003c6d06 	br	400b9a4 <__ram_exceptions_end+0xfbfeb75c>
 400c7f0:	0039883a 	mov	fp,zero
 400c7f4:	00800084 	movi	r2,2
 400c7f8:	10803fcc 	andi	r2,r2,255
 400c7fc:	01000044 	movi	r4,1
 400c800:	11001e26 	beq	r2,r4,400c87c <___vfiprintf_internal_r+0x13a0>
 400c804:	01000084 	movi	r4,2
 400c808:	11001e1e 	bne	r2,r4,400c884 <___vfiprintf_internal_r+0x13a8>
 400c80c:	1829883a 	mov	r20,r3
 400c810:	003eea06 	br	400c3bc <__ram_exceptions_end+0xfbfec174>
 400c814:	a007883a 	mov	r3,r20
 400c818:	00800044 	movi	r2,1
 400c81c:	003ff606 	br	400c7f8 <__ram_exceptions_end+0xfbfec5b0>
 400c820:	00800184 	movi	r2,6
 400c824:	1240012e 	bgeu	r2,r9,400c82c <___vfiprintf_internal_r+0x1350>
 400c828:	1013883a 	mov	r9,r2
 400c82c:	4827883a 	mov	r19,r9
 400c830:	4825883a 	mov	r18,r9
 400c834:	48001516 	blt	r9,zero,400c88c <___vfiprintf_internal_r+0x13b0>
 400c838:	05410074 	movhi	r21,1025
 400c83c:	d8c02215 	stw	r3,136(sp)
 400c840:	ad521204 	addi	r21,r21,18504
 400c844:	003d1406 	br	400bc98 <__ram_exceptions_end+0xfbfeba50>
 400c848:	02810074 	movhi	r10,1025
 400c84c:	52927e04 	addi	r10,r10,18936
 400c850:	da802415 	stw	r10,144(sp)
 400c854:	200d883a 	mov	r6,r4
 400c858:	003c9106 	br	400baa0 <__ram_exceptions_end+0xfbfeb858>
 400c85c:	5021883a 	mov	r16,r10
 400c860:	0013883a 	mov	r9,zero
 400c864:	003b7d06 	br	400b65c <__ram_exceptions_end+0xfbfeb414>
 400c868:	4827883a 	mov	r19,r9
 400c86c:	df001d83 	ldbu	fp,118(sp)
 400c870:	d8c02215 	stw	r3,136(sp)
 400c874:	0013883a 	mov	r9,zero
 400c878:	003c1806 	br	400b8dc <__ram_exceptions_end+0xfbfeb694>
 400c87c:	1829883a 	mov	r20,r3
 400c880:	003d1806 	br	400bce4 <__ram_exceptions_end+0xfbfeba9c>
 400c884:	1829883a 	mov	r20,r3
 400c888:	003ccd06 	br	400bbc0 <__ram_exceptions_end+0xfbfeb978>
 400c88c:	0025883a 	mov	r18,zero
 400c890:	003fe906 	br	400c838 <__ram_exceptions_end+0xfbfec5f0>
 400c894:	d8802217 	ldw	r2,136(sp)
 400c898:	80c00043 	ldbu	r3,1(r16)
 400c89c:	5021883a 	mov	r16,r10
 400c8a0:	12400017 	ldw	r9,0(r2)
 400c8a4:	10800104 	addi	r2,r2,4
 400c8a8:	d8802215 	stw	r2,136(sp)
 400c8ac:	483faf0e 	bge	r9,zero,400c76c <__ram_exceptions_end+0xfbfec524>
 400c8b0:	18c03fcc 	andi	r3,r3,255
 400c8b4:	18c0201c 	xori	r3,r3,128
 400c8b8:	027fffc4 	movi	r9,-1
 400c8bc:	18ffe004 	addi	r3,r3,-128
 400c8c0:	003b6506 	br	400b658 <__ram_exceptions_end+0xfbfeb410>
 400c8c4:	d9c01d85 	stb	r7,118(sp)
 400c8c8:	003ca006 	br	400bb4c <__ram_exceptions_end+0xfbfeb904>
 400c8cc:	d9c01d85 	stb	r7,118(sp)
 400c8d0:	003cad06 	br	400bb88 <__ram_exceptions_end+0xfbfeb940>
 400c8d4:	d9c01d85 	stb	r7,118(sp)
 400c8d8:	003d7d06 	br	400bed0 <__ram_exceptions_end+0xfbfebc88>
 400c8dc:	d9c01d85 	stb	r7,118(sp)
 400c8e0:	003d5f06 	br	400be60 <__ram_exceptions_end+0xfbfebc18>
 400c8e4:	a080004c 	andi	r2,r20,1
 400c8e8:	0039883a 	mov	fp,zero
 400c8ec:	10000526 	beq	r2,zero,400c904 <___vfiprintf_internal_r+0x1428>
 400c8f0:	00800c04 	movi	r2,48
 400c8f4:	d88019c5 	stb	r2,103(sp)
 400c8f8:	dcc02717 	ldw	r19,156(sp)
 400c8fc:	dd4019c4 	addi	r21,sp,103
 400c900:	003bf606 	br	400b8dc <__ram_exceptions_end+0xfbfeb694>
 400c904:	0027883a 	mov	r19,zero
 400c908:	dd401a04 	addi	r21,sp,104
 400c90c:	003bf306 	br	400b8dc <__ram_exceptions_end+0xfbfeb694>
 400c910:	d9c01d85 	stb	r7,118(sp)
 400c914:	003dc806 	br	400c038 <__ram_exceptions_end+0xfbfebdf0>
 400c918:	d9c01d85 	stb	r7,118(sp)
 400c91c:	003d3a06 	br	400be08 <__ram_exceptions_end+0xfbfebbc0>
 400c920:	d9c01d85 	stb	r7,118(sp)
 400c924:	003d2a06 	br	400bdd0 <__ram_exceptions_end+0xfbfebb88>
 400c928:	d9c01d85 	stb	r7,118(sp)
 400c92c:	003cde06 	br	400bca8 <__ram_exceptions_end+0xfbfeba60>
 400c930:	d9c01d85 	stb	r7,118(sp)
 400c934:	003cbc06 	br	400bc28 <__ram_exceptions_end+0xfbfeb9e0>

0400c938 <__vfiprintf_internal>:
 400c938:	00810074 	movhi	r2,1025
 400c93c:	109a0604 	addi	r2,r2,26648
 400c940:	300f883a 	mov	r7,r6
 400c944:	280d883a 	mov	r6,r5
 400c948:	200b883a 	mov	r5,r4
 400c94c:	11000017 	ldw	r4,0(r2)
 400c950:	400b4dc1 	jmpi	400b4dc <___vfiprintf_internal_r>

0400c954 <__sbprintf>:
 400c954:	2880030b 	ldhu	r2,12(r5)
 400c958:	2ac01917 	ldw	r11,100(r5)
 400c95c:	2a80038b 	ldhu	r10,14(r5)
 400c960:	2a400717 	ldw	r9,28(r5)
 400c964:	2a000917 	ldw	r8,36(r5)
 400c968:	defee204 	addi	sp,sp,-1144
 400c96c:	00c10004 	movi	r3,1024
 400c970:	dc011a15 	stw	r16,1128(sp)
 400c974:	10bfff4c 	andi	r2,r2,65533
 400c978:	2821883a 	mov	r16,r5
 400c97c:	d8cb883a 	add	r5,sp,r3
 400c980:	dc811c15 	stw	r18,1136(sp)
 400c984:	dc411b15 	stw	r17,1132(sp)
 400c988:	dfc11d15 	stw	ra,1140(sp)
 400c98c:	2025883a 	mov	r18,r4
 400c990:	d881030d 	sth	r2,1036(sp)
 400c994:	dac11915 	stw	r11,1124(sp)
 400c998:	da81038d 	sth	r10,1038(sp)
 400c99c:	da410715 	stw	r9,1052(sp)
 400c9a0:	da010915 	stw	r8,1060(sp)
 400c9a4:	dec10015 	stw	sp,1024(sp)
 400c9a8:	dec10415 	stw	sp,1040(sp)
 400c9ac:	d8c10215 	stw	r3,1032(sp)
 400c9b0:	d8c10515 	stw	r3,1044(sp)
 400c9b4:	d8010615 	stw	zero,1048(sp)
 400c9b8:	400b4dc0 	call	400b4dc <___vfiprintf_internal_r>
 400c9bc:	1023883a 	mov	r17,r2
 400c9c0:	10000416 	blt	r2,zero,400c9d4 <__sbprintf+0x80>
 400c9c4:	d9410004 	addi	r5,sp,1024
 400c9c8:	9009883a 	mov	r4,r18
 400c9cc:	40068f80 	call	40068f8 <_fflush_r>
 400c9d0:	10000d1e 	bne	r2,zero,400ca08 <__sbprintf+0xb4>
 400c9d4:	d881030b 	ldhu	r2,1036(sp)
 400c9d8:	1080100c 	andi	r2,r2,64
 400c9dc:	10000326 	beq	r2,zero,400c9ec <__sbprintf+0x98>
 400c9e0:	8080030b 	ldhu	r2,12(r16)
 400c9e4:	10801014 	ori	r2,r2,64
 400c9e8:	8080030d 	sth	r2,12(r16)
 400c9ec:	8805883a 	mov	r2,r17
 400c9f0:	dfc11d17 	ldw	ra,1140(sp)
 400c9f4:	dc811c17 	ldw	r18,1136(sp)
 400c9f8:	dc411b17 	ldw	r17,1132(sp)
 400c9fc:	dc011a17 	ldw	r16,1128(sp)
 400ca00:	dec11e04 	addi	sp,sp,1144
 400ca04:	f800283a 	ret
 400ca08:	047fffc4 	movi	r17,-1
 400ca0c:	003ff106 	br	400c9d4 <__ram_exceptions_end+0xfbfec78c>

0400ca10 <__swbuf_r>:
 400ca10:	defffb04 	addi	sp,sp,-20
 400ca14:	dcc00315 	stw	r19,12(sp)
 400ca18:	dc800215 	stw	r18,8(sp)
 400ca1c:	dc000015 	stw	r16,0(sp)
 400ca20:	dfc00415 	stw	ra,16(sp)
 400ca24:	dc400115 	stw	r17,4(sp)
 400ca28:	2025883a 	mov	r18,r4
 400ca2c:	2827883a 	mov	r19,r5
 400ca30:	3021883a 	mov	r16,r6
 400ca34:	20000226 	beq	r4,zero,400ca40 <__swbuf_r+0x30>
 400ca38:	20800e17 	ldw	r2,56(r4)
 400ca3c:	10004226 	beq	r2,zero,400cb48 <__swbuf_r+0x138>
 400ca40:	80800617 	ldw	r2,24(r16)
 400ca44:	8100030b 	ldhu	r4,12(r16)
 400ca48:	80800215 	stw	r2,8(r16)
 400ca4c:	2080020c 	andi	r2,r4,8
 400ca50:	10003626 	beq	r2,zero,400cb2c <__swbuf_r+0x11c>
 400ca54:	80c00417 	ldw	r3,16(r16)
 400ca58:	18003426 	beq	r3,zero,400cb2c <__swbuf_r+0x11c>
 400ca5c:	2088000c 	andi	r2,r4,8192
 400ca60:	9c403fcc 	andi	r17,r19,255
 400ca64:	10001a26 	beq	r2,zero,400cad0 <__swbuf_r+0xc0>
 400ca68:	80800017 	ldw	r2,0(r16)
 400ca6c:	81000517 	ldw	r4,20(r16)
 400ca70:	10c7c83a 	sub	r3,r2,r3
 400ca74:	1900200e 	bge	r3,r4,400caf8 <__swbuf_r+0xe8>
 400ca78:	18c00044 	addi	r3,r3,1
 400ca7c:	81000217 	ldw	r4,8(r16)
 400ca80:	11400044 	addi	r5,r2,1
 400ca84:	81400015 	stw	r5,0(r16)
 400ca88:	213fffc4 	addi	r4,r4,-1
 400ca8c:	81000215 	stw	r4,8(r16)
 400ca90:	14c00005 	stb	r19,0(r2)
 400ca94:	80800517 	ldw	r2,20(r16)
 400ca98:	10c01e26 	beq	r2,r3,400cb14 <__swbuf_r+0x104>
 400ca9c:	8080030b 	ldhu	r2,12(r16)
 400caa0:	1080004c 	andi	r2,r2,1
 400caa4:	10000226 	beq	r2,zero,400cab0 <__swbuf_r+0xa0>
 400caa8:	00800284 	movi	r2,10
 400caac:	88801926 	beq	r17,r2,400cb14 <__swbuf_r+0x104>
 400cab0:	8805883a 	mov	r2,r17
 400cab4:	dfc00417 	ldw	ra,16(sp)
 400cab8:	dcc00317 	ldw	r19,12(sp)
 400cabc:	dc800217 	ldw	r18,8(sp)
 400cac0:	dc400117 	ldw	r17,4(sp)
 400cac4:	dc000017 	ldw	r16,0(sp)
 400cac8:	dec00504 	addi	sp,sp,20
 400cacc:	f800283a 	ret
 400cad0:	81401917 	ldw	r5,100(r16)
 400cad4:	00b7ffc4 	movi	r2,-8193
 400cad8:	21080014 	ori	r4,r4,8192
 400cadc:	2884703a 	and	r2,r5,r2
 400cae0:	80801915 	stw	r2,100(r16)
 400cae4:	80800017 	ldw	r2,0(r16)
 400cae8:	8100030d 	sth	r4,12(r16)
 400caec:	81000517 	ldw	r4,20(r16)
 400caf0:	10c7c83a 	sub	r3,r2,r3
 400caf4:	193fe016 	blt	r3,r4,400ca78 <__ram_exceptions_end+0xfbfec830>
 400caf8:	800b883a 	mov	r5,r16
 400cafc:	9009883a 	mov	r4,r18
 400cb00:	40068f80 	call	40068f8 <_fflush_r>
 400cb04:	1000071e 	bne	r2,zero,400cb24 <__swbuf_r+0x114>
 400cb08:	80800017 	ldw	r2,0(r16)
 400cb0c:	00c00044 	movi	r3,1
 400cb10:	003fda06 	br	400ca7c <__ram_exceptions_end+0xfbfec834>
 400cb14:	800b883a 	mov	r5,r16
 400cb18:	9009883a 	mov	r4,r18
 400cb1c:	40068f80 	call	40068f8 <_fflush_r>
 400cb20:	103fe326 	beq	r2,zero,400cab0 <__ram_exceptions_end+0xfbfec868>
 400cb24:	00bfffc4 	movi	r2,-1
 400cb28:	003fe206 	br	400cab4 <__ram_exceptions_end+0xfbfec86c>
 400cb2c:	800b883a 	mov	r5,r16
 400cb30:	9009883a 	mov	r4,r18
 400cb34:	4004d000 	call	4004d00 <__swsetup_r>
 400cb38:	103ffa1e 	bne	r2,zero,400cb24 <__ram_exceptions_end+0xfbfec8dc>
 400cb3c:	8100030b 	ldhu	r4,12(r16)
 400cb40:	80c00417 	ldw	r3,16(r16)
 400cb44:	003fc506 	br	400ca5c <__ram_exceptions_end+0xfbfec814>
 400cb48:	4006cd40 	call	4006cd4 <__sinit>
 400cb4c:	003fbc06 	br	400ca40 <__ram_exceptions_end+0xfbfec7f8>

0400cb50 <__swbuf>:
 400cb50:	00810074 	movhi	r2,1025
 400cb54:	109a0604 	addi	r2,r2,26648
 400cb58:	280d883a 	mov	r6,r5
 400cb5c:	200b883a 	mov	r5,r4
 400cb60:	11000017 	ldw	r4,0(r2)
 400cb64:	400ca101 	jmpi	400ca10 <__swbuf_r>

0400cb68 <_write_r>:
 400cb68:	defffd04 	addi	sp,sp,-12
 400cb6c:	2805883a 	mov	r2,r5
 400cb70:	dc000015 	stw	r16,0(sp)
 400cb74:	040100b4 	movhi	r16,1026
 400cb78:	dc400115 	stw	r17,4(sp)
 400cb7c:	300b883a 	mov	r5,r6
 400cb80:	84214304 	addi	r16,r16,-31476
 400cb84:	2023883a 	mov	r17,r4
 400cb88:	380d883a 	mov	r6,r7
 400cb8c:	1009883a 	mov	r4,r2
 400cb90:	dfc00215 	stw	ra,8(sp)
 400cb94:	80000015 	stw	zero,0(r16)
 400cb98:	4010e8c0 	call	4010e8c <write>
 400cb9c:	00ffffc4 	movi	r3,-1
 400cba0:	10c00526 	beq	r2,r3,400cbb8 <_write_r+0x50>
 400cba4:	dfc00217 	ldw	ra,8(sp)
 400cba8:	dc400117 	ldw	r17,4(sp)
 400cbac:	dc000017 	ldw	r16,0(sp)
 400cbb0:	dec00304 	addi	sp,sp,12
 400cbb4:	f800283a 	ret
 400cbb8:	80c00017 	ldw	r3,0(r16)
 400cbbc:	183ff926 	beq	r3,zero,400cba4 <__ram_exceptions_end+0xfbfec95c>
 400cbc0:	88c00015 	stw	r3,0(r17)
 400cbc4:	003ff706 	br	400cba4 <__ram_exceptions_end+0xfbfec95c>

0400cbc8 <_close_r>:
 400cbc8:	defffd04 	addi	sp,sp,-12
 400cbcc:	dc000015 	stw	r16,0(sp)
 400cbd0:	040100b4 	movhi	r16,1026
 400cbd4:	dc400115 	stw	r17,4(sp)
 400cbd8:	84214304 	addi	r16,r16,-31476
 400cbdc:	2023883a 	mov	r17,r4
 400cbe0:	2809883a 	mov	r4,r5
 400cbe4:	dfc00215 	stw	ra,8(sp)
 400cbe8:	80000015 	stw	zero,0(r16)
 400cbec:	401064c0 	call	401064c <close>
 400cbf0:	00ffffc4 	movi	r3,-1
 400cbf4:	10c00526 	beq	r2,r3,400cc0c <_close_r+0x44>
 400cbf8:	dfc00217 	ldw	ra,8(sp)
 400cbfc:	dc400117 	ldw	r17,4(sp)
 400cc00:	dc000017 	ldw	r16,0(sp)
 400cc04:	dec00304 	addi	sp,sp,12
 400cc08:	f800283a 	ret
 400cc0c:	80c00017 	ldw	r3,0(r16)
 400cc10:	183ff926 	beq	r3,zero,400cbf8 <__ram_exceptions_end+0xfbfec9b0>
 400cc14:	88c00015 	stw	r3,0(r17)
 400cc18:	003ff706 	br	400cbf8 <__ram_exceptions_end+0xfbfec9b0>

0400cc1c <_calloc_r>:
 400cc1c:	298b383a 	mul	r5,r5,r6
 400cc20:	defffe04 	addi	sp,sp,-8
 400cc24:	dfc00115 	stw	ra,4(sp)
 400cc28:	dc000015 	stw	r16,0(sp)
 400cc2c:	4007a340 	call	4007a34 <_malloc_r>
 400cc30:	10002926 	beq	r2,zero,400ccd8 <_calloc_r+0xbc>
 400cc34:	11bfff17 	ldw	r6,-4(r2)
 400cc38:	1021883a 	mov	r16,r2
 400cc3c:	00bfff04 	movi	r2,-4
 400cc40:	308c703a 	and	r6,r6,r2
 400cc44:	00c00904 	movi	r3,36
 400cc48:	308d883a 	add	r6,r6,r2
 400cc4c:	19801636 	bltu	r3,r6,400cca8 <_calloc_r+0x8c>
 400cc50:	008004c4 	movi	r2,19
 400cc54:	11800b2e 	bgeu	r2,r6,400cc84 <_calloc_r+0x68>
 400cc58:	80000015 	stw	zero,0(r16)
 400cc5c:	80000115 	stw	zero,4(r16)
 400cc60:	008006c4 	movi	r2,27
 400cc64:	11801a2e 	bgeu	r2,r6,400ccd0 <_calloc_r+0xb4>
 400cc68:	80000215 	stw	zero,8(r16)
 400cc6c:	80000315 	stw	zero,12(r16)
 400cc70:	30c0151e 	bne	r6,r3,400ccc8 <_calloc_r+0xac>
 400cc74:	80000415 	stw	zero,16(r16)
 400cc78:	80800604 	addi	r2,r16,24
 400cc7c:	80000515 	stw	zero,20(r16)
 400cc80:	00000106 	br	400cc88 <_calloc_r+0x6c>
 400cc84:	8005883a 	mov	r2,r16
 400cc88:	10000015 	stw	zero,0(r2)
 400cc8c:	10000115 	stw	zero,4(r2)
 400cc90:	10000215 	stw	zero,8(r2)
 400cc94:	8005883a 	mov	r2,r16
 400cc98:	dfc00117 	ldw	ra,4(sp)
 400cc9c:	dc000017 	ldw	r16,0(sp)
 400cca0:	dec00204 	addi	sp,sp,8
 400cca4:	f800283a 	ret
 400cca8:	000b883a 	mov	r5,zero
 400ccac:	8009883a 	mov	r4,r16
 400ccb0:	40085c80 	call	40085c8 <memset>
 400ccb4:	8005883a 	mov	r2,r16
 400ccb8:	dfc00117 	ldw	ra,4(sp)
 400ccbc:	dc000017 	ldw	r16,0(sp)
 400ccc0:	dec00204 	addi	sp,sp,8
 400ccc4:	f800283a 	ret
 400ccc8:	80800404 	addi	r2,r16,16
 400cccc:	003fee06 	br	400cc88 <__ram_exceptions_end+0xfbfeca40>
 400ccd0:	80800204 	addi	r2,r16,8
 400ccd4:	003fec06 	br	400cc88 <__ram_exceptions_end+0xfbfeca40>
 400ccd8:	0005883a 	mov	r2,zero
 400ccdc:	003fee06 	br	400cc98 <__ram_exceptions_end+0xfbfeca50>

0400cce0 <_fclose_r>:
 400cce0:	28003926 	beq	r5,zero,400cdc8 <_fclose_r+0xe8>
 400cce4:	defffc04 	addi	sp,sp,-16
 400cce8:	dc400115 	stw	r17,4(sp)
 400ccec:	dc000015 	stw	r16,0(sp)
 400ccf0:	dfc00315 	stw	ra,12(sp)
 400ccf4:	dc800215 	stw	r18,8(sp)
 400ccf8:	2023883a 	mov	r17,r4
 400ccfc:	2821883a 	mov	r16,r5
 400cd00:	20000226 	beq	r4,zero,400cd0c <_fclose_r+0x2c>
 400cd04:	20800e17 	ldw	r2,56(r4)
 400cd08:	10002726 	beq	r2,zero,400cda8 <_fclose_r+0xc8>
 400cd0c:	8080030f 	ldh	r2,12(r16)
 400cd10:	1000071e 	bne	r2,zero,400cd30 <_fclose_r+0x50>
 400cd14:	0005883a 	mov	r2,zero
 400cd18:	dfc00317 	ldw	ra,12(sp)
 400cd1c:	dc800217 	ldw	r18,8(sp)
 400cd20:	dc400117 	ldw	r17,4(sp)
 400cd24:	dc000017 	ldw	r16,0(sp)
 400cd28:	dec00404 	addi	sp,sp,16
 400cd2c:	f800283a 	ret
 400cd30:	800b883a 	mov	r5,r16
 400cd34:	8809883a 	mov	r4,r17
 400cd38:	40066dc0 	call	40066dc <__sflush_r>
 400cd3c:	1025883a 	mov	r18,r2
 400cd40:	80800b17 	ldw	r2,44(r16)
 400cd44:	10000426 	beq	r2,zero,400cd58 <_fclose_r+0x78>
 400cd48:	81400717 	ldw	r5,28(r16)
 400cd4c:	8809883a 	mov	r4,r17
 400cd50:	103ee83a 	callr	r2
 400cd54:	10001616 	blt	r2,zero,400cdb0 <_fclose_r+0xd0>
 400cd58:	8080030b 	ldhu	r2,12(r16)
 400cd5c:	1080200c 	andi	r2,r2,128
 400cd60:	1000151e 	bne	r2,zero,400cdb8 <_fclose_r+0xd8>
 400cd64:	81400c17 	ldw	r5,48(r16)
 400cd68:	28000526 	beq	r5,zero,400cd80 <_fclose_r+0xa0>
 400cd6c:	80801004 	addi	r2,r16,64
 400cd70:	28800226 	beq	r5,r2,400cd7c <_fclose_r+0x9c>
 400cd74:	8809883a 	mov	r4,r17
 400cd78:	4006e480 	call	4006e48 <_free_r>
 400cd7c:	80000c15 	stw	zero,48(r16)
 400cd80:	81401117 	ldw	r5,68(r16)
 400cd84:	28000326 	beq	r5,zero,400cd94 <_fclose_r+0xb4>
 400cd88:	8809883a 	mov	r4,r17
 400cd8c:	4006e480 	call	4006e48 <_free_r>
 400cd90:	80001115 	stw	zero,68(r16)
 400cd94:	4006ce40 	call	4006ce4 <__sfp_lock_acquire>
 400cd98:	8000030d 	sth	zero,12(r16)
 400cd9c:	4006ce80 	call	4006ce8 <__sfp_lock_release>
 400cda0:	9005883a 	mov	r2,r18
 400cda4:	003fdc06 	br	400cd18 <__ram_exceptions_end+0xfbfecad0>
 400cda8:	4006cd40 	call	4006cd4 <__sinit>
 400cdac:	003fd706 	br	400cd0c <__ram_exceptions_end+0xfbfecac4>
 400cdb0:	04bfffc4 	movi	r18,-1
 400cdb4:	003fe806 	br	400cd58 <__ram_exceptions_end+0xfbfecb10>
 400cdb8:	81400417 	ldw	r5,16(r16)
 400cdbc:	8809883a 	mov	r4,r17
 400cdc0:	4006e480 	call	4006e48 <_free_r>
 400cdc4:	003fe706 	br	400cd64 <__ram_exceptions_end+0xfbfecb1c>
 400cdc8:	0005883a 	mov	r2,zero
 400cdcc:	f800283a 	ret

0400cdd0 <fclose>:
 400cdd0:	00810074 	movhi	r2,1025
 400cdd4:	109a0604 	addi	r2,r2,26648
 400cdd8:	200b883a 	mov	r5,r4
 400cddc:	11000017 	ldw	r4,0(r2)
 400cde0:	400cce01 	jmpi	400cce0 <_fclose_r>

0400cde4 <__fputwc>:
 400cde4:	defff804 	addi	sp,sp,-32
 400cde8:	dcc00415 	stw	r19,16(sp)
 400cdec:	dc800315 	stw	r18,12(sp)
 400cdf0:	dc000115 	stw	r16,4(sp)
 400cdf4:	dfc00715 	stw	ra,28(sp)
 400cdf8:	dd400615 	stw	r21,24(sp)
 400cdfc:	dd000515 	stw	r20,20(sp)
 400ce00:	dc400215 	stw	r17,8(sp)
 400ce04:	2027883a 	mov	r19,r4
 400ce08:	2825883a 	mov	r18,r5
 400ce0c:	3021883a 	mov	r16,r6
 400ce10:	40078240 	call	4007824 <__locale_mb_cur_max>
 400ce14:	00c00044 	movi	r3,1
 400ce18:	10c03e26 	beq	r2,r3,400cf14 <__fputwc+0x130>
 400ce1c:	81c01704 	addi	r7,r16,92
 400ce20:	900d883a 	mov	r6,r18
 400ce24:	d80b883a 	mov	r5,sp
 400ce28:	9809883a 	mov	r4,r19
 400ce2c:	400d15c0 	call	400d15c <_wcrtomb_r>
 400ce30:	1029883a 	mov	r20,r2
 400ce34:	00bfffc4 	movi	r2,-1
 400ce38:	a0802026 	beq	r20,r2,400cebc <__fputwc+0xd8>
 400ce3c:	d9400003 	ldbu	r5,0(sp)
 400ce40:	a0001c26 	beq	r20,zero,400ceb4 <__fputwc+0xd0>
 400ce44:	0023883a 	mov	r17,zero
 400ce48:	05400284 	movi	r21,10
 400ce4c:	00000906 	br	400ce74 <__fputwc+0x90>
 400ce50:	80800017 	ldw	r2,0(r16)
 400ce54:	11400005 	stb	r5,0(r2)
 400ce58:	80c00017 	ldw	r3,0(r16)
 400ce5c:	18c00044 	addi	r3,r3,1
 400ce60:	80c00015 	stw	r3,0(r16)
 400ce64:	8c400044 	addi	r17,r17,1
 400ce68:	dc45883a 	add	r2,sp,r17
 400ce6c:	8d00112e 	bgeu	r17,r20,400ceb4 <__fputwc+0xd0>
 400ce70:	11400003 	ldbu	r5,0(r2)
 400ce74:	80c00217 	ldw	r3,8(r16)
 400ce78:	18ffffc4 	addi	r3,r3,-1
 400ce7c:	80c00215 	stw	r3,8(r16)
 400ce80:	183ff30e 	bge	r3,zero,400ce50 <__ram_exceptions_end+0xfbfecc08>
 400ce84:	80800617 	ldw	r2,24(r16)
 400ce88:	18801916 	blt	r3,r2,400cef0 <__fputwc+0x10c>
 400ce8c:	80800017 	ldw	r2,0(r16)
 400ce90:	11400005 	stb	r5,0(r2)
 400ce94:	80800017 	ldw	r2,0(r16)
 400ce98:	10c00003 	ldbu	r3,0(r2)
 400ce9c:	10800044 	addi	r2,r2,1
 400cea0:	1d402326 	beq	r3,r21,400cf30 <__fputwc+0x14c>
 400cea4:	80800015 	stw	r2,0(r16)
 400cea8:	8c400044 	addi	r17,r17,1
 400ceac:	dc45883a 	add	r2,sp,r17
 400ceb0:	8d3fef36 	bltu	r17,r20,400ce70 <__ram_exceptions_end+0xfbfecc28>
 400ceb4:	9005883a 	mov	r2,r18
 400ceb8:	00000406 	br	400cecc <__fputwc+0xe8>
 400cebc:	80c0030b 	ldhu	r3,12(r16)
 400cec0:	a005883a 	mov	r2,r20
 400cec4:	18c01014 	ori	r3,r3,64
 400cec8:	80c0030d 	sth	r3,12(r16)
 400cecc:	dfc00717 	ldw	ra,28(sp)
 400ced0:	dd400617 	ldw	r21,24(sp)
 400ced4:	dd000517 	ldw	r20,20(sp)
 400ced8:	dcc00417 	ldw	r19,16(sp)
 400cedc:	dc800317 	ldw	r18,12(sp)
 400cee0:	dc400217 	ldw	r17,8(sp)
 400cee4:	dc000117 	ldw	r16,4(sp)
 400cee8:	dec00804 	addi	sp,sp,32
 400ceec:	f800283a 	ret
 400cef0:	800d883a 	mov	r6,r16
 400cef4:	29403fcc 	andi	r5,r5,255
 400cef8:	9809883a 	mov	r4,r19
 400cefc:	400ca100 	call	400ca10 <__swbuf_r>
 400cf00:	10bfffe0 	cmpeqi	r2,r2,-1
 400cf04:	10803fcc 	andi	r2,r2,255
 400cf08:	103fd626 	beq	r2,zero,400ce64 <__ram_exceptions_end+0xfbfecc1c>
 400cf0c:	00bfffc4 	movi	r2,-1
 400cf10:	003fee06 	br	400cecc <__ram_exceptions_end+0xfbfecc84>
 400cf14:	90ffffc4 	addi	r3,r18,-1
 400cf18:	01003f84 	movi	r4,254
 400cf1c:	20ffbf36 	bltu	r4,r3,400ce1c <__ram_exceptions_end+0xfbfecbd4>
 400cf20:	900b883a 	mov	r5,r18
 400cf24:	dc800005 	stb	r18,0(sp)
 400cf28:	1029883a 	mov	r20,r2
 400cf2c:	003fc506 	br	400ce44 <__ram_exceptions_end+0xfbfecbfc>
 400cf30:	800d883a 	mov	r6,r16
 400cf34:	a80b883a 	mov	r5,r21
 400cf38:	9809883a 	mov	r4,r19
 400cf3c:	400ca100 	call	400ca10 <__swbuf_r>
 400cf40:	10bfffe0 	cmpeqi	r2,r2,-1
 400cf44:	003fef06 	br	400cf04 <__ram_exceptions_end+0xfbfeccbc>

0400cf48 <_fputwc_r>:
 400cf48:	3080030b 	ldhu	r2,12(r6)
 400cf4c:	10c8000c 	andi	r3,r2,8192
 400cf50:	1800051e 	bne	r3,zero,400cf68 <_fputwc_r+0x20>
 400cf54:	30c01917 	ldw	r3,100(r6)
 400cf58:	10880014 	ori	r2,r2,8192
 400cf5c:	3080030d 	sth	r2,12(r6)
 400cf60:	18880014 	ori	r2,r3,8192
 400cf64:	30801915 	stw	r2,100(r6)
 400cf68:	400cde41 	jmpi	400cde4 <__fputwc>

0400cf6c <fputwc>:
 400cf6c:	00810074 	movhi	r2,1025
 400cf70:	defffc04 	addi	sp,sp,-16
 400cf74:	109a0604 	addi	r2,r2,26648
 400cf78:	dc000115 	stw	r16,4(sp)
 400cf7c:	14000017 	ldw	r16,0(r2)
 400cf80:	dc400215 	stw	r17,8(sp)
 400cf84:	dfc00315 	stw	ra,12(sp)
 400cf88:	2023883a 	mov	r17,r4
 400cf8c:	80000226 	beq	r16,zero,400cf98 <fputwc+0x2c>
 400cf90:	80800e17 	ldw	r2,56(r16)
 400cf94:	10001026 	beq	r2,zero,400cfd8 <fputwc+0x6c>
 400cf98:	2880030b 	ldhu	r2,12(r5)
 400cf9c:	10c8000c 	andi	r3,r2,8192
 400cfa0:	1800051e 	bne	r3,zero,400cfb8 <fputwc+0x4c>
 400cfa4:	28c01917 	ldw	r3,100(r5)
 400cfa8:	10880014 	ori	r2,r2,8192
 400cfac:	2880030d 	sth	r2,12(r5)
 400cfb0:	18880014 	ori	r2,r3,8192
 400cfb4:	28801915 	stw	r2,100(r5)
 400cfb8:	280d883a 	mov	r6,r5
 400cfbc:	8009883a 	mov	r4,r16
 400cfc0:	880b883a 	mov	r5,r17
 400cfc4:	dfc00317 	ldw	ra,12(sp)
 400cfc8:	dc400217 	ldw	r17,8(sp)
 400cfcc:	dc000117 	ldw	r16,4(sp)
 400cfd0:	dec00404 	addi	sp,sp,16
 400cfd4:	400cde41 	jmpi	400cde4 <__fputwc>
 400cfd8:	8009883a 	mov	r4,r16
 400cfdc:	d9400015 	stw	r5,0(sp)
 400cfe0:	4006cd40 	call	4006cd4 <__sinit>
 400cfe4:	d9400017 	ldw	r5,0(sp)
 400cfe8:	003feb06 	br	400cf98 <__ram_exceptions_end+0xfbfecd50>

0400cfec <_fstat_r>:
 400cfec:	defffd04 	addi	sp,sp,-12
 400cff0:	2805883a 	mov	r2,r5
 400cff4:	dc000015 	stw	r16,0(sp)
 400cff8:	040100b4 	movhi	r16,1026
 400cffc:	dc400115 	stw	r17,4(sp)
 400d000:	84214304 	addi	r16,r16,-31476
 400d004:	2023883a 	mov	r17,r4
 400d008:	300b883a 	mov	r5,r6
 400d00c:	1009883a 	mov	r4,r2
 400d010:	dfc00215 	stw	ra,8(sp)
 400d014:	80000015 	stw	zero,0(r16)
 400d018:	40107840 	call	4010784 <fstat>
 400d01c:	00ffffc4 	movi	r3,-1
 400d020:	10c00526 	beq	r2,r3,400d038 <_fstat_r+0x4c>
 400d024:	dfc00217 	ldw	ra,8(sp)
 400d028:	dc400117 	ldw	r17,4(sp)
 400d02c:	dc000017 	ldw	r16,0(sp)
 400d030:	dec00304 	addi	sp,sp,12
 400d034:	f800283a 	ret
 400d038:	80c00017 	ldw	r3,0(r16)
 400d03c:	183ff926 	beq	r3,zero,400d024 <__ram_exceptions_end+0xfbfecddc>
 400d040:	88c00015 	stw	r3,0(r17)
 400d044:	003ff706 	br	400d024 <__ram_exceptions_end+0xfbfecddc>

0400d048 <_isatty_r>:
 400d048:	defffd04 	addi	sp,sp,-12
 400d04c:	dc000015 	stw	r16,0(sp)
 400d050:	040100b4 	movhi	r16,1026
 400d054:	dc400115 	stw	r17,4(sp)
 400d058:	84214304 	addi	r16,r16,-31476
 400d05c:	2023883a 	mov	r17,r4
 400d060:	2809883a 	mov	r4,r5
 400d064:	dfc00215 	stw	ra,8(sp)
 400d068:	80000015 	stw	zero,0(r16)
 400d06c:	40108700 	call	4010870 <isatty>
 400d070:	00ffffc4 	movi	r3,-1
 400d074:	10c00526 	beq	r2,r3,400d08c <_isatty_r+0x44>
 400d078:	dfc00217 	ldw	ra,8(sp)
 400d07c:	dc400117 	ldw	r17,4(sp)
 400d080:	dc000017 	ldw	r16,0(sp)
 400d084:	dec00304 	addi	sp,sp,12
 400d088:	f800283a 	ret
 400d08c:	80c00017 	ldw	r3,0(r16)
 400d090:	183ff926 	beq	r3,zero,400d078 <__ram_exceptions_end+0xfbfece30>
 400d094:	88c00015 	stw	r3,0(r17)
 400d098:	003ff706 	br	400d078 <__ram_exceptions_end+0xfbfece30>

0400d09c <_lseek_r>:
 400d09c:	defffd04 	addi	sp,sp,-12
 400d0a0:	2805883a 	mov	r2,r5
 400d0a4:	dc000015 	stw	r16,0(sp)
 400d0a8:	040100b4 	movhi	r16,1026
 400d0ac:	dc400115 	stw	r17,4(sp)
 400d0b0:	300b883a 	mov	r5,r6
 400d0b4:	84214304 	addi	r16,r16,-31476
 400d0b8:	2023883a 	mov	r17,r4
 400d0bc:	380d883a 	mov	r6,r7
 400d0c0:	1009883a 	mov	r4,r2
 400d0c4:	dfc00215 	stw	ra,8(sp)
 400d0c8:	80000015 	stw	zero,0(r16)
 400d0cc:	4010a3c0 	call	4010a3c <lseek>
 400d0d0:	00ffffc4 	movi	r3,-1
 400d0d4:	10c00526 	beq	r2,r3,400d0ec <_lseek_r+0x50>
 400d0d8:	dfc00217 	ldw	ra,8(sp)
 400d0dc:	dc400117 	ldw	r17,4(sp)
 400d0e0:	dc000017 	ldw	r16,0(sp)
 400d0e4:	dec00304 	addi	sp,sp,12
 400d0e8:	f800283a 	ret
 400d0ec:	80c00017 	ldw	r3,0(r16)
 400d0f0:	183ff926 	beq	r3,zero,400d0d8 <__ram_exceptions_end+0xfbfece90>
 400d0f4:	88c00015 	stw	r3,0(r17)
 400d0f8:	003ff706 	br	400d0d8 <__ram_exceptions_end+0xfbfece90>

0400d0fc <_read_r>:
 400d0fc:	defffd04 	addi	sp,sp,-12
 400d100:	2805883a 	mov	r2,r5
 400d104:	dc000015 	stw	r16,0(sp)
 400d108:	040100b4 	movhi	r16,1026
 400d10c:	dc400115 	stw	r17,4(sp)
 400d110:	300b883a 	mov	r5,r6
 400d114:	84214304 	addi	r16,r16,-31476
 400d118:	2023883a 	mov	r17,r4
 400d11c:	380d883a 	mov	r6,r7
 400d120:	1009883a 	mov	r4,r2
 400d124:	dfc00215 	stw	ra,8(sp)
 400d128:	80000015 	stw	zero,0(r16)
 400d12c:	4010c100 	call	4010c10 <read>
 400d130:	00ffffc4 	movi	r3,-1
 400d134:	10c00526 	beq	r2,r3,400d14c <_read_r+0x50>
 400d138:	dfc00217 	ldw	ra,8(sp)
 400d13c:	dc400117 	ldw	r17,4(sp)
 400d140:	dc000017 	ldw	r16,0(sp)
 400d144:	dec00304 	addi	sp,sp,12
 400d148:	f800283a 	ret
 400d14c:	80c00017 	ldw	r3,0(r16)
 400d150:	183ff926 	beq	r3,zero,400d138 <__ram_exceptions_end+0xfbfecef0>
 400d154:	88c00015 	stw	r3,0(r17)
 400d158:	003ff706 	br	400d138 <__ram_exceptions_end+0xfbfecef0>

0400d15c <_wcrtomb_r>:
 400d15c:	defff604 	addi	sp,sp,-40
 400d160:	00810074 	movhi	r2,1025
 400d164:	dc800815 	stw	r18,32(sp)
 400d168:	dc400715 	stw	r17,28(sp)
 400d16c:	dc000615 	stw	r16,24(sp)
 400d170:	109a0a04 	addi	r2,r2,26664
 400d174:	dfc00915 	stw	ra,36(sp)
 400d178:	2021883a 	mov	r16,r4
 400d17c:	3823883a 	mov	r17,r7
 400d180:	14800017 	ldw	r18,0(r2)
 400d184:	28001426 	beq	r5,zero,400d1d8 <_wcrtomb_r+0x7c>
 400d188:	d9400415 	stw	r5,16(sp)
 400d18c:	d9800515 	stw	r6,20(sp)
 400d190:	40078180 	call	4007818 <__locale_charset>
 400d194:	d9800517 	ldw	r6,20(sp)
 400d198:	d9400417 	ldw	r5,16(sp)
 400d19c:	100f883a 	mov	r7,r2
 400d1a0:	dc400015 	stw	r17,0(sp)
 400d1a4:	8009883a 	mov	r4,r16
 400d1a8:	903ee83a 	callr	r18
 400d1ac:	00ffffc4 	movi	r3,-1
 400d1b0:	10c0031e 	bne	r2,r3,400d1c0 <_wcrtomb_r+0x64>
 400d1b4:	88000015 	stw	zero,0(r17)
 400d1b8:	00c02284 	movi	r3,138
 400d1bc:	80c00015 	stw	r3,0(r16)
 400d1c0:	dfc00917 	ldw	ra,36(sp)
 400d1c4:	dc800817 	ldw	r18,32(sp)
 400d1c8:	dc400717 	ldw	r17,28(sp)
 400d1cc:	dc000617 	ldw	r16,24(sp)
 400d1d0:	dec00a04 	addi	sp,sp,40
 400d1d4:	f800283a 	ret
 400d1d8:	40078180 	call	4007818 <__locale_charset>
 400d1dc:	100f883a 	mov	r7,r2
 400d1e0:	dc400015 	stw	r17,0(sp)
 400d1e4:	000d883a 	mov	r6,zero
 400d1e8:	d9400104 	addi	r5,sp,4
 400d1ec:	8009883a 	mov	r4,r16
 400d1f0:	903ee83a 	callr	r18
 400d1f4:	003fed06 	br	400d1ac <__ram_exceptions_end+0xfbfecf64>

0400d1f8 <wcrtomb>:
 400d1f8:	defff604 	addi	sp,sp,-40
 400d1fc:	00810074 	movhi	r2,1025
 400d200:	dc800615 	stw	r18,24(sp)
 400d204:	dc400515 	stw	r17,20(sp)
 400d208:	109a0604 	addi	r2,r2,26648
 400d20c:	dfc00915 	stw	ra,36(sp)
 400d210:	dd000815 	stw	r20,32(sp)
 400d214:	dcc00715 	stw	r19,28(sp)
 400d218:	dc000415 	stw	r16,16(sp)
 400d21c:	3025883a 	mov	r18,r6
 400d220:	14400017 	ldw	r17,0(r2)
 400d224:	20001926 	beq	r4,zero,400d28c <wcrtomb+0x94>
 400d228:	00810074 	movhi	r2,1025
 400d22c:	109a0a04 	addi	r2,r2,26664
 400d230:	15000017 	ldw	r20,0(r2)
 400d234:	2021883a 	mov	r16,r4
 400d238:	2827883a 	mov	r19,r5
 400d23c:	40078180 	call	4007818 <__locale_charset>
 400d240:	100f883a 	mov	r7,r2
 400d244:	dc800015 	stw	r18,0(sp)
 400d248:	980d883a 	mov	r6,r19
 400d24c:	800b883a 	mov	r5,r16
 400d250:	8809883a 	mov	r4,r17
 400d254:	a03ee83a 	callr	r20
 400d258:	00ffffc4 	movi	r3,-1
 400d25c:	10c0031e 	bne	r2,r3,400d26c <wcrtomb+0x74>
 400d260:	90000015 	stw	zero,0(r18)
 400d264:	00c02284 	movi	r3,138
 400d268:	88c00015 	stw	r3,0(r17)
 400d26c:	dfc00917 	ldw	ra,36(sp)
 400d270:	dd000817 	ldw	r20,32(sp)
 400d274:	dcc00717 	ldw	r19,28(sp)
 400d278:	dc800617 	ldw	r18,24(sp)
 400d27c:	dc400517 	ldw	r17,20(sp)
 400d280:	dc000417 	ldw	r16,16(sp)
 400d284:	dec00a04 	addi	sp,sp,40
 400d288:	f800283a 	ret
 400d28c:	00810074 	movhi	r2,1025
 400d290:	109a0a04 	addi	r2,r2,26664
 400d294:	14000017 	ldw	r16,0(r2)
 400d298:	40078180 	call	4007818 <__locale_charset>
 400d29c:	100f883a 	mov	r7,r2
 400d2a0:	dc800015 	stw	r18,0(sp)
 400d2a4:	000d883a 	mov	r6,zero
 400d2a8:	d9400104 	addi	r5,sp,4
 400d2ac:	8809883a 	mov	r4,r17
 400d2b0:	803ee83a 	callr	r16
 400d2b4:	003fe806 	br	400d258 <__ram_exceptions_end+0xfbfed010>

0400d2b8 <__ascii_wctomb>:
 400d2b8:	28000526 	beq	r5,zero,400d2d0 <__ascii_wctomb+0x18>
 400d2bc:	00803fc4 	movi	r2,255
 400d2c0:	11800536 	bltu	r2,r6,400d2d8 <__ascii_wctomb+0x20>
 400d2c4:	29800005 	stb	r6,0(r5)
 400d2c8:	00800044 	movi	r2,1
 400d2cc:	f800283a 	ret
 400d2d0:	0005883a 	mov	r2,zero
 400d2d4:	f800283a 	ret
 400d2d8:	00802284 	movi	r2,138
 400d2dc:	20800015 	stw	r2,0(r4)
 400d2e0:	00bfffc4 	movi	r2,-1
 400d2e4:	f800283a 	ret

0400d2e8 <_wctomb_r>:
 400d2e8:	00810074 	movhi	r2,1025
 400d2ec:	defff904 	addi	sp,sp,-28
 400d2f0:	109a0a04 	addi	r2,r2,26664
 400d2f4:	dfc00615 	stw	ra,24(sp)
 400d2f8:	dc400515 	stw	r17,20(sp)
 400d2fc:	dc000415 	stw	r16,16(sp)
 400d300:	3823883a 	mov	r17,r7
 400d304:	14000017 	ldw	r16,0(r2)
 400d308:	d9000115 	stw	r4,4(sp)
 400d30c:	d9400215 	stw	r5,8(sp)
 400d310:	d9800315 	stw	r6,12(sp)
 400d314:	40078180 	call	4007818 <__locale_charset>
 400d318:	d9800317 	ldw	r6,12(sp)
 400d31c:	d9400217 	ldw	r5,8(sp)
 400d320:	d9000117 	ldw	r4,4(sp)
 400d324:	100f883a 	mov	r7,r2
 400d328:	dc400015 	stw	r17,0(sp)
 400d32c:	803ee83a 	callr	r16
 400d330:	dfc00617 	ldw	ra,24(sp)
 400d334:	dc400517 	ldw	r17,20(sp)
 400d338:	dc000417 	ldw	r16,16(sp)
 400d33c:	dec00704 	addi	sp,sp,28
 400d340:	f800283a 	ret

0400d344 <__udivdi3>:
 400d344:	defff504 	addi	sp,sp,-44
 400d348:	dcc00415 	stw	r19,16(sp)
 400d34c:	dc000115 	stw	r16,4(sp)
 400d350:	dfc00a15 	stw	ra,40(sp)
 400d354:	df000915 	stw	fp,36(sp)
 400d358:	ddc00815 	stw	r23,32(sp)
 400d35c:	dd800715 	stw	r22,28(sp)
 400d360:	dd400615 	stw	r21,24(sp)
 400d364:	dd000515 	stw	r20,20(sp)
 400d368:	dc800315 	stw	r18,12(sp)
 400d36c:	dc400215 	stw	r17,8(sp)
 400d370:	2027883a 	mov	r19,r4
 400d374:	2821883a 	mov	r16,r5
 400d378:	3800411e 	bne	r7,zero,400d480 <__udivdi3+0x13c>
 400d37c:	3023883a 	mov	r17,r6
 400d380:	2025883a 	mov	r18,r4
 400d384:	2980522e 	bgeu	r5,r6,400d4d0 <__udivdi3+0x18c>
 400d388:	00bfffd4 	movui	r2,65535
 400d38c:	282d883a 	mov	r22,r5
 400d390:	1180a836 	bltu	r2,r6,400d634 <__udivdi3+0x2f0>
 400d394:	00803fc4 	movi	r2,255
 400d398:	1185803a 	cmpltu	r2,r2,r6
 400d39c:	100490fa 	slli	r2,r2,3
 400d3a0:	3086d83a 	srl	r3,r6,r2
 400d3a4:	01010074 	movhi	r4,1025
 400d3a8:	21128604 	addi	r4,r4,18968
 400d3ac:	20c7883a 	add	r3,r4,r3
 400d3b0:	18c00003 	ldbu	r3,0(r3)
 400d3b4:	1885883a 	add	r2,r3,r2
 400d3b8:	00c00804 	movi	r3,32
 400d3bc:	1887c83a 	sub	r3,r3,r2
 400d3c0:	18000526 	beq	r3,zero,400d3d8 <__udivdi3+0x94>
 400d3c4:	80e0983a 	sll	r16,r16,r3
 400d3c8:	9884d83a 	srl	r2,r19,r2
 400d3cc:	30e2983a 	sll	r17,r6,r3
 400d3d0:	98e4983a 	sll	r18,r19,r3
 400d3d4:	142cb03a 	or	r22,r2,r16
 400d3d8:	882ad43a 	srli	r21,r17,16
 400d3dc:	b009883a 	mov	r4,r22
 400d3e0:	8d3fffcc 	andi	r20,r17,65535
 400d3e4:	a80b883a 	mov	r5,r21
 400d3e8:	400df500 	call	400df50 <__umodsi3>
 400d3ec:	b009883a 	mov	r4,r22
 400d3f0:	a80b883a 	mov	r5,r21
 400d3f4:	1027883a 	mov	r19,r2
 400d3f8:	400deec0 	call	400deec <__udivsi3>
 400d3fc:	102d883a 	mov	r22,r2
 400d400:	9826943a 	slli	r19,r19,16
 400d404:	9004d43a 	srli	r2,r18,16
 400d408:	a5a1383a 	mul	r16,r20,r22
 400d40c:	14c4b03a 	or	r2,r2,r19
 400d410:	1400052e 	bgeu	r2,r16,400d428 <__udivdi3+0xe4>
 400d414:	1445883a 	add	r2,r2,r17
 400d418:	b0ffffc4 	addi	r3,r22,-1
 400d41c:	14400136 	bltu	r2,r17,400d424 <__udivdi3+0xe0>
 400d420:	14012336 	bltu	r2,r16,400d8b0 <__udivdi3+0x56c>
 400d424:	182d883a 	mov	r22,r3
 400d428:	1421c83a 	sub	r16,r2,r16
 400d42c:	a80b883a 	mov	r5,r21
 400d430:	8009883a 	mov	r4,r16
 400d434:	400df500 	call	400df50 <__umodsi3>
 400d438:	1027883a 	mov	r19,r2
 400d43c:	a80b883a 	mov	r5,r21
 400d440:	8009883a 	mov	r4,r16
 400d444:	400deec0 	call	400deec <__udivsi3>
 400d448:	9826943a 	slli	r19,r19,16
 400d44c:	a0a9383a 	mul	r20,r20,r2
 400d450:	94bfffcc 	andi	r18,r18,65535
 400d454:	94e4b03a 	or	r18,r18,r19
 400d458:	9500052e 	bgeu	r18,r20,400d470 <__udivdi3+0x12c>
 400d45c:	8ca5883a 	add	r18,r17,r18
 400d460:	10ffffc4 	addi	r3,r2,-1
 400d464:	9440f136 	bltu	r18,r17,400d82c <__udivdi3+0x4e8>
 400d468:	9500f02e 	bgeu	r18,r20,400d82c <__udivdi3+0x4e8>
 400d46c:	10bfff84 	addi	r2,r2,-2
 400d470:	b00c943a 	slli	r6,r22,16
 400d474:	0007883a 	mov	r3,zero
 400d478:	3084b03a 	or	r2,r6,r2
 400d47c:	00005906 	br	400d5e4 <__udivdi3+0x2a0>
 400d480:	29c05636 	bltu	r5,r7,400d5dc <__udivdi3+0x298>
 400d484:	00bfffd4 	movui	r2,65535
 400d488:	11c0622e 	bgeu	r2,r7,400d614 <__udivdi3+0x2d0>
 400d48c:	00804034 	movhi	r2,256
 400d490:	10bfffc4 	addi	r2,r2,-1
 400d494:	11c0ee36 	bltu	r2,r7,400d850 <__udivdi3+0x50c>
 400d498:	00800404 	movi	r2,16
 400d49c:	3886d83a 	srl	r3,r7,r2
 400d4a0:	01010074 	movhi	r4,1025
 400d4a4:	21128604 	addi	r4,r4,18968
 400d4a8:	20c7883a 	add	r3,r4,r3
 400d4ac:	18c00003 	ldbu	r3,0(r3)
 400d4b0:	05400804 	movi	r21,32
 400d4b4:	1885883a 	add	r2,r3,r2
 400d4b8:	a8abc83a 	sub	r21,r21,r2
 400d4bc:	a800621e 	bne	r21,zero,400d648 <__udivdi3+0x304>
 400d4c0:	3c00e936 	bltu	r7,r16,400d868 <__udivdi3+0x524>
 400d4c4:	9985403a 	cmpgeu	r2,r19,r6
 400d4c8:	0007883a 	mov	r3,zero
 400d4cc:	00004506 	br	400d5e4 <__udivdi3+0x2a0>
 400d4d0:	3000041e 	bne	r6,zero,400d4e4 <__udivdi3+0x1a0>
 400d4d4:	000b883a 	mov	r5,zero
 400d4d8:	01000044 	movi	r4,1
 400d4dc:	400deec0 	call	400deec <__udivsi3>
 400d4e0:	1023883a 	mov	r17,r2
 400d4e4:	00bfffd4 	movui	r2,65535
 400d4e8:	14404e2e 	bgeu	r2,r17,400d624 <__udivdi3+0x2e0>
 400d4ec:	00804034 	movhi	r2,256
 400d4f0:	10bfffc4 	addi	r2,r2,-1
 400d4f4:	1440d836 	bltu	r2,r17,400d858 <__udivdi3+0x514>
 400d4f8:	00800404 	movi	r2,16
 400d4fc:	8886d83a 	srl	r3,r17,r2
 400d500:	01010074 	movhi	r4,1025
 400d504:	21128604 	addi	r4,r4,18968
 400d508:	20c7883a 	add	r3,r4,r3
 400d50c:	18c00003 	ldbu	r3,0(r3)
 400d510:	1885883a 	add	r2,r3,r2
 400d514:	00c00804 	movi	r3,32
 400d518:	1887c83a 	sub	r3,r3,r2
 400d51c:	18008f1e 	bne	r3,zero,400d75c <__udivdi3+0x418>
 400d520:	882ad43a 	srli	r21,r17,16
 400d524:	8461c83a 	sub	r16,r16,r17
 400d528:	8d3fffcc 	andi	r20,r17,65535
 400d52c:	00c00044 	movi	r3,1
 400d530:	8009883a 	mov	r4,r16
 400d534:	a80b883a 	mov	r5,r21
 400d538:	d8c00015 	stw	r3,0(sp)
 400d53c:	400df500 	call	400df50 <__umodsi3>
 400d540:	8009883a 	mov	r4,r16
 400d544:	a80b883a 	mov	r5,r21
 400d548:	1027883a 	mov	r19,r2
 400d54c:	400deec0 	call	400deec <__udivsi3>
 400d550:	9826943a 	slli	r19,r19,16
 400d554:	9008d43a 	srli	r4,r18,16
 400d558:	1521383a 	mul	r16,r2,r20
 400d55c:	102d883a 	mov	r22,r2
 400d560:	24c8b03a 	or	r4,r4,r19
 400d564:	d8c00017 	ldw	r3,0(sp)
 400d568:	2400052e 	bgeu	r4,r16,400d580 <__udivdi3+0x23c>
 400d56c:	2449883a 	add	r4,r4,r17
 400d570:	b0bfffc4 	addi	r2,r22,-1
 400d574:	24400136 	bltu	r4,r17,400d57c <__udivdi3+0x238>
 400d578:	2400ca36 	bltu	r4,r16,400d8a4 <__udivdi3+0x560>
 400d57c:	102d883a 	mov	r22,r2
 400d580:	2421c83a 	sub	r16,r4,r16
 400d584:	a80b883a 	mov	r5,r21
 400d588:	8009883a 	mov	r4,r16
 400d58c:	d8c00015 	stw	r3,0(sp)
 400d590:	400df500 	call	400df50 <__umodsi3>
 400d594:	1027883a 	mov	r19,r2
 400d598:	a80b883a 	mov	r5,r21
 400d59c:	8009883a 	mov	r4,r16
 400d5a0:	400deec0 	call	400deec <__udivsi3>
 400d5a4:	9826943a 	slli	r19,r19,16
 400d5a8:	1529383a 	mul	r20,r2,r20
 400d5ac:	94bfffcc 	andi	r18,r18,65535
 400d5b0:	94e4b03a 	or	r18,r18,r19
 400d5b4:	d8c00017 	ldw	r3,0(sp)
 400d5b8:	9500052e 	bgeu	r18,r20,400d5d0 <__udivdi3+0x28c>
 400d5bc:	8ca5883a 	add	r18,r17,r18
 400d5c0:	113fffc4 	addi	r4,r2,-1
 400d5c4:	94409736 	bltu	r18,r17,400d824 <__udivdi3+0x4e0>
 400d5c8:	9500962e 	bgeu	r18,r20,400d824 <__udivdi3+0x4e0>
 400d5cc:	10bfff84 	addi	r2,r2,-2
 400d5d0:	b00c943a 	slli	r6,r22,16
 400d5d4:	3084b03a 	or	r2,r6,r2
 400d5d8:	00000206 	br	400d5e4 <__udivdi3+0x2a0>
 400d5dc:	0007883a 	mov	r3,zero
 400d5e0:	0005883a 	mov	r2,zero
 400d5e4:	dfc00a17 	ldw	ra,40(sp)
 400d5e8:	df000917 	ldw	fp,36(sp)
 400d5ec:	ddc00817 	ldw	r23,32(sp)
 400d5f0:	dd800717 	ldw	r22,28(sp)
 400d5f4:	dd400617 	ldw	r21,24(sp)
 400d5f8:	dd000517 	ldw	r20,20(sp)
 400d5fc:	dcc00417 	ldw	r19,16(sp)
 400d600:	dc800317 	ldw	r18,12(sp)
 400d604:	dc400217 	ldw	r17,8(sp)
 400d608:	dc000117 	ldw	r16,4(sp)
 400d60c:	dec00b04 	addi	sp,sp,44
 400d610:	f800283a 	ret
 400d614:	00803fc4 	movi	r2,255
 400d618:	11c5803a 	cmpltu	r2,r2,r7
 400d61c:	100490fa 	slli	r2,r2,3
 400d620:	003f9e06 	br	400d49c <__ram_exceptions_end+0xfbfed254>
 400d624:	00803fc4 	movi	r2,255
 400d628:	1445803a 	cmpltu	r2,r2,r17
 400d62c:	100490fa 	slli	r2,r2,3
 400d630:	003fb206 	br	400d4fc <__ram_exceptions_end+0xfbfed2b4>
 400d634:	00804034 	movhi	r2,256
 400d638:	10bfffc4 	addi	r2,r2,-1
 400d63c:	11808836 	bltu	r2,r6,400d860 <__udivdi3+0x51c>
 400d640:	00800404 	movi	r2,16
 400d644:	003f5606 	br	400d3a0 <__ram_exceptions_end+0xfbfed158>
 400d648:	30aed83a 	srl	r23,r6,r2
 400d64c:	3d4e983a 	sll	r7,r7,r21
 400d650:	80acd83a 	srl	r22,r16,r2
 400d654:	9884d83a 	srl	r2,r19,r2
 400d658:	3deeb03a 	or	r23,r7,r23
 400d65c:	b824d43a 	srli	r18,r23,16
 400d660:	8560983a 	sll	r16,r16,r21
 400d664:	b009883a 	mov	r4,r22
 400d668:	900b883a 	mov	r5,r18
 400d66c:	3568983a 	sll	r20,r6,r21
 400d670:	1420b03a 	or	r16,r2,r16
 400d674:	400df500 	call	400df50 <__umodsi3>
 400d678:	b009883a 	mov	r4,r22
 400d67c:	900b883a 	mov	r5,r18
 400d680:	1023883a 	mov	r17,r2
 400d684:	400deec0 	call	400deec <__udivsi3>
 400d688:	8808943a 	slli	r4,r17,16
 400d68c:	bf3fffcc 	andi	fp,r23,65535
 400d690:	8006d43a 	srli	r3,r16,16
 400d694:	e0a3383a 	mul	r17,fp,r2
 400d698:	100d883a 	mov	r6,r2
 400d69c:	1906b03a 	or	r3,r3,r4
 400d6a0:	1c40042e 	bgeu	r3,r17,400d6b4 <__udivdi3+0x370>
 400d6a4:	1dc7883a 	add	r3,r3,r23
 400d6a8:	10bfffc4 	addi	r2,r2,-1
 400d6ac:	1dc0752e 	bgeu	r3,r23,400d884 <__udivdi3+0x540>
 400d6b0:	100d883a 	mov	r6,r2
 400d6b4:	1c63c83a 	sub	r17,r3,r17
 400d6b8:	900b883a 	mov	r5,r18
 400d6bc:	8809883a 	mov	r4,r17
 400d6c0:	d9800015 	stw	r6,0(sp)
 400d6c4:	400df500 	call	400df50 <__umodsi3>
 400d6c8:	102d883a 	mov	r22,r2
 400d6cc:	8809883a 	mov	r4,r17
 400d6d0:	900b883a 	mov	r5,r18
 400d6d4:	400deec0 	call	400deec <__udivsi3>
 400d6d8:	b02c943a 	slli	r22,r22,16
 400d6dc:	e089383a 	mul	r4,fp,r2
 400d6e0:	843fffcc 	andi	r16,r16,65535
 400d6e4:	85a0b03a 	or	r16,r16,r22
 400d6e8:	d9800017 	ldw	r6,0(sp)
 400d6ec:	8100042e 	bgeu	r16,r4,400d700 <__udivdi3+0x3bc>
 400d6f0:	85e1883a 	add	r16,r16,r23
 400d6f4:	10ffffc4 	addi	r3,r2,-1
 400d6f8:	85c05e2e 	bgeu	r16,r23,400d874 <__udivdi3+0x530>
 400d6fc:	1805883a 	mov	r2,r3
 400d700:	300c943a 	slli	r6,r6,16
 400d704:	a17fffcc 	andi	r5,r20,65535
 400d708:	a028d43a 	srli	r20,r20,16
 400d70c:	3084b03a 	or	r2,r6,r2
 400d710:	10ffffcc 	andi	r3,r2,65535
 400d714:	100cd43a 	srli	r6,r2,16
 400d718:	194f383a 	mul	r7,r3,r5
 400d71c:	1d07383a 	mul	r3,r3,r20
 400d720:	314b383a 	mul	r5,r6,r5
 400d724:	3810d43a 	srli	r8,r7,16
 400d728:	8121c83a 	sub	r16,r16,r4
 400d72c:	1947883a 	add	r3,r3,r5
 400d730:	40c7883a 	add	r3,r8,r3
 400d734:	350d383a 	mul	r6,r6,r20
 400d738:	1940022e 	bgeu	r3,r5,400d744 <__udivdi3+0x400>
 400d73c:	01000074 	movhi	r4,1
 400d740:	310d883a 	add	r6,r6,r4
 400d744:	1828d43a 	srli	r20,r3,16
 400d748:	a18d883a 	add	r6,r20,r6
 400d74c:	81803e36 	bltu	r16,r6,400d848 <__udivdi3+0x504>
 400d750:	81803826 	beq	r16,r6,400d834 <__udivdi3+0x4f0>
 400d754:	0007883a 	mov	r3,zero
 400d758:	003fa206 	br	400d5e4 <__ram_exceptions_end+0xfbfed39c>
 400d75c:	88e2983a 	sll	r17,r17,r3
 400d760:	80a8d83a 	srl	r20,r16,r2
 400d764:	80e0983a 	sll	r16,r16,r3
 400d768:	882ad43a 	srli	r21,r17,16
 400d76c:	9884d83a 	srl	r2,r19,r2
 400d770:	a009883a 	mov	r4,r20
 400d774:	a80b883a 	mov	r5,r21
 400d778:	142eb03a 	or	r23,r2,r16
 400d77c:	98e4983a 	sll	r18,r19,r3
 400d780:	400df500 	call	400df50 <__umodsi3>
 400d784:	a009883a 	mov	r4,r20
 400d788:	a80b883a 	mov	r5,r21
 400d78c:	1021883a 	mov	r16,r2
 400d790:	400deec0 	call	400deec <__udivsi3>
 400d794:	1039883a 	mov	fp,r2
 400d798:	8d3fffcc 	andi	r20,r17,65535
 400d79c:	8020943a 	slli	r16,r16,16
 400d7a0:	b804d43a 	srli	r2,r23,16
 400d7a4:	a72d383a 	mul	r22,r20,fp
 400d7a8:	1404b03a 	or	r2,r2,r16
 400d7ac:	1580062e 	bgeu	r2,r22,400d7c8 <__udivdi3+0x484>
 400d7b0:	1445883a 	add	r2,r2,r17
 400d7b4:	e0ffffc4 	addi	r3,fp,-1
 400d7b8:	14403836 	bltu	r2,r17,400d89c <__udivdi3+0x558>
 400d7bc:	1580372e 	bgeu	r2,r22,400d89c <__udivdi3+0x558>
 400d7c0:	e73fff84 	addi	fp,fp,-2
 400d7c4:	1445883a 	add	r2,r2,r17
 400d7c8:	15adc83a 	sub	r22,r2,r22
 400d7cc:	a80b883a 	mov	r5,r21
 400d7d0:	b009883a 	mov	r4,r22
 400d7d4:	400df500 	call	400df50 <__umodsi3>
 400d7d8:	1027883a 	mov	r19,r2
 400d7dc:	b009883a 	mov	r4,r22
 400d7e0:	a80b883a 	mov	r5,r21
 400d7e4:	400deec0 	call	400deec <__udivsi3>
 400d7e8:	9826943a 	slli	r19,r19,16
 400d7ec:	a0a1383a 	mul	r16,r20,r2
 400d7f0:	b93fffcc 	andi	r4,r23,65535
 400d7f4:	24c8b03a 	or	r4,r4,r19
 400d7f8:	2400062e 	bgeu	r4,r16,400d814 <__udivdi3+0x4d0>
 400d7fc:	2449883a 	add	r4,r4,r17
 400d800:	10ffffc4 	addi	r3,r2,-1
 400d804:	24402336 	bltu	r4,r17,400d894 <__udivdi3+0x550>
 400d808:	2400222e 	bgeu	r4,r16,400d894 <__udivdi3+0x550>
 400d80c:	10bfff84 	addi	r2,r2,-2
 400d810:	2449883a 	add	r4,r4,r17
 400d814:	e038943a 	slli	fp,fp,16
 400d818:	2421c83a 	sub	r16,r4,r16
 400d81c:	e086b03a 	or	r3,fp,r2
 400d820:	003f4306 	br	400d530 <__ram_exceptions_end+0xfbfed2e8>
 400d824:	2005883a 	mov	r2,r4
 400d828:	003f6906 	br	400d5d0 <__ram_exceptions_end+0xfbfed388>
 400d82c:	1805883a 	mov	r2,r3
 400d830:	003f0f06 	br	400d470 <__ram_exceptions_end+0xfbfed228>
 400d834:	1806943a 	slli	r3,r3,16
 400d838:	9d66983a 	sll	r19,r19,r21
 400d83c:	39ffffcc 	andi	r7,r7,65535
 400d840:	19c7883a 	add	r3,r3,r7
 400d844:	98ffc32e 	bgeu	r19,r3,400d754 <__ram_exceptions_end+0xfbfed50c>
 400d848:	10bfffc4 	addi	r2,r2,-1
 400d84c:	003fc106 	br	400d754 <__ram_exceptions_end+0xfbfed50c>
 400d850:	00800604 	movi	r2,24
 400d854:	003f1106 	br	400d49c <__ram_exceptions_end+0xfbfed254>
 400d858:	00800604 	movi	r2,24
 400d85c:	003f2706 	br	400d4fc <__ram_exceptions_end+0xfbfed2b4>
 400d860:	00800604 	movi	r2,24
 400d864:	003ece06 	br	400d3a0 <__ram_exceptions_end+0xfbfed158>
 400d868:	0007883a 	mov	r3,zero
 400d86c:	00800044 	movi	r2,1
 400d870:	003f5c06 	br	400d5e4 <__ram_exceptions_end+0xfbfed39c>
 400d874:	813fa12e 	bgeu	r16,r4,400d6fc <__ram_exceptions_end+0xfbfed4b4>
 400d878:	10bfff84 	addi	r2,r2,-2
 400d87c:	85e1883a 	add	r16,r16,r23
 400d880:	003f9f06 	br	400d700 <__ram_exceptions_end+0xfbfed4b8>
 400d884:	1c7f8a2e 	bgeu	r3,r17,400d6b0 <__ram_exceptions_end+0xfbfed468>
 400d888:	31bfff84 	addi	r6,r6,-2
 400d88c:	1dc7883a 	add	r3,r3,r23
 400d890:	003f8806 	br	400d6b4 <__ram_exceptions_end+0xfbfed46c>
 400d894:	1805883a 	mov	r2,r3
 400d898:	003fde06 	br	400d814 <__ram_exceptions_end+0xfbfed5cc>
 400d89c:	1839883a 	mov	fp,r3
 400d8a0:	003fc906 	br	400d7c8 <__ram_exceptions_end+0xfbfed580>
 400d8a4:	b5bfff84 	addi	r22,r22,-2
 400d8a8:	2449883a 	add	r4,r4,r17
 400d8ac:	003f3406 	br	400d580 <__ram_exceptions_end+0xfbfed338>
 400d8b0:	b5bfff84 	addi	r22,r22,-2
 400d8b4:	1445883a 	add	r2,r2,r17
 400d8b8:	003edb06 	br	400d428 <__ram_exceptions_end+0xfbfed1e0>

0400d8bc <__umoddi3>:
 400d8bc:	defff404 	addi	sp,sp,-48
 400d8c0:	df000a15 	stw	fp,40(sp)
 400d8c4:	dc400315 	stw	r17,12(sp)
 400d8c8:	dc000215 	stw	r16,8(sp)
 400d8cc:	dfc00b15 	stw	ra,44(sp)
 400d8d0:	ddc00915 	stw	r23,36(sp)
 400d8d4:	dd800815 	stw	r22,32(sp)
 400d8d8:	dd400715 	stw	r21,28(sp)
 400d8dc:	dd000615 	stw	r20,24(sp)
 400d8e0:	dcc00515 	stw	r19,20(sp)
 400d8e4:	dc800415 	stw	r18,16(sp)
 400d8e8:	2021883a 	mov	r16,r4
 400d8ec:	2823883a 	mov	r17,r5
 400d8f0:	2839883a 	mov	fp,r5
 400d8f4:	38003c1e 	bne	r7,zero,400d9e8 <__umoddi3+0x12c>
 400d8f8:	3027883a 	mov	r19,r6
 400d8fc:	2029883a 	mov	r20,r4
 400d900:	2980512e 	bgeu	r5,r6,400da48 <__umoddi3+0x18c>
 400d904:	00bfffd4 	movui	r2,65535
 400d908:	11809a36 	bltu	r2,r6,400db74 <__umoddi3+0x2b8>
 400d90c:	01003fc4 	movi	r4,255
 400d910:	2189803a 	cmpltu	r4,r4,r6
 400d914:	200890fa 	slli	r4,r4,3
 400d918:	3104d83a 	srl	r2,r6,r4
 400d91c:	00c10074 	movhi	r3,1025
 400d920:	18d28604 	addi	r3,r3,18968
 400d924:	1885883a 	add	r2,r3,r2
 400d928:	10c00003 	ldbu	r3,0(r2)
 400d92c:	00800804 	movi	r2,32
 400d930:	1909883a 	add	r4,r3,r4
 400d934:	1125c83a 	sub	r18,r2,r4
 400d938:	90000526 	beq	r18,zero,400d950 <__umoddi3+0x94>
 400d93c:	8ca2983a 	sll	r17,r17,r18
 400d940:	8108d83a 	srl	r4,r16,r4
 400d944:	34a6983a 	sll	r19,r6,r18
 400d948:	84a8983a 	sll	r20,r16,r18
 400d94c:	2478b03a 	or	fp,r4,r17
 400d950:	982ed43a 	srli	r23,r19,16
 400d954:	e009883a 	mov	r4,fp
 400d958:	9dbfffcc 	andi	r22,r19,65535
 400d95c:	b80b883a 	mov	r5,r23
 400d960:	400df500 	call	400df50 <__umodsi3>
 400d964:	e009883a 	mov	r4,fp
 400d968:	b80b883a 	mov	r5,r23
 400d96c:	102b883a 	mov	r21,r2
 400d970:	400deec0 	call	400deec <__udivsi3>
 400d974:	a806943a 	slli	r3,r21,16
 400d978:	a008d43a 	srli	r4,r20,16
 400d97c:	b085383a 	mul	r2,r22,r2
 400d980:	20c8b03a 	or	r4,r4,r3
 400d984:	2080032e 	bgeu	r4,r2,400d994 <__umoddi3+0xd8>
 400d988:	24c9883a 	add	r4,r4,r19
 400d98c:	24c00136 	bltu	r4,r19,400d994 <__umoddi3+0xd8>
 400d990:	20811036 	bltu	r4,r2,400ddd4 <__umoddi3+0x518>
 400d994:	20abc83a 	sub	r21,r4,r2
 400d998:	b80b883a 	mov	r5,r23
 400d99c:	a809883a 	mov	r4,r21
 400d9a0:	400df500 	call	400df50 <__umodsi3>
 400d9a4:	1023883a 	mov	r17,r2
 400d9a8:	b80b883a 	mov	r5,r23
 400d9ac:	a809883a 	mov	r4,r21
 400d9b0:	400deec0 	call	400deec <__udivsi3>
 400d9b4:	8822943a 	slli	r17,r17,16
 400d9b8:	b085383a 	mul	r2,r22,r2
 400d9bc:	a0ffffcc 	andi	r3,r20,65535
 400d9c0:	1c46b03a 	or	r3,r3,r17
 400d9c4:	1880042e 	bgeu	r3,r2,400d9d8 <__umoddi3+0x11c>
 400d9c8:	1cc7883a 	add	r3,r3,r19
 400d9cc:	1cc00236 	bltu	r3,r19,400d9d8 <__umoddi3+0x11c>
 400d9d0:	1880012e 	bgeu	r3,r2,400d9d8 <__umoddi3+0x11c>
 400d9d4:	1cc7883a 	add	r3,r3,r19
 400d9d8:	1885c83a 	sub	r2,r3,r2
 400d9dc:	1484d83a 	srl	r2,r2,r18
 400d9e0:	0007883a 	mov	r3,zero
 400d9e4:	00004f06 	br	400db24 <__umoddi3+0x268>
 400d9e8:	29c04c36 	bltu	r5,r7,400db1c <__umoddi3+0x260>
 400d9ec:	00bfffd4 	movui	r2,65535
 400d9f0:	11c0582e 	bgeu	r2,r7,400db54 <__umoddi3+0x298>
 400d9f4:	00804034 	movhi	r2,256
 400d9f8:	10bfffc4 	addi	r2,r2,-1
 400d9fc:	11c0e736 	bltu	r2,r7,400dd9c <__umoddi3+0x4e0>
 400da00:	01000404 	movi	r4,16
 400da04:	3904d83a 	srl	r2,r7,r4
 400da08:	00c10074 	movhi	r3,1025
 400da0c:	18d28604 	addi	r3,r3,18968
 400da10:	1885883a 	add	r2,r3,r2
 400da14:	14c00003 	ldbu	r19,0(r2)
 400da18:	00c00804 	movi	r3,32
 400da1c:	9927883a 	add	r19,r19,r4
 400da20:	1ce9c83a 	sub	r20,r3,r19
 400da24:	a000581e 	bne	r20,zero,400db88 <__umoddi3+0x2cc>
 400da28:	3c400136 	bltu	r7,r17,400da30 <__umoddi3+0x174>
 400da2c:	8180eb36 	bltu	r16,r6,400dddc <__umoddi3+0x520>
 400da30:	8185c83a 	sub	r2,r16,r6
 400da34:	89e3c83a 	sub	r17,r17,r7
 400da38:	8089803a 	cmpltu	r4,r16,r2
 400da3c:	8939c83a 	sub	fp,r17,r4
 400da40:	e007883a 	mov	r3,fp
 400da44:	00003706 	br	400db24 <__umoddi3+0x268>
 400da48:	3000041e 	bne	r6,zero,400da5c <__umoddi3+0x1a0>
 400da4c:	000b883a 	mov	r5,zero
 400da50:	01000044 	movi	r4,1
 400da54:	400deec0 	call	400deec <__udivsi3>
 400da58:	1027883a 	mov	r19,r2
 400da5c:	00bfffd4 	movui	r2,65535
 400da60:	14c0402e 	bgeu	r2,r19,400db64 <__umoddi3+0x2a8>
 400da64:	00804034 	movhi	r2,256
 400da68:	10bfffc4 	addi	r2,r2,-1
 400da6c:	14c0cd36 	bltu	r2,r19,400dda4 <__umoddi3+0x4e8>
 400da70:	00800404 	movi	r2,16
 400da74:	9886d83a 	srl	r3,r19,r2
 400da78:	01010074 	movhi	r4,1025
 400da7c:	21128604 	addi	r4,r4,18968
 400da80:	20c7883a 	add	r3,r4,r3
 400da84:	18c00003 	ldbu	r3,0(r3)
 400da88:	1887883a 	add	r3,r3,r2
 400da8c:	00800804 	movi	r2,32
 400da90:	10e5c83a 	sub	r18,r2,r3
 400da94:	9000901e 	bne	r18,zero,400dcd8 <__umoddi3+0x41c>
 400da98:	982cd43a 	srli	r22,r19,16
 400da9c:	8ce3c83a 	sub	r17,r17,r19
 400daa0:	9d7fffcc 	andi	r21,r19,65535
 400daa4:	b00b883a 	mov	r5,r22
 400daa8:	8809883a 	mov	r4,r17
 400daac:	400df500 	call	400df50 <__umodsi3>
 400dab0:	8809883a 	mov	r4,r17
 400dab4:	b00b883a 	mov	r5,r22
 400dab8:	1021883a 	mov	r16,r2
 400dabc:	400deec0 	call	400deec <__udivsi3>
 400dac0:	8006943a 	slli	r3,r16,16
 400dac4:	a008d43a 	srli	r4,r20,16
 400dac8:	1545383a 	mul	r2,r2,r21
 400dacc:	20c8b03a 	or	r4,r4,r3
 400dad0:	2080042e 	bgeu	r4,r2,400dae4 <__umoddi3+0x228>
 400dad4:	24c9883a 	add	r4,r4,r19
 400dad8:	24c00236 	bltu	r4,r19,400dae4 <__umoddi3+0x228>
 400dadc:	2080012e 	bgeu	r4,r2,400dae4 <__umoddi3+0x228>
 400dae0:	24c9883a 	add	r4,r4,r19
 400dae4:	20a1c83a 	sub	r16,r4,r2
 400dae8:	b00b883a 	mov	r5,r22
 400daec:	8009883a 	mov	r4,r16
 400daf0:	400df500 	call	400df50 <__umodsi3>
 400daf4:	1023883a 	mov	r17,r2
 400daf8:	b00b883a 	mov	r5,r22
 400dafc:	8009883a 	mov	r4,r16
 400db00:	400deec0 	call	400deec <__udivsi3>
 400db04:	8822943a 	slli	r17,r17,16
 400db08:	1545383a 	mul	r2,r2,r21
 400db0c:	a53fffcc 	andi	r20,r20,65535
 400db10:	a446b03a 	or	r3,r20,r17
 400db14:	18bfb02e 	bgeu	r3,r2,400d9d8 <__ram_exceptions_end+0xfbfed790>
 400db18:	003fab06 	br	400d9c8 <__ram_exceptions_end+0xfbfed780>
 400db1c:	2005883a 	mov	r2,r4
 400db20:	2807883a 	mov	r3,r5
 400db24:	dfc00b17 	ldw	ra,44(sp)
 400db28:	df000a17 	ldw	fp,40(sp)
 400db2c:	ddc00917 	ldw	r23,36(sp)
 400db30:	dd800817 	ldw	r22,32(sp)
 400db34:	dd400717 	ldw	r21,28(sp)
 400db38:	dd000617 	ldw	r20,24(sp)
 400db3c:	dcc00517 	ldw	r19,20(sp)
 400db40:	dc800417 	ldw	r18,16(sp)
 400db44:	dc400317 	ldw	r17,12(sp)
 400db48:	dc000217 	ldw	r16,8(sp)
 400db4c:	dec00c04 	addi	sp,sp,48
 400db50:	f800283a 	ret
 400db54:	04c03fc4 	movi	r19,255
 400db58:	99c9803a 	cmpltu	r4,r19,r7
 400db5c:	200890fa 	slli	r4,r4,3
 400db60:	003fa806 	br	400da04 <__ram_exceptions_end+0xfbfed7bc>
 400db64:	00803fc4 	movi	r2,255
 400db68:	14c5803a 	cmpltu	r2,r2,r19
 400db6c:	100490fa 	slli	r2,r2,3
 400db70:	003fc006 	br	400da74 <__ram_exceptions_end+0xfbfed82c>
 400db74:	00804034 	movhi	r2,256
 400db78:	10bfffc4 	addi	r2,r2,-1
 400db7c:	11808b36 	bltu	r2,r6,400ddac <__umoddi3+0x4f0>
 400db80:	01000404 	movi	r4,16
 400db84:	003f6406 	br	400d918 <__ram_exceptions_end+0xfbfed6d0>
 400db88:	34c4d83a 	srl	r2,r6,r19
 400db8c:	3d0e983a 	sll	r7,r7,r20
 400db90:	8cf8d83a 	srl	fp,r17,r19
 400db94:	8d10983a 	sll	r8,r17,r20
 400db98:	38aab03a 	or	r21,r7,r2
 400db9c:	a82cd43a 	srli	r22,r21,16
 400dba0:	84e2d83a 	srl	r17,r16,r19
 400dba4:	e009883a 	mov	r4,fp
 400dba8:	b00b883a 	mov	r5,r22
 400dbac:	8a22b03a 	or	r17,r17,r8
 400dbb0:	3524983a 	sll	r18,r6,r20
 400dbb4:	400df500 	call	400df50 <__umodsi3>
 400dbb8:	e009883a 	mov	r4,fp
 400dbbc:	b00b883a 	mov	r5,r22
 400dbc0:	102f883a 	mov	r23,r2
 400dbc4:	400deec0 	call	400deec <__udivsi3>
 400dbc8:	100d883a 	mov	r6,r2
 400dbcc:	b808943a 	slli	r4,r23,16
 400dbd0:	aa3fffcc 	andi	r8,r21,65535
 400dbd4:	8804d43a 	srli	r2,r17,16
 400dbd8:	41af383a 	mul	r23,r8,r6
 400dbdc:	8520983a 	sll	r16,r16,r20
 400dbe0:	1104b03a 	or	r2,r2,r4
 400dbe4:	15c0042e 	bgeu	r2,r23,400dbf8 <__umoddi3+0x33c>
 400dbe8:	1545883a 	add	r2,r2,r21
 400dbec:	30ffffc4 	addi	r3,r6,-1
 400dbf0:	1540742e 	bgeu	r2,r21,400ddc4 <__umoddi3+0x508>
 400dbf4:	180d883a 	mov	r6,r3
 400dbf8:	15efc83a 	sub	r23,r2,r23
 400dbfc:	b00b883a 	mov	r5,r22
 400dc00:	b809883a 	mov	r4,r23
 400dc04:	d9800115 	stw	r6,4(sp)
 400dc08:	da000015 	stw	r8,0(sp)
 400dc0c:	400df500 	call	400df50 <__umodsi3>
 400dc10:	b00b883a 	mov	r5,r22
 400dc14:	b809883a 	mov	r4,r23
 400dc18:	1039883a 	mov	fp,r2
 400dc1c:	400deec0 	call	400deec <__udivsi3>
 400dc20:	da000017 	ldw	r8,0(sp)
 400dc24:	e038943a 	slli	fp,fp,16
 400dc28:	100b883a 	mov	r5,r2
 400dc2c:	4089383a 	mul	r4,r8,r2
 400dc30:	8a3fffcc 	andi	r8,r17,65535
 400dc34:	4710b03a 	or	r8,r8,fp
 400dc38:	d9800117 	ldw	r6,4(sp)
 400dc3c:	4100042e 	bgeu	r8,r4,400dc50 <__umoddi3+0x394>
 400dc40:	4551883a 	add	r8,r8,r21
 400dc44:	10bfffc4 	addi	r2,r2,-1
 400dc48:	45405a2e 	bgeu	r8,r21,400ddb4 <__umoddi3+0x4f8>
 400dc4c:	100b883a 	mov	r5,r2
 400dc50:	300c943a 	slli	r6,r6,16
 400dc54:	91ffffcc 	andi	r7,r18,65535
 400dc58:	9004d43a 	srli	r2,r18,16
 400dc5c:	314cb03a 	or	r6,r6,r5
 400dc60:	317fffcc 	andi	r5,r6,65535
 400dc64:	300cd43a 	srli	r6,r6,16
 400dc68:	29d3383a 	mul	r9,r5,r7
 400dc6c:	288b383a 	mul	r5,r5,r2
 400dc70:	31cf383a 	mul	r7,r6,r7
 400dc74:	4806d43a 	srli	r3,r9,16
 400dc78:	4111c83a 	sub	r8,r8,r4
 400dc7c:	29cb883a 	add	r5,r5,r7
 400dc80:	194b883a 	add	r5,r3,r5
 400dc84:	3085383a 	mul	r2,r6,r2
 400dc88:	29c0022e 	bgeu	r5,r7,400dc94 <__umoddi3+0x3d8>
 400dc8c:	00c00074 	movhi	r3,1
 400dc90:	10c5883a 	add	r2,r2,r3
 400dc94:	2808d43a 	srli	r4,r5,16
 400dc98:	280a943a 	slli	r5,r5,16
 400dc9c:	4a7fffcc 	andi	r9,r9,65535
 400dca0:	2085883a 	add	r2,r4,r2
 400dca4:	2a4b883a 	add	r5,r5,r9
 400dca8:	40803636 	bltu	r8,r2,400dd84 <__umoddi3+0x4c8>
 400dcac:	40804d26 	beq	r8,r2,400dde4 <__umoddi3+0x528>
 400dcb0:	4089c83a 	sub	r4,r8,r2
 400dcb4:	280f883a 	mov	r7,r5
 400dcb8:	81cfc83a 	sub	r7,r16,r7
 400dcbc:	81c7803a 	cmpltu	r3,r16,r7
 400dcc0:	20c7c83a 	sub	r3,r4,r3
 400dcc4:	1cc4983a 	sll	r2,r3,r19
 400dcc8:	3d0ed83a 	srl	r7,r7,r20
 400dccc:	1d06d83a 	srl	r3,r3,r20
 400dcd0:	11c4b03a 	or	r2,r2,r7
 400dcd4:	003f9306 	br	400db24 <__ram_exceptions_end+0xfbfed8dc>
 400dcd8:	9ca6983a 	sll	r19,r19,r18
 400dcdc:	88e8d83a 	srl	r20,r17,r3
 400dce0:	80c4d83a 	srl	r2,r16,r3
 400dce4:	982cd43a 	srli	r22,r19,16
 400dce8:	8ca2983a 	sll	r17,r17,r18
 400dcec:	a009883a 	mov	r4,r20
 400dcf0:	b00b883a 	mov	r5,r22
 400dcf4:	1478b03a 	or	fp,r2,r17
 400dcf8:	400df500 	call	400df50 <__umodsi3>
 400dcfc:	a009883a 	mov	r4,r20
 400dd00:	b00b883a 	mov	r5,r22
 400dd04:	1023883a 	mov	r17,r2
 400dd08:	400deec0 	call	400deec <__udivsi3>
 400dd0c:	9d7fffcc 	andi	r21,r19,65535
 400dd10:	880a943a 	slli	r5,r17,16
 400dd14:	e008d43a 	srli	r4,fp,16
 400dd18:	a885383a 	mul	r2,r21,r2
 400dd1c:	84a8983a 	sll	r20,r16,r18
 400dd20:	2148b03a 	or	r4,r4,r5
 400dd24:	2080042e 	bgeu	r4,r2,400dd38 <__umoddi3+0x47c>
 400dd28:	24c9883a 	add	r4,r4,r19
 400dd2c:	24c00236 	bltu	r4,r19,400dd38 <__umoddi3+0x47c>
 400dd30:	2080012e 	bgeu	r4,r2,400dd38 <__umoddi3+0x47c>
 400dd34:	24c9883a 	add	r4,r4,r19
 400dd38:	20a3c83a 	sub	r17,r4,r2
 400dd3c:	b00b883a 	mov	r5,r22
 400dd40:	8809883a 	mov	r4,r17
 400dd44:	400df500 	call	400df50 <__umodsi3>
 400dd48:	102f883a 	mov	r23,r2
 400dd4c:	8809883a 	mov	r4,r17
 400dd50:	b00b883a 	mov	r5,r22
 400dd54:	400deec0 	call	400deec <__udivsi3>
 400dd58:	b82e943a 	slli	r23,r23,16
 400dd5c:	a885383a 	mul	r2,r21,r2
 400dd60:	e13fffcc 	andi	r4,fp,65535
 400dd64:	25c8b03a 	or	r4,r4,r23
 400dd68:	2080042e 	bgeu	r4,r2,400dd7c <__umoddi3+0x4c0>
 400dd6c:	24c9883a 	add	r4,r4,r19
 400dd70:	24c00236 	bltu	r4,r19,400dd7c <__umoddi3+0x4c0>
 400dd74:	2080012e 	bgeu	r4,r2,400dd7c <__umoddi3+0x4c0>
 400dd78:	24c9883a 	add	r4,r4,r19
 400dd7c:	20a3c83a 	sub	r17,r4,r2
 400dd80:	003f4806 	br	400daa4 <__ram_exceptions_end+0xfbfed85c>
 400dd84:	2c8fc83a 	sub	r7,r5,r18
 400dd88:	1545c83a 	sub	r2,r2,r21
 400dd8c:	29cb803a 	cmpltu	r5,r5,r7
 400dd90:	1145c83a 	sub	r2,r2,r5
 400dd94:	4089c83a 	sub	r4,r8,r2
 400dd98:	003fc706 	br	400dcb8 <__ram_exceptions_end+0xfbfeda70>
 400dd9c:	01000604 	movi	r4,24
 400dda0:	003f1806 	br	400da04 <__ram_exceptions_end+0xfbfed7bc>
 400dda4:	00800604 	movi	r2,24
 400dda8:	003f3206 	br	400da74 <__ram_exceptions_end+0xfbfed82c>
 400ddac:	01000604 	movi	r4,24
 400ddb0:	003ed906 	br	400d918 <__ram_exceptions_end+0xfbfed6d0>
 400ddb4:	413fa52e 	bgeu	r8,r4,400dc4c <__ram_exceptions_end+0xfbfeda04>
 400ddb8:	297fff84 	addi	r5,r5,-2
 400ddbc:	4551883a 	add	r8,r8,r21
 400ddc0:	003fa306 	br	400dc50 <__ram_exceptions_end+0xfbfeda08>
 400ddc4:	15ff8b2e 	bgeu	r2,r23,400dbf4 <__ram_exceptions_end+0xfbfed9ac>
 400ddc8:	31bfff84 	addi	r6,r6,-2
 400ddcc:	1545883a 	add	r2,r2,r21
 400ddd0:	003f8906 	br	400dbf8 <__ram_exceptions_end+0xfbfed9b0>
 400ddd4:	24c9883a 	add	r4,r4,r19
 400ddd8:	003eee06 	br	400d994 <__ram_exceptions_end+0xfbfed74c>
 400dddc:	8005883a 	mov	r2,r16
 400dde0:	003f1706 	br	400da40 <__ram_exceptions_end+0xfbfed7f8>
 400dde4:	817fe736 	bltu	r16,r5,400dd84 <__ram_exceptions_end+0xfbfedb3c>
 400dde8:	280f883a 	mov	r7,r5
 400ddec:	0009883a 	mov	r4,zero
 400ddf0:	003fb106 	br	400dcb8 <__ram_exceptions_end+0xfbfeda70>

0400ddf4 <__divsi3>:
 400ddf4:	20001b16 	blt	r4,zero,400de64 <__divsi3+0x70>
 400ddf8:	000f883a 	mov	r7,zero
 400ddfc:	28001616 	blt	r5,zero,400de58 <__divsi3+0x64>
 400de00:	200d883a 	mov	r6,r4
 400de04:	29001a2e 	bgeu	r5,r4,400de70 <__divsi3+0x7c>
 400de08:	00800804 	movi	r2,32
 400de0c:	00c00044 	movi	r3,1
 400de10:	00000106 	br	400de18 <__divsi3+0x24>
 400de14:	10000d26 	beq	r2,zero,400de4c <__divsi3+0x58>
 400de18:	294b883a 	add	r5,r5,r5
 400de1c:	10bfffc4 	addi	r2,r2,-1
 400de20:	18c7883a 	add	r3,r3,r3
 400de24:	293ffb36 	bltu	r5,r4,400de14 <__ram_exceptions_end+0xfbfedbcc>
 400de28:	0005883a 	mov	r2,zero
 400de2c:	18000726 	beq	r3,zero,400de4c <__divsi3+0x58>
 400de30:	0005883a 	mov	r2,zero
 400de34:	31400236 	bltu	r6,r5,400de40 <__divsi3+0x4c>
 400de38:	314dc83a 	sub	r6,r6,r5
 400de3c:	10c4b03a 	or	r2,r2,r3
 400de40:	1806d07a 	srli	r3,r3,1
 400de44:	280ad07a 	srli	r5,r5,1
 400de48:	183ffa1e 	bne	r3,zero,400de34 <__ram_exceptions_end+0xfbfedbec>
 400de4c:	38000126 	beq	r7,zero,400de54 <__divsi3+0x60>
 400de50:	0085c83a 	sub	r2,zero,r2
 400de54:	f800283a 	ret
 400de58:	014bc83a 	sub	r5,zero,r5
 400de5c:	39c0005c 	xori	r7,r7,1
 400de60:	003fe706 	br	400de00 <__ram_exceptions_end+0xfbfedbb8>
 400de64:	0109c83a 	sub	r4,zero,r4
 400de68:	01c00044 	movi	r7,1
 400de6c:	003fe306 	br	400ddfc <__ram_exceptions_end+0xfbfedbb4>
 400de70:	00c00044 	movi	r3,1
 400de74:	003fee06 	br	400de30 <__ram_exceptions_end+0xfbfedbe8>

0400de78 <__modsi3>:
 400de78:	20001716 	blt	r4,zero,400ded8 <__modsi3+0x60>
 400de7c:	000f883a 	mov	r7,zero
 400de80:	2005883a 	mov	r2,r4
 400de84:	28001216 	blt	r5,zero,400ded0 <__modsi3+0x58>
 400de88:	2900162e 	bgeu	r5,r4,400dee4 <__modsi3+0x6c>
 400de8c:	01800804 	movi	r6,32
 400de90:	00c00044 	movi	r3,1
 400de94:	00000106 	br	400de9c <__modsi3+0x24>
 400de98:	30000a26 	beq	r6,zero,400dec4 <__modsi3+0x4c>
 400de9c:	294b883a 	add	r5,r5,r5
 400dea0:	31bfffc4 	addi	r6,r6,-1
 400dea4:	18c7883a 	add	r3,r3,r3
 400dea8:	293ffb36 	bltu	r5,r4,400de98 <__ram_exceptions_end+0xfbfedc50>
 400deac:	18000526 	beq	r3,zero,400dec4 <__modsi3+0x4c>
 400deb0:	1806d07a 	srli	r3,r3,1
 400deb4:	11400136 	bltu	r2,r5,400debc <__modsi3+0x44>
 400deb8:	1145c83a 	sub	r2,r2,r5
 400debc:	280ad07a 	srli	r5,r5,1
 400dec0:	183ffb1e 	bne	r3,zero,400deb0 <__ram_exceptions_end+0xfbfedc68>
 400dec4:	38000126 	beq	r7,zero,400decc <__modsi3+0x54>
 400dec8:	0085c83a 	sub	r2,zero,r2
 400decc:	f800283a 	ret
 400ded0:	014bc83a 	sub	r5,zero,r5
 400ded4:	003fec06 	br	400de88 <__ram_exceptions_end+0xfbfedc40>
 400ded8:	0109c83a 	sub	r4,zero,r4
 400dedc:	01c00044 	movi	r7,1
 400dee0:	003fe706 	br	400de80 <__ram_exceptions_end+0xfbfedc38>
 400dee4:	00c00044 	movi	r3,1
 400dee8:	003ff106 	br	400deb0 <__ram_exceptions_end+0xfbfedc68>

0400deec <__udivsi3>:
 400deec:	200d883a 	mov	r6,r4
 400def0:	2900152e 	bgeu	r5,r4,400df48 <__udivsi3+0x5c>
 400def4:	28001416 	blt	r5,zero,400df48 <__udivsi3+0x5c>
 400def8:	00800804 	movi	r2,32
 400defc:	00c00044 	movi	r3,1
 400df00:	00000206 	br	400df0c <__udivsi3+0x20>
 400df04:	10000e26 	beq	r2,zero,400df40 <__udivsi3+0x54>
 400df08:	28000516 	blt	r5,zero,400df20 <__udivsi3+0x34>
 400df0c:	294b883a 	add	r5,r5,r5
 400df10:	10bfffc4 	addi	r2,r2,-1
 400df14:	18c7883a 	add	r3,r3,r3
 400df18:	293ffa36 	bltu	r5,r4,400df04 <__ram_exceptions_end+0xfbfedcbc>
 400df1c:	18000826 	beq	r3,zero,400df40 <__udivsi3+0x54>
 400df20:	0005883a 	mov	r2,zero
 400df24:	31400236 	bltu	r6,r5,400df30 <__udivsi3+0x44>
 400df28:	314dc83a 	sub	r6,r6,r5
 400df2c:	10c4b03a 	or	r2,r2,r3
 400df30:	1806d07a 	srli	r3,r3,1
 400df34:	280ad07a 	srli	r5,r5,1
 400df38:	183ffa1e 	bne	r3,zero,400df24 <__ram_exceptions_end+0xfbfedcdc>
 400df3c:	f800283a 	ret
 400df40:	0005883a 	mov	r2,zero
 400df44:	f800283a 	ret
 400df48:	00c00044 	movi	r3,1
 400df4c:	003ff406 	br	400df20 <__ram_exceptions_end+0xfbfedcd8>

0400df50 <__umodsi3>:
 400df50:	2005883a 	mov	r2,r4
 400df54:	2900122e 	bgeu	r5,r4,400dfa0 <__umodsi3+0x50>
 400df58:	28001116 	blt	r5,zero,400dfa0 <__umodsi3+0x50>
 400df5c:	01800804 	movi	r6,32
 400df60:	00c00044 	movi	r3,1
 400df64:	00000206 	br	400df70 <__umodsi3+0x20>
 400df68:	30000c26 	beq	r6,zero,400df9c <__umodsi3+0x4c>
 400df6c:	28000516 	blt	r5,zero,400df84 <__umodsi3+0x34>
 400df70:	294b883a 	add	r5,r5,r5
 400df74:	31bfffc4 	addi	r6,r6,-1
 400df78:	18c7883a 	add	r3,r3,r3
 400df7c:	293ffa36 	bltu	r5,r4,400df68 <__ram_exceptions_end+0xfbfedd20>
 400df80:	18000626 	beq	r3,zero,400df9c <__umodsi3+0x4c>
 400df84:	1806d07a 	srli	r3,r3,1
 400df88:	11400136 	bltu	r2,r5,400df90 <__umodsi3+0x40>
 400df8c:	1145c83a 	sub	r2,r2,r5
 400df90:	280ad07a 	srli	r5,r5,1
 400df94:	183ffb1e 	bne	r3,zero,400df84 <__ram_exceptions_end+0xfbfedd3c>
 400df98:	f800283a 	ret
 400df9c:	f800283a 	ret
 400dfa0:	00c00044 	movi	r3,1
 400dfa4:	003ff706 	br	400df84 <__ram_exceptions_end+0xfbfedd3c>

0400dfa8 <__adddf3>:
 400dfa8:	02c00434 	movhi	r11,16
 400dfac:	5affffc4 	addi	r11,r11,-1
 400dfb0:	2806d7fa 	srli	r3,r5,31
 400dfb4:	2ad4703a 	and	r10,r5,r11
 400dfb8:	3ad2703a 	and	r9,r7,r11
 400dfbc:	3804d53a 	srli	r2,r7,20
 400dfc0:	3018d77a 	srli	r12,r6,29
 400dfc4:	280ad53a 	srli	r5,r5,20
 400dfc8:	501490fa 	slli	r10,r10,3
 400dfcc:	2010d77a 	srli	r8,r4,29
 400dfd0:	481290fa 	slli	r9,r9,3
 400dfd4:	380ed7fa 	srli	r7,r7,31
 400dfd8:	defffb04 	addi	sp,sp,-20
 400dfdc:	dc800215 	stw	r18,8(sp)
 400dfe0:	dc400115 	stw	r17,4(sp)
 400dfe4:	dc000015 	stw	r16,0(sp)
 400dfe8:	dfc00415 	stw	ra,16(sp)
 400dfec:	dcc00315 	stw	r19,12(sp)
 400dff0:	1c803fcc 	andi	r18,r3,255
 400dff4:	2c01ffcc 	andi	r16,r5,2047
 400dff8:	5210b03a 	or	r8,r10,r8
 400dffc:	202290fa 	slli	r17,r4,3
 400e000:	1081ffcc 	andi	r2,r2,2047
 400e004:	4b12b03a 	or	r9,r9,r12
 400e008:	300c90fa 	slli	r6,r6,3
 400e00c:	91c07526 	beq	r18,r7,400e1e4 <__adddf3+0x23c>
 400e010:	8087c83a 	sub	r3,r16,r2
 400e014:	00c0ab0e 	bge	zero,r3,400e2c4 <__adddf3+0x31c>
 400e018:	10002a1e 	bne	r2,zero,400e0c4 <__adddf3+0x11c>
 400e01c:	4984b03a 	or	r2,r9,r6
 400e020:	1000961e 	bne	r2,zero,400e27c <__adddf3+0x2d4>
 400e024:	888001cc 	andi	r2,r17,7
 400e028:	10000726 	beq	r2,zero,400e048 <__adddf3+0xa0>
 400e02c:	888003cc 	andi	r2,r17,15
 400e030:	00c00104 	movi	r3,4
 400e034:	10c00426 	beq	r2,r3,400e048 <__adddf3+0xa0>
 400e038:	88c7883a 	add	r3,r17,r3
 400e03c:	1c63803a 	cmpltu	r17,r3,r17
 400e040:	4451883a 	add	r8,r8,r17
 400e044:	1823883a 	mov	r17,r3
 400e048:	4080202c 	andhi	r2,r8,128
 400e04c:	10005926 	beq	r2,zero,400e1b4 <__adddf3+0x20c>
 400e050:	84000044 	addi	r16,r16,1
 400e054:	0081ffc4 	movi	r2,2047
 400e058:	8080ba26 	beq	r16,r2,400e344 <__adddf3+0x39c>
 400e05c:	00bfe034 	movhi	r2,65408
 400e060:	10bfffc4 	addi	r2,r2,-1
 400e064:	4090703a 	and	r8,r8,r2
 400e068:	4004977a 	slli	r2,r8,29
 400e06c:	4010927a 	slli	r8,r8,9
 400e070:	8822d0fa 	srli	r17,r17,3
 400e074:	8401ffcc 	andi	r16,r16,2047
 400e078:	4010d33a 	srli	r8,r8,12
 400e07c:	9007883a 	mov	r3,r18
 400e080:	1444b03a 	or	r2,r2,r17
 400e084:	8401ffcc 	andi	r16,r16,2047
 400e088:	8020953a 	slli	r16,r16,20
 400e08c:	18c03fcc 	andi	r3,r3,255
 400e090:	01000434 	movhi	r4,16
 400e094:	213fffc4 	addi	r4,r4,-1
 400e098:	180697fa 	slli	r3,r3,31
 400e09c:	4110703a 	and	r8,r8,r4
 400e0a0:	4410b03a 	or	r8,r8,r16
 400e0a4:	40c6b03a 	or	r3,r8,r3
 400e0a8:	dfc00417 	ldw	ra,16(sp)
 400e0ac:	dcc00317 	ldw	r19,12(sp)
 400e0b0:	dc800217 	ldw	r18,8(sp)
 400e0b4:	dc400117 	ldw	r17,4(sp)
 400e0b8:	dc000017 	ldw	r16,0(sp)
 400e0bc:	dec00504 	addi	sp,sp,20
 400e0c0:	f800283a 	ret
 400e0c4:	0081ffc4 	movi	r2,2047
 400e0c8:	80bfd626 	beq	r16,r2,400e024 <__ram_exceptions_end+0xfbfedddc>
 400e0cc:	4a402034 	orhi	r9,r9,128
 400e0d0:	00800e04 	movi	r2,56
 400e0d4:	10c09f16 	blt	r2,r3,400e354 <__adddf3+0x3ac>
 400e0d8:	008007c4 	movi	r2,31
 400e0dc:	10c0c216 	blt	r2,r3,400e3e8 <__adddf3+0x440>
 400e0e0:	00800804 	movi	r2,32
 400e0e4:	10c5c83a 	sub	r2,r2,r3
 400e0e8:	488a983a 	sll	r5,r9,r2
 400e0ec:	30c8d83a 	srl	r4,r6,r3
 400e0f0:	3084983a 	sll	r2,r6,r2
 400e0f4:	48c6d83a 	srl	r3,r9,r3
 400e0f8:	290cb03a 	or	r6,r5,r4
 400e0fc:	1004c03a 	cmpne	r2,r2,zero
 400e100:	308cb03a 	or	r6,r6,r2
 400e104:	898dc83a 	sub	r6,r17,r6
 400e108:	89a3803a 	cmpltu	r17,r17,r6
 400e10c:	40d1c83a 	sub	r8,r8,r3
 400e110:	4451c83a 	sub	r8,r8,r17
 400e114:	3023883a 	mov	r17,r6
 400e118:	4080202c 	andhi	r2,r8,128
 400e11c:	10002326 	beq	r2,zero,400e1ac <__adddf3+0x204>
 400e120:	04c02034 	movhi	r19,128
 400e124:	9cffffc4 	addi	r19,r19,-1
 400e128:	44e6703a 	and	r19,r8,r19
 400e12c:	98007626 	beq	r19,zero,400e308 <__adddf3+0x360>
 400e130:	9809883a 	mov	r4,r19
 400e134:	40105ac0 	call	40105ac <__clzsi2>
 400e138:	10fffe04 	addi	r3,r2,-8
 400e13c:	010007c4 	movi	r4,31
 400e140:	20c07716 	blt	r4,r3,400e320 <__adddf3+0x378>
 400e144:	00800804 	movi	r2,32
 400e148:	10c5c83a 	sub	r2,r2,r3
 400e14c:	8884d83a 	srl	r2,r17,r2
 400e150:	98d0983a 	sll	r8,r19,r3
 400e154:	88e2983a 	sll	r17,r17,r3
 400e158:	1204b03a 	or	r2,r2,r8
 400e15c:	1c007416 	blt	r3,r16,400e330 <__adddf3+0x388>
 400e160:	1c21c83a 	sub	r16,r3,r16
 400e164:	82000044 	addi	r8,r16,1
 400e168:	00c007c4 	movi	r3,31
 400e16c:	1a009116 	blt	r3,r8,400e3b4 <__adddf3+0x40c>
 400e170:	00c00804 	movi	r3,32
 400e174:	1a07c83a 	sub	r3,r3,r8
 400e178:	8a08d83a 	srl	r4,r17,r8
 400e17c:	88e2983a 	sll	r17,r17,r3
 400e180:	10c6983a 	sll	r3,r2,r3
 400e184:	1210d83a 	srl	r8,r2,r8
 400e188:	8804c03a 	cmpne	r2,r17,zero
 400e18c:	1906b03a 	or	r3,r3,r4
 400e190:	18a2b03a 	or	r17,r3,r2
 400e194:	0021883a 	mov	r16,zero
 400e198:	003fa206 	br	400e024 <__ram_exceptions_end+0xfbfedddc>
 400e19c:	1890b03a 	or	r8,r3,r2
 400e1a0:	40017d26 	beq	r8,zero,400e798 <__adddf3+0x7f0>
 400e1a4:	1011883a 	mov	r8,r2
 400e1a8:	1823883a 	mov	r17,r3
 400e1ac:	888001cc 	andi	r2,r17,7
 400e1b0:	103f9e1e 	bne	r2,zero,400e02c <__ram_exceptions_end+0xfbfedde4>
 400e1b4:	4004977a 	slli	r2,r8,29
 400e1b8:	8822d0fa 	srli	r17,r17,3
 400e1bc:	4010d0fa 	srli	r8,r8,3
 400e1c0:	9007883a 	mov	r3,r18
 400e1c4:	1444b03a 	or	r2,r2,r17
 400e1c8:	0101ffc4 	movi	r4,2047
 400e1cc:	81002426 	beq	r16,r4,400e260 <__adddf3+0x2b8>
 400e1d0:	8120703a 	and	r16,r16,r4
 400e1d4:	01000434 	movhi	r4,16
 400e1d8:	213fffc4 	addi	r4,r4,-1
 400e1dc:	4110703a 	and	r8,r8,r4
 400e1e0:	003fa806 	br	400e084 <__ram_exceptions_end+0xfbfede3c>
 400e1e4:	8089c83a 	sub	r4,r16,r2
 400e1e8:	01005e0e 	bge	zero,r4,400e364 <__adddf3+0x3bc>
 400e1ec:	10002b26 	beq	r2,zero,400e29c <__adddf3+0x2f4>
 400e1f0:	0081ffc4 	movi	r2,2047
 400e1f4:	80bf8b26 	beq	r16,r2,400e024 <__ram_exceptions_end+0xfbfedddc>
 400e1f8:	4a402034 	orhi	r9,r9,128
 400e1fc:	00800e04 	movi	r2,56
 400e200:	1100a40e 	bge	r2,r4,400e494 <__adddf3+0x4ec>
 400e204:	498cb03a 	or	r6,r9,r6
 400e208:	300ac03a 	cmpne	r5,r6,zero
 400e20c:	0013883a 	mov	r9,zero
 400e210:	2c4b883a 	add	r5,r5,r17
 400e214:	2c63803a 	cmpltu	r17,r5,r17
 400e218:	4a11883a 	add	r8,r9,r8
 400e21c:	8a11883a 	add	r8,r17,r8
 400e220:	2823883a 	mov	r17,r5
 400e224:	4080202c 	andhi	r2,r8,128
 400e228:	103fe026 	beq	r2,zero,400e1ac <__ram_exceptions_end+0xfbfedf64>
 400e22c:	84000044 	addi	r16,r16,1
 400e230:	0081ffc4 	movi	r2,2047
 400e234:	8080d226 	beq	r16,r2,400e580 <__adddf3+0x5d8>
 400e238:	00bfe034 	movhi	r2,65408
 400e23c:	10bfffc4 	addi	r2,r2,-1
 400e240:	4090703a 	and	r8,r8,r2
 400e244:	880ad07a 	srli	r5,r17,1
 400e248:	400897fa 	slli	r4,r8,31
 400e24c:	88c0004c 	andi	r3,r17,1
 400e250:	28e2b03a 	or	r17,r5,r3
 400e254:	4010d07a 	srli	r8,r8,1
 400e258:	2462b03a 	or	r17,r4,r17
 400e25c:	003f7106 	br	400e024 <__ram_exceptions_end+0xfbfedddc>
 400e260:	4088b03a 	or	r4,r8,r2
 400e264:	20014526 	beq	r4,zero,400e77c <__adddf3+0x7d4>
 400e268:	01000434 	movhi	r4,16
 400e26c:	42000234 	orhi	r8,r8,8
 400e270:	213fffc4 	addi	r4,r4,-1
 400e274:	4110703a 	and	r8,r8,r4
 400e278:	003f8206 	br	400e084 <__ram_exceptions_end+0xfbfede3c>
 400e27c:	18ffffc4 	addi	r3,r3,-1
 400e280:	1800491e 	bne	r3,zero,400e3a8 <__adddf3+0x400>
 400e284:	898bc83a 	sub	r5,r17,r6
 400e288:	8963803a 	cmpltu	r17,r17,r5
 400e28c:	4251c83a 	sub	r8,r8,r9
 400e290:	4451c83a 	sub	r8,r8,r17
 400e294:	2823883a 	mov	r17,r5
 400e298:	003f9f06 	br	400e118 <__ram_exceptions_end+0xfbfeded0>
 400e29c:	4984b03a 	or	r2,r9,r6
 400e2a0:	103f6026 	beq	r2,zero,400e024 <__ram_exceptions_end+0xfbfedddc>
 400e2a4:	213fffc4 	addi	r4,r4,-1
 400e2a8:	2000931e 	bne	r4,zero,400e4f8 <__adddf3+0x550>
 400e2ac:	898d883a 	add	r6,r17,r6
 400e2b0:	3463803a 	cmpltu	r17,r6,r17
 400e2b4:	4251883a 	add	r8,r8,r9
 400e2b8:	8a11883a 	add	r8,r17,r8
 400e2bc:	3023883a 	mov	r17,r6
 400e2c0:	003fd806 	br	400e224 <__ram_exceptions_end+0xfbfedfdc>
 400e2c4:	1800541e 	bne	r3,zero,400e418 <__adddf3+0x470>
 400e2c8:	80800044 	addi	r2,r16,1
 400e2cc:	1081ffcc 	andi	r2,r2,2047
 400e2d0:	00c00044 	movi	r3,1
 400e2d4:	1880a00e 	bge	r3,r2,400e558 <__adddf3+0x5b0>
 400e2d8:	8989c83a 	sub	r4,r17,r6
 400e2dc:	8905803a 	cmpltu	r2,r17,r4
 400e2e0:	4267c83a 	sub	r19,r8,r9
 400e2e4:	98a7c83a 	sub	r19,r19,r2
 400e2e8:	9880202c 	andhi	r2,r19,128
 400e2ec:	10006326 	beq	r2,zero,400e47c <__adddf3+0x4d4>
 400e2f0:	3463c83a 	sub	r17,r6,r17
 400e2f4:	4a07c83a 	sub	r3,r9,r8
 400e2f8:	344d803a 	cmpltu	r6,r6,r17
 400e2fc:	19a7c83a 	sub	r19,r3,r6
 400e300:	3825883a 	mov	r18,r7
 400e304:	983f8a1e 	bne	r19,zero,400e130 <__ram_exceptions_end+0xfbfedee8>
 400e308:	8809883a 	mov	r4,r17
 400e30c:	40105ac0 	call	40105ac <__clzsi2>
 400e310:	10800804 	addi	r2,r2,32
 400e314:	10fffe04 	addi	r3,r2,-8
 400e318:	010007c4 	movi	r4,31
 400e31c:	20ff890e 	bge	r4,r3,400e144 <__ram_exceptions_end+0xfbfedefc>
 400e320:	10bff604 	addi	r2,r2,-40
 400e324:	8884983a 	sll	r2,r17,r2
 400e328:	0023883a 	mov	r17,zero
 400e32c:	1c3f8c0e 	bge	r3,r16,400e160 <__ram_exceptions_end+0xfbfedf18>
 400e330:	023fe034 	movhi	r8,65408
 400e334:	423fffc4 	addi	r8,r8,-1
 400e338:	80e1c83a 	sub	r16,r16,r3
 400e33c:	1210703a 	and	r8,r2,r8
 400e340:	003f3806 	br	400e024 <__ram_exceptions_end+0xfbfedddc>
 400e344:	9007883a 	mov	r3,r18
 400e348:	0011883a 	mov	r8,zero
 400e34c:	0005883a 	mov	r2,zero
 400e350:	003f4c06 	br	400e084 <__ram_exceptions_end+0xfbfede3c>
 400e354:	498cb03a 	or	r6,r9,r6
 400e358:	300cc03a 	cmpne	r6,r6,zero
 400e35c:	0007883a 	mov	r3,zero
 400e360:	003f6806 	br	400e104 <__ram_exceptions_end+0xfbfedebc>
 400e364:	20009c1e 	bne	r4,zero,400e5d8 <__adddf3+0x630>
 400e368:	80800044 	addi	r2,r16,1
 400e36c:	1141ffcc 	andi	r5,r2,2047
 400e370:	01000044 	movi	r4,1
 400e374:	2140670e 	bge	r4,r5,400e514 <__adddf3+0x56c>
 400e378:	0101ffc4 	movi	r4,2047
 400e37c:	11007f26 	beq	r2,r4,400e57c <__adddf3+0x5d4>
 400e380:	898d883a 	add	r6,r17,r6
 400e384:	4247883a 	add	r3,r8,r9
 400e388:	3451803a 	cmpltu	r8,r6,r17
 400e38c:	40d1883a 	add	r8,r8,r3
 400e390:	402297fa 	slli	r17,r8,31
 400e394:	300cd07a 	srli	r6,r6,1
 400e398:	4010d07a 	srli	r8,r8,1
 400e39c:	1021883a 	mov	r16,r2
 400e3a0:	89a2b03a 	or	r17,r17,r6
 400e3a4:	003f1f06 	br	400e024 <__ram_exceptions_end+0xfbfedddc>
 400e3a8:	0081ffc4 	movi	r2,2047
 400e3ac:	80bf481e 	bne	r16,r2,400e0d0 <__ram_exceptions_end+0xfbfede88>
 400e3b0:	003f1c06 	br	400e024 <__ram_exceptions_end+0xfbfedddc>
 400e3b4:	843ff844 	addi	r16,r16,-31
 400e3b8:	01000804 	movi	r4,32
 400e3bc:	1406d83a 	srl	r3,r2,r16
 400e3c0:	41005026 	beq	r8,r4,400e504 <__adddf3+0x55c>
 400e3c4:	01001004 	movi	r4,64
 400e3c8:	2211c83a 	sub	r8,r4,r8
 400e3cc:	1204983a 	sll	r2,r2,r8
 400e3d0:	88a2b03a 	or	r17,r17,r2
 400e3d4:	8822c03a 	cmpne	r17,r17,zero
 400e3d8:	1c62b03a 	or	r17,r3,r17
 400e3dc:	0011883a 	mov	r8,zero
 400e3e0:	0021883a 	mov	r16,zero
 400e3e4:	003f7106 	br	400e1ac <__ram_exceptions_end+0xfbfedf64>
 400e3e8:	193ff804 	addi	r4,r3,-32
 400e3ec:	00800804 	movi	r2,32
 400e3f0:	4908d83a 	srl	r4,r9,r4
 400e3f4:	18804526 	beq	r3,r2,400e50c <__adddf3+0x564>
 400e3f8:	00801004 	movi	r2,64
 400e3fc:	10c5c83a 	sub	r2,r2,r3
 400e400:	4886983a 	sll	r3,r9,r2
 400e404:	198cb03a 	or	r6,r3,r6
 400e408:	300cc03a 	cmpne	r6,r6,zero
 400e40c:	218cb03a 	or	r6,r4,r6
 400e410:	0007883a 	mov	r3,zero
 400e414:	003f3b06 	br	400e104 <__ram_exceptions_end+0xfbfedebc>
 400e418:	80002a26 	beq	r16,zero,400e4c4 <__adddf3+0x51c>
 400e41c:	0101ffc4 	movi	r4,2047
 400e420:	11006826 	beq	r2,r4,400e5c4 <__adddf3+0x61c>
 400e424:	00c7c83a 	sub	r3,zero,r3
 400e428:	42002034 	orhi	r8,r8,128
 400e42c:	01000e04 	movi	r4,56
 400e430:	20c07c16 	blt	r4,r3,400e624 <__adddf3+0x67c>
 400e434:	010007c4 	movi	r4,31
 400e438:	20c0da16 	blt	r4,r3,400e7a4 <__adddf3+0x7fc>
 400e43c:	01000804 	movi	r4,32
 400e440:	20c9c83a 	sub	r4,r4,r3
 400e444:	4114983a 	sll	r10,r8,r4
 400e448:	88cad83a 	srl	r5,r17,r3
 400e44c:	8908983a 	sll	r4,r17,r4
 400e450:	40c6d83a 	srl	r3,r8,r3
 400e454:	5162b03a 	or	r17,r10,r5
 400e458:	2008c03a 	cmpne	r4,r4,zero
 400e45c:	8922b03a 	or	r17,r17,r4
 400e460:	3463c83a 	sub	r17,r6,r17
 400e464:	48c7c83a 	sub	r3,r9,r3
 400e468:	344d803a 	cmpltu	r6,r6,r17
 400e46c:	1991c83a 	sub	r8,r3,r6
 400e470:	1021883a 	mov	r16,r2
 400e474:	3825883a 	mov	r18,r7
 400e478:	003f2706 	br	400e118 <__ram_exceptions_end+0xfbfeded0>
 400e47c:	24d0b03a 	or	r8,r4,r19
 400e480:	40001b1e 	bne	r8,zero,400e4f0 <__adddf3+0x548>
 400e484:	0005883a 	mov	r2,zero
 400e488:	0007883a 	mov	r3,zero
 400e48c:	0021883a 	mov	r16,zero
 400e490:	003f4d06 	br	400e1c8 <__ram_exceptions_end+0xfbfedf80>
 400e494:	008007c4 	movi	r2,31
 400e498:	11003c16 	blt	r2,r4,400e58c <__adddf3+0x5e4>
 400e49c:	00800804 	movi	r2,32
 400e4a0:	1105c83a 	sub	r2,r2,r4
 400e4a4:	488e983a 	sll	r7,r9,r2
 400e4a8:	310ad83a 	srl	r5,r6,r4
 400e4ac:	3084983a 	sll	r2,r6,r2
 400e4b0:	4912d83a 	srl	r9,r9,r4
 400e4b4:	394ab03a 	or	r5,r7,r5
 400e4b8:	1004c03a 	cmpne	r2,r2,zero
 400e4bc:	288ab03a 	or	r5,r5,r2
 400e4c0:	003f5306 	br	400e210 <__ram_exceptions_end+0xfbfedfc8>
 400e4c4:	4448b03a 	or	r4,r8,r17
 400e4c8:	20003e26 	beq	r4,zero,400e5c4 <__adddf3+0x61c>
 400e4cc:	00c6303a 	nor	r3,zero,r3
 400e4d0:	18003a1e 	bne	r3,zero,400e5bc <__adddf3+0x614>
 400e4d4:	3463c83a 	sub	r17,r6,r17
 400e4d8:	4a07c83a 	sub	r3,r9,r8
 400e4dc:	344d803a 	cmpltu	r6,r6,r17
 400e4e0:	1991c83a 	sub	r8,r3,r6
 400e4e4:	1021883a 	mov	r16,r2
 400e4e8:	3825883a 	mov	r18,r7
 400e4ec:	003f0a06 	br	400e118 <__ram_exceptions_end+0xfbfeded0>
 400e4f0:	2023883a 	mov	r17,r4
 400e4f4:	003f0d06 	br	400e12c <__ram_exceptions_end+0xfbfedee4>
 400e4f8:	0081ffc4 	movi	r2,2047
 400e4fc:	80bf3f1e 	bne	r16,r2,400e1fc <__ram_exceptions_end+0xfbfedfb4>
 400e500:	003ec806 	br	400e024 <__ram_exceptions_end+0xfbfedddc>
 400e504:	0005883a 	mov	r2,zero
 400e508:	003fb106 	br	400e3d0 <__ram_exceptions_end+0xfbfee188>
 400e50c:	0007883a 	mov	r3,zero
 400e510:	003fbc06 	br	400e404 <__ram_exceptions_end+0xfbfee1bc>
 400e514:	4444b03a 	or	r2,r8,r17
 400e518:	8000871e 	bne	r16,zero,400e738 <__adddf3+0x790>
 400e51c:	1000ba26 	beq	r2,zero,400e808 <__adddf3+0x860>
 400e520:	4984b03a 	or	r2,r9,r6
 400e524:	103ebf26 	beq	r2,zero,400e024 <__ram_exceptions_end+0xfbfedddc>
 400e528:	8985883a 	add	r2,r17,r6
 400e52c:	4247883a 	add	r3,r8,r9
 400e530:	1451803a 	cmpltu	r8,r2,r17
 400e534:	40d1883a 	add	r8,r8,r3
 400e538:	40c0202c 	andhi	r3,r8,128
 400e53c:	1023883a 	mov	r17,r2
 400e540:	183f1a26 	beq	r3,zero,400e1ac <__ram_exceptions_end+0xfbfedf64>
 400e544:	00bfe034 	movhi	r2,65408
 400e548:	10bfffc4 	addi	r2,r2,-1
 400e54c:	2021883a 	mov	r16,r4
 400e550:	4090703a 	and	r8,r8,r2
 400e554:	003eb306 	br	400e024 <__ram_exceptions_end+0xfbfedddc>
 400e558:	4444b03a 	or	r2,r8,r17
 400e55c:	8000291e 	bne	r16,zero,400e604 <__adddf3+0x65c>
 400e560:	10004b1e 	bne	r2,zero,400e690 <__adddf3+0x6e8>
 400e564:	4990b03a 	or	r8,r9,r6
 400e568:	40008b26 	beq	r8,zero,400e798 <__adddf3+0x7f0>
 400e56c:	4811883a 	mov	r8,r9
 400e570:	3023883a 	mov	r17,r6
 400e574:	3825883a 	mov	r18,r7
 400e578:	003eaa06 	br	400e024 <__ram_exceptions_end+0xfbfedddc>
 400e57c:	1021883a 	mov	r16,r2
 400e580:	0011883a 	mov	r8,zero
 400e584:	0005883a 	mov	r2,zero
 400e588:	003f0f06 	br	400e1c8 <__ram_exceptions_end+0xfbfedf80>
 400e58c:	217ff804 	addi	r5,r4,-32
 400e590:	00800804 	movi	r2,32
 400e594:	494ad83a 	srl	r5,r9,r5
 400e598:	20807d26 	beq	r4,r2,400e790 <__adddf3+0x7e8>
 400e59c:	00801004 	movi	r2,64
 400e5a0:	1109c83a 	sub	r4,r2,r4
 400e5a4:	4912983a 	sll	r9,r9,r4
 400e5a8:	498cb03a 	or	r6,r9,r6
 400e5ac:	300cc03a 	cmpne	r6,r6,zero
 400e5b0:	298ab03a 	or	r5,r5,r6
 400e5b4:	0013883a 	mov	r9,zero
 400e5b8:	003f1506 	br	400e210 <__ram_exceptions_end+0xfbfedfc8>
 400e5bc:	0101ffc4 	movi	r4,2047
 400e5c0:	113f9a1e 	bne	r2,r4,400e42c <__ram_exceptions_end+0xfbfee1e4>
 400e5c4:	4811883a 	mov	r8,r9
 400e5c8:	3023883a 	mov	r17,r6
 400e5cc:	1021883a 	mov	r16,r2
 400e5d0:	3825883a 	mov	r18,r7
 400e5d4:	003e9306 	br	400e024 <__ram_exceptions_end+0xfbfedddc>
 400e5d8:	8000161e 	bne	r16,zero,400e634 <__adddf3+0x68c>
 400e5dc:	444ab03a 	or	r5,r8,r17
 400e5e0:	28005126 	beq	r5,zero,400e728 <__adddf3+0x780>
 400e5e4:	0108303a 	nor	r4,zero,r4
 400e5e8:	20004d1e 	bne	r4,zero,400e720 <__adddf3+0x778>
 400e5ec:	89a3883a 	add	r17,r17,r6
 400e5f0:	4253883a 	add	r9,r8,r9
 400e5f4:	898d803a 	cmpltu	r6,r17,r6
 400e5f8:	3251883a 	add	r8,r6,r9
 400e5fc:	1021883a 	mov	r16,r2
 400e600:	003f0806 	br	400e224 <__ram_exceptions_end+0xfbfedfdc>
 400e604:	1000301e 	bne	r2,zero,400e6c8 <__adddf3+0x720>
 400e608:	4984b03a 	or	r2,r9,r6
 400e60c:	10007126 	beq	r2,zero,400e7d4 <__adddf3+0x82c>
 400e610:	4811883a 	mov	r8,r9
 400e614:	3023883a 	mov	r17,r6
 400e618:	3825883a 	mov	r18,r7
 400e61c:	0401ffc4 	movi	r16,2047
 400e620:	003e8006 	br	400e024 <__ram_exceptions_end+0xfbfedddc>
 400e624:	4462b03a 	or	r17,r8,r17
 400e628:	8822c03a 	cmpne	r17,r17,zero
 400e62c:	0007883a 	mov	r3,zero
 400e630:	003f8b06 	br	400e460 <__ram_exceptions_end+0xfbfee218>
 400e634:	0141ffc4 	movi	r5,2047
 400e638:	11403b26 	beq	r2,r5,400e728 <__adddf3+0x780>
 400e63c:	0109c83a 	sub	r4,zero,r4
 400e640:	42002034 	orhi	r8,r8,128
 400e644:	01400e04 	movi	r5,56
 400e648:	29006716 	blt	r5,r4,400e7e8 <__adddf3+0x840>
 400e64c:	014007c4 	movi	r5,31
 400e650:	29007016 	blt	r5,r4,400e814 <__adddf3+0x86c>
 400e654:	01400804 	movi	r5,32
 400e658:	290bc83a 	sub	r5,r5,r4
 400e65c:	4154983a 	sll	r10,r8,r5
 400e660:	890ed83a 	srl	r7,r17,r4
 400e664:	894a983a 	sll	r5,r17,r5
 400e668:	4108d83a 	srl	r4,r8,r4
 400e66c:	51e2b03a 	or	r17,r10,r7
 400e670:	280ac03a 	cmpne	r5,r5,zero
 400e674:	8962b03a 	or	r17,r17,r5
 400e678:	89a3883a 	add	r17,r17,r6
 400e67c:	2253883a 	add	r9,r4,r9
 400e680:	898d803a 	cmpltu	r6,r17,r6
 400e684:	3251883a 	add	r8,r6,r9
 400e688:	1021883a 	mov	r16,r2
 400e68c:	003ee506 	br	400e224 <__ram_exceptions_end+0xfbfedfdc>
 400e690:	4984b03a 	or	r2,r9,r6
 400e694:	103e6326 	beq	r2,zero,400e024 <__ram_exceptions_end+0xfbfedddc>
 400e698:	8987c83a 	sub	r3,r17,r6
 400e69c:	88c9803a 	cmpltu	r4,r17,r3
 400e6a0:	4245c83a 	sub	r2,r8,r9
 400e6a4:	1105c83a 	sub	r2,r2,r4
 400e6a8:	1100202c 	andhi	r4,r2,128
 400e6ac:	203ebb26 	beq	r4,zero,400e19c <__ram_exceptions_end+0xfbfedf54>
 400e6b0:	3463c83a 	sub	r17,r6,r17
 400e6b4:	4a07c83a 	sub	r3,r9,r8
 400e6b8:	344d803a 	cmpltu	r6,r6,r17
 400e6bc:	1991c83a 	sub	r8,r3,r6
 400e6c0:	3825883a 	mov	r18,r7
 400e6c4:	003e5706 	br	400e024 <__ram_exceptions_end+0xfbfedddc>
 400e6c8:	4984b03a 	or	r2,r9,r6
 400e6cc:	10002e26 	beq	r2,zero,400e788 <__adddf3+0x7e0>
 400e6d0:	4004d0fa 	srli	r2,r8,3
 400e6d4:	8822d0fa 	srli	r17,r17,3
 400e6d8:	4010977a 	slli	r8,r8,29
 400e6dc:	10c0022c 	andhi	r3,r2,8
 400e6e0:	4462b03a 	or	r17,r8,r17
 400e6e4:	18000826 	beq	r3,zero,400e708 <__adddf3+0x760>
 400e6e8:	4808d0fa 	srli	r4,r9,3
 400e6ec:	20c0022c 	andhi	r3,r4,8
 400e6f0:	1800051e 	bne	r3,zero,400e708 <__adddf3+0x760>
 400e6f4:	300cd0fa 	srli	r6,r6,3
 400e6f8:	4806977a 	slli	r3,r9,29
 400e6fc:	2005883a 	mov	r2,r4
 400e700:	3825883a 	mov	r18,r7
 400e704:	19a2b03a 	or	r17,r3,r6
 400e708:	8810d77a 	srli	r8,r17,29
 400e70c:	100490fa 	slli	r2,r2,3
 400e710:	882290fa 	slli	r17,r17,3
 400e714:	0401ffc4 	movi	r16,2047
 400e718:	4090b03a 	or	r8,r8,r2
 400e71c:	003e4106 	br	400e024 <__ram_exceptions_end+0xfbfedddc>
 400e720:	0141ffc4 	movi	r5,2047
 400e724:	117fc71e 	bne	r2,r5,400e644 <__ram_exceptions_end+0xfbfee3fc>
 400e728:	4811883a 	mov	r8,r9
 400e72c:	3023883a 	mov	r17,r6
 400e730:	1021883a 	mov	r16,r2
 400e734:	003e3b06 	br	400e024 <__ram_exceptions_end+0xfbfedddc>
 400e738:	10002f26 	beq	r2,zero,400e7f8 <__adddf3+0x850>
 400e73c:	4984b03a 	or	r2,r9,r6
 400e740:	10001126 	beq	r2,zero,400e788 <__adddf3+0x7e0>
 400e744:	4004d0fa 	srli	r2,r8,3
 400e748:	8822d0fa 	srli	r17,r17,3
 400e74c:	4010977a 	slli	r8,r8,29
 400e750:	10c0022c 	andhi	r3,r2,8
 400e754:	4462b03a 	or	r17,r8,r17
 400e758:	183feb26 	beq	r3,zero,400e708 <__ram_exceptions_end+0xfbfee4c0>
 400e75c:	4808d0fa 	srli	r4,r9,3
 400e760:	20c0022c 	andhi	r3,r4,8
 400e764:	183fe81e 	bne	r3,zero,400e708 <__ram_exceptions_end+0xfbfee4c0>
 400e768:	300cd0fa 	srli	r6,r6,3
 400e76c:	4806977a 	slli	r3,r9,29
 400e770:	2005883a 	mov	r2,r4
 400e774:	19a2b03a 	or	r17,r3,r6
 400e778:	003fe306 	br	400e708 <__ram_exceptions_end+0xfbfee4c0>
 400e77c:	0011883a 	mov	r8,zero
 400e780:	0005883a 	mov	r2,zero
 400e784:	003e3f06 	br	400e084 <__ram_exceptions_end+0xfbfede3c>
 400e788:	0401ffc4 	movi	r16,2047
 400e78c:	003e2506 	br	400e024 <__ram_exceptions_end+0xfbfedddc>
 400e790:	0013883a 	mov	r9,zero
 400e794:	003f8406 	br	400e5a8 <__ram_exceptions_end+0xfbfee360>
 400e798:	0005883a 	mov	r2,zero
 400e79c:	0007883a 	mov	r3,zero
 400e7a0:	003e8906 	br	400e1c8 <__ram_exceptions_end+0xfbfedf80>
 400e7a4:	197ff804 	addi	r5,r3,-32
 400e7a8:	01000804 	movi	r4,32
 400e7ac:	414ad83a 	srl	r5,r8,r5
 400e7b0:	19002426 	beq	r3,r4,400e844 <__adddf3+0x89c>
 400e7b4:	01001004 	movi	r4,64
 400e7b8:	20c7c83a 	sub	r3,r4,r3
 400e7bc:	40c6983a 	sll	r3,r8,r3
 400e7c0:	1c46b03a 	or	r3,r3,r17
 400e7c4:	1806c03a 	cmpne	r3,r3,zero
 400e7c8:	28e2b03a 	or	r17,r5,r3
 400e7cc:	0007883a 	mov	r3,zero
 400e7d0:	003f2306 	br	400e460 <__ram_exceptions_end+0xfbfee218>
 400e7d4:	0007883a 	mov	r3,zero
 400e7d8:	5811883a 	mov	r8,r11
 400e7dc:	00bfffc4 	movi	r2,-1
 400e7e0:	0401ffc4 	movi	r16,2047
 400e7e4:	003e7806 	br	400e1c8 <__ram_exceptions_end+0xfbfedf80>
 400e7e8:	4462b03a 	or	r17,r8,r17
 400e7ec:	8822c03a 	cmpne	r17,r17,zero
 400e7f0:	0009883a 	mov	r4,zero
 400e7f4:	003fa006 	br	400e678 <__ram_exceptions_end+0xfbfee430>
 400e7f8:	4811883a 	mov	r8,r9
 400e7fc:	3023883a 	mov	r17,r6
 400e800:	0401ffc4 	movi	r16,2047
 400e804:	003e0706 	br	400e024 <__ram_exceptions_end+0xfbfedddc>
 400e808:	4811883a 	mov	r8,r9
 400e80c:	3023883a 	mov	r17,r6
 400e810:	003e0406 	br	400e024 <__ram_exceptions_end+0xfbfedddc>
 400e814:	21fff804 	addi	r7,r4,-32
 400e818:	01400804 	movi	r5,32
 400e81c:	41ced83a 	srl	r7,r8,r7
 400e820:	21400a26 	beq	r4,r5,400e84c <__adddf3+0x8a4>
 400e824:	01401004 	movi	r5,64
 400e828:	2909c83a 	sub	r4,r5,r4
 400e82c:	4108983a 	sll	r4,r8,r4
 400e830:	2448b03a 	or	r4,r4,r17
 400e834:	2008c03a 	cmpne	r4,r4,zero
 400e838:	3922b03a 	or	r17,r7,r4
 400e83c:	0009883a 	mov	r4,zero
 400e840:	003f8d06 	br	400e678 <__ram_exceptions_end+0xfbfee430>
 400e844:	0007883a 	mov	r3,zero
 400e848:	003fdd06 	br	400e7c0 <__ram_exceptions_end+0xfbfee578>
 400e84c:	0009883a 	mov	r4,zero
 400e850:	003ff706 	br	400e830 <__ram_exceptions_end+0xfbfee5e8>

0400e854 <__divdf3>:
 400e854:	defff204 	addi	sp,sp,-56
 400e858:	dd400915 	stw	r21,36(sp)
 400e85c:	282ad53a 	srli	r21,r5,20
 400e860:	dd000815 	stw	r20,32(sp)
 400e864:	2828d7fa 	srli	r20,r5,31
 400e868:	dc000415 	stw	r16,16(sp)
 400e86c:	04000434 	movhi	r16,16
 400e870:	df000c15 	stw	fp,48(sp)
 400e874:	843fffc4 	addi	r16,r16,-1
 400e878:	dfc00d15 	stw	ra,52(sp)
 400e87c:	ddc00b15 	stw	r23,44(sp)
 400e880:	dd800a15 	stw	r22,40(sp)
 400e884:	dcc00715 	stw	r19,28(sp)
 400e888:	dc800615 	stw	r18,24(sp)
 400e88c:	dc400515 	stw	r17,20(sp)
 400e890:	ad41ffcc 	andi	r21,r21,2047
 400e894:	2c20703a 	and	r16,r5,r16
 400e898:	a7003fcc 	andi	fp,r20,255
 400e89c:	a8006126 	beq	r21,zero,400ea24 <__divdf3+0x1d0>
 400e8a0:	0081ffc4 	movi	r2,2047
 400e8a4:	2025883a 	mov	r18,r4
 400e8a8:	a8803726 	beq	r21,r2,400e988 <__divdf3+0x134>
 400e8ac:	80800434 	orhi	r2,r16,16
 400e8b0:	100490fa 	slli	r2,r2,3
 400e8b4:	2020d77a 	srli	r16,r4,29
 400e8b8:	202490fa 	slli	r18,r4,3
 400e8bc:	ad7f0044 	addi	r21,r21,-1023
 400e8c0:	80a0b03a 	or	r16,r16,r2
 400e8c4:	0027883a 	mov	r19,zero
 400e8c8:	0013883a 	mov	r9,zero
 400e8cc:	3804d53a 	srli	r2,r7,20
 400e8d0:	382cd7fa 	srli	r22,r7,31
 400e8d4:	04400434 	movhi	r17,16
 400e8d8:	8c7fffc4 	addi	r17,r17,-1
 400e8dc:	1081ffcc 	andi	r2,r2,2047
 400e8e0:	3011883a 	mov	r8,r6
 400e8e4:	3c62703a 	and	r17,r7,r17
 400e8e8:	b5c03fcc 	andi	r23,r22,255
 400e8ec:	10006c26 	beq	r2,zero,400eaa0 <__divdf3+0x24c>
 400e8f0:	00c1ffc4 	movi	r3,2047
 400e8f4:	10c06426 	beq	r2,r3,400ea88 <__divdf3+0x234>
 400e8f8:	88c00434 	orhi	r3,r17,16
 400e8fc:	180690fa 	slli	r3,r3,3
 400e900:	3022d77a 	srli	r17,r6,29
 400e904:	301090fa 	slli	r8,r6,3
 400e908:	10bf0044 	addi	r2,r2,-1023
 400e90c:	88e2b03a 	or	r17,r17,r3
 400e910:	000f883a 	mov	r7,zero
 400e914:	a58cf03a 	xor	r6,r20,r22
 400e918:	3cc8b03a 	or	r4,r7,r19
 400e91c:	a8abc83a 	sub	r21,r21,r2
 400e920:	008003c4 	movi	r2,15
 400e924:	3007883a 	mov	r3,r6
 400e928:	34c03fcc 	andi	r19,r6,255
 400e92c:	11009036 	bltu	r2,r4,400eb70 <__divdf3+0x31c>
 400e930:	200890ba 	slli	r4,r4,2
 400e934:	00810074 	movhi	r2,1025
 400e938:	10ba5204 	addi	r2,r2,-5816
 400e93c:	2089883a 	add	r4,r4,r2
 400e940:	20800017 	ldw	r2,0(r4)
 400e944:	1000683a 	jmp	r2
 400e948:	0400eb70 	cmpltui	r16,zero,941
 400e94c:	0400e9c0 	call	400e9c <__alt_mem_SDRAM-0x3bff164>
 400e950:	0400eb60 	cmpeqi	r16,zero,941
 400e954:	0400e9b4 	movhi	r16,934
 400e958:	0400eb60 	cmpeqi	r16,zero,941
 400e95c:	0400eb34 	movhi	r16,940
 400e960:	0400eb60 	cmpeqi	r16,zero,941
 400e964:	0400e9b4 	movhi	r16,934
 400e968:	0400e9c0 	call	400e9c <__alt_mem_SDRAM-0x3bff164>
 400e96c:	0400e9c0 	call	400e9c <__alt_mem_SDRAM-0x3bff164>
 400e970:	0400eb34 	movhi	r16,940
 400e974:	0400e9b4 	movhi	r16,934
 400e978:	0400e9a4 	muli	r16,zero,934
 400e97c:	0400e9a4 	muli	r16,zero,934
 400e980:	0400e9a4 	muli	r16,zero,934
 400e984:	0400ee54 	movui	r16,953
 400e988:	2404b03a 	or	r2,r4,r16
 400e98c:	1000661e 	bne	r2,zero,400eb28 <__divdf3+0x2d4>
 400e990:	04c00204 	movi	r19,8
 400e994:	0021883a 	mov	r16,zero
 400e998:	0025883a 	mov	r18,zero
 400e99c:	02400084 	movi	r9,2
 400e9a0:	003fca06 	br	400e8cc <__ram_exceptions_end+0xfbfee684>
 400e9a4:	8023883a 	mov	r17,r16
 400e9a8:	9011883a 	mov	r8,r18
 400e9ac:	e02f883a 	mov	r23,fp
 400e9b0:	480f883a 	mov	r7,r9
 400e9b4:	00800084 	movi	r2,2
 400e9b8:	3881311e 	bne	r7,r2,400ee80 <__divdf3+0x62c>
 400e9bc:	b827883a 	mov	r19,r23
 400e9c0:	98c0004c 	andi	r3,r19,1
 400e9c4:	0081ffc4 	movi	r2,2047
 400e9c8:	000b883a 	mov	r5,zero
 400e9cc:	0025883a 	mov	r18,zero
 400e9d0:	1004953a 	slli	r2,r2,20
 400e9d4:	18c03fcc 	andi	r3,r3,255
 400e9d8:	04400434 	movhi	r17,16
 400e9dc:	8c7fffc4 	addi	r17,r17,-1
 400e9e0:	180697fa 	slli	r3,r3,31
 400e9e4:	2c4a703a 	and	r5,r5,r17
 400e9e8:	288ab03a 	or	r5,r5,r2
 400e9ec:	28c6b03a 	or	r3,r5,r3
 400e9f0:	9005883a 	mov	r2,r18
 400e9f4:	dfc00d17 	ldw	ra,52(sp)
 400e9f8:	df000c17 	ldw	fp,48(sp)
 400e9fc:	ddc00b17 	ldw	r23,44(sp)
 400ea00:	dd800a17 	ldw	r22,40(sp)
 400ea04:	dd400917 	ldw	r21,36(sp)
 400ea08:	dd000817 	ldw	r20,32(sp)
 400ea0c:	dcc00717 	ldw	r19,28(sp)
 400ea10:	dc800617 	ldw	r18,24(sp)
 400ea14:	dc400517 	ldw	r17,20(sp)
 400ea18:	dc000417 	ldw	r16,16(sp)
 400ea1c:	dec00e04 	addi	sp,sp,56
 400ea20:	f800283a 	ret
 400ea24:	2404b03a 	or	r2,r4,r16
 400ea28:	2027883a 	mov	r19,r4
 400ea2c:	10003926 	beq	r2,zero,400eb14 <__divdf3+0x2c0>
 400ea30:	80012e26 	beq	r16,zero,400eeec <__divdf3+0x698>
 400ea34:	8009883a 	mov	r4,r16
 400ea38:	d9800315 	stw	r6,12(sp)
 400ea3c:	d9c00215 	stw	r7,8(sp)
 400ea40:	40105ac0 	call	40105ac <__clzsi2>
 400ea44:	d9800317 	ldw	r6,12(sp)
 400ea48:	d9c00217 	ldw	r7,8(sp)
 400ea4c:	113ffd44 	addi	r4,r2,-11
 400ea50:	00c00704 	movi	r3,28
 400ea54:	19012116 	blt	r3,r4,400eedc <__divdf3+0x688>
 400ea58:	00c00744 	movi	r3,29
 400ea5c:	147ffe04 	addi	r17,r2,-8
 400ea60:	1907c83a 	sub	r3,r3,r4
 400ea64:	8460983a 	sll	r16,r16,r17
 400ea68:	98c6d83a 	srl	r3,r19,r3
 400ea6c:	9c64983a 	sll	r18,r19,r17
 400ea70:	1c20b03a 	or	r16,r3,r16
 400ea74:	1080fcc4 	addi	r2,r2,1011
 400ea78:	00abc83a 	sub	r21,zero,r2
 400ea7c:	0027883a 	mov	r19,zero
 400ea80:	0013883a 	mov	r9,zero
 400ea84:	003f9106 	br	400e8cc <__ram_exceptions_end+0xfbfee684>
 400ea88:	3446b03a 	or	r3,r6,r17
 400ea8c:	18001f1e 	bne	r3,zero,400eb0c <__divdf3+0x2b8>
 400ea90:	0023883a 	mov	r17,zero
 400ea94:	0011883a 	mov	r8,zero
 400ea98:	01c00084 	movi	r7,2
 400ea9c:	003f9d06 	br	400e914 <__ram_exceptions_end+0xfbfee6cc>
 400eaa0:	3446b03a 	or	r3,r6,r17
 400eaa4:	18001526 	beq	r3,zero,400eafc <__divdf3+0x2a8>
 400eaa8:	88011b26 	beq	r17,zero,400ef18 <__divdf3+0x6c4>
 400eaac:	8809883a 	mov	r4,r17
 400eab0:	d9800315 	stw	r6,12(sp)
 400eab4:	da400115 	stw	r9,4(sp)
 400eab8:	40105ac0 	call	40105ac <__clzsi2>
 400eabc:	d9800317 	ldw	r6,12(sp)
 400eac0:	da400117 	ldw	r9,4(sp)
 400eac4:	113ffd44 	addi	r4,r2,-11
 400eac8:	00c00704 	movi	r3,28
 400eacc:	19010e16 	blt	r3,r4,400ef08 <__divdf3+0x6b4>
 400ead0:	00c00744 	movi	r3,29
 400ead4:	123ffe04 	addi	r8,r2,-8
 400ead8:	1907c83a 	sub	r3,r3,r4
 400eadc:	8a22983a 	sll	r17,r17,r8
 400eae0:	30c6d83a 	srl	r3,r6,r3
 400eae4:	3210983a 	sll	r8,r6,r8
 400eae8:	1c62b03a 	or	r17,r3,r17
 400eaec:	1080fcc4 	addi	r2,r2,1011
 400eaf0:	0085c83a 	sub	r2,zero,r2
 400eaf4:	000f883a 	mov	r7,zero
 400eaf8:	003f8606 	br	400e914 <__ram_exceptions_end+0xfbfee6cc>
 400eafc:	0023883a 	mov	r17,zero
 400eb00:	0011883a 	mov	r8,zero
 400eb04:	01c00044 	movi	r7,1
 400eb08:	003f8206 	br	400e914 <__ram_exceptions_end+0xfbfee6cc>
 400eb0c:	01c000c4 	movi	r7,3
 400eb10:	003f8006 	br	400e914 <__ram_exceptions_end+0xfbfee6cc>
 400eb14:	04c00104 	movi	r19,4
 400eb18:	0021883a 	mov	r16,zero
 400eb1c:	0025883a 	mov	r18,zero
 400eb20:	02400044 	movi	r9,1
 400eb24:	003f6906 	br	400e8cc <__ram_exceptions_end+0xfbfee684>
 400eb28:	04c00304 	movi	r19,12
 400eb2c:	024000c4 	movi	r9,3
 400eb30:	003f6606 	br	400e8cc <__ram_exceptions_end+0xfbfee684>
 400eb34:	01400434 	movhi	r5,16
 400eb38:	0007883a 	mov	r3,zero
 400eb3c:	297fffc4 	addi	r5,r5,-1
 400eb40:	04bfffc4 	movi	r18,-1
 400eb44:	0081ffc4 	movi	r2,2047
 400eb48:	003fa106 	br	400e9d0 <__ram_exceptions_end+0xfbfee788>
 400eb4c:	00c00044 	movi	r3,1
 400eb50:	1887c83a 	sub	r3,r3,r2
 400eb54:	01000e04 	movi	r4,56
 400eb58:	20c1210e 	bge	r4,r3,400efe0 <__divdf3+0x78c>
 400eb5c:	98c0004c 	andi	r3,r19,1
 400eb60:	0005883a 	mov	r2,zero
 400eb64:	000b883a 	mov	r5,zero
 400eb68:	0025883a 	mov	r18,zero
 400eb6c:	003f9806 	br	400e9d0 <__ram_exceptions_end+0xfbfee788>
 400eb70:	8c00fd36 	bltu	r17,r16,400ef68 <__divdf3+0x714>
 400eb74:	8440fb26 	beq	r16,r17,400ef64 <__divdf3+0x710>
 400eb78:	8007883a 	mov	r3,r16
 400eb7c:	ad7fffc4 	addi	r21,r21,-1
 400eb80:	0021883a 	mov	r16,zero
 400eb84:	4004d63a 	srli	r2,r8,24
 400eb88:	8822923a 	slli	r17,r17,8
 400eb8c:	1809883a 	mov	r4,r3
 400eb90:	402c923a 	slli	r22,r8,8
 400eb94:	88b8b03a 	or	fp,r17,r2
 400eb98:	e028d43a 	srli	r20,fp,16
 400eb9c:	d8c00015 	stw	r3,0(sp)
 400eba0:	e5ffffcc 	andi	r23,fp,65535
 400eba4:	a00b883a 	mov	r5,r20
 400eba8:	400deec0 	call	400deec <__udivsi3>
 400ebac:	d8c00017 	ldw	r3,0(sp)
 400ebb0:	a00b883a 	mov	r5,r20
 400ebb4:	d8800315 	stw	r2,12(sp)
 400ebb8:	1809883a 	mov	r4,r3
 400ebbc:	400df500 	call	400df50 <__umodsi3>
 400ebc0:	d9800317 	ldw	r6,12(sp)
 400ebc4:	1006943a 	slli	r3,r2,16
 400ebc8:	9004d43a 	srli	r2,r18,16
 400ebcc:	b9a3383a 	mul	r17,r23,r6
 400ebd0:	10c4b03a 	or	r2,r2,r3
 400ebd4:	1440062e 	bgeu	r2,r17,400ebf0 <__divdf3+0x39c>
 400ebd8:	1705883a 	add	r2,r2,fp
 400ebdc:	30ffffc4 	addi	r3,r6,-1
 400ebe0:	1700ee36 	bltu	r2,fp,400ef9c <__divdf3+0x748>
 400ebe4:	1440ed2e 	bgeu	r2,r17,400ef9c <__divdf3+0x748>
 400ebe8:	31bfff84 	addi	r6,r6,-2
 400ebec:	1705883a 	add	r2,r2,fp
 400ebf0:	1463c83a 	sub	r17,r2,r17
 400ebf4:	a00b883a 	mov	r5,r20
 400ebf8:	8809883a 	mov	r4,r17
 400ebfc:	d9800315 	stw	r6,12(sp)
 400ec00:	400deec0 	call	400deec <__udivsi3>
 400ec04:	a00b883a 	mov	r5,r20
 400ec08:	8809883a 	mov	r4,r17
 400ec0c:	d8800215 	stw	r2,8(sp)
 400ec10:	400df500 	call	400df50 <__umodsi3>
 400ec14:	d9c00217 	ldw	r7,8(sp)
 400ec18:	1004943a 	slli	r2,r2,16
 400ec1c:	94bfffcc 	andi	r18,r18,65535
 400ec20:	b9d1383a 	mul	r8,r23,r7
 400ec24:	90a4b03a 	or	r18,r18,r2
 400ec28:	d9800317 	ldw	r6,12(sp)
 400ec2c:	9200062e 	bgeu	r18,r8,400ec48 <__divdf3+0x3f4>
 400ec30:	9725883a 	add	r18,r18,fp
 400ec34:	38bfffc4 	addi	r2,r7,-1
 400ec38:	9700d636 	bltu	r18,fp,400ef94 <__divdf3+0x740>
 400ec3c:	9200d52e 	bgeu	r18,r8,400ef94 <__divdf3+0x740>
 400ec40:	39ffff84 	addi	r7,r7,-2
 400ec44:	9725883a 	add	r18,r18,fp
 400ec48:	3004943a 	slli	r2,r6,16
 400ec4c:	b012d43a 	srli	r9,r22,16
 400ec50:	b1bfffcc 	andi	r6,r22,65535
 400ec54:	11e2b03a 	or	r17,r2,r7
 400ec58:	8806d43a 	srli	r3,r17,16
 400ec5c:	893fffcc 	andi	r4,r17,65535
 400ec60:	218b383a 	mul	r5,r4,r6
 400ec64:	30c5383a 	mul	r2,r6,r3
 400ec68:	2249383a 	mul	r4,r4,r9
 400ec6c:	280ed43a 	srli	r7,r5,16
 400ec70:	9225c83a 	sub	r18,r18,r8
 400ec74:	2089883a 	add	r4,r4,r2
 400ec78:	3909883a 	add	r4,r7,r4
 400ec7c:	1a47383a 	mul	r3,r3,r9
 400ec80:	2080022e 	bgeu	r4,r2,400ec8c <__divdf3+0x438>
 400ec84:	00800074 	movhi	r2,1
 400ec88:	1887883a 	add	r3,r3,r2
 400ec8c:	2004d43a 	srli	r2,r4,16
 400ec90:	2008943a 	slli	r4,r4,16
 400ec94:	297fffcc 	andi	r5,r5,65535
 400ec98:	10c7883a 	add	r3,r2,r3
 400ec9c:	2149883a 	add	r4,r4,r5
 400eca0:	90c0a536 	bltu	r18,r3,400ef38 <__divdf3+0x6e4>
 400eca4:	90c0bf26 	beq	r18,r3,400efa4 <__divdf3+0x750>
 400eca8:	90c7c83a 	sub	r3,r18,r3
 400ecac:	810fc83a 	sub	r7,r16,r4
 400ecb0:	81e5803a 	cmpltu	r18,r16,r7
 400ecb4:	1ca5c83a 	sub	r18,r3,r18
 400ecb8:	e480c126 	beq	fp,r18,400efc0 <__divdf3+0x76c>
 400ecbc:	a00b883a 	mov	r5,r20
 400ecc0:	9009883a 	mov	r4,r18
 400ecc4:	d9800315 	stw	r6,12(sp)
 400ecc8:	d9c00215 	stw	r7,8(sp)
 400eccc:	da400115 	stw	r9,4(sp)
 400ecd0:	400deec0 	call	400deec <__udivsi3>
 400ecd4:	a00b883a 	mov	r5,r20
 400ecd8:	9009883a 	mov	r4,r18
 400ecdc:	d8800015 	stw	r2,0(sp)
 400ece0:	400df500 	call	400df50 <__umodsi3>
 400ece4:	d9c00217 	ldw	r7,8(sp)
 400ece8:	da000017 	ldw	r8,0(sp)
 400ecec:	1006943a 	slli	r3,r2,16
 400ecf0:	3804d43a 	srli	r2,r7,16
 400ecf4:	ba21383a 	mul	r16,r23,r8
 400ecf8:	d9800317 	ldw	r6,12(sp)
 400ecfc:	10c4b03a 	or	r2,r2,r3
 400ed00:	da400117 	ldw	r9,4(sp)
 400ed04:	1400062e 	bgeu	r2,r16,400ed20 <__divdf3+0x4cc>
 400ed08:	1705883a 	add	r2,r2,fp
 400ed0c:	40ffffc4 	addi	r3,r8,-1
 400ed10:	1700ad36 	bltu	r2,fp,400efc8 <__divdf3+0x774>
 400ed14:	1400ac2e 	bgeu	r2,r16,400efc8 <__divdf3+0x774>
 400ed18:	423fff84 	addi	r8,r8,-2
 400ed1c:	1705883a 	add	r2,r2,fp
 400ed20:	1421c83a 	sub	r16,r2,r16
 400ed24:	a00b883a 	mov	r5,r20
 400ed28:	8009883a 	mov	r4,r16
 400ed2c:	d9800315 	stw	r6,12(sp)
 400ed30:	d9c00215 	stw	r7,8(sp)
 400ed34:	da000015 	stw	r8,0(sp)
 400ed38:	da400115 	stw	r9,4(sp)
 400ed3c:	400deec0 	call	400deec <__udivsi3>
 400ed40:	8009883a 	mov	r4,r16
 400ed44:	a00b883a 	mov	r5,r20
 400ed48:	1025883a 	mov	r18,r2
 400ed4c:	400df500 	call	400df50 <__umodsi3>
 400ed50:	d9c00217 	ldw	r7,8(sp)
 400ed54:	1004943a 	slli	r2,r2,16
 400ed58:	bcaf383a 	mul	r23,r23,r18
 400ed5c:	393fffcc 	andi	r4,r7,65535
 400ed60:	2088b03a 	or	r4,r4,r2
 400ed64:	d9800317 	ldw	r6,12(sp)
 400ed68:	da000017 	ldw	r8,0(sp)
 400ed6c:	da400117 	ldw	r9,4(sp)
 400ed70:	25c0062e 	bgeu	r4,r23,400ed8c <__divdf3+0x538>
 400ed74:	2709883a 	add	r4,r4,fp
 400ed78:	90bfffc4 	addi	r2,r18,-1
 400ed7c:	27009436 	bltu	r4,fp,400efd0 <__divdf3+0x77c>
 400ed80:	25c0932e 	bgeu	r4,r23,400efd0 <__divdf3+0x77c>
 400ed84:	94bfff84 	addi	r18,r18,-2
 400ed88:	2709883a 	add	r4,r4,fp
 400ed8c:	4004943a 	slli	r2,r8,16
 400ed90:	25efc83a 	sub	r23,r4,r23
 400ed94:	1490b03a 	or	r8,r2,r18
 400ed98:	4008d43a 	srli	r4,r8,16
 400ed9c:	40ffffcc 	andi	r3,r8,65535
 400eda0:	30c5383a 	mul	r2,r6,r3
 400eda4:	1a47383a 	mul	r3,r3,r9
 400eda8:	310d383a 	mul	r6,r6,r4
 400edac:	100ad43a 	srli	r5,r2,16
 400edb0:	4913383a 	mul	r9,r9,r4
 400edb4:	1987883a 	add	r3,r3,r6
 400edb8:	28c7883a 	add	r3,r5,r3
 400edbc:	1980022e 	bgeu	r3,r6,400edc8 <__divdf3+0x574>
 400edc0:	01000074 	movhi	r4,1
 400edc4:	4913883a 	add	r9,r9,r4
 400edc8:	1808d43a 	srli	r4,r3,16
 400edcc:	1806943a 	slli	r3,r3,16
 400edd0:	10bfffcc 	andi	r2,r2,65535
 400edd4:	2253883a 	add	r9,r4,r9
 400edd8:	1887883a 	add	r3,r3,r2
 400eddc:	ba403836 	bltu	r23,r9,400eec0 <__divdf3+0x66c>
 400ede0:	ba403626 	beq	r23,r9,400eebc <__divdf3+0x668>
 400ede4:	42000054 	ori	r8,r8,1
 400ede8:	a880ffc4 	addi	r2,r21,1023
 400edec:	00bf570e 	bge	zero,r2,400eb4c <__ram_exceptions_end+0xfbfee904>
 400edf0:	40c001cc 	andi	r3,r8,7
 400edf4:	18000726 	beq	r3,zero,400ee14 <__divdf3+0x5c0>
 400edf8:	40c003cc 	andi	r3,r8,15
 400edfc:	01000104 	movi	r4,4
 400ee00:	19000426 	beq	r3,r4,400ee14 <__divdf3+0x5c0>
 400ee04:	4107883a 	add	r3,r8,r4
 400ee08:	1a11803a 	cmpltu	r8,r3,r8
 400ee0c:	8a23883a 	add	r17,r17,r8
 400ee10:	1811883a 	mov	r8,r3
 400ee14:	88c0402c 	andhi	r3,r17,256
 400ee18:	18000426 	beq	r3,zero,400ee2c <__divdf3+0x5d8>
 400ee1c:	00ffc034 	movhi	r3,65280
 400ee20:	18ffffc4 	addi	r3,r3,-1
 400ee24:	a8810004 	addi	r2,r21,1024
 400ee28:	88e2703a 	and	r17,r17,r3
 400ee2c:	00c1ff84 	movi	r3,2046
 400ee30:	18bee316 	blt	r3,r2,400e9c0 <__ram_exceptions_end+0xfbfee778>
 400ee34:	8824977a 	slli	r18,r17,29
 400ee38:	4010d0fa 	srli	r8,r8,3
 400ee3c:	8822927a 	slli	r17,r17,9
 400ee40:	1081ffcc 	andi	r2,r2,2047
 400ee44:	9224b03a 	or	r18,r18,r8
 400ee48:	880ad33a 	srli	r5,r17,12
 400ee4c:	98c0004c 	andi	r3,r19,1
 400ee50:	003edf06 	br	400e9d0 <__ram_exceptions_end+0xfbfee788>
 400ee54:	8080022c 	andhi	r2,r16,8
 400ee58:	10001226 	beq	r2,zero,400eea4 <__divdf3+0x650>
 400ee5c:	8880022c 	andhi	r2,r17,8
 400ee60:	1000101e 	bne	r2,zero,400eea4 <__divdf3+0x650>
 400ee64:	00800434 	movhi	r2,16
 400ee68:	89400234 	orhi	r5,r17,8
 400ee6c:	10bfffc4 	addi	r2,r2,-1
 400ee70:	b007883a 	mov	r3,r22
 400ee74:	288a703a 	and	r5,r5,r2
 400ee78:	4025883a 	mov	r18,r8
 400ee7c:	003f3106 	br	400eb44 <__ram_exceptions_end+0xfbfee8fc>
 400ee80:	008000c4 	movi	r2,3
 400ee84:	3880a626 	beq	r7,r2,400f120 <__divdf3+0x8cc>
 400ee88:	00800044 	movi	r2,1
 400ee8c:	3880521e 	bne	r7,r2,400efd8 <__divdf3+0x784>
 400ee90:	b807883a 	mov	r3,r23
 400ee94:	0005883a 	mov	r2,zero
 400ee98:	000b883a 	mov	r5,zero
 400ee9c:	0025883a 	mov	r18,zero
 400eea0:	003ecb06 	br	400e9d0 <__ram_exceptions_end+0xfbfee788>
 400eea4:	00800434 	movhi	r2,16
 400eea8:	81400234 	orhi	r5,r16,8
 400eeac:	10bfffc4 	addi	r2,r2,-1
 400eeb0:	a007883a 	mov	r3,r20
 400eeb4:	288a703a 	and	r5,r5,r2
 400eeb8:	003f2206 	br	400eb44 <__ram_exceptions_end+0xfbfee8fc>
 400eebc:	183fca26 	beq	r3,zero,400ede8 <__ram_exceptions_end+0xfbfeeba0>
 400eec0:	e5ef883a 	add	r23,fp,r23
 400eec4:	40bfffc4 	addi	r2,r8,-1
 400eec8:	bf00392e 	bgeu	r23,fp,400efb0 <__divdf3+0x75c>
 400eecc:	1011883a 	mov	r8,r2
 400eed0:	ba7fc41e 	bne	r23,r9,400ede4 <__ram_exceptions_end+0xfbfeeb9c>
 400eed4:	b0ffc31e 	bne	r22,r3,400ede4 <__ram_exceptions_end+0xfbfeeb9c>
 400eed8:	003fc306 	br	400ede8 <__ram_exceptions_end+0xfbfeeba0>
 400eedc:	143ff604 	addi	r16,r2,-40
 400eee0:	9c20983a 	sll	r16,r19,r16
 400eee4:	0025883a 	mov	r18,zero
 400eee8:	003ee206 	br	400ea74 <__ram_exceptions_end+0xfbfee82c>
 400eeec:	d9800315 	stw	r6,12(sp)
 400eef0:	d9c00215 	stw	r7,8(sp)
 400eef4:	40105ac0 	call	40105ac <__clzsi2>
 400eef8:	10800804 	addi	r2,r2,32
 400eefc:	d9c00217 	ldw	r7,8(sp)
 400ef00:	d9800317 	ldw	r6,12(sp)
 400ef04:	003ed106 	br	400ea4c <__ram_exceptions_end+0xfbfee804>
 400ef08:	147ff604 	addi	r17,r2,-40
 400ef0c:	3462983a 	sll	r17,r6,r17
 400ef10:	0011883a 	mov	r8,zero
 400ef14:	003ef506 	br	400eaec <__ram_exceptions_end+0xfbfee8a4>
 400ef18:	3009883a 	mov	r4,r6
 400ef1c:	d9800315 	stw	r6,12(sp)
 400ef20:	da400115 	stw	r9,4(sp)
 400ef24:	40105ac0 	call	40105ac <__clzsi2>
 400ef28:	10800804 	addi	r2,r2,32
 400ef2c:	da400117 	ldw	r9,4(sp)
 400ef30:	d9800317 	ldw	r6,12(sp)
 400ef34:	003ee306 	br	400eac4 <__ram_exceptions_end+0xfbfee87c>
 400ef38:	85a1883a 	add	r16,r16,r22
 400ef3c:	8585803a 	cmpltu	r2,r16,r22
 400ef40:	1705883a 	add	r2,r2,fp
 400ef44:	14a5883a 	add	r18,r2,r18
 400ef48:	88bfffc4 	addi	r2,r17,-1
 400ef4c:	e4800c2e 	bgeu	fp,r18,400ef80 <__divdf3+0x72c>
 400ef50:	90c03e36 	bltu	r18,r3,400f04c <__divdf3+0x7f8>
 400ef54:	1c806926 	beq	r3,r18,400f0fc <__divdf3+0x8a8>
 400ef58:	90c7c83a 	sub	r3,r18,r3
 400ef5c:	1023883a 	mov	r17,r2
 400ef60:	003f5206 	br	400ecac <__ram_exceptions_end+0xfbfeea64>
 400ef64:	923f0436 	bltu	r18,r8,400eb78 <__ram_exceptions_end+0xfbfee930>
 400ef68:	800897fa 	slli	r4,r16,31
 400ef6c:	9004d07a 	srli	r2,r18,1
 400ef70:	8006d07a 	srli	r3,r16,1
 400ef74:	902097fa 	slli	r16,r18,31
 400ef78:	20a4b03a 	or	r18,r4,r2
 400ef7c:	003f0106 	br	400eb84 <__ram_exceptions_end+0xfbfee93c>
 400ef80:	e4bff51e 	bne	fp,r18,400ef58 <__ram_exceptions_end+0xfbfeed10>
 400ef84:	85bff22e 	bgeu	r16,r22,400ef50 <__ram_exceptions_end+0xfbfeed08>
 400ef88:	e0c7c83a 	sub	r3,fp,r3
 400ef8c:	1023883a 	mov	r17,r2
 400ef90:	003f4606 	br	400ecac <__ram_exceptions_end+0xfbfeea64>
 400ef94:	100f883a 	mov	r7,r2
 400ef98:	003f2b06 	br	400ec48 <__ram_exceptions_end+0xfbfeea00>
 400ef9c:	180d883a 	mov	r6,r3
 400efa0:	003f1306 	br	400ebf0 <__ram_exceptions_end+0xfbfee9a8>
 400efa4:	813fe436 	bltu	r16,r4,400ef38 <__ram_exceptions_end+0xfbfeecf0>
 400efa8:	0007883a 	mov	r3,zero
 400efac:	003f3f06 	br	400ecac <__ram_exceptions_end+0xfbfeea64>
 400efb0:	ba402c36 	bltu	r23,r9,400f064 <__divdf3+0x810>
 400efb4:	4dc05426 	beq	r9,r23,400f108 <__divdf3+0x8b4>
 400efb8:	1011883a 	mov	r8,r2
 400efbc:	003f8906 	br	400ede4 <__ram_exceptions_end+0xfbfeeb9c>
 400efc0:	023fffc4 	movi	r8,-1
 400efc4:	003f8806 	br	400ede8 <__ram_exceptions_end+0xfbfeeba0>
 400efc8:	1811883a 	mov	r8,r3
 400efcc:	003f5406 	br	400ed20 <__ram_exceptions_end+0xfbfeead8>
 400efd0:	1025883a 	mov	r18,r2
 400efd4:	003f6d06 	br	400ed8c <__ram_exceptions_end+0xfbfeeb44>
 400efd8:	b827883a 	mov	r19,r23
 400efdc:	003f8206 	br	400ede8 <__ram_exceptions_end+0xfbfeeba0>
 400efe0:	010007c4 	movi	r4,31
 400efe4:	20c02616 	blt	r4,r3,400f080 <__divdf3+0x82c>
 400efe8:	00800804 	movi	r2,32
 400efec:	10c5c83a 	sub	r2,r2,r3
 400eff0:	888a983a 	sll	r5,r17,r2
 400eff4:	40c8d83a 	srl	r4,r8,r3
 400eff8:	4084983a 	sll	r2,r8,r2
 400effc:	88e2d83a 	srl	r17,r17,r3
 400f000:	2906b03a 	or	r3,r5,r4
 400f004:	1004c03a 	cmpne	r2,r2,zero
 400f008:	1886b03a 	or	r3,r3,r2
 400f00c:	188001cc 	andi	r2,r3,7
 400f010:	10000726 	beq	r2,zero,400f030 <__divdf3+0x7dc>
 400f014:	188003cc 	andi	r2,r3,15
 400f018:	01000104 	movi	r4,4
 400f01c:	11000426 	beq	r2,r4,400f030 <__divdf3+0x7dc>
 400f020:	1805883a 	mov	r2,r3
 400f024:	10c00104 	addi	r3,r2,4
 400f028:	1885803a 	cmpltu	r2,r3,r2
 400f02c:	88a3883a 	add	r17,r17,r2
 400f030:	8880202c 	andhi	r2,r17,128
 400f034:	10002726 	beq	r2,zero,400f0d4 <__divdf3+0x880>
 400f038:	98c0004c 	andi	r3,r19,1
 400f03c:	00800044 	movi	r2,1
 400f040:	000b883a 	mov	r5,zero
 400f044:	0025883a 	mov	r18,zero
 400f048:	003e6106 	br	400e9d0 <__ram_exceptions_end+0xfbfee788>
 400f04c:	85a1883a 	add	r16,r16,r22
 400f050:	8585803a 	cmpltu	r2,r16,r22
 400f054:	1705883a 	add	r2,r2,fp
 400f058:	14a5883a 	add	r18,r2,r18
 400f05c:	8c7fff84 	addi	r17,r17,-2
 400f060:	003f1106 	br	400eca8 <__ram_exceptions_end+0xfbfeea60>
 400f064:	b589883a 	add	r4,r22,r22
 400f068:	25ad803a 	cmpltu	r22,r4,r22
 400f06c:	b739883a 	add	fp,r22,fp
 400f070:	40bfff84 	addi	r2,r8,-2
 400f074:	bf2f883a 	add	r23,r23,fp
 400f078:	202d883a 	mov	r22,r4
 400f07c:	003f9306 	br	400eecc <__ram_exceptions_end+0xfbfeec84>
 400f080:	013ff844 	movi	r4,-31
 400f084:	2085c83a 	sub	r2,r4,r2
 400f088:	8888d83a 	srl	r4,r17,r2
 400f08c:	00800804 	movi	r2,32
 400f090:	18802126 	beq	r3,r2,400f118 <__divdf3+0x8c4>
 400f094:	00801004 	movi	r2,64
 400f098:	10c5c83a 	sub	r2,r2,r3
 400f09c:	8884983a 	sll	r2,r17,r2
 400f0a0:	1204b03a 	or	r2,r2,r8
 400f0a4:	1004c03a 	cmpne	r2,r2,zero
 400f0a8:	2084b03a 	or	r2,r4,r2
 400f0ac:	144001cc 	andi	r17,r2,7
 400f0b0:	88000d1e 	bne	r17,zero,400f0e8 <__divdf3+0x894>
 400f0b4:	000b883a 	mov	r5,zero
 400f0b8:	1024d0fa 	srli	r18,r2,3
 400f0bc:	98c0004c 	andi	r3,r19,1
 400f0c0:	0005883a 	mov	r2,zero
 400f0c4:	9464b03a 	or	r18,r18,r17
 400f0c8:	003e4106 	br	400e9d0 <__ram_exceptions_end+0xfbfee788>
 400f0cc:	1007883a 	mov	r3,r2
 400f0d0:	0023883a 	mov	r17,zero
 400f0d4:	880a927a 	slli	r5,r17,9
 400f0d8:	1805883a 	mov	r2,r3
 400f0dc:	8822977a 	slli	r17,r17,29
 400f0e0:	280ad33a 	srli	r5,r5,12
 400f0e4:	003ff406 	br	400f0b8 <__ram_exceptions_end+0xfbfeee70>
 400f0e8:	10c003cc 	andi	r3,r2,15
 400f0ec:	01000104 	movi	r4,4
 400f0f0:	193ff626 	beq	r3,r4,400f0cc <__ram_exceptions_end+0xfbfeee84>
 400f0f4:	0023883a 	mov	r17,zero
 400f0f8:	003fca06 	br	400f024 <__ram_exceptions_end+0xfbfeeddc>
 400f0fc:	813fd336 	bltu	r16,r4,400f04c <__ram_exceptions_end+0xfbfeee04>
 400f100:	1023883a 	mov	r17,r2
 400f104:	003fa806 	br	400efa8 <__ram_exceptions_end+0xfbfeed60>
 400f108:	b0ffd636 	bltu	r22,r3,400f064 <__ram_exceptions_end+0xfbfeee1c>
 400f10c:	1011883a 	mov	r8,r2
 400f110:	b0ff341e 	bne	r22,r3,400ede4 <__ram_exceptions_end+0xfbfeeb9c>
 400f114:	003f3406 	br	400ede8 <__ram_exceptions_end+0xfbfeeba0>
 400f118:	0005883a 	mov	r2,zero
 400f11c:	003fe006 	br	400f0a0 <__ram_exceptions_end+0xfbfeee58>
 400f120:	00800434 	movhi	r2,16
 400f124:	89400234 	orhi	r5,r17,8
 400f128:	10bfffc4 	addi	r2,r2,-1
 400f12c:	b807883a 	mov	r3,r23
 400f130:	288a703a 	and	r5,r5,r2
 400f134:	4025883a 	mov	r18,r8
 400f138:	003e8206 	br	400eb44 <__ram_exceptions_end+0xfbfee8fc>

0400f13c <__eqdf2>:
 400f13c:	2804d53a 	srli	r2,r5,20
 400f140:	3806d53a 	srli	r3,r7,20
 400f144:	02000434 	movhi	r8,16
 400f148:	423fffc4 	addi	r8,r8,-1
 400f14c:	1081ffcc 	andi	r2,r2,2047
 400f150:	0281ffc4 	movi	r10,2047
 400f154:	2a12703a 	and	r9,r5,r8
 400f158:	18c1ffcc 	andi	r3,r3,2047
 400f15c:	3a10703a 	and	r8,r7,r8
 400f160:	280ad7fa 	srli	r5,r5,31
 400f164:	380ed7fa 	srli	r7,r7,31
 400f168:	12801026 	beq	r2,r10,400f1ac <__eqdf2+0x70>
 400f16c:	0281ffc4 	movi	r10,2047
 400f170:	1a800a26 	beq	r3,r10,400f19c <__eqdf2+0x60>
 400f174:	10c00226 	beq	r2,r3,400f180 <__eqdf2+0x44>
 400f178:	00800044 	movi	r2,1
 400f17c:	f800283a 	ret
 400f180:	4a3ffd1e 	bne	r9,r8,400f178 <__ram_exceptions_end+0xfbfeef30>
 400f184:	21bffc1e 	bne	r4,r6,400f178 <__ram_exceptions_end+0xfbfeef30>
 400f188:	29c00c26 	beq	r5,r7,400f1bc <__eqdf2+0x80>
 400f18c:	103ffa1e 	bne	r2,zero,400f178 <__ram_exceptions_end+0xfbfeef30>
 400f190:	2244b03a 	or	r2,r4,r9
 400f194:	1004c03a 	cmpne	r2,r2,zero
 400f198:	f800283a 	ret
 400f19c:	3214b03a 	or	r10,r6,r8
 400f1a0:	503ff426 	beq	r10,zero,400f174 <__ram_exceptions_end+0xfbfeef2c>
 400f1a4:	00800044 	movi	r2,1
 400f1a8:	f800283a 	ret
 400f1ac:	2254b03a 	or	r10,r4,r9
 400f1b0:	503fee26 	beq	r10,zero,400f16c <__ram_exceptions_end+0xfbfeef24>
 400f1b4:	00800044 	movi	r2,1
 400f1b8:	f800283a 	ret
 400f1bc:	0005883a 	mov	r2,zero
 400f1c0:	f800283a 	ret

0400f1c4 <__gedf2>:
 400f1c4:	2804d53a 	srli	r2,r5,20
 400f1c8:	3806d53a 	srli	r3,r7,20
 400f1cc:	02000434 	movhi	r8,16
 400f1d0:	423fffc4 	addi	r8,r8,-1
 400f1d4:	1081ffcc 	andi	r2,r2,2047
 400f1d8:	0241ffc4 	movi	r9,2047
 400f1dc:	2a14703a 	and	r10,r5,r8
 400f1e0:	18c1ffcc 	andi	r3,r3,2047
 400f1e4:	3a10703a 	and	r8,r7,r8
 400f1e8:	280ad7fa 	srli	r5,r5,31
 400f1ec:	380ed7fa 	srli	r7,r7,31
 400f1f0:	12401d26 	beq	r2,r9,400f268 <__gedf2+0xa4>
 400f1f4:	0241ffc4 	movi	r9,2047
 400f1f8:	1a401226 	beq	r3,r9,400f244 <__gedf2+0x80>
 400f1fc:	1000081e 	bne	r2,zero,400f220 <__gedf2+0x5c>
 400f200:	2296b03a 	or	r11,r4,r10
 400f204:	5813003a 	cmpeq	r9,r11,zero
 400f208:	1800091e 	bne	r3,zero,400f230 <__gedf2+0x6c>
 400f20c:	3218b03a 	or	r12,r6,r8
 400f210:	6000071e 	bne	r12,zero,400f230 <__gedf2+0x6c>
 400f214:	0005883a 	mov	r2,zero
 400f218:	5800101e 	bne	r11,zero,400f25c <__gedf2+0x98>
 400f21c:	f800283a 	ret
 400f220:	18000c1e 	bne	r3,zero,400f254 <__gedf2+0x90>
 400f224:	3212b03a 	or	r9,r6,r8
 400f228:	48000c26 	beq	r9,zero,400f25c <__gedf2+0x98>
 400f22c:	0013883a 	mov	r9,zero
 400f230:	39c03fcc 	andi	r7,r7,255
 400f234:	48000826 	beq	r9,zero,400f258 <__gedf2+0x94>
 400f238:	38000926 	beq	r7,zero,400f260 <__gedf2+0x9c>
 400f23c:	00800044 	movi	r2,1
 400f240:	f800283a 	ret
 400f244:	3212b03a 	or	r9,r6,r8
 400f248:	483fec26 	beq	r9,zero,400f1fc <__ram_exceptions_end+0xfbfeefb4>
 400f24c:	00bfff84 	movi	r2,-2
 400f250:	f800283a 	ret
 400f254:	39c03fcc 	andi	r7,r7,255
 400f258:	29c00626 	beq	r5,r7,400f274 <__gedf2+0xb0>
 400f25c:	283ff726 	beq	r5,zero,400f23c <__ram_exceptions_end+0xfbfeeff4>
 400f260:	00bfffc4 	movi	r2,-1
 400f264:	f800283a 	ret
 400f268:	2292b03a 	or	r9,r4,r10
 400f26c:	483fe126 	beq	r9,zero,400f1f4 <__ram_exceptions_end+0xfbfeefac>
 400f270:	003ff606 	br	400f24c <__ram_exceptions_end+0xfbfef004>
 400f274:	18bff916 	blt	r3,r2,400f25c <__ram_exceptions_end+0xfbfef014>
 400f278:	10c00316 	blt	r2,r3,400f288 <__gedf2+0xc4>
 400f27c:	42bff736 	bltu	r8,r10,400f25c <__ram_exceptions_end+0xfbfef014>
 400f280:	52000326 	beq	r10,r8,400f290 <__gedf2+0xcc>
 400f284:	5200042e 	bgeu	r10,r8,400f298 <__gedf2+0xd4>
 400f288:	283fec1e 	bne	r5,zero,400f23c <__ram_exceptions_end+0xfbfeeff4>
 400f28c:	003ff406 	br	400f260 <__ram_exceptions_end+0xfbfef018>
 400f290:	313ff236 	bltu	r6,r4,400f25c <__ram_exceptions_end+0xfbfef014>
 400f294:	21bffc36 	bltu	r4,r6,400f288 <__ram_exceptions_end+0xfbfef040>
 400f298:	0005883a 	mov	r2,zero
 400f29c:	f800283a 	ret

0400f2a0 <__ledf2>:
 400f2a0:	2804d53a 	srli	r2,r5,20
 400f2a4:	3810d53a 	srli	r8,r7,20
 400f2a8:	00c00434 	movhi	r3,16
 400f2ac:	18ffffc4 	addi	r3,r3,-1
 400f2b0:	1081ffcc 	andi	r2,r2,2047
 400f2b4:	0241ffc4 	movi	r9,2047
 400f2b8:	28d4703a 	and	r10,r5,r3
 400f2bc:	4201ffcc 	andi	r8,r8,2047
 400f2c0:	38c6703a 	and	r3,r7,r3
 400f2c4:	280ad7fa 	srli	r5,r5,31
 400f2c8:	380ed7fa 	srli	r7,r7,31
 400f2cc:	12401f26 	beq	r2,r9,400f34c <__ledf2+0xac>
 400f2d0:	0241ffc4 	movi	r9,2047
 400f2d4:	42401426 	beq	r8,r9,400f328 <__ledf2+0x88>
 400f2d8:	1000091e 	bne	r2,zero,400f300 <__ledf2+0x60>
 400f2dc:	2296b03a 	or	r11,r4,r10
 400f2e0:	5813003a 	cmpeq	r9,r11,zero
 400f2e4:	29403fcc 	andi	r5,r5,255
 400f2e8:	40000a1e 	bne	r8,zero,400f314 <__ledf2+0x74>
 400f2ec:	30d8b03a 	or	r12,r6,r3
 400f2f0:	6000081e 	bne	r12,zero,400f314 <__ledf2+0x74>
 400f2f4:	0005883a 	mov	r2,zero
 400f2f8:	5800111e 	bne	r11,zero,400f340 <__ledf2+0xa0>
 400f2fc:	f800283a 	ret
 400f300:	29403fcc 	andi	r5,r5,255
 400f304:	40000c1e 	bne	r8,zero,400f338 <__ledf2+0x98>
 400f308:	30d2b03a 	or	r9,r6,r3
 400f30c:	48000c26 	beq	r9,zero,400f340 <__ledf2+0xa0>
 400f310:	0013883a 	mov	r9,zero
 400f314:	39c03fcc 	andi	r7,r7,255
 400f318:	48000826 	beq	r9,zero,400f33c <__ledf2+0x9c>
 400f31c:	38001126 	beq	r7,zero,400f364 <__ledf2+0xc4>
 400f320:	00800044 	movi	r2,1
 400f324:	f800283a 	ret
 400f328:	30d2b03a 	or	r9,r6,r3
 400f32c:	483fea26 	beq	r9,zero,400f2d8 <__ram_exceptions_end+0xfbfef090>
 400f330:	00800084 	movi	r2,2
 400f334:	f800283a 	ret
 400f338:	39c03fcc 	andi	r7,r7,255
 400f33c:	39400726 	beq	r7,r5,400f35c <__ledf2+0xbc>
 400f340:	2800081e 	bne	r5,zero,400f364 <__ledf2+0xc4>
 400f344:	00800044 	movi	r2,1
 400f348:	f800283a 	ret
 400f34c:	2292b03a 	or	r9,r4,r10
 400f350:	483fdf26 	beq	r9,zero,400f2d0 <__ram_exceptions_end+0xfbfef088>
 400f354:	00800084 	movi	r2,2
 400f358:	f800283a 	ret
 400f35c:	4080030e 	bge	r8,r2,400f36c <__ledf2+0xcc>
 400f360:	383fef26 	beq	r7,zero,400f320 <__ram_exceptions_end+0xfbfef0d8>
 400f364:	00bfffc4 	movi	r2,-1
 400f368:	f800283a 	ret
 400f36c:	123feb16 	blt	r2,r8,400f31c <__ram_exceptions_end+0xfbfef0d4>
 400f370:	1abff336 	bltu	r3,r10,400f340 <__ram_exceptions_end+0xfbfef0f8>
 400f374:	50c00326 	beq	r10,r3,400f384 <__ledf2+0xe4>
 400f378:	50c0042e 	bgeu	r10,r3,400f38c <__ledf2+0xec>
 400f37c:	283fe81e 	bne	r5,zero,400f320 <__ram_exceptions_end+0xfbfef0d8>
 400f380:	003ff806 	br	400f364 <__ram_exceptions_end+0xfbfef11c>
 400f384:	313fee36 	bltu	r6,r4,400f340 <__ram_exceptions_end+0xfbfef0f8>
 400f388:	21bffc36 	bltu	r4,r6,400f37c <__ram_exceptions_end+0xfbfef134>
 400f38c:	0005883a 	mov	r2,zero
 400f390:	f800283a 	ret

0400f394 <__muldf3>:
 400f394:	defff304 	addi	sp,sp,-52
 400f398:	2804d53a 	srli	r2,r5,20
 400f39c:	dd800915 	stw	r22,36(sp)
 400f3a0:	282cd7fa 	srli	r22,r5,31
 400f3a4:	dc000315 	stw	r16,12(sp)
 400f3a8:	04000434 	movhi	r16,16
 400f3ac:	dd400815 	stw	r21,32(sp)
 400f3b0:	dc800515 	stw	r18,20(sp)
 400f3b4:	843fffc4 	addi	r16,r16,-1
 400f3b8:	dfc00c15 	stw	ra,48(sp)
 400f3bc:	df000b15 	stw	fp,44(sp)
 400f3c0:	ddc00a15 	stw	r23,40(sp)
 400f3c4:	dd000715 	stw	r20,28(sp)
 400f3c8:	dcc00615 	stw	r19,24(sp)
 400f3cc:	dc400415 	stw	r17,16(sp)
 400f3d0:	1481ffcc 	andi	r18,r2,2047
 400f3d4:	2c20703a 	and	r16,r5,r16
 400f3d8:	b02b883a 	mov	r21,r22
 400f3dc:	b2403fcc 	andi	r9,r22,255
 400f3e0:	90006026 	beq	r18,zero,400f564 <__muldf3+0x1d0>
 400f3e4:	0081ffc4 	movi	r2,2047
 400f3e8:	2029883a 	mov	r20,r4
 400f3ec:	90803626 	beq	r18,r2,400f4c8 <__muldf3+0x134>
 400f3f0:	80800434 	orhi	r2,r16,16
 400f3f4:	100490fa 	slli	r2,r2,3
 400f3f8:	2020d77a 	srli	r16,r4,29
 400f3fc:	202890fa 	slli	r20,r4,3
 400f400:	94bf0044 	addi	r18,r18,-1023
 400f404:	80a0b03a 	or	r16,r16,r2
 400f408:	0027883a 	mov	r19,zero
 400f40c:	0039883a 	mov	fp,zero
 400f410:	3804d53a 	srli	r2,r7,20
 400f414:	382ed7fa 	srli	r23,r7,31
 400f418:	04400434 	movhi	r17,16
 400f41c:	8c7fffc4 	addi	r17,r17,-1
 400f420:	1081ffcc 	andi	r2,r2,2047
 400f424:	3011883a 	mov	r8,r6
 400f428:	3c62703a 	and	r17,r7,r17
 400f42c:	ba803fcc 	andi	r10,r23,255
 400f430:	10006d26 	beq	r2,zero,400f5e8 <__muldf3+0x254>
 400f434:	00c1ffc4 	movi	r3,2047
 400f438:	10c06526 	beq	r2,r3,400f5d0 <__muldf3+0x23c>
 400f43c:	88c00434 	orhi	r3,r17,16
 400f440:	180690fa 	slli	r3,r3,3
 400f444:	3022d77a 	srli	r17,r6,29
 400f448:	301090fa 	slli	r8,r6,3
 400f44c:	10bf0044 	addi	r2,r2,-1023
 400f450:	88e2b03a 	or	r17,r17,r3
 400f454:	000b883a 	mov	r5,zero
 400f458:	9085883a 	add	r2,r18,r2
 400f45c:	2cc8b03a 	or	r4,r5,r19
 400f460:	00c003c4 	movi	r3,15
 400f464:	bdacf03a 	xor	r22,r23,r22
 400f468:	12c00044 	addi	r11,r2,1
 400f46c:	19009936 	bltu	r3,r4,400f6d4 <__muldf3+0x340>
 400f470:	200890ba 	slli	r4,r4,2
 400f474:	00c10074 	movhi	r3,1025
 400f478:	18fd2204 	addi	r3,r3,-2936
 400f47c:	20c9883a 	add	r4,r4,r3
 400f480:	20c00017 	ldw	r3,0(r4)
 400f484:	1800683a 	jmp	r3
 400f488:	0400f6d4 	movui	r16,987
 400f48c:	0400f4e8 	cmpgeui	r16,zero,979
 400f490:	0400f4e8 	cmpgeui	r16,zero,979
 400f494:	0400f4e4 	muli	r16,zero,979
 400f498:	0400f6b0 	cmpltui	r16,zero,986
 400f49c:	0400f6b0 	cmpltui	r16,zero,986
 400f4a0:	0400f698 	cmpnei	r16,zero,986
 400f4a4:	0400f4e4 	muli	r16,zero,979
 400f4a8:	0400f6b0 	cmpltui	r16,zero,986
 400f4ac:	0400f698 	cmpnei	r16,zero,986
 400f4b0:	0400f6b0 	cmpltui	r16,zero,986
 400f4b4:	0400f4e4 	muli	r16,zero,979
 400f4b8:	0400f6c0 	call	400f6c <__alt_mem_SDRAM-0x3bff094>
 400f4bc:	0400f6c0 	call	400f6c <__alt_mem_SDRAM-0x3bff094>
 400f4c0:	0400f6c0 	call	400f6c <__alt_mem_SDRAM-0x3bff094>
 400f4c4:	0400f8dc 	xori	r16,zero,995
 400f4c8:	2404b03a 	or	r2,r4,r16
 400f4cc:	10006f1e 	bne	r2,zero,400f68c <__muldf3+0x2f8>
 400f4d0:	04c00204 	movi	r19,8
 400f4d4:	0021883a 	mov	r16,zero
 400f4d8:	0029883a 	mov	r20,zero
 400f4dc:	07000084 	movi	fp,2
 400f4e0:	003fcb06 	br	400f410 <__ram_exceptions_end+0xfbfef1c8>
 400f4e4:	502d883a 	mov	r22,r10
 400f4e8:	00800084 	movi	r2,2
 400f4ec:	28805726 	beq	r5,r2,400f64c <__muldf3+0x2b8>
 400f4f0:	008000c4 	movi	r2,3
 400f4f4:	28816626 	beq	r5,r2,400fa90 <__muldf3+0x6fc>
 400f4f8:	00800044 	movi	r2,1
 400f4fc:	2881411e 	bne	r5,r2,400fa04 <__muldf3+0x670>
 400f500:	b02b883a 	mov	r21,r22
 400f504:	0005883a 	mov	r2,zero
 400f508:	000b883a 	mov	r5,zero
 400f50c:	0029883a 	mov	r20,zero
 400f510:	1004953a 	slli	r2,r2,20
 400f514:	a8c03fcc 	andi	r3,r21,255
 400f518:	04400434 	movhi	r17,16
 400f51c:	8c7fffc4 	addi	r17,r17,-1
 400f520:	180697fa 	slli	r3,r3,31
 400f524:	2c4a703a 	and	r5,r5,r17
 400f528:	288ab03a 	or	r5,r5,r2
 400f52c:	28c6b03a 	or	r3,r5,r3
 400f530:	a005883a 	mov	r2,r20
 400f534:	dfc00c17 	ldw	ra,48(sp)
 400f538:	df000b17 	ldw	fp,44(sp)
 400f53c:	ddc00a17 	ldw	r23,40(sp)
 400f540:	dd800917 	ldw	r22,36(sp)
 400f544:	dd400817 	ldw	r21,32(sp)
 400f548:	dd000717 	ldw	r20,28(sp)
 400f54c:	dcc00617 	ldw	r19,24(sp)
 400f550:	dc800517 	ldw	r18,20(sp)
 400f554:	dc400417 	ldw	r17,16(sp)
 400f558:	dc000317 	ldw	r16,12(sp)
 400f55c:	dec00d04 	addi	sp,sp,52
 400f560:	f800283a 	ret
 400f564:	2404b03a 	or	r2,r4,r16
 400f568:	2027883a 	mov	r19,r4
 400f56c:	10004226 	beq	r2,zero,400f678 <__muldf3+0x2e4>
 400f570:	8000fc26 	beq	r16,zero,400f964 <__muldf3+0x5d0>
 400f574:	8009883a 	mov	r4,r16
 400f578:	d9800215 	stw	r6,8(sp)
 400f57c:	d9c00015 	stw	r7,0(sp)
 400f580:	da400115 	stw	r9,4(sp)
 400f584:	40105ac0 	call	40105ac <__clzsi2>
 400f588:	d9800217 	ldw	r6,8(sp)
 400f58c:	d9c00017 	ldw	r7,0(sp)
 400f590:	da400117 	ldw	r9,4(sp)
 400f594:	113ffd44 	addi	r4,r2,-11
 400f598:	00c00704 	movi	r3,28
 400f59c:	1900ed16 	blt	r3,r4,400f954 <__muldf3+0x5c0>
 400f5a0:	00c00744 	movi	r3,29
 400f5a4:	147ffe04 	addi	r17,r2,-8
 400f5a8:	1907c83a 	sub	r3,r3,r4
 400f5ac:	8460983a 	sll	r16,r16,r17
 400f5b0:	98c6d83a 	srl	r3,r19,r3
 400f5b4:	9c68983a 	sll	r20,r19,r17
 400f5b8:	1c20b03a 	or	r16,r3,r16
 400f5bc:	1080fcc4 	addi	r2,r2,1011
 400f5c0:	00a5c83a 	sub	r18,zero,r2
 400f5c4:	0027883a 	mov	r19,zero
 400f5c8:	0039883a 	mov	fp,zero
 400f5cc:	003f9006 	br	400f410 <__ram_exceptions_end+0xfbfef1c8>
 400f5d0:	3446b03a 	or	r3,r6,r17
 400f5d4:	1800261e 	bne	r3,zero,400f670 <__muldf3+0x2dc>
 400f5d8:	0023883a 	mov	r17,zero
 400f5dc:	0011883a 	mov	r8,zero
 400f5e0:	01400084 	movi	r5,2
 400f5e4:	003f9c06 	br	400f458 <__ram_exceptions_end+0xfbfef210>
 400f5e8:	3446b03a 	or	r3,r6,r17
 400f5ec:	18001c26 	beq	r3,zero,400f660 <__muldf3+0x2cc>
 400f5f0:	8800ce26 	beq	r17,zero,400f92c <__muldf3+0x598>
 400f5f4:	8809883a 	mov	r4,r17
 400f5f8:	d9800215 	stw	r6,8(sp)
 400f5fc:	da400115 	stw	r9,4(sp)
 400f600:	da800015 	stw	r10,0(sp)
 400f604:	40105ac0 	call	40105ac <__clzsi2>
 400f608:	d9800217 	ldw	r6,8(sp)
 400f60c:	da400117 	ldw	r9,4(sp)
 400f610:	da800017 	ldw	r10,0(sp)
 400f614:	113ffd44 	addi	r4,r2,-11
 400f618:	00c00704 	movi	r3,28
 400f61c:	1900bf16 	blt	r3,r4,400f91c <__muldf3+0x588>
 400f620:	00c00744 	movi	r3,29
 400f624:	123ffe04 	addi	r8,r2,-8
 400f628:	1907c83a 	sub	r3,r3,r4
 400f62c:	8a22983a 	sll	r17,r17,r8
 400f630:	30c6d83a 	srl	r3,r6,r3
 400f634:	3210983a 	sll	r8,r6,r8
 400f638:	1c62b03a 	or	r17,r3,r17
 400f63c:	1080fcc4 	addi	r2,r2,1011
 400f640:	0085c83a 	sub	r2,zero,r2
 400f644:	000b883a 	mov	r5,zero
 400f648:	003f8306 	br	400f458 <__ram_exceptions_end+0xfbfef210>
 400f64c:	b02b883a 	mov	r21,r22
 400f650:	0081ffc4 	movi	r2,2047
 400f654:	000b883a 	mov	r5,zero
 400f658:	0029883a 	mov	r20,zero
 400f65c:	003fac06 	br	400f510 <__ram_exceptions_end+0xfbfef2c8>
 400f660:	0023883a 	mov	r17,zero
 400f664:	0011883a 	mov	r8,zero
 400f668:	01400044 	movi	r5,1
 400f66c:	003f7a06 	br	400f458 <__ram_exceptions_end+0xfbfef210>
 400f670:	014000c4 	movi	r5,3
 400f674:	003f7806 	br	400f458 <__ram_exceptions_end+0xfbfef210>
 400f678:	04c00104 	movi	r19,4
 400f67c:	0021883a 	mov	r16,zero
 400f680:	0029883a 	mov	r20,zero
 400f684:	07000044 	movi	fp,1
 400f688:	003f6106 	br	400f410 <__ram_exceptions_end+0xfbfef1c8>
 400f68c:	04c00304 	movi	r19,12
 400f690:	070000c4 	movi	fp,3
 400f694:	003f5e06 	br	400f410 <__ram_exceptions_end+0xfbfef1c8>
 400f698:	01400434 	movhi	r5,16
 400f69c:	002b883a 	mov	r21,zero
 400f6a0:	297fffc4 	addi	r5,r5,-1
 400f6a4:	053fffc4 	movi	r20,-1
 400f6a8:	0081ffc4 	movi	r2,2047
 400f6ac:	003f9806 	br	400f510 <__ram_exceptions_end+0xfbfef2c8>
 400f6b0:	8023883a 	mov	r17,r16
 400f6b4:	a011883a 	mov	r8,r20
 400f6b8:	e00b883a 	mov	r5,fp
 400f6bc:	003f8a06 	br	400f4e8 <__ram_exceptions_end+0xfbfef2a0>
 400f6c0:	8023883a 	mov	r17,r16
 400f6c4:	a011883a 	mov	r8,r20
 400f6c8:	482d883a 	mov	r22,r9
 400f6cc:	e00b883a 	mov	r5,fp
 400f6d0:	003f8506 	br	400f4e8 <__ram_exceptions_end+0xfbfef2a0>
 400f6d4:	a00ad43a 	srli	r5,r20,16
 400f6d8:	401ad43a 	srli	r13,r8,16
 400f6dc:	a53fffcc 	andi	r20,r20,65535
 400f6e0:	423fffcc 	andi	r8,r8,65535
 400f6e4:	4519383a 	mul	r12,r8,r20
 400f6e8:	4147383a 	mul	r3,r8,r5
 400f6ec:	6d09383a 	mul	r4,r13,r20
 400f6f0:	600cd43a 	srli	r6,r12,16
 400f6f4:	2b5d383a 	mul	r14,r5,r13
 400f6f8:	20c9883a 	add	r4,r4,r3
 400f6fc:	310d883a 	add	r6,r6,r4
 400f700:	30c0022e 	bgeu	r6,r3,400f70c <__muldf3+0x378>
 400f704:	00c00074 	movhi	r3,1
 400f708:	70dd883a 	add	r14,r14,r3
 400f70c:	8826d43a 	srli	r19,r17,16
 400f710:	8bffffcc 	andi	r15,r17,65535
 400f714:	7d23383a 	mul	r17,r15,r20
 400f718:	7949383a 	mul	r4,r15,r5
 400f71c:	9d29383a 	mul	r20,r19,r20
 400f720:	8814d43a 	srli	r10,r17,16
 400f724:	3012943a 	slli	r9,r6,16
 400f728:	a129883a 	add	r20,r20,r4
 400f72c:	633fffcc 	andi	r12,r12,65535
 400f730:	5515883a 	add	r10,r10,r20
 400f734:	3006d43a 	srli	r3,r6,16
 400f738:	4b13883a 	add	r9,r9,r12
 400f73c:	2ccb383a 	mul	r5,r5,r19
 400f740:	5100022e 	bgeu	r10,r4,400f74c <__muldf3+0x3b8>
 400f744:	01000074 	movhi	r4,1
 400f748:	290b883a 	add	r5,r5,r4
 400f74c:	802ad43a 	srli	r21,r16,16
 400f750:	843fffcc 	andi	r16,r16,65535
 400f754:	440d383a 	mul	r6,r8,r16
 400f758:	4565383a 	mul	r18,r8,r21
 400f75c:	8349383a 	mul	r4,r16,r13
 400f760:	500e943a 	slli	r7,r10,16
 400f764:	3010d43a 	srli	r8,r6,16
 400f768:	5028d43a 	srli	r20,r10,16
 400f76c:	2489883a 	add	r4,r4,r18
 400f770:	8abfffcc 	andi	r10,r17,65535
 400f774:	3a95883a 	add	r10,r7,r10
 400f778:	4119883a 	add	r12,r8,r4
 400f77c:	a169883a 	add	r20,r20,r5
 400f780:	1a87883a 	add	r3,r3,r10
 400f784:	6d5b383a 	mul	r13,r13,r21
 400f788:	6480022e 	bgeu	r12,r18,400f794 <__muldf3+0x400>
 400f78c:	01000074 	movhi	r4,1
 400f790:	691b883a 	add	r13,r13,r4
 400f794:	7c25383a 	mul	r18,r15,r16
 400f798:	7d4b383a 	mul	r5,r15,r21
 400f79c:	84cf383a 	mul	r7,r16,r19
 400f7a0:	901ed43a 	srli	r15,r18,16
 400f7a4:	6008d43a 	srli	r4,r12,16
 400f7a8:	6010943a 	slli	r8,r12,16
 400f7ac:	394f883a 	add	r7,r7,r5
 400f7b0:	333fffcc 	andi	r12,r6,65535
 400f7b4:	79df883a 	add	r15,r15,r7
 400f7b8:	235b883a 	add	r13,r4,r13
 400f7bc:	9d63383a 	mul	r17,r19,r21
 400f7c0:	4309883a 	add	r4,r8,r12
 400f7c4:	7940022e 	bgeu	r15,r5,400f7d0 <__muldf3+0x43c>
 400f7c8:	01400074 	movhi	r5,1
 400f7cc:	8963883a 	add	r17,r17,r5
 400f7d0:	780a943a 	slli	r5,r15,16
 400f7d4:	91bfffcc 	andi	r6,r18,65535
 400f7d8:	70c7883a 	add	r3,r14,r3
 400f7dc:	298d883a 	add	r6,r5,r6
 400f7e0:	1a8f803a 	cmpltu	r7,r3,r10
 400f7e4:	350b883a 	add	r5,r6,r20
 400f7e8:	20c7883a 	add	r3,r4,r3
 400f7ec:	3955883a 	add	r10,r7,r5
 400f7f0:	1909803a 	cmpltu	r4,r3,r4
 400f7f4:	6a91883a 	add	r8,r13,r10
 400f7f8:	780cd43a 	srli	r6,r15,16
 400f7fc:	2219883a 	add	r12,r4,r8
 400f800:	2d0b803a 	cmpltu	r5,r5,r20
 400f804:	51cf803a 	cmpltu	r7,r10,r7
 400f808:	29ceb03a 	or	r7,r5,r7
 400f80c:	4351803a 	cmpltu	r8,r8,r13
 400f810:	610b803a 	cmpltu	r5,r12,r4
 400f814:	4148b03a 	or	r4,r8,r5
 400f818:	398f883a 	add	r7,r7,r6
 400f81c:	3909883a 	add	r4,r7,r4
 400f820:	1810927a 	slli	r8,r3,9
 400f824:	2449883a 	add	r4,r4,r17
 400f828:	2008927a 	slli	r4,r4,9
 400f82c:	6022d5fa 	srli	r17,r12,23
 400f830:	1806d5fa 	srli	r3,r3,23
 400f834:	4252b03a 	or	r9,r8,r9
 400f838:	600a927a 	slli	r5,r12,9
 400f83c:	4810c03a 	cmpne	r8,r9,zero
 400f840:	2462b03a 	or	r17,r4,r17
 400f844:	40c6b03a 	or	r3,r8,r3
 400f848:	8900402c 	andhi	r4,r17,256
 400f84c:	1950b03a 	or	r8,r3,r5
 400f850:	20000726 	beq	r4,zero,400f870 <__muldf3+0x4dc>
 400f854:	4006d07a 	srli	r3,r8,1
 400f858:	880497fa 	slli	r2,r17,31
 400f85c:	4200004c 	andi	r8,r8,1
 400f860:	8822d07a 	srli	r17,r17,1
 400f864:	1a10b03a 	or	r8,r3,r8
 400f868:	1210b03a 	or	r8,r2,r8
 400f86c:	5805883a 	mov	r2,r11
 400f870:	1140ffc4 	addi	r5,r2,1023
 400f874:	0140440e 	bge	zero,r5,400f988 <__muldf3+0x5f4>
 400f878:	40c001cc 	andi	r3,r8,7
 400f87c:	18000726 	beq	r3,zero,400f89c <__muldf3+0x508>
 400f880:	40c003cc 	andi	r3,r8,15
 400f884:	01000104 	movi	r4,4
 400f888:	19000426 	beq	r3,r4,400f89c <__muldf3+0x508>
 400f88c:	4107883a 	add	r3,r8,r4
 400f890:	1a11803a 	cmpltu	r8,r3,r8
 400f894:	8a23883a 	add	r17,r17,r8
 400f898:	1811883a 	mov	r8,r3
 400f89c:	88c0402c 	andhi	r3,r17,256
 400f8a0:	18000426 	beq	r3,zero,400f8b4 <__muldf3+0x520>
 400f8a4:	11410004 	addi	r5,r2,1024
 400f8a8:	00bfc034 	movhi	r2,65280
 400f8ac:	10bfffc4 	addi	r2,r2,-1
 400f8b0:	88a2703a 	and	r17,r17,r2
 400f8b4:	0081ff84 	movi	r2,2046
 400f8b8:	117f6416 	blt	r2,r5,400f64c <__ram_exceptions_end+0xfbfef404>
 400f8bc:	8828977a 	slli	r20,r17,29
 400f8c0:	4010d0fa 	srli	r8,r8,3
 400f8c4:	8822927a 	slli	r17,r17,9
 400f8c8:	2881ffcc 	andi	r2,r5,2047
 400f8cc:	a228b03a 	or	r20,r20,r8
 400f8d0:	880ad33a 	srli	r5,r17,12
 400f8d4:	b02b883a 	mov	r21,r22
 400f8d8:	003f0d06 	br	400f510 <__ram_exceptions_end+0xfbfef2c8>
 400f8dc:	8080022c 	andhi	r2,r16,8
 400f8e0:	10000926 	beq	r2,zero,400f908 <__muldf3+0x574>
 400f8e4:	8880022c 	andhi	r2,r17,8
 400f8e8:	1000071e 	bne	r2,zero,400f908 <__muldf3+0x574>
 400f8ec:	00800434 	movhi	r2,16
 400f8f0:	89400234 	orhi	r5,r17,8
 400f8f4:	10bfffc4 	addi	r2,r2,-1
 400f8f8:	b82b883a 	mov	r21,r23
 400f8fc:	288a703a 	and	r5,r5,r2
 400f900:	4029883a 	mov	r20,r8
 400f904:	003f6806 	br	400f6a8 <__ram_exceptions_end+0xfbfef460>
 400f908:	00800434 	movhi	r2,16
 400f90c:	81400234 	orhi	r5,r16,8
 400f910:	10bfffc4 	addi	r2,r2,-1
 400f914:	288a703a 	and	r5,r5,r2
 400f918:	003f6306 	br	400f6a8 <__ram_exceptions_end+0xfbfef460>
 400f91c:	147ff604 	addi	r17,r2,-40
 400f920:	3462983a 	sll	r17,r6,r17
 400f924:	0011883a 	mov	r8,zero
 400f928:	003f4406 	br	400f63c <__ram_exceptions_end+0xfbfef3f4>
 400f92c:	3009883a 	mov	r4,r6
 400f930:	d9800215 	stw	r6,8(sp)
 400f934:	da400115 	stw	r9,4(sp)
 400f938:	da800015 	stw	r10,0(sp)
 400f93c:	40105ac0 	call	40105ac <__clzsi2>
 400f940:	10800804 	addi	r2,r2,32
 400f944:	da800017 	ldw	r10,0(sp)
 400f948:	da400117 	ldw	r9,4(sp)
 400f94c:	d9800217 	ldw	r6,8(sp)
 400f950:	003f3006 	br	400f614 <__ram_exceptions_end+0xfbfef3cc>
 400f954:	143ff604 	addi	r16,r2,-40
 400f958:	9c20983a 	sll	r16,r19,r16
 400f95c:	0029883a 	mov	r20,zero
 400f960:	003f1606 	br	400f5bc <__ram_exceptions_end+0xfbfef374>
 400f964:	d9800215 	stw	r6,8(sp)
 400f968:	d9c00015 	stw	r7,0(sp)
 400f96c:	da400115 	stw	r9,4(sp)
 400f970:	40105ac0 	call	40105ac <__clzsi2>
 400f974:	10800804 	addi	r2,r2,32
 400f978:	da400117 	ldw	r9,4(sp)
 400f97c:	d9c00017 	ldw	r7,0(sp)
 400f980:	d9800217 	ldw	r6,8(sp)
 400f984:	003f0306 	br	400f594 <__ram_exceptions_end+0xfbfef34c>
 400f988:	00c00044 	movi	r3,1
 400f98c:	1947c83a 	sub	r3,r3,r5
 400f990:	00800e04 	movi	r2,56
 400f994:	10feda16 	blt	r2,r3,400f500 <__ram_exceptions_end+0xfbfef2b8>
 400f998:	008007c4 	movi	r2,31
 400f99c:	10c01b16 	blt	r2,r3,400fa0c <__muldf3+0x678>
 400f9a0:	00800804 	movi	r2,32
 400f9a4:	10c5c83a 	sub	r2,r2,r3
 400f9a8:	888a983a 	sll	r5,r17,r2
 400f9ac:	40c8d83a 	srl	r4,r8,r3
 400f9b0:	4084983a 	sll	r2,r8,r2
 400f9b4:	88e2d83a 	srl	r17,r17,r3
 400f9b8:	2906b03a 	or	r3,r5,r4
 400f9bc:	1004c03a 	cmpne	r2,r2,zero
 400f9c0:	1886b03a 	or	r3,r3,r2
 400f9c4:	188001cc 	andi	r2,r3,7
 400f9c8:	10000726 	beq	r2,zero,400f9e8 <__muldf3+0x654>
 400f9cc:	188003cc 	andi	r2,r3,15
 400f9d0:	01000104 	movi	r4,4
 400f9d4:	11000426 	beq	r2,r4,400f9e8 <__muldf3+0x654>
 400f9d8:	1805883a 	mov	r2,r3
 400f9dc:	10c00104 	addi	r3,r2,4
 400f9e0:	1885803a 	cmpltu	r2,r3,r2
 400f9e4:	88a3883a 	add	r17,r17,r2
 400f9e8:	8880202c 	andhi	r2,r17,128
 400f9ec:	10001c26 	beq	r2,zero,400fa60 <__muldf3+0x6cc>
 400f9f0:	b02b883a 	mov	r21,r22
 400f9f4:	00800044 	movi	r2,1
 400f9f8:	000b883a 	mov	r5,zero
 400f9fc:	0029883a 	mov	r20,zero
 400fa00:	003ec306 	br	400f510 <__ram_exceptions_end+0xfbfef2c8>
 400fa04:	5805883a 	mov	r2,r11
 400fa08:	003f9906 	br	400f870 <__ram_exceptions_end+0xfbfef628>
 400fa0c:	00bff844 	movi	r2,-31
 400fa10:	1145c83a 	sub	r2,r2,r5
 400fa14:	8888d83a 	srl	r4,r17,r2
 400fa18:	00800804 	movi	r2,32
 400fa1c:	18801a26 	beq	r3,r2,400fa88 <__muldf3+0x6f4>
 400fa20:	00801004 	movi	r2,64
 400fa24:	10c5c83a 	sub	r2,r2,r3
 400fa28:	8884983a 	sll	r2,r17,r2
 400fa2c:	1204b03a 	or	r2,r2,r8
 400fa30:	1004c03a 	cmpne	r2,r2,zero
 400fa34:	2084b03a 	or	r2,r4,r2
 400fa38:	144001cc 	andi	r17,r2,7
 400fa3c:	88000d1e 	bne	r17,zero,400fa74 <__muldf3+0x6e0>
 400fa40:	000b883a 	mov	r5,zero
 400fa44:	1028d0fa 	srli	r20,r2,3
 400fa48:	b02b883a 	mov	r21,r22
 400fa4c:	0005883a 	mov	r2,zero
 400fa50:	a468b03a 	or	r20,r20,r17
 400fa54:	003eae06 	br	400f510 <__ram_exceptions_end+0xfbfef2c8>
 400fa58:	1007883a 	mov	r3,r2
 400fa5c:	0023883a 	mov	r17,zero
 400fa60:	880a927a 	slli	r5,r17,9
 400fa64:	1805883a 	mov	r2,r3
 400fa68:	8822977a 	slli	r17,r17,29
 400fa6c:	280ad33a 	srli	r5,r5,12
 400fa70:	003ff406 	br	400fa44 <__ram_exceptions_end+0xfbfef7fc>
 400fa74:	10c003cc 	andi	r3,r2,15
 400fa78:	01000104 	movi	r4,4
 400fa7c:	193ff626 	beq	r3,r4,400fa58 <__ram_exceptions_end+0xfbfef810>
 400fa80:	0023883a 	mov	r17,zero
 400fa84:	003fd506 	br	400f9dc <__ram_exceptions_end+0xfbfef794>
 400fa88:	0005883a 	mov	r2,zero
 400fa8c:	003fe706 	br	400fa2c <__ram_exceptions_end+0xfbfef7e4>
 400fa90:	00800434 	movhi	r2,16
 400fa94:	89400234 	orhi	r5,r17,8
 400fa98:	10bfffc4 	addi	r2,r2,-1
 400fa9c:	b02b883a 	mov	r21,r22
 400faa0:	288a703a 	and	r5,r5,r2
 400faa4:	4029883a 	mov	r20,r8
 400faa8:	003eff06 	br	400f6a8 <__ram_exceptions_end+0xfbfef460>

0400faac <__subdf3>:
 400faac:	02000434 	movhi	r8,16
 400fab0:	423fffc4 	addi	r8,r8,-1
 400fab4:	defffb04 	addi	sp,sp,-20
 400fab8:	2a14703a 	and	r10,r5,r8
 400fabc:	3812d53a 	srli	r9,r7,20
 400fac0:	3a10703a 	and	r8,r7,r8
 400fac4:	2006d77a 	srli	r3,r4,29
 400fac8:	3004d77a 	srli	r2,r6,29
 400facc:	dc000015 	stw	r16,0(sp)
 400fad0:	501490fa 	slli	r10,r10,3
 400fad4:	2820d53a 	srli	r16,r5,20
 400fad8:	401090fa 	slli	r8,r8,3
 400fadc:	dc800215 	stw	r18,8(sp)
 400fae0:	dc400115 	stw	r17,4(sp)
 400fae4:	dfc00415 	stw	ra,16(sp)
 400fae8:	202290fa 	slli	r17,r4,3
 400faec:	dcc00315 	stw	r19,12(sp)
 400faf0:	4a41ffcc 	andi	r9,r9,2047
 400faf4:	0101ffc4 	movi	r4,2047
 400faf8:	2824d7fa 	srli	r18,r5,31
 400fafc:	8401ffcc 	andi	r16,r16,2047
 400fb00:	50c6b03a 	or	r3,r10,r3
 400fb04:	380ed7fa 	srli	r7,r7,31
 400fb08:	408ab03a 	or	r5,r8,r2
 400fb0c:	300c90fa 	slli	r6,r6,3
 400fb10:	49009626 	beq	r9,r4,400fd6c <__subdf3+0x2c0>
 400fb14:	39c0005c 	xori	r7,r7,1
 400fb18:	8245c83a 	sub	r2,r16,r9
 400fb1c:	3c807426 	beq	r7,r18,400fcf0 <__subdf3+0x244>
 400fb20:	0080af0e 	bge	zero,r2,400fde0 <__subdf3+0x334>
 400fb24:	48002a1e 	bne	r9,zero,400fbd0 <__subdf3+0x124>
 400fb28:	2988b03a 	or	r4,r5,r6
 400fb2c:	20009a1e 	bne	r4,zero,400fd98 <__subdf3+0x2ec>
 400fb30:	888001cc 	andi	r2,r17,7
 400fb34:	10000726 	beq	r2,zero,400fb54 <__subdf3+0xa8>
 400fb38:	888003cc 	andi	r2,r17,15
 400fb3c:	01000104 	movi	r4,4
 400fb40:	11000426 	beq	r2,r4,400fb54 <__subdf3+0xa8>
 400fb44:	890b883a 	add	r5,r17,r4
 400fb48:	2c63803a 	cmpltu	r17,r5,r17
 400fb4c:	1c47883a 	add	r3,r3,r17
 400fb50:	2823883a 	mov	r17,r5
 400fb54:	1880202c 	andhi	r2,r3,128
 400fb58:	10005926 	beq	r2,zero,400fcc0 <__subdf3+0x214>
 400fb5c:	84000044 	addi	r16,r16,1
 400fb60:	0081ffc4 	movi	r2,2047
 400fb64:	8080be26 	beq	r16,r2,400fe60 <__subdf3+0x3b4>
 400fb68:	017fe034 	movhi	r5,65408
 400fb6c:	297fffc4 	addi	r5,r5,-1
 400fb70:	1946703a 	and	r3,r3,r5
 400fb74:	1804977a 	slli	r2,r3,29
 400fb78:	1806927a 	slli	r3,r3,9
 400fb7c:	8822d0fa 	srli	r17,r17,3
 400fb80:	8401ffcc 	andi	r16,r16,2047
 400fb84:	180ad33a 	srli	r5,r3,12
 400fb88:	9100004c 	andi	r4,r18,1
 400fb8c:	1444b03a 	or	r2,r2,r17
 400fb90:	80c1ffcc 	andi	r3,r16,2047
 400fb94:	1820953a 	slli	r16,r3,20
 400fb98:	20c03fcc 	andi	r3,r4,255
 400fb9c:	180897fa 	slli	r4,r3,31
 400fba0:	00c00434 	movhi	r3,16
 400fba4:	18ffffc4 	addi	r3,r3,-1
 400fba8:	28c6703a 	and	r3,r5,r3
 400fbac:	1c06b03a 	or	r3,r3,r16
 400fbb0:	1906b03a 	or	r3,r3,r4
 400fbb4:	dfc00417 	ldw	ra,16(sp)
 400fbb8:	dcc00317 	ldw	r19,12(sp)
 400fbbc:	dc800217 	ldw	r18,8(sp)
 400fbc0:	dc400117 	ldw	r17,4(sp)
 400fbc4:	dc000017 	ldw	r16,0(sp)
 400fbc8:	dec00504 	addi	sp,sp,20
 400fbcc:	f800283a 	ret
 400fbd0:	0101ffc4 	movi	r4,2047
 400fbd4:	813fd626 	beq	r16,r4,400fb30 <__ram_exceptions_end+0xfbfef8e8>
 400fbd8:	29402034 	orhi	r5,r5,128
 400fbdc:	01000e04 	movi	r4,56
 400fbe0:	2080a316 	blt	r4,r2,400fe70 <__subdf3+0x3c4>
 400fbe4:	010007c4 	movi	r4,31
 400fbe8:	2080c616 	blt	r4,r2,400ff04 <__subdf3+0x458>
 400fbec:	01000804 	movi	r4,32
 400fbf0:	2089c83a 	sub	r4,r4,r2
 400fbf4:	2910983a 	sll	r8,r5,r4
 400fbf8:	308ed83a 	srl	r7,r6,r2
 400fbfc:	3108983a 	sll	r4,r6,r4
 400fc00:	2884d83a 	srl	r2,r5,r2
 400fc04:	41ccb03a 	or	r6,r8,r7
 400fc08:	2008c03a 	cmpne	r4,r4,zero
 400fc0c:	310cb03a 	or	r6,r6,r4
 400fc10:	898dc83a 	sub	r6,r17,r6
 400fc14:	89a3803a 	cmpltu	r17,r17,r6
 400fc18:	1887c83a 	sub	r3,r3,r2
 400fc1c:	1c47c83a 	sub	r3,r3,r17
 400fc20:	3023883a 	mov	r17,r6
 400fc24:	1880202c 	andhi	r2,r3,128
 400fc28:	10002326 	beq	r2,zero,400fcb8 <__subdf3+0x20c>
 400fc2c:	04c02034 	movhi	r19,128
 400fc30:	9cffffc4 	addi	r19,r19,-1
 400fc34:	1ce6703a 	and	r19,r3,r19
 400fc38:	98007a26 	beq	r19,zero,400fe24 <__subdf3+0x378>
 400fc3c:	9809883a 	mov	r4,r19
 400fc40:	40105ac0 	call	40105ac <__clzsi2>
 400fc44:	113ffe04 	addi	r4,r2,-8
 400fc48:	00c007c4 	movi	r3,31
 400fc4c:	19007b16 	blt	r3,r4,400fe3c <__subdf3+0x390>
 400fc50:	00800804 	movi	r2,32
 400fc54:	1105c83a 	sub	r2,r2,r4
 400fc58:	8884d83a 	srl	r2,r17,r2
 400fc5c:	9906983a 	sll	r3,r19,r4
 400fc60:	8922983a 	sll	r17,r17,r4
 400fc64:	10c4b03a 	or	r2,r2,r3
 400fc68:	24007816 	blt	r4,r16,400fe4c <__subdf3+0x3a0>
 400fc6c:	2421c83a 	sub	r16,r4,r16
 400fc70:	80c00044 	addi	r3,r16,1
 400fc74:	010007c4 	movi	r4,31
 400fc78:	20c09516 	blt	r4,r3,400fed0 <__subdf3+0x424>
 400fc7c:	01400804 	movi	r5,32
 400fc80:	28cbc83a 	sub	r5,r5,r3
 400fc84:	88c8d83a 	srl	r4,r17,r3
 400fc88:	8962983a 	sll	r17,r17,r5
 400fc8c:	114a983a 	sll	r5,r2,r5
 400fc90:	10c6d83a 	srl	r3,r2,r3
 400fc94:	8804c03a 	cmpne	r2,r17,zero
 400fc98:	290ab03a 	or	r5,r5,r4
 400fc9c:	28a2b03a 	or	r17,r5,r2
 400fca0:	0021883a 	mov	r16,zero
 400fca4:	003fa206 	br	400fb30 <__ram_exceptions_end+0xfbfef8e8>
 400fca8:	2090b03a 	or	r8,r4,r2
 400fcac:	40018e26 	beq	r8,zero,40102e8 <__subdf3+0x83c>
 400fcb0:	1007883a 	mov	r3,r2
 400fcb4:	2023883a 	mov	r17,r4
 400fcb8:	888001cc 	andi	r2,r17,7
 400fcbc:	103f9e1e 	bne	r2,zero,400fb38 <__ram_exceptions_end+0xfbfef8f0>
 400fcc0:	1804977a 	slli	r2,r3,29
 400fcc4:	8822d0fa 	srli	r17,r17,3
 400fcc8:	1810d0fa 	srli	r8,r3,3
 400fccc:	9100004c 	andi	r4,r18,1
 400fcd0:	1444b03a 	or	r2,r2,r17
 400fcd4:	00c1ffc4 	movi	r3,2047
 400fcd8:	80c02826 	beq	r16,r3,400fd7c <__subdf3+0x2d0>
 400fcdc:	01400434 	movhi	r5,16
 400fce0:	297fffc4 	addi	r5,r5,-1
 400fce4:	80e0703a 	and	r16,r16,r3
 400fce8:	414a703a 	and	r5,r8,r5
 400fcec:	003fa806 	br	400fb90 <__ram_exceptions_end+0xfbfef948>
 400fcf0:	0080630e 	bge	zero,r2,400fe80 <__subdf3+0x3d4>
 400fcf4:	48003026 	beq	r9,zero,400fdb8 <__subdf3+0x30c>
 400fcf8:	0101ffc4 	movi	r4,2047
 400fcfc:	813f8c26 	beq	r16,r4,400fb30 <__ram_exceptions_end+0xfbfef8e8>
 400fd00:	29402034 	orhi	r5,r5,128
 400fd04:	01000e04 	movi	r4,56
 400fd08:	2080a90e 	bge	r4,r2,400ffb0 <__subdf3+0x504>
 400fd0c:	298cb03a 	or	r6,r5,r6
 400fd10:	3012c03a 	cmpne	r9,r6,zero
 400fd14:	0005883a 	mov	r2,zero
 400fd18:	4c53883a 	add	r9,r9,r17
 400fd1c:	4c63803a 	cmpltu	r17,r9,r17
 400fd20:	10c7883a 	add	r3,r2,r3
 400fd24:	88c7883a 	add	r3,r17,r3
 400fd28:	4823883a 	mov	r17,r9
 400fd2c:	1880202c 	andhi	r2,r3,128
 400fd30:	1000d026 	beq	r2,zero,4010074 <__subdf3+0x5c8>
 400fd34:	84000044 	addi	r16,r16,1
 400fd38:	0081ffc4 	movi	r2,2047
 400fd3c:	8080fe26 	beq	r16,r2,4010138 <__subdf3+0x68c>
 400fd40:	00bfe034 	movhi	r2,65408
 400fd44:	10bfffc4 	addi	r2,r2,-1
 400fd48:	1886703a 	and	r3,r3,r2
 400fd4c:	880ad07a 	srli	r5,r17,1
 400fd50:	180497fa 	slli	r2,r3,31
 400fd54:	8900004c 	andi	r4,r17,1
 400fd58:	2922b03a 	or	r17,r5,r4
 400fd5c:	1806d07a 	srli	r3,r3,1
 400fd60:	1462b03a 	or	r17,r2,r17
 400fd64:	3825883a 	mov	r18,r7
 400fd68:	003f7106 	br	400fb30 <__ram_exceptions_end+0xfbfef8e8>
 400fd6c:	2984b03a 	or	r2,r5,r6
 400fd70:	103f6826 	beq	r2,zero,400fb14 <__ram_exceptions_end+0xfbfef8cc>
 400fd74:	39c03fcc 	andi	r7,r7,255
 400fd78:	003f6706 	br	400fb18 <__ram_exceptions_end+0xfbfef8d0>
 400fd7c:	4086b03a 	or	r3,r8,r2
 400fd80:	18015226 	beq	r3,zero,40102cc <__subdf3+0x820>
 400fd84:	00c00434 	movhi	r3,16
 400fd88:	41400234 	orhi	r5,r8,8
 400fd8c:	18ffffc4 	addi	r3,r3,-1
 400fd90:	28ca703a 	and	r5,r5,r3
 400fd94:	003f7e06 	br	400fb90 <__ram_exceptions_end+0xfbfef948>
 400fd98:	10bfffc4 	addi	r2,r2,-1
 400fd9c:	1000491e 	bne	r2,zero,400fec4 <__subdf3+0x418>
 400fda0:	898fc83a 	sub	r7,r17,r6
 400fda4:	89e3803a 	cmpltu	r17,r17,r7
 400fda8:	1947c83a 	sub	r3,r3,r5
 400fdac:	1c47c83a 	sub	r3,r3,r17
 400fdb0:	3823883a 	mov	r17,r7
 400fdb4:	003f9b06 	br	400fc24 <__ram_exceptions_end+0xfbfef9dc>
 400fdb8:	2988b03a 	or	r4,r5,r6
 400fdbc:	203f5c26 	beq	r4,zero,400fb30 <__ram_exceptions_end+0xfbfef8e8>
 400fdc0:	10bfffc4 	addi	r2,r2,-1
 400fdc4:	1000931e 	bne	r2,zero,4010014 <__subdf3+0x568>
 400fdc8:	898d883a 	add	r6,r17,r6
 400fdcc:	3463803a 	cmpltu	r17,r6,r17
 400fdd0:	1947883a 	add	r3,r3,r5
 400fdd4:	88c7883a 	add	r3,r17,r3
 400fdd8:	3023883a 	mov	r17,r6
 400fddc:	003fd306 	br	400fd2c <__ram_exceptions_end+0xfbfefae4>
 400fde0:	1000541e 	bne	r2,zero,400ff34 <__subdf3+0x488>
 400fde4:	80800044 	addi	r2,r16,1
 400fde8:	1081ffcc 	andi	r2,r2,2047
 400fdec:	01000044 	movi	r4,1
 400fdf0:	2080a20e 	bge	r4,r2,401007c <__subdf3+0x5d0>
 400fdf4:	8989c83a 	sub	r4,r17,r6
 400fdf8:	8905803a 	cmpltu	r2,r17,r4
 400fdfc:	1967c83a 	sub	r19,r3,r5
 400fe00:	98a7c83a 	sub	r19,r19,r2
 400fe04:	9880202c 	andhi	r2,r19,128
 400fe08:	10006326 	beq	r2,zero,400ff98 <__subdf3+0x4ec>
 400fe0c:	3463c83a 	sub	r17,r6,r17
 400fe10:	28c7c83a 	sub	r3,r5,r3
 400fe14:	344d803a 	cmpltu	r6,r6,r17
 400fe18:	19a7c83a 	sub	r19,r3,r6
 400fe1c:	3825883a 	mov	r18,r7
 400fe20:	983f861e 	bne	r19,zero,400fc3c <__ram_exceptions_end+0xfbfef9f4>
 400fe24:	8809883a 	mov	r4,r17
 400fe28:	40105ac0 	call	40105ac <__clzsi2>
 400fe2c:	10800804 	addi	r2,r2,32
 400fe30:	113ffe04 	addi	r4,r2,-8
 400fe34:	00c007c4 	movi	r3,31
 400fe38:	193f850e 	bge	r3,r4,400fc50 <__ram_exceptions_end+0xfbfefa08>
 400fe3c:	10bff604 	addi	r2,r2,-40
 400fe40:	8884983a 	sll	r2,r17,r2
 400fe44:	0023883a 	mov	r17,zero
 400fe48:	243f880e 	bge	r4,r16,400fc6c <__ram_exceptions_end+0xfbfefa24>
 400fe4c:	00ffe034 	movhi	r3,65408
 400fe50:	18ffffc4 	addi	r3,r3,-1
 400fe54:	8121c83a 	sub	r16,r16,r4
 400fe58:	10c6703a 	and	r3,r2,r3
 400fe5c:	003f3406 	br	400fb30 <__ram_exceptions_end+0xfbfef8e8>
 400fe60:	9100004c 	andi	r4,r18,1
 400fe64:	000b883a 	mov	r5,zero
 400fe68:	0005883a 	mov	r2,zero
 400fe6c:	003f4806 	br	400fb90 <__ram_exceptions_end+0xfbfef948>
 400fe70:	298cb03a 	or	r6,r5,r6
 400fe74:	300cc03a 	cmpne	r6,r6,zero
 400fe78:	0005883a 	mov	r2,zero
 400fe7c:	003f6406 	br	400fc10 <__ram_exceptions_end+0xfbfef9c8>
 400fe80:	10009a1e 	bne	r2,zero,40100ec <__subdf3+0x640>
 400fe84:	82400044 	addi	r9,r16,1
 400fe88:	4881ffcc 	andi	r2,r9,2047
 400fe8c:	02800044 	movi	r10,1
 400fe90:	5080670e 	bge	r10,r2,4010030 <__subdf3+0x584>
 400fe94:	0081ffc4 	movi	r2,2047
 400fe98:	4880af26 	beq	r9,r2,4010158 <__subdf3+0x6ac>
 400fe9c:	898d883a 	add	r6,r17,r6
 400fea0:	1945883a 	add	r2,r3,r5
 400fea4:	3447803a 	cmpltu	r3,r6,r17
 400fea8:	1887883a 	add	r3,r3,r2
 400feac:	182297fa 	slli	r17,r3,31
 400feb0:	300cd07a 	srli	r6,r6,1
 400feb4:	1806d07a 	srli	r3,r3,1
 400feb8:	4821883a 	mov	r16,r9
 400febc:	89a2b03a 	or	r17,r17,r6
 400fec0:	003f1b06 	br	400fb30 <__ram_exceptions_end+0xfbfef8e8>
 400fec4:	0101ffc4 	movi	r4,2047
 400fec8:	813f441e 	bne	r16,r4,400fbdc <__ram_exceptions_end+0xfbfef994>
 400fecc:	003f1806 	br	400fb30 <__ram_exceptions_end+0xfbfef8e8>
 400fed0:	843ff844 	addi	r16,r16,-31
 400fed4:	01400804 	movi	r5,32
 400fed8:	1408d83a 	srl	r4,r2,r16
 400fedc:	19405026 	beq	r3,r5,4010020 <__subdf3+0x574>
 400fee0:	01401004 	movi	r5,64
 400fee4:	28c7c83a 	sub	r3,r5,r3
 400fee8:	10c4983a 	sll	r2,r2,r3
 400feec:	88a2b03a 	or	r17,r17,r2
 400fef0:	8822c03a 	cmpne	r17,r17,zero
 400fef4:	2462b03a 	or	r17,r4,r17
 400fef8:	0007883a 	mov	r3,zero
 400fefc:	0021883a 	mov	r16,zero
 400ff00:	003f6d06 	br	400fcb8 <__ram_exceptions_end+0xfbfefa70>
 400ff04:	11fff804 	addi	r7,r2,-32
 400ff08:	01000804 	movi	r4,32
 400ff0c:	29ced83a 	srl	r7,r5,r7
 400ff10:	11004526 	beq	r2,r4,4010028 <__subdf3+0x57c>
 400ff14:	01001004 	movi	r4,64
 400ff18:	2089c83a 	sub	r4,r4,r2
 400ff1c:	2904983a 	sll	r2,r5,r4
 400ff20:	118cb03a 	or	r6,r2,r6
 400ff24:	300cc03a 	cmpne	r6,r6,zero
 400ff28:	398cb03a 	or	r6,r7,r6
 400ff2c:	0005883a 	mov	r2,zero
 400ff30:	003f3706 	br	400fc10 <__ram_exceptions_end+0xfbfef9c8>
 400ff34:	80002a26 	beq	r16,zero,400ffe0 <__subdf3+0x534>
 400ff38:	0101ffc4 	movi	r4,2047
 400ff3c:	49006626 	beq	r9,r4,40100d8 <__subdf3+0x62c>
 400ff40:	0085c83a 	sub	r2,zero,r2
 400ff44:	18c02034 	orhi	r3,r3,128
 400ff48:	01000e04 	movi	r4,56
 400ff4c:	20807e16 	blt	r4,r2,4010148 <__subdf3+0x69c>
 400ff50:	010007c4 	movi	r4,31
 400ff54:	2080e716 	blt	r4,r2,40102f4 <__subdf3+0x848>
 400ff58:	01000804 	movi	r4,32
 400ff5c:	2089c83a 	sub	r4,r4,r2
 400ff60:	1914983a 	sll	r10,r3,r4
 400ff64:	8890d83a 	srl	r8,r17,r2
 400ff68:	8908983a 	sll	r4,r17,r4
 400ff6c:	1884d83a 	srl	r2,r3,r2
 400ff70:	5222b03a 	or	r17,r10,r8
 400ff74:	2006c03a 	cmpne	r3,r4,zero
 400ff78:	88e2b03a 	or	r17,r17,r3
 400ff7c:	3463c83a 	sub	r17,r6,r17
 400ff80:	2885c83a 	sub	r2,r5,r2
 400ff84:	344d803a 	cmpltu	r6,r6,r17
 400ff88:	1187c83a 	sub	r3,r2,r6
 400ff8c:	4821883a 	mov	r16,r9
 400ff90:	3825883a 	mov	r18,r7
 400ff94:	003f2306 	br	400fc24 <__ram_exceptions_end+0xfbfef9dc>
 400ff98:	24d0b03a 	or	r8,r4,r19
 400ff9c:	40001b1e 	bne	r8,zero,401000c <__subdf3+0x560>
 400ffa0:	0005883a 	mov	r2,zero
 400ffa4:	0009883a 	mov	r4,zero
 400ffa8:	0021883a 	mov	r16,zero
 400ffac:	003f4906 	br	400fcd4 <__ram_exceptions_end+0xfbfefa8c>
 400ffb0:	010007c4 	movi	r4,31
 400ffb4:	20803a16 	blt	r4,r2,40100a0 <__subdf3+0x5f4>
 400ffb8:	01000804 	movi	r4,32
 400ffbc:	2089c83a 	sub	r4,r4,r2
 400ffc0:	2912983a 	sll	r9,r5,r4
 400ffc4:	3090d83a 	srl	r8,r6,r2
 400ffc8:	3108983a 	sll	r4,r6,r4
 400ffcc:	2884d83a 	srl	r2,r5,r2
 400ffd0:	4a12b03a 	or	r9,r9,r8
 400ffd4:	2008c03a 	cmpne	r4,r4,zero
 400ffd8:	4912b03a 	or	r9,r9,r4
 400ffdc:	003f4e06 	br	400fd18 <__ram_exceptions_end+0xfbfefad0>
 400ffe0:	1c48b03a 	or	r4,r3,r17
 400ffe4:	20003c26 	beq	r4,zero,40100d8 <__subdf3+0x62c>
 400ffe8:	0084303a 	nor	r2,zero,r2
 400ffec:	1000381e 	bne	r2,zero,40100d0 <__subdf3+0x624>
 400fff0:	3463c83a 	sub	r17,r6,r17
 400fff4:	28c5c83a 	sub	r2,r5,r3
 400fff8:	344d803a 	cmpltu	r6,r6,r17
 400fffc:	1187c83a 	sub	r3,r2,r6
 4010000:	4821883a 	mov	r16,r9
 4010004:	3825883a 	mov	r18,r7
 4010008:	003f0606 	br	400fc24 <__ram_exceptions_end+0xfbfef9dc>
 401000c:	2023883a 	mov	r17,r4
 4010010:	003f0906 	br	400fc38 <__ram_exceptions_end+0xfbfef9f0>
 4010014:	0101ffc4 	movi	r4,2047
 4010018:	813f3a1e 	bne	r16,r4,400fd04 <__ram_exceptions_end+0xfbfefabc>
 401001c:	003ec406 	br	400fb30 <__ram_exceptions_end+0xfbfef8e8>
 4010020:	0005883a 	mov	r2,zero
 4010024:	003fb106 	br	400feec <__ram_exceptions_end+0xfbfefca4>
 4010028:	0005883a 	mov	r2,zero
 401002c:	003fbc06 	br	400ff20 <__ram_exceptions_end+0xfbfefcd8>
 4010030:	1c44b03a 	or	r2,r3,r17
 4010034:	80008e1e 	bne	r16,zero,4010270 <__subdf3+0x7c4>
 4010038:	1000c826 	beq	r2,zero,401035c <__subdf3+0x8b0>
 401003c:	2984b03a 	or	r2,r5,r6
 4010040:	103ebb26 	beq	r2,zero,400fb30 <__ram_exceptions_end+0xfbfef8e8>
 4010044:	8989883a 	add	r4,r17,r6
 4010048:	1945883a 	add	r2,r3,r5
 401004c:	2447803a 	cmpltu	r3,r4,r17
 4010050:	1887883a 	add	r3,r3,r2
 4010054:	1880202c 	andhi	r2,r3,128
 4010058:	2023883a 	mov	r17,r4
 401005c:	103f1626 	beq	r2,zero,400fcb8 <__ram_exceptions_end+0xfbfefa70>
 4010060:	00bfe034 	movhi	r2,65408
 4010064:	10bfffc4 	addi	r2,r2,-1
 4010068:	5021883a 	mov	r16,r10
 401006c:	1886703a 	and	r3,r3,r2
 4010070:	003eaf06 	br	400fb30 <__ram_exceptions_end+0xfbfef8e8>
 4010074:	3825883a 	mov	r18,r7
 4010078:	003f0f06 	br	400fcb8 <__ram_exceptions_end+0xfbfefa70>
 401007c:	1c44b03a 	or	r2,r3,r17
 4010080:	8000251e 	bne	r16,zero,4010118 <__subdf3+0x66c>
 4010084:	1000661e 	bne	r2,zero,4010220 <__subdf3+0x774>
 4010088:	2990b03a 	or	r8,r5,r6
 401008c:	40009626 	beq	r8,zero,40102e8 <__subdf3+0x83c>
 4010090:	2807883a 	mov	r3,r5
 4010094:	3023883a 	mov	r17,r6
 4010098:	3825883a 	mov	r18,r7
 401009c:	003ea406 	br	400fb30 <__ram_exceptions_end+0xfbfef8e8>
 40100a0:	127ff804 	addi	r9,r2,-32
 40100a4:	01000804 	movi	r4,32
 40100a8:	2a52d83a 	srl	r9,r5,r9
 40100ac:	11008c26 	beq	r2,r4,40102e0 <__subdf3+0x834>
 40100b0:	01001004 	movi	r4,64
 40100b4:	2085c83a 	sub	r2,r4,r2
 40100b8:	2884983a 	sll	r2,r5,r2
 40100bc:	118cb03a 	or	r6,r2,r6
 40100c0:	300cc03a 	cmpne	r6,r6,zero
 40100c4:	4992b03a 	or	r9,r9,r6
 40100c8:	0005883a 	mov	r2,zero
 40100cc:	003f1206 	br	400fd18 <__ram_exceptions_end+0xfbfefad0>
 40100d0:	0101ffc4 	movi	r4,2047
 40100d4:	493f9c1e 	bne	r9,r4,400ff48 <__ram_exceptions_end+0xfbfefd00>
 40100d8:	2807883a 	mov	r3,r5
 40100dc:	3023883a 	mov	r17,r6
 40100e0:	4821883a 	mov	r16,r9
 40100e4:	3825883a 	mov	r18,r7
 40100e8:	003e9106 	br	400fb30 <__ram_exceptions_end+0xfbfef8e8>
 40100ec:	80001f1e 	bne	r16,zero,401016c <__subdf3+0x6c0>
 40100f0:	1c48b03a 	or	r4,r3,r17
 40100f4:	20005a26 	beq	r4,zero,4010260 <__subdf3+0x7b4>
 40100f8:	0084303a 	nor	r2,zero,r2
 40100fc:	1000561e 	bne	r2,zero,4010258 <__subdf3+0x7ac>
 4010100:	89a3883a 	add	r17,r17,r6
 4010104:	1945883a 	add	r2,r3,r5
 4010108:	898d803a 	cmpltu	r6,r17,r6
 401010c:	3087883a 	add	r3,r6,r2
 4010110:	4821883a 	mov	r16,r9
 4010114:	003f0506 	br	400fd2c <__ram_exceptions_end+0xfbfefae4>
 4010118:	10002b1e 	bne	r2,zero,40101c8 <__subdf3+0x71c>
 401011c:	2984b03a 	or	r2,r5,r6
 4010120:	10008026 	beq	r2,zero,4010324 <__subdf3+0x878>
 4010124:	2807883a 	mov	r3,r5
 4010128:	3023883a 	mov	r17,r6
 401012c:	3825883a 	mov	r18,r7
 4010130:	0401ffc4 	movi	r16,2047
 4010134:	003e7e06 	br	400fb30 <__ram_exceptions_end+0xfbfef8e8>
 4010138:	3809883a 	mov	r4,r7
 401013c:	0011883a 	mov	r8,zero
 4010140:	0005883a 	mov	r2,zero
 4010144:	003ee306 	br	400fcd4 <__ram_exceptions_end+0xfbfefa8c>
 4010148:	1c62b03a 	or	r17,r3,r17
 401014c:	8822c03a 	cmpne	r17,r17,zero
 4010150:	0005883a 	mov	r2,zero
 4010154:	003f8906 	br	400ff7c <__ram_exceptions_end+0xfbfefd34>
 4010158:	3809883a 	mov	r4,r7
 401015c:	4821883a 	mov	r16,r9
 4010160:	0011883a 	mov	r8,zero
 4010164:	0005883a 	mov	r2,zero
 4010168:	003eda06 	br	400fcd4 <__ram_exceptions_end+0xfbfefa8c>
 401016c:	0101ffc4 	movi	r4,2047
 4010170:	49003b26 	beq	r9,r4,4010260 <__subdf3+0x7b4>
 4010174:	0085c83a 	sub	r2,zero,r2
 4010178:	18c02034 	orhi	r3,r3,128
 401017c:	01000e04 	movi	r4,56
 4010180:	20806e16 	blt	r4,r2,401033c <__subdf3+0x890>
 4010184:	010007c4 	movi	r4,31
 4010188:	20807716 	blt	r4,r2,4010368 <__subdf3+0x8bc>
 401018c:	01000804 	movi	r4,32
 4010190:	2089c83a 	sub	r4,r4,r2
 4010194:	1914983a 	sll	r10,r3,r4
 4010198:	8890d83a 	srl	r8,r17,r2
 401019c:	8908983a 	sll	r4,r17,r4
 40101a0:	1884d83a 	srl	r2,r3,r2
 40101a4:	5222b03a 	or	r17,r10,r8
 40101a8:	2006c03a 	cmpne	r3,r4,zero
 40101ac:	88e2b03a 	or	r17,r17,r3
 40101b0:	89a3883a 	add	r17,r17,r6
 40101b4:	1145883a 	add	r2,r2,r5
 40101b8:	898d803a 	cmpltu	r6,r17,r6
 40101bc:	3087883a 	add	r3,r6,r2
 40101c0:	4821883a 	mov	r16,r9
 40101c4:	003ed906 	br	400fd2c <__ram_exceptions_end+0xfbfefae4>
 40101c8:	2984b03a 	or	r2,r5,r6
 40101cc:	10004226 	beq	r2,zero,40102d8 <__subdf3+0x82c>
 40101d0:	1808d0fa 	srli	r4,r3,3
 40101d4:	8822d0fa 	srli	r17,r17,3
 40101d8:	1806977a 	slli	r3,r3,29
 40101dc:	2080022c 	andhi	r2,r4,8
 40101e0:	1c62b03a 	or	r17,r3,r17
 40101e4:	10000826 	beq	r2,zero,4010208 <__subdf3+0x75c>
 40101e8:	2812d0fa 	srli	r9,r5,3
 40101ec:	4880022c 	andhi	r2,r9,8
 40101f0:	1000051e 	bne	r2,zero,4010208 <__subdf3+0x75c>
 40101f4:	300cd0fa 	srli	r6,r6,3
 40101f8:	2804977a 	slli	r2,r5,29
 40101fc:	4809883a 	mov	r4,r9
 4010200:	3825883a 	mov	r18,r7
 4010204:	11a2b03a 	or	r17,r2,r6
 4010208:	8806d77a 	srli	r3,r17,29
 401020c:	200890fa 	slli	r4,r4,3
 4010210:	882290fa 	slli	r17,r17,3
 4010214:	0401ffc4 	movi	r16,2047
 4010218:	1906b03a 	or	r3,r3,r4
 401021c:	003e4406 	br	400fb30 <__ram_exceptions_end+0xfbfef8e8>
 4010220:	2984b03a 	or	r2,r5,r6
 4010224:	103e4226 	beq	r2,zero,400fb30 <__ram_exceptions_end+0xfbfef8e8>
 4010228:	8989c83a 	sub	r4,r17,r6
 401022c:	8911803a 	cmpltu	r8,r17,r4
 4010230:	1945c83a 	sub	r2,r3,r5
 4010234:	1205c83a 	sub	r2,r2,r8
 4010238:	1200202c 	andhi	r8,r2,128
 401023c:	403e9a26 	beq	r8,zero,400fca8 <__ram_exceptions_end+0xfbfefa60>
 4010240:	3463c83a 	sub	r17,r6,r17
 4010244:	28c5c83a 	sub	r2,r5,r3
 4010248:	344d803a 	cmpltu	r6,r6,r17
 401024c:	1187c83a 	sub	r3,r2,r6
 4010250:	3825883a 	mov	r18,r7
 4010254:	003e3606 	br	400fb30 <__ram_exceptions_end+0xfbfef8e8>
 4010258:	0101ffc4 	movi	r4,2047
 401025c:	493fc71e 	bne	r9,r4,401017c <__ram_exceptions_end+0xfbfeff34>
 4010260:	2807883a 	mov	r3,r5
 4010264:	3023883a 	mov	r17,r6
 4010268:	4821883a 	mov	r16,r9
 401026c:	003e3006 	br	400fb30 <__ram_exceptions_end+0xfbfef8e8>
 4010270:	10003626 	beq	r2,zero,401034c <__subdf3+0x8a0>
 4010274:	2984b03a 	or	r2,r5,r6
 4010278:	10001726 	beq	r2,zero,40102d8 <__subdf3+0x82c>
 401027c:	1808d0fa 	srli	r4,r3,3
 4010280:	8822d0fa 	srli	r17,r17,3
 4010284:	1806977a 	slli	r3,r3,29
 4010288:	2080022c 	andhi	r2,r4,8
 401028c:	1c62b03a 	or	r17,r3,r17
 4010290:	10000726 	beq	r2,zero,40102b0 <__subdf3+0x804>
 4010294:	2812d0fa 	srli	r9,r5,3
 4010298:	4880022c 	andhi	r2,r9,8
 401029c:	1000041e 	bne	r2,zero,40102b0 <__subdf3+0x804>
 40102a0:	300cd0fa 	srli	r6,r6,3
 40102a4:	2804977a 	slli	r2,r5,29
 40102a8:	4809883a 	mov	r4,r9
 40102ac:	11a2b03a 	or	r17,r2,r6
 40102b0:	8806d77a 	srli	r3,r17,29
 40102b4:	200890fa 	slli	r4,r4,3
 40102b8:	882290fa 	slli	r17,r17,3
 40102bc:	3825883a 	mov	r18,r7
 40102c0:	1906b03a 	or	r3,r3,r4
 40102c4:	0401ffc4 	movi	r16,2047
 40102c8:	003e1906 	br	400fb30 <__ram_exceptions_end+0xfbfef8e8>
 40102cc:	000b883a 	mov	r5,zero
 40102d0:	0005883a 	mov	r2,zero
 40102d4:	003e2e06 	br	400fb90 <__ram_exceptions_end+0xfbfef948>
 40102d8:	0401ffc4 	movi	r16,2047
 40102dc:	003e1406 	br	400fb30 <__ram_exceptions_end+0xfbfef8e8>
 40102e0:	0005883a 	mov	r2,zero
 40102e4:	003f7506 	br	40100bc <__ram_exceptions_end+0xfbfefe74>
 40102e8:	0005883a 	mov	r2,zero
 40102ec:	0009883a 	mov	r4,zero
 40102f0:	003e7806 	br	400fcd4 <__ram_exceptions_end+0xfbfefa8c>
 40102f4:	123ff804 	addi	r8,r2,-32
 40102f8:	01000804 	movi	r4,32
 40102fc:	1a10d83a 	srl	r8,r3,r8
 4010300:	11002526 	beq	r2,r4,4010398 <__subdf3+0x8ec>
 4010304:	01001004 	movi	r4,64
 4010308:	2085c83a 	sub	r2,r4,r2
 401030c:	1884983a 	sll	r2,r3,r2
 4010310:	1444b03a 	or	r2,r2,r17
 4010314:	1004c03a 	cmpne	r2,r2,zero
 4010318:	40a2b03a 	or	r17,r8,r2
 401031c:	0005883a 	mov	r2,zero
 4010320:	003f1606 	br	400ff7c <__ram_exceptions_end+0xfbfefd34>
 4010324:	02000434 	movhi	r8,16
 4010328:	0009883a 	mov	r4,zero
 401032c:	423fffc4 	addi	r8,r8,-1
 4010330:	00bfffc4 	movi	r2,-1
 4010334:	0401ffc4 	movi	r16,2047
 4010338:	003e6606 	br	400fcd4 <__ram_exceptions_end+0xfbfefa8c>
 401033c:	1c62b03a 	or	r17,r3,r17
 4010340:	8822c03a 	cmpne	r17,r17,zero
 4010344:	0005883a 	mov	r2,zero
 4010348:	003f9906 	br	40101b0 <__ram_exceptions_end+0xfbfeff68>
 401034c:	2807883a 	mov	r3,r5
 4010350:	3023883a 	mov	r17,r6
 4010354:	0401ffc4 	movi	r16,2047
 4010358:	003df506 	br	400fb30 <__ram_exceptions_end+0xfbfef8e8>
 401035c:	2807883a 	mov	r3,r5
 4010360:	3023883a 	mov	r17,r6
 4010364:	003df206 	br	400fb30 <__ram_exceptions_end+0xfbfef8e8>
 4010368:	123ff804 	addi	r8,r2,-32
 401036c:	01000804 	movi	r4,32
 4010370:	1a10d83a 	srl	r8,r3,r8
 4010374:	11000a26 	beq	r2,r4,40103a0 <__subdf3+0x8f4>
 4010378:	01001004 	movi	r4,64
 401037c:	2085c83a 	sub	r2,r4,r2
 4010380:	1884983a 	sll	r2,r3,r2
 4010384:	1444b03a 	or	r2,r2,r17
 4010388:	1004c03a 	cmpne	r2,r2,zero
 401038c:	40a2b03a 	or	r17,r8,r2
 4010390:	0005883a 	mov	r2,zero
 4010394:	003f8606 	br	40101b0 <__ram_exceptions_end+0xfbfeff68>
 4010398:	0005883a 	mov	r2,zero
 401039c:	003fdc06 	br	4010310 <__ram_exceptions_end+0xfbff00c8>
 40103a0:	0005883a 	mov	r2,zero
 40103a4:	003ff706 	br	4010384 <__ram_exceptions_end+0xfbff013c>

040103a8 <__fixdfsi>:
 40103a8:	280cd53a 	srli	r6,r5,20
 40103ac:	00c00434 	movhi	r3,16
 40103b0:	18ffffc4 	addi	r3,r3,-1
 40103b4:	3181ffcc 	andi	r6,r6,2047
 40103b8:	01c0ff84 	movi	r7,1022
 40103bc:	28c6703a 	and	r3,r5,r3
 40103c0:	280ad7fa 	srli	r5,r5,31
 40103c4:	3980120e 	bge	r7,r6,4010410 <__fixdfsi+0x68>
 40103c8:	00810744 	movi	r2,1053
 40103cc:	11800c16 	blt	r2,r6,4010400 <__fixdfsi+0x58>
 40103d0:	00810cc4 	movi	r2,1075
 40103d4:	1185c83a 	sub	r2,r2,r6
 40103d8:	01c007c4 	movi	r7,31
 40103dc:	18c00434 	orhi	r3,r3,16
 40103e0:	38800d16 	blt	r7,r2,4010418 <__fixdfsi+0x70>
 40103e4:	31befb44 	addi	r6,r6,-1043
 40103e8:	2084d83a 	srl	r2,r4,r2
 40103ec:	1986983a 	sll	r3,r3,r6
 40103f0:	1884b03a 	or	r2,r3,r2
 40103f4:	28000726 	beq	r5,zero,4010414 <__fixdfsi+0x6c>
 40103f8:	0085c83a 	sub	r2,zero,r2
 40103fc:	f800283a 	ret
 4010400:	00a00034 	movhi	r2,32768
 4010404:	10bfffc4 	addi	r2,r2,-1
 4010408:	2885883a 	add	r2,r5,r2
 401040c:	f800283a 	ret
 4010410:	0005883a 	mov	r2,zero
 4010414:	f800283a 	ret
 4010418:	008104c4 	movi	r2,1043
 401041c:	1185c83a 	sub	r2,r2,r6
 4010420:	1884d83a 	srl	r2,r3,r2
 4010424:	003ff306 	br	40103f4 <__ram_exceptions_end+0xfbff01ac>

04010428 <__floatsidf>:
 4010428:	defffd04 	addi	sp,sp,-12
 401042c:	dfc00215 	stw	ra,8(sp)
 4010430:	dc400115 	stw	r17,4(sp)
 4010434:	dc000015 	stw	r16,0(sp)
 4010438:	20002b26 	beq	r4,zero,40104e8 <__floatsidf+0xc0>
 401043c:	2023883a 	mov	r17,r4
 4010440:	2020d7fa 	srli	r16,r4,31
 4010444:	20002d16 	blt	r4,zero,40104fc <__floatsidf+0xd4>
 4010448:	8809883a 	mov	r4,r17
 401044c:	40105ac0 	call	40105ac <__clzsi2>
 4010450:	01410784 	movi	r5,1054
 4010454:	288bc83a 	sub	r5,r5,r2
 4010458:	01010cc4 	movi	r4,1075
 401045c:	2149c83a 	sub	r4,r4,r5
 4010460:	00c007c4 	movi	r3,31
 4010464:	1900160e 	bge	r3,r4,40104c0 <__floatsidf+0x98>
 4010468:	00c104c4 	movi	r3,1043
 401046c:	1947c83a 	sub	r3,r3,r5
 4010470:	88c6983a 	sll	r3,r17,r3
 4010474:	00800434 	movhi	r2,16
 4010478:	10bfffc4 	addi	r2,r2,-1
 401047c:	1886703a 	and	r3,r3,r2
 4010480:	2941ffcc 	andi	r5,r5,2047
 4010484:	800d883a 	mov	r6,r16
 4010488:	0005883a 	mov	r2,zero
 401048c:	280a953a 	slli	r5,r5,20
 4010490:	31803fcc 	andi	r6,r6,255
 4010494:	01000434 	movhi	r4,16
 4010498:	300c97fa 	slli	r6,r6,31
 401049c:	213fffc4 	addi	r4,r4,-1
 40104a0:	1906703a 	and	r3,r3,r4
 40104a4:	1946b03a 	or	r3,r3,r5
 40104a8:	1986b03a 	or	r3,r3,r6
 40104ac:	dfc00217 	ldw	ra,8(sp)
 40104b0:	dc400117 	ldw	r17,4(sp)
 40104b4:	dc000017 	ldw	r16,0(sp)
 40104b8:	dec00304 	addi	sp,sp,12
 40104bc:	f800283a 	ret
 40104c0:	00c002c4 	movi	r3,11
 40104c4:	1887c83a 	sub	r3,r3,r2
 40104c8:	88c6d83a 	srl	r3,r17,r3
 40104cc:	8904983a 	sll	r2,r17,r4
 40104d0:	01000434 	movhi	r4,16
 40104d4:	213fffc4 	addi	r4,r4,-1
 40104d8:	2941ffcc 	andi	r5,r5,2047
 40104dc:	1906703a 	and	r3,r3,r4
 40104e0:	800d883a 	mov	r6,r16
 40104e4:	003fe906 	br	401048c <__ram_exceptions_end+0xfbff0244>
 40104e8:	000d883a 	mov	r6,zero
 40104ec:	000b883a 	mov	r5,zero
 40104f0:	0007883a 	mov	r3,zero
 40104f4:	0005883a 	mov	r2,zero
 40104f8:	003fe406 	br	401048c <__ram_exceptions_end+0xfbff0244>
 40104fc:	0123c83a 	sub	r17,zero,r4
 4010500:	003fd106 	br	4010448 <__ram_exceptions_end+0xfbff0200>

04010504 <__floatunsidf>:
 4010504:	defffe04 	addi	sp,sp,-8
 4010508:	dc000015 	stw	r16,0(sp)
 401050c:	dfc00115 	stw	ra,4(sp)
 4010510:	2021883a 	mov	r16,r4
 4010514:	20002226 	beq	r4,zero,40105a0 <__floatunsidf+0x9c>
 4010518:	40105ac0 	call	40105ac <__clzsi2>
 401051c:	01010784 	movi	r4,1054
 4010520:	2089c83a 	sub	r4,r4,r2
 4010524:	01810cc4 	movi	r6,1075
 4010528:	310dc83a 	sub	r6,r6,r4
 401052c:	00c007c4 	movi	r3,31
 4010530:	1980120e 	bge	r3,r6,401057c <__floatunsidf+0x78>
 4010534:	00c104c4 	movi	r3,1043
 4010538:	1907c83a 	sub	r3,r3,r4
 401053c:	80ca983a 	sll	r5,r16,r3
 4010540:	00800434 	movhi	r2,16
 4010544:	10bfffc4 	addi	r2,r2,-1
 4010548:	2101ffcc 	andi	r4,r4,2047
 401054c:	0021883a 	mov	r16,zero
 4010550:	288a703a 	and	r5,r5,r2
 4010554:	2008953a 	slli	r4,r4,20
 4010558:	00c00434 	movhi	r3,16
 401055c:	18ffffc4 	addi	r3,r3,-1
 4010560:	28c6703a 	and	r3,r5,r3
 4010564:	8005883a 	mov	r2,r16
 4010568:	1906b03a 	or	r3,r3,r4
 401056c:	dfc00117 	ldw	ra,4(sp)
 4010570:	dc000017 	ldw	r16,0(sp)
 4010574:	dec00204 	addi	sp,sp,8
 4010578:	f800283a 	ret
 401057c:	00c002c4 	movi	r3,11
 4010580:	188bc83a 	sub	r5,r3,r2
 4010584:	814ad83a 	srl	r5,r16,r5
 4010588:	00c00434 	movhi	r3,16
 401058c:	18ffffc4 	addi	r3,r3,-1
 4010590:	81a0983a 	sll	r16,r16,r6
 4010594:	2101ffcc 	andi	r4,r4,2047
 4010598:	28ca703a 	and	r5,r5,r3
 401059c:	003fed06 	br	4010554 <__ram_exceptions_end+0xfbff030c>
 40105a0:	0009883a 	mov	r4,zero
 40105a4:	000b883a 	mov	r5,zero
 40105a8:	003fea06 	br	4010554 <__ram_exceptions_end+0xfbff030c>

040105ac <__clzsi2>:
 40105ac:	00bfffd4 	movui	r2,65535
 40105b0:	11000536 	bltu	r2,r4,40105c8 <__clzsi2+0x1c>
 40105b4:	00803fc4 	movi	r2,255
 40105b8:	11000f36 	bltu	r2,r4,40105f8 <__clzsi2+0x4c>
 40105bc:	00800804 	movi	r2,32
 40105c0:	0007883a 	mov	r3,zero
 40105c4:	00000506 	br	40105dc <__clzsi2+0x30>
 40105c8:	00804034 	movhi	r2,256
 40105cc:	10bfffc4 	addi	r2,r2,-1
 40105d0:	11000c2e 	bgeu	r2,r4,4010604 <__clzsi2+0x58>
 40105d4:	00800204 	movi	r2,8
 40105d8:	00c00604 	movi	r3,24
 40105dc:	20c8d83a 	srl	r4,r4,r3
 40105e0:	00c10074 	movhi	r3,1025
 40105e4:	18d28604 	addi	r3,r3,18968
 40105e8:	1909883a 	add	r4,r3,r4
 40105ec:	20c00003 	ldbu	r3,0(r4)
 40105f0:	10c5c83a 	sub	r2,r2,r3
 40105f4:	f800283a 	ret
 40105f8:	00800604 	movi	r2,24
 40105fc:	00c00204 	movi	r3,8
 4010600:	003ff606 	br	40105dc <__ram_exceptions_end+0xfbff0394>
 4010604:	00800404 	movi	r2,16
 4010608:	1007883a 	mov	r3,r2
 401060c:	003ff306 	br	40105dc <__ram_exceptions_end+0xfbff0394>

04010610 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 4010610:	defffe04 	addi	sp,sp,-8
 4010614:	dfc00115 	stw	ra,4(sp)
 4010618:	df000015 	stw	fp,0(sp)
 401061c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 4010620:	d0a00c17 	ldw	r2,-32720(gp)
 4010624:	10000326 	beq	r2,zero,4010634 <alt_get_errno+0x24>
 4010628:	d0a00c17 	ldw	r2,-32720(gp)
 401062c:	103ee83a 	callr	r2
 4010630:	00000106 	br	4010638 <alt_get_errno+0x28>
 4010634:	d0a73f04 	addi	r2,gp,-25348
}
 4010638:	e037883a 	mov	sp,fp
 401063c:	dfc00117 	ldw	ra,4(sp)
 4010640:	df000017 	ldw	fp,0(sp)
 4010644:	dec00204 	addi	sp,sp,8
 4010648:	f800283a 	ret

0401064c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 401064c:	defffb04 	addi	sp,sp,-20
 4010650:	dfc00415 	stw	ra,16(sp)
 4010654:	df000315 	stw	fp,12(sp)
 4010658:	df000304 	addi	fp,sp,12
 401065c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 4010660:	e0bfff17 	ldw	r2,-4(fp)
 4010664:	10000616 	blt	r2,zero,4010680 <close+0x34>
 4010668:	e0bfff17 	ldw	r2,-4(fp)
 401066c:	10c00324 	muli	r3,r2,12
 4010670:	00810074 	movhi	r2,1025
 4010674:	10953d04 	addi	r2,r2,21748
 4010678:	1885883a 	add	r2,r3,r2
 401067c:	00000106 	br	4010684 <close+0x38>
 4010680:	0005883a 	mov	r2,zero
 4010684:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 4010688:	e0bffd17 	ldw	r2,-12(fp)
 401068c:	10001926 	beq	r2,zero,40106f4 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 4010690:	e0bffd17 	ldw	r2,-12(fp)
 4010694:	10800017 	ldw	r2,0(r2)
 4010698:	10800417 	ldw	r2,16(r2)
 401069c:	10000626 	beq	r2,zero,40106b8 <close+0x6c>
 40106a0:	e0bffd17 	ldw	r2,-12(fp)
 40106a4:	10800017 	ldw	r2,0(r2)
 40106a8:	10800417 	ldw	r2,16(r2)
 40106ac:	e13ffd17 	ldw	r4,-12(fp)
 40106b0:	103ee83a 	callr	r2
 40106b4:	00000106 	br	40106bc <close+0x70>
 40106b8:	0005883a 	mov	r2,zero
 40106bc:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 40106c0:	e13fff17 	ldw	r4,-4(fp)
 40106c4:	4010d0c0 	call	4010d0c <alt_release_fd>
    if (rval < 0)
 40106c8:	e0bffe17 	ldw	r2,-8(fp)
 40106cc:	1000070e 	bge	r2,zero,40106ec <close+0xa0>
    {
      ALT_ERRNO = -rval;
 40106d0:	40106100 	call	4010610 <alt_get_errno>
 40106d4:	1007883a 	mov	r3,r2
 40106d8:	e0bffe17 	ldw	r2,-8(fp)
 40106dc:	0085c83a 	sub	r2,zero,r2
 40106e0:	18800015 	stw	r2,0(r3)
      return -1;
 40106e4:	00bfffc4 	movi	r2,-1
 40106e8:	00000706 	br	4010708 <close+0xbc>
    }
    return 0;
 40106ec:	0005883a 	mov	r2,zero
 40106f0:	00000506 	br	4010708 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 40106f4:	40106100 	call	4010610 <alt_get_errno>
 40106f8:	1007883a 	mov	r3,r2
 40106fc:	00801444 	movi	r2,81
 4010700:	18800015 	stw	r2,0(r3)
    return -1;
 4010704:	00bfffc4 	movi	r2,-1
  }
}
 4010708:	e037883a 	mov	sp,fp
 401070c:	dfc00117 	ldw	ra,4(sp)
 4010710:	df000017 	ldw	fp,0(sp)
 4010714:	dec00204 	addi	sp,sp,8
 4010718:	f800283a 	ret

0401071c <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 401071c:	defffc04 	addi	sp,sp,-16
 4010720:	df000315 	stw	fp,12(sp)
 4010724:	df000304 	addi	fp,sp,12
 4010728:	e13ffd15 	stw	r4,-12(fp)
 401072c:	e17ffe15 	stw	r5,-8(fp)
 4010730:	e1bfff15 	stw	r6,-4(fp)
  return len;
 4010734:	e0bfff17 	ldw	r2,-4(fp)
}
 4010738:	e037883a 	mov	sp,fp
 401073c:	df000017 	ldw	fp,0(sp)
 4010740:	dec00104 	addi	sp,sp,4
 4010744:	f800283a 	ret

04010748 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 4010748:	defffe04 	addi	sp,sp,-8
 401074c:	dfc00115 	stw	ra,4(sp)
 4010750:	df000015 	stw	fp,0(sp)
 4010754:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 4010758:	d0a00c17 	ldw	r2,-32720(gp)
 401075c:	10000326 	beq	r2,zero,401076c <alt_get_errno+0x24>
 4010760:	d0a00c17 	ldw	r2,-32720(gp)
 4010764:	103ee83a 	callr	r2
 4010768:	00000106 	br	4010770 <alt_get_errno+0x28>
 401076c:	d0a73f04 	addi	r2,gp,-25348
}
 4010770:	e037883a 	mov	sp,fp
 4010774:	dfc00117 	ldw	ra,4(sp)
 4010778:	df000017 	ldw	fp,0(sp)
 401077c:	dec00204 	addi	sp,sp,8
 4010780:	f800283a 	ret

04010784 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 4010784:	defffb04 	addi	sp,sp,-20
 4010788:	dfc00415 	stw	ra,16(sp)
 401078c:	df000315 	stw	fp,12(sp)
 4010790:	df000304 	addi	fp,sp,12
 4010794:	e13ffe15 	stw	r4,-8(fp)
 4010798:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 401079c:	e0bffe17 	ldw	r2,-8(fp)
 40107a0:	10000616 	blt	r2,zero,40107bc <fstat+0x38>
 40107a4:	e0bffe17 	ldw	r2,-8(fp)
 40107a8:	10c00324 	muli	r3,r2,12
 40107ac:	00810074 	movhi	r2,1025
 40107b0:	10953d04 	addi	r2,r2,21748
 40107b4:	1885883a 	add	r2,r3,r2
 40107b8:	00000106 	br	40107c0 <fstat+0x3c>
 40107bc:	0005883a 	mov	r2,zero
 40107c0:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 40107c4:	e0bffd17 	ldw	r2,-12(fp)
 40107c8:	10001026 	beq	r2,zero,401080c <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 40107cc:	e0bffd17 	ldw	r2,-12(fp)
 40107d0:	10800017 	ldw	r2,0(r2)
 40107d4:	10800817 	ldw	r2,32(r2)
 40107d8:	10000726 	beq	r2,zero,40107f8 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
 40107dc:	e0bffd17 	ldw	r2,-12(fp)
 40107e0:	10800017 	ldw	r2,0(r2)
 40107e4:	10800817 	ldw	r2,32(r2)
 40107e8:	e17fff17 	ldw	r5,-4(fp)
 40107ec:	e13ffd17 	ldw	r4,-12(fp)
 40107f0:	103ee83a 	callr	r2
 40107f4:	00000a06 	br	4010820 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 40107f8:	e0bfff17 	ldw	r2,-4(fp)
 40107fc:	00c80004 	movi	r3,8192
 4010800:	10c00115 	stw	r3,4(r2)
      return 0;
 4010804:	0005883a 	mov	r2,zero
 4010808:	00000506 	br	4010820 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 401080c:	40107480 	call	4010748 <alt_get_errno>
 4010810:	1007883a 	mov	r3,r2
 4010814:	00801444 	movi	r2,81
 4010818:	18800015 	stw	r2,0(r3)
    return -1;
 401081c:	00bfffc4 	movi	r2,-1
  }
}
 4010820:	e037883a 	mov	sp,fp
 4010824:	dfc00117 	ldw	ra,4(sp)
 4010828:	df000017 	ldw	fp,0(sp)
 401082c:	dec00204 	addi	sp,sp,8
 4010830:	f800283a 	ret

04010834 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 4010834:	defffe04 	addi	sp,sp,-8
 4010838:	dfc00115 	stw	ra,4(sp)
 401083c:	df000015 	stw	fp,0(sp)
 4010840:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 4010844:	d0a00c17 	ldw	r2,-32720(gp)
 4010848:	10000326 	beq	r2,zero,4010858 <alt_get_errno+0x24>
 401084c:	d0a00c17 	ldw	r2,-32720(gp)
 4010850:	103ee83a 	callr	r2
 4010854:	00000106 	br	401085c <alt_get_errno+0x28>
 4010858:	d0a73f04 	addi	r2,gp,-25348
}
 401085c:	e037883a 	mov	sp,fp
 4010860:	dfc00117 	ldw	ra,4(sp)
 4010864:	df000017 	ldw	fp,0(sp)
 4010868:	dec00204 	addi	sp,sp,8
 401086c:	f800283a 	ret

04010870 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 4010870:	deffed04 	addi	sp,sp,-76
 4010874:	dfc01215 	stw	ra,72(sp)
 4010878:	df001115 	stw	fp,68(sp)
 401087c:	df001104 	addi	fp,sp,68
 4010880:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 4010884:	e0bfff17 	ldw	r2,-4(fp)
 4010888:	10000616 	blt	r2,zero,40108a4 <isatty+0x34>
 401088c:	e0bfff17 	ldw	r2,-4(fp)
 4010890:	10c00324 	muli	r3,r2,12
 4010894:	00810074 	movhi	r2,1025
 4010898:	10953d04 	addi	r2,r2,21748
 401089c:	1885883a 	add	r2,r3,r2
 40108a0:	00000106 	br	40108a8 <isatty+0x38>
 40108a4:	0005883a 	mov	r2,zero
 40108a8:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 40108ac:	e0bfef17 	ldw	r2,-68(fp)
 40108b0:	10000e26 	beq	r2,zero,40108ec <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 40108b4:	e0bfef17 	ldw	r2,-68(fp)
 40108b8:	10800017 	ldw	r2,0(r2)
 40108bc:	10800817 	ldw	r2,32(r2)
 40108c0:	1000021e 	bne	r2,zero,40108cc <isatty+0x5c>
    {
      return 1;
 40108c4:	00800044 	movi	r2,1
 40108c8:	00000d06 	br	4010900 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 40108cc:	e0bff004 	addi	r2,fp,-64
 40108d0:	100b883a 	mov	r5,r2
 40108d4:	e13fff17 	ldw	r4,-4(fp)
 40108d8:	40107840 	call	4010784 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 40108dc:	e0bff117 	ldw	r2,-60(fp)
 40108e0:	10880020 	cmpeqi	r2,r2,8192
 40108e4:	10803fcc 	andi	r2,r2,255
 40108e8:	00000506 	br	4010900 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 40108ec:	40108340 	call	4010834 <alt_get_errno>
 40108f0:	1007883a 	mov	r3,r2
 40108f4:	00801444 	movi	r2,81
 40108f8:	18800015 	stw	r2,0(r3)
    return 0;
 40108fc:	0005883a 	mov	r2,zero
  }
}
 4010900:	e037883a 	mov	sp,fp
 4010904:	dfc00117 	ldw	ra,4(sp)
 4010908:	df000017 	ldw	fp,0(sp)
 401090c:	dec00204 	addi	sp,sp,8
 4010910:	f800283a 	ret

04010914 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 4010914:	defffc04 	addi	sp,sp,-16
 4010918:	df000315 	stw	fp,12(sp)
 401091c:	df000304 	addi	fp,sp,12
 4010920:	e13ffd15 	stw	r4,-12(fp)
 4010924:	e17ffe15 	stw	r5,-8(fp)
 4010928:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 401092c:	e0fffe17 	ldw	r3,-8(fp)
 4010930:	e0bffd17 	ldw	r2,-12(fp)
 4010934:	18800c26 	beq	r3,r2,4010968 <alt_load_section+0x54>
  {
    while( to != end )
 4010938:	00000806 	br	401095c <alt_load_section+0x48>
    {
      *to++ = *from++;
 401093c:	e0bffe17 	ldw	r2,-8(fp)
 4010940:	10c00104 	addi	r3,r2,4
 4010944:	e0fffe15 	stw	r3,-8(fp)
 4010948:	e0fffd17 	ldw	r3,-12(fp)
 401094c:	19000104 	addi	r4,r3,4
 4010950:	e13ffd15 	stw	r4,-12(fp)
 4010954:	18c00017 	ldw	r3,0(r3)
 4010958:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 401095c:	e0fffe17 	ldw	r3,-8(fp)
 4010960:	e0bfff17 	ldw	r2,-4(fp)
 4010964:	18bff51e 	bne	r3,r2,401093c <__ram_exceptions_end+0xfbff06f4>
    {
      *to++ = *from++;
    }
  }
}
 4010968:	0001883a 	nop
 401096c:	e037883a 	mov	sp,fp
 4010970:	df000017 	ldw	fp,0(sp)
 4010974:	dec00104 	addi	sp,sp,4
 4010978:	f800283a 	ret

0401097c <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 401097c:	defffe04 	addi	sp,sp,-8
 4010980:	dfc00115 	stw	ra,4(sp)
 4010984:	df000015 	stw	fp,0(sp)
 4010988:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 401098c:	01810074 	movhi	r6,1025
 4010990:	319a1504 	addi	r6,r6,26708
 4010994:	01410074 	movhi	r5,1025
 4010998:	2952f404 	addi	r5,r5,19408
 401099c:	01010074 	movhi	r4,1025
 40109a0:	211a1504 	addi	r4,r4,26708
 40109a4:	40109140 	call	4010914 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 40109a8:	018200b4 	movhi	r6,2050
 40109ac:	31809204 	addi	r6,r6,584
 40109b0:	014200b4 	movhi	r5,2050
 40109b4:	29400804 	addi	r5,r5,32
 40109b8:	010200b4 	movhi	r4,2050
 40109bc:	21000804 	addi	r4,r4,32
 40109c0:	40109140 	call	4010914 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 40109c4:	01810074 	movhi	r6,1025
 40109c8:	3192f404 	addi	r6,r6,19408
 40109cc:	01410074 	movhi	r5,1025
 40109d0:	2951b204 	addi	r5,r5,18120
 40109d4:	01010074 	movhi	r4,1025
 40109d8:	2111b204 	addi	r4,r4,18120
 40109dc:	40109140 	call	4010914 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 40109e0:	40136d40 	call	40136d4 <alt_dcache_flush_all>
  alt_icache_flush_all();
 40109e4:	401394c0 	call	401394c <alt_icache_flush_all>
}
 40109e8:	0001883a 	nop
 40109ec:	e037883a 	mov	sp,fp
 40109f0:	dfc00117 	ldw	ra,4(sp)
 40109f4:	df000017 	ldw	fp,0(sp)
 40109f8:	dec00204 	addi	sp,sp,8
 40109fc:	f800283a 	ret

04010a00 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 4010a00:	defffe04 	addi	sp,sp,-8
 4010a04:	dfc00115 	stw	ra,4(sp)
 4010a08:	df000015 	stw	fp,0(sp)
 4010a0c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 4010a10:	d0a00c17 	ldw	r2,-32720(gp)
 4010a14:	10000326 	beq	r2,zero,4010a24 <alt_get_errno+0x24>
 4010a18:	d0a00c17 	ldw	r2,-32720(gp)
 4010a1c:	103ee83a 	callr	r2
 4010a20:	00000106 	br	4010a28 <alt_get_errno+0x28>
 4010a24:	d0a73f04 	addi	r2,gp,-25348
}
 4010a28:	e037883a 	mov	sp,fp
 4010a2c:	dfc00117 	ldw	ra,4(sp)
 4010a30:	df000017 	ldw	fp,0(sp)
 4010a34:	dec00204 	addi	sp,sp,8
 4010a38:	f800283a 	ret

04010a3c <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 4010a3c:	defff904 	addi	sp,sp,-28
 4010a40:	dfc00615 	stw	ra,24(sp)
 4010a44:	df000515 	stw	fp,20(sp)
 4010a48:	df000504 	addi	fp,sp,20
 4010a4c:	e13ffd15 	stw	r4,-12(fp)
 4010a50:	e17ffe15 	stw	r5,-8(fp)
 4010a54:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 4010a58:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 4010a5c:	e0bffd17 	ldw	r2,-12(fp)
 4010a60:	10000616 	blt	r2,zero,4010a7c <lseek+0x40>
 4010a64:	e0bffd17 	ldw	r2,-12(fp)
 4010a68:	10c00324 	muli	r3,r2,12
 4010a6c:	00810074 	movhi	r2,1025
 4010a70:	10953d04 	addi	r2,r2,21748
 4010a74:	1885883a 	add	r2,r3,r2
 4010a78:	00000106 	br	4010a80 <lseek+0x44>
 4010a7c:	0005883a 	mov	r2,zero
 4010a80:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 4010a84:	e0bffc17 	ldw	r2,-16(fp)
 4010a88:	10001026 	beq	r2,zero,4010acc <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 4010a8c:	e0bffc17 	ldw	r2,-16(fp)
 4010a90:	10800017 	ldw	r2,0(r2)
 4010a94:	10800717 	ldw	r2,28(r2)
 4010a98:	10000926 	beq	r2,zero,4010ac0 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 4010a9c:	e0bffc17 	ldw	r2,-16(fp)
 4010aa0:	10800017 	ldw	r2,0(r2)
 4010aa4:	10800717 	ldw	r2,28(r2)
 4010aa8:	e1bfff17 	ldw	r6,-4(fp)
 4010aac:	e17ffe17 	ldw	r5,-8(fp)
 4010ab0:	e13ffc17 	ldw	r4,-16(fp)
 4010ab4:	103ee83a 	callr	r2
 4010ab8:	e0bffb15 	stw	r2,-20(fp)
 4010abc:	00000506 	br	4010ad4 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 4010ac0:	00bfde84 	movi	r2,-134
 4010ac4:	e0bffb15 	stw	r2,-20(fp)
 4010ac8:	00000206 	br	4010ad4 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
 4010acc:	00bfebc4 	movi	r2,-81
 4010ad0:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 4010ad4:	e0bffb17 	ldw	r2,-20(fp)
 4010ad8:	1000070e 	bge	r2,zero,4010af8 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
 4010adc:	4010a000 	call	4010a00 <alt_get_errno>
 4010ae0:	1007883a 	mov	r3,r2
 4010ae4:	e0bffb17 	ldw	r2,-20(fp)
 4010ae8:	0085c83a 	sub	r2,zero,r2
 4010aec:	18800015 	stw	r2,0(r3)
    rc = -1;
 4010af0:	00bfffc4 	movi	r2,-1
 4010af4:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 4010af8:	e0bffb17 	ldw	r2,-20(fp)
}
 4010afc:	e037883a 	mov	sp,fp
 4010b00:	dfc00117 	ldw	ra,4(sp)
 4010b04:	df000017 	ldw	fp,0(sp)
 4010b08:	dec00204 	addi	sp,sp,8
 4010b0c:	f800283a 	ret

04010b10 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 4010b10:	defffd04 	addi	sp,sp,-12
 4010b14:	dfc00215 	stw	ra,8(sp)
 4010b18:	df000115 	stw	fp,4(sp)
 4010b1c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 4010b20:	0009883a 	mov	r4,zero
 4010b24:	4010fb80 	call	4010fb8 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 4010b28:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 4010b2c:	4010ff00 	call	4010ff0 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 4010b30:	01810074 	movhi	r6,1025
 4010b34:	3192c904 	addi	r6,r6,19236
 4010b38:	01410074 	movhi	r5,1025
 4010b3c:	2952c904 	addi	r5,r5,19236
 4010b40:	01010074 	movhi	r4,1025
 4010b44:	2112c904 	addi	r4,r4,19236
 4010b48:	4013a440 	call	4013a44 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 4010b4c:	40137fc0 	call	40137fc <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 4010b50:	01010074 	movhi	r4,1025
 4010b54:	210e1704 	addi	r4,r4,14428
 4010b58:	40143340 	call	4014334 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 4010b5c:	d0a74017 	ldw	r2,-25344(gp)
 4010b60:	d0e74117 	ldw	r3,-25340(gp)
 4010b64:	d1274217 	ldw	r4,-25336(gp)
 4010b68:	200d883a 	mov	r6,r4
 4010b6c:	180b883a 	mov	r5,r3
 4010b70:	1009883a 	mov	r4,r2
 4010b74:	400004c0 	call	400004c <main>
 4010b78:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 4010b7c:	01000044 	movi	r4,1
 4010b80:	401064c0 	call	401064c <close>
  exit (result);
 4010b84:	e13fff17 	ldw	r4,-4(fp)
 4010b88:	40143480 	call	4014348 <exit>

04010b8c <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 4010b8c:	defffe04 	addi	sp,sp,-8
 4010b90:	df000115 	stw	fp,4(sp)
 4010b94:	df000104 	addi	fp,sp,4
 4010b98:	e13fff15 	stw	r4,-4(fp)
}
 4010b9c:	0001883a 	nop
 4010ba0:	e037883a 	mov	sp,fp
 4010ba4:	df000017 	ldw	fp,0(sp)
 4010ba8:	dec00104 	addi	sp,sp,4
 4010bac:	f800283a 	ret

04010bb0 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 4010bb0:	defffe04 	addi	sp,sp,-8
 4010bb4:	df000115 	stw	fp,4(sp)
 4010bb8:	df000104 	addi	fp,sp,4
 4010bbc:	e13fff15 	stw	r4,-4(fp)
}
 4010bc0:	0001883a 	nop
 4010bc4:	e037883a 	mov	sp,fp
 4010bc8:	df000017 	ldw	fp,0(sp)
 4010bcc:	dec00104 	addi	sp,sp,4
 4010bd0:	f800283a 	ret

04010bd4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 4010bd4:	defffe04 	addi	sp,sp,-8
 4010bd8:	dfc00115 	stw	ra,4(sp)
 4010bdc:	df000015 	stw	fp,0(sp)
 4010be0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 4010be4:	d0a00c17 	ldw	r2,-32720(gp)
 4010be8:	10000326 	beq	r2,zero,4010bf8 <alt_get_errno+0x24>
 4010bec:	d0a00c17 	ldw	r2,-32720(gp)
 4010bf0:	103ee83a 	callr	r2
 4010bf4:	00000106 	br	4010bfc <alt_get_errno+0x28>
 4010bf8:	d0a73f04 	addi	r2,gp,-25348
}
 4010bfc:	e037883a 	mov	sp,fp
 4010c00:	dfc00117 	ldw	ra,4(sp)
 4010c04:	df000017 	ldw	fp,0(sp)
 4010c08:	dec00204 	addi	sp,sp,8
 4010c0c:	f800283a 	ret

04010c10 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 4010c10:	defff904 	addi	sp,sp,-28
 4010c14:	dfc00615 	stw	ra,24(sp)
 4010c18:	df000515 	stw	fp,20(sp)
 4010c1c:	df000504 	addi	fp,sp,20
 4010c20:	e13ffd15 	stw	r4,-12(fp)
 4010c24:	e17ffe15 	stw	r5,-8(fp)
 4010c28:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 4010c2c:	e0bffd17 	ldw	r2,-12(fp)
 4010c30:	10000616 	blt	r2,zero,4010c4c <read+0x3c>
 4010c34:	e0bffd17 	ldw	r2,-12(fp)
 4010c38:	10c00324 	muli	r3,r2,12
 4010c3c:	00810074 	movhi	r2,1025
 4010c40:	10953d04 	addi	r2,r2,21748
 4010c44:	1885883a 	add	r2,r3,r2
 4010c48:	00000106 	br	4010c50 <read+0x40>
 4010c4c:	0005883a 	mov	r2,zero
 4010c50:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 4010c54:	e0bffb17 	ldw	r2,-20(fp)
 4010c58:	10002226 	beq	r2,zero,4010ce4 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 4010c5c:	e0bffb17 	ldw	r2,-20(fp)
 4010c60:	10800217 	ldw	r2,8(r2)
 4010c64:	108000cc 	andi	r2,r2,3
 4010c68:	10800060 	cmpeqi	r2,r2,1
 4010c6c:	1000181e 	bne	r2,zero,4010cd0 <read+0xc0>
        (fd->dev->read))
 4010c70:	e0bffb17 	ldw	r2,-20(fp)
 4010c74:	10800017 	ldw	r2,0(r2)
 4010c78:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 4010c7c:	10001426 	beq	r2,zero,4010cd0 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 4010c80:	e0bffb17 	ldw	r2,-20(fp)
 4010c84:	10800017 	ldw	r2,0(r2)
 4010c88:	10800517 	ldw	r2,20(r2)
 4010c8c:	e0ffff17 	ldw	r3,-4(fp)
 4010c90:	180d883a 	mov	r6,r3
 4010c94:	e17ffe17 	ldw	r5,-8(fp)
 4010c98:	e13ffb17 	ldw	r4,-20(fp)
 4010c9c:	103ee83a 	callr	r2
 4010ca0:	e0bffc15 	stw	r2,-16(fp)
 4010ca4:	e0bffc17 	ldw	r2,-16(fp)
 4010ca8:	1000070e 	bge	r2,zero,4010cc8 <read+0xb8>
        {
          ALT_ERRNO = -rval;
 4010cac:	4010bd40 	call	4010bd4 <alt_get_errno>
 4010cb0:	1007883a 	mov	r3,r2
 4010cb4:	e0bffc17 	ldw	r2,-16(fp)
 4010cb8:	0085c83a 	sub	r2,zero,r2
 4010cbc:	18800015 	stw	r2,0(r3)
          return -1;
 4010cc0:	00bfffc4 	movi	r2,-1
 4010cc4:	00000c06 	br	4010cf8 <read+0xe8>
        }
        return rval;
 4010cc8:	e0bffc17 	ldw	r2,-16(fp)
 4010ccc:	00000a06 	br	4010cf8 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
 4010cd0:	4010bd40 	call	4010bd4 <alt_get_errno>
 4010cd4:	1007883a 	mov	r3,r2
 4010cd8:	00800344 	movi	r2,13
 4010cdc:	18800015 	stw	r2,0(r3)
 4010ce0:	00000406 	br	4010cf4 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 4010ce4:	4010bd40 	call	4010bd4 <alt_get_errno>
 4010ce8:	1007883a 	mov	r3,r2
 4010cec:	00801444 	movi	r2,81
 4010cf0:	18800015 	stw	r2,0(r3)
  }
  return -1;
 4010cf4:	00bfffc4 	movi	r2,-1
}
 4010cf8:	e037883a 	mov	sp,fp
 4010cfc:	dfc00117 	ldw	ra,4(sp)
 4010d00:	df000017 	ldw	fp,0(sp)
 4010d04:	dec00204 	addi	sp,sp,8
 4010d08:	f800283a 	ret

04010d0c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 4010d0c:	defffe04 	addi	sp,sp,-8
 4010d10:	df000115 	stw	fp,4(sp)
 4010d14:	df000104 	addi	fp,sp,4
 4010d18:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
 4010d1c:	e0bfff17 	ldw	r2,-4(fp)
 4010d20:	108000d0 	cmplti	r2,r2,3
 4010d24:	10000d1e 	bne	r2,zero,4010d5c <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
 4010d28:	00810074 	movhi	r2,1025
 4010d2c:	10953d04 	addi	r2,r2,21748
 4010d30:	e0ffff17 	ldw	r3,-4(fp)
 4010d34:	18c00324 	muli	r3,r3,12
 4010d38:	10c5883a 	add	r2,r2,r3
 4010d3c:	10800204 	addi	r2,r2,8
 4010d40:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 4010d44:	00810074 	movhi	r2,1025
 4010d48:	10953d04 	addi	r2,r2,21748
 4010d4c:	e0ffff17 	ldw	r3,-4(fp)
 4010d50:	18c00324 	muli	r3,r3,12
 4010d54:	10c5883a 	add	r2,r2,r3
 4010d58:	10000015 	stw	zero,0(r2)
  }
}
 4010d5c:	0001883a 	nop
 4010d60:	e037883a 	mov	sp,fp
 4010d64:	df000017 	ldw	fp,0(sp)
 4010d68:	dec00104 	addi	sp,sp,4
 4010d6c:	f800283a 	ret

04010d70 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 4010d70:	defff904 	addi	sp,sp,-28
 4010d74:	df000615 	stw	fp,24(sp)
 4010d78:	df000604 	addi	fp,sp,24
 4010d7c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 4010d80:	0005303a 	rdctl	r2,status
 4010d84:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 4010d88:	e0fffe17 	ldw	r3,-8(fp)
 4010d8c:	00bfff84 	movi	r2,-2
 4010d90:	1884703a 	and	r2,r3,r2
 4010d94:	1001703a 	wrctl	status,r2
  
  return context;
 4010d98:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 4010d9c:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 4010da0:	d0a00d17 	ldw	r2,-32716(gp)
 4010da4:	10c000c4 	addi	r3,r2,3
 4010da8:	00bfff04 	movi	r2,-4
 4010dac:	1884703a 	and	r2,r3,r2
 4010db0:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 4010db4:	d0e00d17 	ldw	r3,-32716(gp)
 4010db8:	e0bfff17 	ldw	r2,-4(fp)
 4010dbc:	1887883a 	add	r3,r3,r2
 4010dc0:	00820034 	movhi	r2,2048
 4010dc4:	10800004 	addi	r2,r2,0
 4010dc8:	10c0062e 	bgeu	r2,r3,4010de4 <sbrk+0x74>
 4010dcc:	e0bffb17 	ldw	r2,-20(fp)
 4010dd0:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 4010dd4:	e0bffa17 	ldw	r2,-24(fp)
 4010dd8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 4010ddc:	00bfffc4 	movi	r2,-1
 4010de0:	00000b06 	br	4010e10 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 4010de4:	d0a00d17 	ldw	r2,-32716(gp)
 4010de8:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
 4010dec:	d0e00d17 	ldw	r3,-32716(gp)
 4010df0:	e0bfff17 	ldw	r2,-4(fp)
 4010df4:	1885883a 	add	r2,r3,r2
 4010df8:	d0a00d15 	stw	r2,-32716(gp)
 4010dfc:	e0bffb17 	ldw	r2,-20(fp)
 4010e00:	e0bffc15 	stw	r2,-16(fp)
 4010e04:	e0bffc17 	ldw	r2,-16(fp)
 4010e08:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 4010e0c:	e0bffd17 	ldw	r2,-12(fp)
} 
 4010e10:	e037883a 	mov	sp,fp
 4010e14:	df000017 	ldw	fp,0(sp)
 4010e18:	dec00104 	addi	sp,sp,4
 4010e1c:	f800283a 	ret

04010e20 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
 4010e20:	defffd04 	addi	sp,sp,-12
 4010e24:	dfc00215 	stw	ra,8(sp)
 4010e28:	df000115 	stw	fp,4(sp)
 4010e2c:	df000104 	addi	fp,sp,4
 4010e30:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
 4010e34:	e13fff17 	ldw	r4,-4(fp)
 4010e38:	401357c0 	call	401357c <alt_busy_sleep>
}
 4010e3c:	e037883a 	mov	sp,fp
 4010e40:	dfc00117 	ldw	ra,4(sp)
 4010e44:	df000017 	ldw	fp,0(sp)
 4010e48:	dec00204 	addi	sp,sp,8
 4010e4c:	f800283a 	ret

04010e50 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 4010e50:	defffe04 	addi	sp,sp,-8
 4010e54:	dfc00115 	stw	ra,4(sp)
 4010e58:	df000015 	stw	fp,0(sp)
 4010e5c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 4010e60:	d0a00c17 	ldw	r2,-32720(gp)
 4010e64:	10000326 	beq	r2,zero,4010e74 <alt_get_errno+0x24>
 4010e68:	d0a00c17 	ldw	r2,-32720(gp)
 4010e6c:	103ee83a 	callr	r2
 4010e70:	00000106 	br	4010e78 <alt_get_errno+0x28>
 4010e74:	d0a73f04 	addi	r2,gp,-25348
}
 4010e78:	e037883a 	mov	sp,fp
 4010e7c:	dfc00117 	ldw	ra,4(sp)
 4010e80:	df000017 	ldw	fp,0(sp)
 4010e84:	dec00204 	addi	sp,sp,8
 4010e88:	f800283a 	ret

04010e8c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 4010e8c:	defff904 	addi	sp,sp,-28
 4010e90:	dfc00615 	stw	ra,24(sp)
 4010e94:	df000515 	stw	fp,20(sp)
 4010e98:	df000504 	addi	fp,sp,20
 4010e9c:	e13ffd15 	stw	r4,-12(fp)
 4010ea0:	e17ffe15 	stw	r5,-8(fp)
 4010ea4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 4010ea8:	e0bffd17 	ldw	r2,-12(fp)
 4010eac:	10000616 	blt	r2,zero,4010ec8 <write+0x3c>
 4010eb0:	e0bffd17 	ldw	r2,-12(fp)
 4010eb4:	10c00324 	muli	r3,r2,12
 4010eb8:	00810074 	movhi	r2,1025
 4010ebc:	10953d04 	addi	r2,r2,21748
 4010ec0:	1885883a 	add	r2,r3,r2
 4010ec4:	00000106 	br	4010ecc <write+0x40>
 4010ec8:	0005883a 	mov	r2,zero
 4010ecc:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 4010ed0:	e0bffb17 	ldw	r2,-20(fp)
 4010ed4:	10002126 	beq	r2,zero,4010f5c <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 4010ed8:	e0bffb17 	ldw	r2,-20(fp)
 4010edc:	10800217 	ldw	r2,8(r2)
 4010ee0:	108000cc 	andi	r2,r2,3
 4010ee4:	10001826 	beq	r2,zero,4010f48 <write+0xbc>
 4010ee8:	e0bffb17 	ldw	r2,-20(fp)
 4010eec:	10800017 	ldw	r2,0(r2)
 4010ef0:	10800617 	ldw	r2,24(r2)
 4010ef4:	10001426 	beq	r2,zero,4010f48 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 4010ef8:	e0bffb17 	ldw	r2,-20(fp)
 4010efc:	10800017 	ldw	r2,0(r2)
 4010f00:	10800617 	ldw	r2,24(r2)
 4010f04:	e0ffff17 	ldw	r3,-4(fp)
 4010f08:	180d883a 	mov	r6,r3
 4010f0c:	e17ffe17 	ldw	r5,-8(fp)
 4010f10:	e13ffb17 	ldw	r4,-20(fp)
 4010f14:	103ee83a 	callr	r2
 4010f18:	e0bffc15 	stw	r2,-16(fp)
 4010f1c:	e0bffc17 	ldw	r2,-16(fp)
 4010f20:	1000070e 	bge	r2,zero,4010f40 <write+0xb4>
      {
        ALT_ERRNO = -rval;
 4010f24:	4010e500 	call	4010e50 <alt_get_errno>
 4010f28:	1007883a 	mov	r3,r2
 4010f2c:	e0bffc17 	ldw	r2,-16(fp)
 4010f30:	0085c83a 	sub	r2,zero,r2
 4010f34:	18800015 	stw	r2,0(r3)
        return -1;
 4010f38:	00bfffc4 	movi	r2,-1
 4010f3c:	00000c06 	br	4010f70 <write+0xe4>
      }
      return rval;
 4010f40:	e0bffc17 	ldw	r2,-16(fp)
 4010f44:	00000a06 	br	4010f70 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
 4010f48:	4010e500 	call	4010e50 <alt_get_errno>
 4010f4c:	1007883a 	mov	r3,r2
 4010f50:	00800344 	movi	r2,13
 4010f54:	18800015 	stw	r2,0(r3)
 4010f58:	00000406 	br	4010f6c <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 4010f5c:	4010e500 	call	4010e50 <alt_get_errno>
 4010f60:	1007883a 	mov	r3,r2
 4010f64:	00801444 	movi	r2,81
 4010f68:	18800015 	stw	r2,0(r3)
  }
  return -1;
 4010f6c:	00bfffc4 	movi	r2,-1
}
 4010f70:	e037883a 	mov	sp,fp
 4010f74:	dfc00117 	ldw	ra,4(sp)
 4010f78:	df000017 	ldw	fp,0(sp)
 4010f7c:	dec00204 	addi	sp,sp,8
 4010f80:	f800283a 	ret

04010f84 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 4010f84:	defffd04 	addi	sp,sp,-12
 4010f88:	dfc00215 	stw	ra,8(sp)
 4010f8c:	df000115 	stw	fp,4(sp)
 4010f90:	df000104 	addi	fp,sp,4
 4010f94:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 4010f98:	d1600904 	addi	r5,gp,-32732
 4010f9c:	e13fff17 	ldw	r4,-4(fp)
 4010fa0:	40137580 	call	4013758 <alt_dev_llist_insert>
}
 4010fa4:	e037883a 	mov	sp,fp
 4010fa8:	dfc00117 	ldw	ra,4(sp)
 4010fac:	df000017 	ldw	fp,0(sp)
 4010fb0:	dec00204 	addi	sp,sp,8
 4010fb4:	f800283a 	ret

04010fb8 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 4010fb8:	defffd04 	addi	sp,sp,-12
 4010fbc:	dfc00215 	stw	ra,8(sp)
 4010fc0:	df000115 	stw	fp,4(sp)
 4010fc4:	df000104 	addi	fp,sp,4
 4010fc8:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, CPU);
 4010fcc:	40140380 	call	4014038 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 4010fd0:	00800044 	movi	r2,1
 4010fd4:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 4010fd8:	0001883a 	nop
 4010fdc:	e037883a 	mov	sp,fp
 4010fe0:	dfc00117 	ldw	ra,4(sp)
 4010fe4:	df000017 	ldw	fp,0(sp)
 4010fe8:	dec00204 	addi	sp,sp,8
 4010fec:	f800283a 	ret

04010ff0 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 4010ff0:	defffd04 	addi	sp,sp,-12
 4010ff4:	dfc00215 	stw	ra,8(sp)
 4010ff8:	df000115 	stw	fp,4(sp)
 4010ffc:	df000104 	addi	fp,sp,4
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
 4011000:	01c0fa04 	movi	r7,1000
 4011004:	01800184 	movi	r6,6
 4011008:	000b883a 	mov	r5,zero
 401100c:	01020134 	movhi	r4,2052
 4011010:	210c0804 	addi	r4,r4,12320
 4011014:	4011eb80 	call	4011eb8 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG, JTAG);
 4011018:	018000c4 	movi	r6,3
 401101c:	000b883a 	mov	r5,zero
 4011020:	01010074 	movhi	r4,1025
 4011024:	2115a704 	addi	r4,r4,22172
 4011028:	40115400 	call	4011540 <altera_avalon_jtag_uart_init>
 401102c:	01010074 	movhi	r4,1025
 4011030:	21159d04 	addi	r4,r4,22132
 4011034:	4010f840 	call	4010f84 <alt_dev_reg>
    ALTERA_UP_AVALON_AUDIO_INIT ( AUDIO, Audio);
 4011038:	01010074 	movhi	r4,1025
 401103c:	2119b504 	addi	r4,r4,26324
 4011040:	4010f840 	call	4010f84 <alt_dev_reg>
    ALTERA_UP_AVALON_RS232_INIT ( WIFI_SERIAL_PORT, WIFI_Serial_Port);
 4011044:	01010074 	movhi	r4,1025
 4011048:	2119c104 	addi	r4,r4,26372
 401104c:	4010f840 	call	4010f84 <alt_dev_reg>
    ALTERA_UP_AVALON_VIDEO_CHARACTER_BUFFER_WITH_DMA_INIT ( CHAR_BUFFER, Char_Buffer);
 4011050:	00810074 	movhi	r2,1025
 4011054:	1099cc04 	addi	r2,r2,26416
 4011058:	10800a17 	ldw	r2,40(r2)
 401105c:	10800104 	addi	r2,r2,4
 4011060:	10800017 	ldw	r2,0(r2)
 4011064:	10ffffcc 	andi	r3,r2,65535
 4011068:	00810074 	movhi	r2,1025
 401106c:	1099cc04 	addi	r2,r2,26416
 4011070:	10c00c15 	stw	r3,48(r2)
 4011074:	00810074 	movhi	r2,1025
 4011078:	1099cc04 	addi	r2,r2,26416
 401107c:	10800a17 	ldw	r2,40(r2)
 4011080:	10800104 	addi	r2,r2,4
 4011084:	10800017 	ldw	r2,0(r2)
 4011088:	1006d43a 	srli	r3,r2,16
 401108c:	00810074 	movhi	r2,1025
 4011090:	1099cc04 	addi	r2,r2,26416
 4011094:	10c00d15 	stw	r3,52(r2)
 4011098:	00810074 	movhi	r2,1025
 401109c:	1099cc04 	addi	r2,r2,26416
 40110a0:	10800c17 	ldw	r2,48(r2)
 40110a4:	10801068 	cmpgeui	r2,r2,65
 40110a8:	1000081e 	bne	r2,zero,40110cc <alt_sys_init+0xdc>
 40110ac:	00810074 	movhi	r2,1025
 40110b0:	1099cc04 	addi	r2,r2,26416
 40110b4:	00c00fc4 	movi	r3,63
 40110b8:	10c00f15 	stw	r3,60(r2)
 40110bc:	00810074 	movhi	r2,1025
 40110c0:	1099cc04 	addi	r2,r2,26416
 40110c4:	00c00184 	movi	r3,6
 40110c8:	10c01015 	stw	r3,64(r2)
 40110cc:	00810074 	movhi	r2,1025
 40110d0:	1099cc04 	addi	r2,r2,26416
 40110d4:	10800d17 	ldw	r2,52(r2)
 40110d8:	10800868 	cmpgeui	r2,r2,33
 40110dc:	1000041e 	bne	r2,zero,40110f0 <alt_sys_init+0x100>
 40110e0:	00810074 	movhi	r2,1025
 40110e4:	1099cc04 	addi	r2,r2,26416
 40110e8:	00c007c4 	movi	r3,31
 40110ec:	10c01115 	stw	r3,68(r2)
 40110f0:	01010074 	movhi	r4,1025
 40110f4:	2119cc04 	addi	r4,r4,26416
 40110f8:	40122bc0 	call	40122bc <alt_up_char_buffer_init>
 40110fc:	01010074 	movhi	r4,1025
 4011100:	2119cc04 	addi	r4,r4,26416
 4011104:	4010f840 	call	4010f84 <alt_dev_reg>
    ALTERA_UP_AVALON_VIDEO_PIXEL_BUFFER_DMA_INIT ( PIXEL_BUFFER, Pixel_Buffer);
 4011108:	00810074 	movhi	r2,1025
 401110c:	1099de04 	addi	r2,r2,26488
 4011110:	10800a17 	ldw	r2,40(r2)
 4011114:	10800017 	ldw	r2,0(r2)
 4011118:	1007883a 	mov	r3,r2
 401111c:	00810074 	movhi	r2,1025
 4011120:	1099de04 	addi	r2,r2,26488
 4011124:	10c00b15 	stw	r3,44(r2)
 4011128:	00810074 	movhi	r2,1025
 401112c:	1099de04 	addi	r2,r2,26488
 4011130:	10800a17 	ldw	r2,40(r2)
 4011134:	10800104 	addi	r2,r2,4
 4011138:	10800017 	ldw	r2,0(r2)
 401113c:	1007883a 	mov	r3,r2
 4011140:	00810074 	movhi	r2,1025
 4011144:	1099de04 	addi	r2,r2,26488
 4011148:	10c00c15 	stw	r3,48(r2)
 401114c:	00810074 	movhi	r2,1025
 4011150:	1099de04 	addi	r2,r2,26488
 4011154:	10800a17 	ldw	r2,40(r2)
 4011158:	10800204 	addi	r2,r2,8
 401115c:	10800017 	ldw	r2,0(r2)
 4011160:	10ffffcc 	andi	r3,r2,65535
 4011164:	00810074 	movhi	r2,1025
 4011168:	1099de04 	addi	r2,r2,26488
 401116c:	10c00f15 	stw	r3,60(r2)
 4011170:	00810074 	movhi	r2,1025
 4011174:	1099de04 	addi	r2,r2,26488
 4011178:	10800a17 	ldw	r2,40(r2)
 401117c:	10800204 	addi	r2,r2,8
 4011180:	10800017 	ldw	r2,0(r2)
 4011184:	1006d43a 	srli	r3,r2,16
 4011188:	00810074 	movhi	r2,1025
 401118c:	1099de04 	addi	r2,r2,26488
 4011190:	10c01015 	stw	r3,64(r2)
 4011194:	00810074 	movhi	r2,1025
 4011198:	1099de04 	addi	r2,r2,26488
 401119c:	10800a17 	ldw	r2,40(r2)
 40111a0:	10800304 	addi	r2,r2,12
 40111a4:	10800017 	ldw	r2,0(r2)
 40111a8:	1005d07a 	srai	r2,r2,1
 40111ac:	10c0004c 	andi	r3,r2,1
 40111b0:	00810074 	movhi	r2,1025
 40111b4:	1099de04 	addi	r2,r2,26488
 40111b8:	10c00d15 	stw	r3,52(r2)
 40111bc:	00810074 	movhi	r2,1025
 40111c0:	1099de04 	addi	r2,r2,26488
 40111c4:	10800a17 	ldw	r2,40(r2)
 40111c8:	10800304 	addi	r2,r2,12
 40111cc:	10800017 	ldw	r2,0(r2)
 40111d0:	1005d13a 	srai	r2,r2,4
 40111d4:	10c003cc 	andi	r3,r2,15
 40111d8:	00810074 	movhi	r2,1025
 40111dc:	1099de04 	addi	r2,r2,26488
 40111e0:	10c00e15 	stw	r3,56(r2)
 40111e4:	00810074 	movhi	r2,1025
 40111e8:	1099de04 	addi	r2,r2,26488
 40111ec:	10800a17 	ldw	r2,40(r2)
 40111f0:	10800304 	addi	r2,r2,12
 40111f4:	10800017 	ldw	r2,0(r2)
 40111f8:	1005d43a 	srai	r2,r2,16
 40111fc:	e0bfff05 	stb	r2,-4(fp)
 4011200:	00810074 	movhi	r2,1025
 4011204:	1099de04 	addi	r2,r2,26488
 4011208:	10800a17 	ldw	r2,40(r2)
 401120c:	10800304 	addi	r2,r2,12
 4011210:	10800017 	ldw	r2,0(r2)
 4011214:	1004d63a 	srli	r2,r2,24
 4011218:	e0bfff45 	stb	r2,-3(fp)
 401121c:	00810074 	movhi	r2,1025
 4011220:	1099de04 	addi	r2,r2,26488
 4011224:	10800e17 	ldw	r2,56(r2)
 4011228:	10800058 	cmpnei	r2,r2,1
 401122c:	1000041e 	bne	r2,zero,4011240 <alt_sys_init+0x250>
 4011230:	00810074 	movhi	r2,1025
 4011234:	1099de04 	addi	r2,r2,26488
 4011238:	10001115 	stw	zero,68(r2)
 401123c:	00000e06 	br	4011278 <alt_sys_init+0x288>
 4011240:	00810074 	movhi	r2,1025
 4011244:	1099de04 	addi	r2,r2,26488
 4011248:	10800e17 	ldw	r2,56(r2)
 401124c:	10800098 	cmpnei	r2,r2,2
 4011250:	1000051e 	bne	r2,zero,4011268 <alt_sys_init+0x278>
 4011254:	00810074 	movhi	r2,1025
 4011258:	1099de04 	addi	r2,r2,26488
 401125c:	00c00044 	movi	r3,1
 4011260:	10c01115 	stw	r3,68(r2)
 4011264:	00000406 	br	4011278 <alt_sys_init+0x288>
 4011268:	00810074 	movhi	r2,1025
 401126c:	1099de04 	addi	r2,r2,26488
 4011270:	00c00084 	movi	r3,2
 4011274:	10c01115 	stw	r3,68(r2)
 4011278:	e0bfff03 	ldbu	r2,-4(fp)
 401127c:	00c00804 	movi	r3,32
 4011280:	1885c83a 	sub	r2,r3,r2
 4011284:	00ffffc4 	movi	r3,-1
 4011288:	1886d83a 	srl	r3,r3,r2
 401128c:	00810074 	movhi	r2,1025
 4011290:	1099de04 	addi	r2,r2,26488
 4011294:	10c01215 	stw	r3,72(r2)
 4011298:	e0ffff03 	ldbu	r3,-4(fp)
 401129c:	00810074 	movhi	r2,1025
 40112a0:	1099de04 	addi	r2,r2,26488
 40112a4:	10801117 	ldw	r2,68(r2)
 40112a8:	1887883a 	add	r3,r3,r2
 40112ac:	00810074 	movhi	r2,1025
 40112b0:	1099de04 	addi	r2,r2,26488
 40112b4:	10c01315 	stw	r3,76(r2)
 40112b8:	e0bfff43 	ldbu	r2,-3(fp)
 40112bc:	00c00804 	movi	r3,32
 40112c0:	1885c83a 	sub	r2,r3,r2
 40112c4:	00ffffc4 	movi	r3,-1
 40112c8:	1886d83a 	srl	r3,r3,r2
 40112cc:	00810074 	movhi	r2,1025
 40112d0:	1099de04 	addi	r2,r2,26488
 40112d4:	10c01415 	stw	r3,80(r2)
 40112d8:	01010074 	movhi	r4,1025
 40112dc:	2119de04 	addi	r4,r4,26488
 40112e0:	4010f840 	call	4010f84 <alt_dev_reg>
    ALTERA_UP_AVALON_VIDEO_RGB_RESAMPLER_INIT ( RGB_RESAMPLER, RGB_Resampler);
 40112e4:	00810074 	movhi	r2,1025
 40112e8:	1099f304 	addi	r2,r2,26572
 40112ec:	10800a17 	ldw	r2,40(r2)
 40112f0:	10800017 	ldw	r2,0(r2)
 40112f4:	10c003cc 	andi	r3,r2,15
 40112f8:	00810074 	movhi	r2,1025
 40112fc:	1099f304 	addi	r2,r2,26572
 4011300:	10c00b15 	stw	r3,44(r2)
 4011304:	00810074 	movhi	r2,1025
 4011308:	1099f304 	addi	r2,r2,26572
 401130c:	10800a17 	ldw	r2,40(r2)
 4011310:	10800017 	ldw	r2,0(r2)
 4011314:	1005d13a 	srai	r2,r2,4
 4011318:	10c0004c 	andi	r3,r2,1
 401131c:	00810074 	movhi	r2,1025
 4011320:	1099f304 	addi	r2,r2,26572
 4011324:	10c00c15 	stw	r3,48(r2)
 4011328:	00810074 	movhi	r2,1025
 401132c:	1099f304 	addi	r2,r2,26572
 4011330:	10800a17 	ldw	r2,40(r2)
 4011334:	10800017 	ldw	r2,0(r2)
 4011338:	1005d17a 	srai	r2,r2,5
 401133c:	10c0004c 	andi	r3,r2,1
 4011340:	00810074 	movhi	r2,1025
 4011344:	1099f304 	addi	r2,r2,26572
 4011348:	10c00d15 	stw	r3,52(r2)
 401134c:	00810074 	movhi	r2,1025
 4011350:	1099f304 	addi	r2,r2,26572
 4011354:	10800a17 	ldw	r2,40(r2)
 4011358:	10800017 	ldw	r2,0(r2)
 401135c:	1005d43a 	srai	r2,r2,16
 4011360:	10c003cc 	andi	r3,r2,15
 4011364:	00810074 	movhi	r2,1025
 4011368:	1099f304 	addi	r2,r2,26572
 401136c:	10c00e15 	stw	r3,56(r2)
 4011370:	00810074 	movhi	r2,1025
 4011374:	1099f304 	addi	r2,r2,26572
 4011378:	10800a17 	ldw	r2,40(r2)
 401137c:	10800017 	ldw	r2,0(r2)
 4011380:	1005d53a 	srai	r2,r2,20
 4011384:	10c0004c 	andi	r3,r2,1
 4011388:	00810074 	movhi	r2,1025
 401138c:	1099f304 	addi	r2,r2,26572
 4011390:	10c00f15 	stw	r3,60(r2)
 4011394:	00810074 	movhi	r2,1025
 4011398:	1099f304 	addi	r2,r2,26572
 401139c:	10800a17 	ldw	r2,40(r2)
 40113a0:	10800017 	ldw	r2,0(r2)
 40113a4:	1005d57a 	srai	r2,r2,21
 40113a8:	10c0004c 	andi	r3,r2,1
 40113ac:	00810074 	movhi	r2,1025
 40113b0:	1099f304 	addi	r2,r2,26572
 40113b4:	10c01015 	stw	r3,64(r2)
 40113b8:	01010074 	movhi	r4,1025
 40113bc:	2119f304 	addi	r4,r4,26572
 40113c0:	4010f840 	call	4010f84 <alt_dev_reg>
}
 40113c4:	0001883a 	nop
 40113c8:	e037883a 	mov	sp,fp
 40113cc:	dfc00117 	ldw	ra,4(sp)
 40113d0:	df000017 	ldw	fp,0(sp)
 40113d4:	dec00204 	addi	sp,sp,8
 40113d8:	f800283a 	ret

040113dc <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 40113dc:	defffa04 	addi	sp,sp,-24
 40113e0:	dfc00515 	stw	ra,20(sp)
 40113e4:	df000415 	stw	fp,16(sp)
 40113e8:	df000404 	addi	fp,sp,16
 40113ec:	e13ffd15 	stw	r4,-12(fp)
 40113f0:	e17ffe15 	stw	r5,-8(fp)
 40113f4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 40113f8:	e0bffd17 	ldw	r2,-12(fp)
 40113fc:	10800017 	ldw	r2,0(r2)
 4011400:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 4011404:	e0bffc17 	ldw	r2,-16(fp)
 4011408:	10c00a04 	addi	r3,r2,40
 401140c:	e0bffd17 	ldw	r2,-12(fp)
 4011410:	10800217 	ldw	r2,8(r2)
 4011414:	100f883a 	mov	r7,r2
 4011418:	e1bfff17 	ldw	r6,-4(fp)
 401141c:	e17ffe17 	ldw	r5,-8(fp)
 4011420:	1809883a 	mov	r4,r3
 4011424:	40119fc0 	call	40119fc <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 4011428:	e037883a 	mov	sp,fp
 401142c:	dfc00117 	ldw	ra,4(sp)
 4011430:	df000017 	ldw	fp,0(sp)
 4011434:	dec00204 	addi	sp,sp,8
 4011438:	f800283a 	ret

0401143c <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 401143c:	defffa04 	addi	sp,sp,-24
 4011440:	dfc00515 	stw	ra,20(sp)
 4011444:	df000415 	stw	fp,16(sp)
 4011448:	df000404 	addi	fp,sp,16
 401144c:	e13ffd15 	stw	r4,-12(fp)
 4011450:	e17ffe15 	stw	r5,-8(fp)
 4011454:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 4011458:	e0bffd17 	ldw	r2,-12(fp)
 401145c:	10800017 	ldw	r2,0(r2)
 4011460:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 4011464:	e0bffc17 	ldw	r2,-16(fp)
 4011468:	10c00a04 	addi	r3,r2,40
 401146c:	e0bffd17 	ldw	r2,-12(fp)
 4011470:	10800217 	ldw	r2,8(r2)
 4011474:	100f883a 	mov	r7,r2
 4011478:	e1bfff17 	ldw	r6,-4(fp)
 401147c:	e17ffe17 	ldw	r5,-8(fp)
 4011480:	1809883a 	mov	r4,r3
 4011484:	4011c180 	call	4011c18 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 4011488:	e037883a 	mov	sp,fp
 401148c:	dfc00117 	ldw	ra,4(sp)
 4011490:	df000017 	ldw	fp,0(sp)
 4011494:	dec00204 	addi	sp,sp,8
 4011498:	f800283a 	ret

0401149c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 401149c:	defffc04 	addi	sp,sp,-16
 40114a0:	dfc00315 	stw	ra,12(sp)
 40114a4:	df000215 	stw	fp,8(sp)
 40114a8:	df000204 	addi	fp,sp,8
 40114ac:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 40114b0:	e0bfff17 	ldw	r2,-4(fp)
 40114b4:	10800017 	ldw	r2,0(r2)
 40114b8:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 40114bc:	e0bffe17 	ldw	r2,-8(fp)
 40114c0:	10c00a04 	addi	r3,r2,40
 40114c4:	e0bfff17 	ldw	r2,-4(fp)
 40114c8:	10800217 	ldw	r2,8(r2)
 40114cc:	100b883a 	mov	r5,r2
 40114d0:	1809883a 	mov	r4,r3
 40114d4:	40118a40 	call	40118a4 <altera_avalon_jtag_uart_close>
}
 40114d8:	e037883a 	mov	sp,fp
 40114dc:	dfc00117 	ldw	ra,4(sp)
 40114e0:	df000017 	ldw	fp,0(sp)
 40114e4:	dec00204 	addi	sp,sp,8
 40114e8:	f800283a 	ret

040114ec <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 40114ec:	defffa04 	addi	sp,sp,-24
 40114f0:	dfc00515 	stw	ra,20(sp)
 40114f4:	df000415 	stw	fp,16(sp)
 40114f8:	df000404 	addi	fp,sp,16
 40114fc:	e13ffd15 	stw	r4,-12(fp)
 4011500:	e17ffe15 	stw	r5,-8(fp)
 4011504:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 4011508:	e0bffd17 	ldw	r2,-12(fp)
 401150c:	10800017 	ldw	r2,0(r2)
 4011510:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 4011514:	e0bffc17 	ldw	r2,-16(fp)
 4011518:	10800a04 	addi	r2,r2,40
 401151c:	e1bfff17 	ldw	r6,-4(fp)
 4011520:	e17ffe17 	ldw	r5,-8(fp)
 4011524:	1009883a 	mov	r4,r2
 4011528:	401190c0 	call	401190c <altera_avalon_jtag_uart_ioctl>
}
 401152c:	e037883a 	mov	sp,fp
 4011530:	dfc00117 	ldw	ra,4(sp)
 4011534:	df000017 	ldw	fp,0(sp)
 4011538:	dec00204 	addi	sp,sp,8
 401153c:	f800283a 	ret

04011540 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 4011540:	defffb04 	addi	sp,sp,-20
 4011544:	dfc00415 	stw	ra,16(sp)
 4011548:	df000315 	stw	fp,12(sp)
 401154c:	df000304 	addi	fp,sp,12
 4011550:	e13ffd15 	stw	r4,-12(fp)
 4011554:	e17ffe15 	stw	r5,-8(fp)
 4011558:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 401155c:	e0bffd17 	ldw	r2,-12(fp)
 4011560:	00c00044 	movi	r3,1
 4011564:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 4011568:	e0bffd17 	ldw	r2,-12(fp)
 401156c:	10800017 	ldw	r2,0(r2)
 4011570:	10800104 	addi	r2,r2,4
 4011574:	1007883a 	mov	r3,r2
 4011578:	e0bffd17 	ldw	r2,-12(fp)
 401157c:	10800817 	ldw	r2,32(r2)
 4011580:	18800035 	stwio	r2,0(r3)
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
                      sp, NULL);
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
 4011584:	e0bfff17 	ldw	r2,-4(fp)
 4011588:	01810074 	movhi	r6,1025
 401158c:	31857d04 	addi	r6,r6,5620
 4011590:	e17ffd17 	ldw	r5,-12(fp)
 4011594:	1009883a 	mov	r4,r2
 4011598:	4013ac00 	call	4013ac0 <alt_irq_register>
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 401159c:	e0bffd17 	ldw	r2,-12(fp)
 40115a0:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 40115a4:	e0bffd17 	ldw	r2,-12(fp)
 40115a8:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 40115ac:	d0e74417 	ldw	r3,-25328(gp)
 40115b0:	e1fffd17 	ldw	r7,-12(fp)
 40115b4:	01810074 	movhi	r6,1025
 40115b8:	31860104 	addi	r6,r6,6148
 40115bc:	180b883a 	mov	r5,r3
 40115c0:	1009883a 	mov	r4,r2
 40115c4:	40134500 	call	4013450 <alt_alarm_start>
 40115c8:	1000040e 	bge	r2,zero,40115dc <altera_avalon_jtag_uart_init+0x9c>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 40115cc:	e0fffd17 	ldw	r3,-12(fp)
 40115d0:	00a00034 	movhi	r2,32768
 40115d4:	10bfffc4 	addi	r2,r2,-1
 40115d8:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 40115dc:	0001883a 	nop
 40115e0:	e037883a 	mov	sp,fp
 40115e4:	dfc00117 	ldw	ra,4(sp)
 40115e8:	df000017 	ldw	fp,0(sp)
 40115ec:	dec00204 	addi	sp,sp,8
 40115f0:	f800283a 	ret

040115f4 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 40115f4:	defff704 	addi	sp,sp,-36
 40115f8:	df000815 	stw	fp,32(sp)
 40115fc:	df000804 	addi	fp,sp,32
 4011600:	e13ffe15 	stw	r4,-8(fp)
 4011604:	e17fff15 	stw	r5,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 4011608:	e0bffe17 	ldw	r2,-8(fp)
 401160c:	e0bffa15 	stw	r2,-24(fp)
  unsigned int base = sp->base;
 4011610:	e0bffa17 	ldw	r2,-24(fp)
 4011614:	10800017 	ldw	r2,0(r2)
 4011618:	e0bffb15 	stw	r2,-20(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 401161c:	e0bffb17 	ldw	r2,-20(fp)
 4011620:	10800104 	addi	r2,r2,4
 4011624:	10800037 	ldwio	r2,0(r2)
 4011628:	e0bffc15 	stw	r2,-16(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 401162c:	e0bffc17 	ldw	r2,-16(fp)
 4011630:	1080c00c 	andi	r2,r2,768
 4011634:	10006d26 	beq	r2,zero,40117ec <altera_avalon_jtag_uart_irq+0x1f8>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 4011638:	e0bffc17 	ldw	r2,-16(fp)
 401163c:	1080400c 	andi	r2,r2,256
 4011640:	10003526 	beq	r2,zero,4011718 <altera_avalon_jtag_uart_irq+0x124>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 4011644:	00800074 	movhi	r2,1
 4011648:	e0bff815 	stw	r2,-32(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 401164c:	e0bffa17 	ldw	r2,-24(fp)
 4011650:	10800a17 	ldw	r2,40(r2)
 4011654:	10800044 	addi	r2,r2,1
 4011658:	1081ffcc 	andi	r2,r2,2047
 401165c:	e0bffd15 	stw	r2,-12(fp)
        if (next == sp->rx_out)
 4011660:	e0bffa17 	ldw	r2,-24(fp)
 4011664:	10c00b17 	ldw	r3,44(r2)
 4011668:	e0bffd17 	ldw	r2,-12(fp)
 401166c:	18801526 	beq	r3,r2,40116c4 <altera_avalon_jtag_uart_irq+0xd0>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 4011670:	e0bffb17 	ldw	r2,-20(fp)
 4011674:	10800037 	ldwio	r2,0(r2)
 4011678:	e0bff815 	stw	r2,-32(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 401167c:	e0bff817 	ldw	r2,-32(fp)
 4011680:	10a0000c 	andi	r2,r2,32768
 4011684:	10001126 	beq	r2,zero,40116cc <altera_avalon_jtag_uart_irq+0xd8>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 4011688:	e0bffa17 	ldw	r2,-24(fp)
 401168c:	10800a17 	ldw	r2,40(r2)
 4011690:	e0fff817 	ldw	r3,-32(fp)
 4011694:	1809883a 	mov	r4,r3
 4011698:	e0fffa17 	ldw	r3,-24(fp)
 401169c:	1885883a 	add	r2,r3,r2
 40116a0:	10800e04 	addi	r2,r2,56
 40116a4:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 40116a8:	e0bffa17 	ldw	r2,-24(fp)
 40116ac:	10800a17 	ldw	r2,40(r2)
 40116b0:	10800044 	addi	r2,r2,1
 40116b4:	10c1ffcc 	andi	r3,r2,2047
 40116b8:	e0bffa17 	ldw	r2,-24(fp)
 40116bc:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 40116c0:	003fe206 	br	401164c <__ram_exceptions_end+0xfbff1404>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
 40116c4:	0001883a 	nop
 40116c8:	00000106 	br	40116d0 <altera_avalon_jtag_uart_irq+0xdc>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
 40116cc:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 40116d0:	e0bff817 	ldw	r2,-32(fp)
 40116d4:	10bfffec 	andhi	r2,r2,65535
 40116d8:	10000f26 	beq	r2,zero,4011718 <altera_avalon_jtag_uart_irq+0x124>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 40116dc:	e0bffa17 	ldw	r2,-24(fp)
 40116e0:	10c00817 	ldw	r3,32(r2)
 40116e4:	00bfff84 	movi	r2,-2
 40116e8:	1886703a 	and	r3,r3,r2
 40116ec:	e0bffa17 	ldw	r2,-24(fp)
 40116f0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 40116f4:	e0bffb17 	ldw	r2,-20(fp)
 40116f8:	10800104 	addi	r2,r2,4
 40116fc:	1007883a 	mov	r3,r2
 4011700:	e0bffa17 	ldw	r2,-24(fp)
 4011704:	10800817 	ldw	r2,32(r2)
 4011708:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 401170c:	e0bffb17 	ldw	r2,-20(fp)
 4011710:	10800104 	addi	r2,r2,4
 4011714:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 4011718:	e0bffc17 	ldw	r2,-16(fp)
 401171c:	1080800c 	andi	r2,r2,512
 4011720:	103fbe26 	beq	r2,zero,401161c <__ram_exceptions_end+0xfbff13d4>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 4011724:	e0bffc17 	ldw	r2,-16(fp)
 4011728:	1004d43a 	srli	r2,r2,16
 401172c:	e0bff915 	stw	r2,-28(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 4011730:	00001406 	br	4011784 <altera_avalon_jtag_uart_irq+0x190>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 4011734:	e0bffb17 	ldw	r2,-20(fp)
 4011738:	e0fffa17 	ldw	r3,-24(fp)
 401173c:	18c00d17 	ldw	r3,52(r3)
 4011740:	e13ffa17 	ldw	r4,-24(fp)
 4011744:	20c7883a 	add	r3,r4,r3
 4011748:	18c20e04 	addi	r3,r3,2104
 401174c:	18c00003 	ldbu	r3,0(r3)
 4011750:	18c03fcc 	andi	r3,r3,255
 4011754:	18c0201c 	xori	r3,r3,128
 4011758:	18ffe004 	addi	r3,r3,-128
 401175c:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 4011760:	e0bffa17 	ldw	r2,-24(fp)
 4011764:	10800d17 	ldw	r2,52(r2)
 4011768:	10800044 	addi	r2,r2,1
 401176c:	10c1ffcc 	andi	r3,r2,2047
 4011770:	e0bffa17 	ldw	r2,-24(fp)
 4011774:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 4011778:	e0bff917 	ldw	r2,-28(fp)
 401177c:	10bfffc4 	addi	r2,r2,-1
 4011780:	e0bff915 	stw	r2,-28(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 4011784:	e0bff917 	ldw	r2,-28(fp)
 4011788:	10000526 	beq	r2,zero,40117a0 <altera_avalon_jtag_uart_irq+0x1ac>
 401178c:	e0bffa17 	ldw	r2,-24(fp)
 4011790:	10c00d17 	ldw	r3,52(r2)
 4011794:	e0bffa17 	ldw	r2,-24(fp)
 4011798:	10800c17 	ldw	r2,48(r2)
 401179c:	18bfe51e 	bne	r3,r2,4011734 <__ram_exceptions_end+0xfbff14ec>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 40117a0:	e0bff917 	ldw	r2,-28(fp)
 40117a4:	103f9d26 	beq	r2,zero,401161c <__ram_exceptions_end+0xfbff13d4>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 40117a8:	e0bffa17 	ldw	r2,-24(fp)
 40117ac:	10c00817 	ldw	r3,32(r2)
 40117b0:	00bfff44 	movi	r2,-3
 40117b4:	1886703a 	and	r3,r3,r2
 40117b8:	e0bffa17 	ldw	r2,-24(fp)
 40117bc:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 40117c0:	e0bffa17 	ldw	r2,-24(fp)
 40117c4:	10800017 	ldw	r2,0(r2)
 40117c8:	10800104 	addi	r2,r2,4
 40117cc:	1007883a 	mov	r3,r2
 40117d0:	e0bffa17 	ldw	r2,-24(fp)
 40117d4:	10800817 	ldw	r2,32(r2)
 40117d8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 40117dc:	e0bffb17 	ldw	r2,-20(fp)
 40117e0:	10800104 	addi	r2,r2,4
 40117e4:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 40117e8:	003f8c06 	br	401161c <__ram_exceptions_end+0xfbff13d4>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
 40117ec:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
 40117f0:	0001883a 	nop
 40117f4:	e037883a 	mov	sp,fp
 40117f8:	df000017 	ldw	fp,0(sp)
 40117fc:	dec00104 	addi	sp,sp,4
 4011800:	f800283a 	ret

04011804 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 4011804:	defff804 	addi	sp,sp,-32
 4011808:	df000715 	stw	fp,28(sp)
 401180c:	df000704 	addi	fp,sp,28
 4011810:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 4011814:	e0bffb17 	ldw	r2,-20(fp)
 4011818:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 401181c:	e0bff917 	ldw	r2,-28(fp)
 4011820:	10800017 	ldw	r2,0(r2)
 4011824:	10800104 	addi	r2,r2,4
 4011828:	10800037 	ldwio	r2,0(r2)
 401182c:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 4011830:	e0bffa17 	ldw	r2,-24(fp)
 4011834:	1081000c 	andi	r2,r2,1024
 4011838:	10000b26 	beq	r2,zero,4011868 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 401183c:	e0bff917 	ldw	r2,-28(fp)
 4011840:	10800017 	ldw	r2,0(r2)
 4011844:	10800104 	addi	r2,r2,4
 4011848:	1007883a 	mov	r3,r2
 401184c:	e0bff917 	ldw	r2,-28(fp)
 4011850:	10800817 	ldw	r2,32(r2)
 4011854:	10810014 	ori	r2,r2,1024
 4011858:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 401185c:	e0bff917 	ldw	r2,-28(fp)
 4011860:	10000915 	stw	zero,36(r2)
 4011864:	00000a06 	br	4011890 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 4011868:	e0bff917 	ldw	r2,-28(fp)
 401186c:	10c00917 	ldw	r3,36(r2)
 4011870:	00a00034 	movhi	r2,32768
 4011874:	10bfff04 	addi	r2,r2,-4
 4011878:	10c00536 	bltu	r2,r3,4011890 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 401187c:	e0bff917 	ldw	r2,-28(fp)
 4011880:	10800917 	ldw	r2,36(r2)
 4011884:	10c00044 	addi	r3,r2,1
 4011888:	e0bff917 	ldw	r2,-28(fp)
 401188c:	10c00915 	stw	r3,36(r2)
 4011890:	d0a74417 	ldw	r2,-25328(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 4011894:	e037883a 	mov	sp,fp
 4011898:	df000017 	ldw	fp,0(sp)
 401189c:	dec00104 	addi	sp,sp,4
 40118a0:	f800283a 	ret

040118a4 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 40118a4:	defffd04 	addi	sp,sp,-12
 40118a8:	df000215 	stw	fp,8(sp)
 40118ac:	df000204 	addi	fp,sp,8
 40118b0:	e13ffe15 	stw	r4,-8(fp)
 40118b4:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 40118b8:	00000506 	br	40118d0 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 40118bc:	e0bfff17 	ldw	r2,-4(fp)
 40118c0:	1090000c 	andi	r2,r2,16384
 40118c4:	10000226 	beq	r2,zero,40118d0 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 40118c8:	00bffd44 	movi	r2,-11
 40118cc:	00000b06 	br	40118fc <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 40118d0:	e0bffe17 	ldw	r2,-8(fp)
 40118d4:	10c00d17 	ldw	r3,52(r2)
 40118d8:	e0bffe17 	ldw	r2,-8(fp)
 40118dc:	10800c17 	ldw	r2,48(r2)
 40118e0:	18800526 	beq	r3,r2,40118f8 <altera_avalon_jtag_uart_close+0x54>
 40118e4:	e0bffe17 	ldw	r2,-8(fp)
 40118e8:	10c00917 	ldw	r3,36(r2)
 40118ec:	e0bffe17 	ldw	r2,-8(fp)
 40118f0:	10800117 	ldw	r2,4(r2)
 40118f4:	18bff136 	bltu	r3,r2,40118bc <__ram_exceptions_end+0xfbff1674>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 40118f8:	0005883a 	mov	r2,zero
}
 40118fc:	e037883a 	mov	sp,fp
 4011900:	df000017 	ldw	fp,0(sp)
 4011904:	dec00104 	addi	sp,sp,4
 4011908:	f800283a 	ret

0401190c <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 401190c:	defffa04 	addi	sp,sp,-24
 4011910:	df000515 	stw	fp,20(sp)
 4011914:	df000504 	addi	fp,sp,20
 4011918:	e13ffd15 	stw	r4,-12(fp)
 401191c:	e17ffe15 	stw	r5,-8(fp)
 4011920:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 4011924:	00bff9c4 	movi	r2,-25
 4011928:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 401192c:	e0bffe17 	ldw	r2,-8(fp)
 4011930:	10da8060 	cmpeqi	r3,r2,27137
 4011934:	1800031e 	bne	r3,zero,4011944 <altera_avalon_jtag_uart_ioctl+0x38>
 4011938:	109a80a0 	cmpeqi	r2,r2,27138
 401193c:	1000181e 	bne	r2,zero,40119a0 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
 4011940:	00002906 	br	40119e8 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 4011944:	e0bffd17 	ldw	r2,-12(fp)
 4011948:	10c00117 	ldw	r3,4(r2)
 401194c:	00a00034 	movhi	r2,32768
 4011950:	10bfffc4 	addi	r2,r2,-1
 4011954:	18802126 	beq	r3,r2,40119dc <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
 4011958:	e0bfff17 	ldw	r2,-4(fp)
 401195c:	10800017 	ldw	r2,0(r2)
 4011960:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 4011964:	e0bffc17 	ldw	r2,-16(fp)
 4011968:	10800090 	cmplti	r2,r2,2
 401196c:	1000061e 	bne	r2,zero,4011988 <altera_avalon_jtag_uart_ioctl+0x7c>
 4011970:	e0fffc17 	ldw	r3,-16(fp)
 4011974:	00a00034 	movhi	r2,32768
 4011978:	10bfffc4 	addi	r2,r2,-1
 401197c:	18800226 	beq	r3,r2,4011988 <altera_avalon_jtag_uart_ioctl+0x7c>
 4011980:	e0bffc17 	ldw	r2,-16(fp)
 4011984:	00000206 	br	4011990 <altera_avalon_jtag_uart_ioctl+0x84>
 4011988:	00a00034 	movhi	r2,32768
 401198c:	10bfff84 	addi	r2,r2,-2
 4011990:	e0fffd17 	ldw	r3,-12(fp)
 4011994:	18800115 	stw	r2,4(r3)
      rc = 0;
 4011998:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 401199c:	00000f06 	br	40119dc <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 40119a0:	e0bffd17 	ldw	r2,-12(fp)
 40119a4:	10c00117 	ldw	r3,4(r2)
 40119a8:	00a00034 	movhi	r2,32768
 40119ac:	10bfffc4 	addi	r2,r2,-1
 40119b0:	18800c26 	beq	r3,r2,40119e4 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 40119b4:	e0bffd17 	ldw	r2,-12(fp)
 40119b8:	10c00917 	ldw	r3,36(r2)
 40119bc:	e0bffd17 	ldw	r2,-12(fp)
 40119c0:	10800117 	ldw	r2,4(r2)
 40119c4:	1885803a 	cmpltu	r2,r3,r2
 40119c8:	10c03fcc 	andi	r3,r2,255
 40119cc:	e0bfff17 	ldw	r2,-4(fp)
 40119d0:	10c00015 	stw	r3,0(r2)
      rc = 0;
 40119d4:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 40119d8:	00000206 	br	40119e4 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
 40119dc:	0001883a 	nop
 40119e0:	00000106 	br	40119e8 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
 40119e4:	0001883a 	nop

  default:
    break;
  }

  return rc;
 40119e8:	e0bffb17 	ldw	r2,-20(fp)
}
 40119ec:	e037883a 	mov	sp,fp
 40119f0:	df000017 	ldw	fp,0(sp)
 40119f4:	dec00104 	addi	sp,sp,4
 40119f8:	f800283a 	ret

040119fc <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 40119fc:	defff304 	addi	sp,sp,-52
 4011a00:	dfc00c15 	stw	ra,48(sp)
 4011a04:	df000b15 	stw	fp,44(sp)
 4011a08:	df000b04 	addi	fp,sp,44
 4011a0c:	e13ffc15 	stw	r4,-16(fp)
 4011a10:	e17ffd15 	stw	r5,-12(fp)
 4011a14:	e1bffe15 	stw	r6,-8(fp)
 4011a18:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 4011a1c:	e0bffd17 	ldw	r2,-12(fp)
 4011a20:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 4011a24:	00004706 	br	4011b44 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 4011a28:	e0bffc17 	ldw	r2,-16(fp)
 4011a2c:	10800a17 	ldw	r2,40(r2)
 4011a30:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 4011a34:	e0bffc17 	ldw	r2,-16(fp)
 4011a38:	10800b17 	ldw	r2,44(r2)
 4011a3c:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 4011a40:	e0fff717 	ldw	r3,-36(fp)
 4011a44:	e0bff817 	ldw	r2,-32(fp)
 4011a48:	18800536 	bltu	r3,r2,4011a60 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 4011a4c:	e0fff717 	ldw	r3,-36(fp)
 4011a50:	e0bff817 	ldw	r2,-32(fp)
 4011a54:	1885c83a 	sub	r2,r3,r2
 4011a58:	e0bff615 	stw	r2,-40(fp)
 4011a5c:	00000406 	br	4011a70 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 4011a60:	00c20004 	movi	r3,2048
 4011a64:	e0bff817 	ldw	r2,-32(fp)
 4011a68:	1885c83a 	sub	r2,r3,r2
 4011a6c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 4011a70:	e0bff617 	ldw	r2,-40(fp)
 4011a74:	10001e26 	beq	r2,zero,4011af0 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
 4011a78:	e0fffe17 	ldw	r3,-8(fp)
 4011a7c:	e0bff617 	ldw	r2,-40(fp)
 4011a80:	1880022e 	bgeu	r3,r2,4011a8c <altera_avalon_jtag_uart_read+0x90>
        n = space;
 4011a84:	e0bffe17 	ldw	r2,-8(fp)
 4011a88:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 4011a8c:	e0bffc17 	ldw	r2,-16(fp)
 4011a90:	10c00e04 	addi	r3,r2,56
 4011a94:	e0bff817 	ldw	r2,-32(fp)
 4011a98:	1885883a 	add	r2,r3,r2
 4011a9c:	e1bff617 	ldw	r6,-40(fp)
 4011aa0:	100b883a 	mov	r5,r2
 4011aa4:	e13ff517 	ldw	r4,-44(fp)
 4011aa8:	40083240 	call	4008324 <memcpy>
      ptr   += n;
 4011aac:	e0fff517 	ldw	r3,-44(fp)
 4011ab0:	e0bff617 	ldw	r2,-40(fp)
 4011ab4:	1885883a 	add	r2,r3,r2
 4011ab8:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 4011abc:	e0fffe17 	ldw	r3,-8(fp)
 4011ac0:	e0bff617 	ldw	r2,-40(fp)
 4011ac4:	1885c83a 	sub	r2,r3,r2
 4011ac8:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 4011acc:	e0fff817 	ldw	r3,-32(fp)
 4011ad0:	e0bff617 	ldw	r2,-40(fp)
 4011ad4:	1885883a 	add	r2,r3,r2
 4011ad8:	10c1ffcc 	andi	r3,r2,2047
 4011adc:	e0bffc17 	ldw	r2,-16(fp)
 4011ae0:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 4011ae4:	e0bffe17 	ldw	r2,-8(fp)
 4011ae8:	00bfcf16 	blt	zero,r2,4011a28 <__ram_exceptions_end+0xfbff17e0>
 4011aec:	00000106 	br	4011af4 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
 4011af0:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
 4011af4:	e0fff517 	ldw	r3,-44(fp)
 4011af8:	e0bffd17 	ldw	r2,-12(fp)
 4011afc:	1880141e 	bne	r3,r2,4011b50 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 4011b00:	e0bfff17 	ldw	r2,-4(fp)
 4011b04:	1090000c 	andi	r2,r2,16384
 4011b08:	1000131e 	bne	r2,zero,4011b58 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 4011b0c:	0001883a 	nop
 4011b10:	e0bffc17 	ldw	r2,-16(fp)
 4011b14:	10c00a17 	ldw	r3,40(r2)
 4011b18:	e0bff717 	ldw	r2,-36(fp)
 4011b1c:	1880051e 	bne	r3,r2,4011b34 <altera_avalon_jtag_uart_read+0x138>
 4011b20:	e0bffc17 	ldw	r2,-16(fp)
 4011b24:	10c00917 	ldw	r3,36(r2)
 4011b28:	e0bffc17 	ldw	r2,-16(fp)
 4011b2c:	10800117 	ldw	r2,4(r2)
 4011b30:	18bff736 	bltu	r3,r2,4011b10 <__ram_exceptions_end+0xfbff18c8>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 4011b34:	e0bffc17 	ldw	r2,-16(fp)
 4011b38:	10c00a17 	ldw	r3,40(r2)
 4011b3c:	e0bff717 	ldw	r2,-36(fp)
 4011b40:	18800726 	beq	r3,r2,4011b60 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 4011b44:	e0bffe17 	ldw	r2,-8(fp)
 4011b48:	00bfb716 	blt	zero,r2,4011a28 <__ram_exceptions_end+0xfbff17e0>
 4011b4c:	00000506 	br	4011b64 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
 4011b50:	0001883a 	nop
 4011b54:	00000306 	br	4011b64 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
 4011b58:	0001883a 	nop
 4011b5c:	00000106 	br	4011b64 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
 4011b60:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 4011b64:	e0fff517 	ldw	r3,-44(fp)
 4011b68:	e0bffd17 	ldw	r2,-12(fp)
 4011b6c:	18801826 	beq	r3,r2,4011bd0 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 4011b70:	0005303a 	rdctl	r2,status
 4011b74:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 4011b78:	e0fffb17 	ldw	r3,-20(fp)
 4011b7c:	00bfff84 	movi	r2,-2
 4011b80:	1884703a 	and	r2,r3,r2
 4011b84:	1001703a 	wrctl	status,r2
  
  return context;
 4011b88:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 4011b8c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 4011b90:	e0bffc17 	ldw	r2,-16(fp)
 4011b94:	10800817 	ldw	r2,32(r2)
 4011b98:	10c00054 	ori	r3,r2,1
 4011b9c:	e0bffc17 	ldw	r2,-16(fp)
 4011ba0:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 4011ba4:	e0bffc17 	ldw	r2,-16(fp)
 4011ba8:	10800017 	ldw	r2,0(r2)
 4011bac:	10800104 	addi	r2,r2,4
 4011bb0:	1007883a 	mov	r3,r2
 4011bb4:	e0bffc17 	ldw	r2,-16(fp)
 4011bb8:	10800817 	ldw	r2,32(r2)
 4011bbc:	18800035 	stwio	r2,0(r3)
 4011bc0:	e0bffa17 	ldw	r2,-24(fp)
 4011bc4:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 4011bc8:	e0bff917 	ldw	r2,-28(fp)
 4011bcc:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 4011bd0:	e0fff517 	ldw	r3,-44(fp)
 4011bd4:	e0bffd17 	ldw	r2,-12(fp)
 4011bd8:	18800426 	beq	r3,r2,4011bec <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
 4011bdc:	e0fff517 	ldw	r3,-44(fp)
 4011be0:	e0bffd17 	ldw	r2,-12(fp)
 4011be4:	1885c83a 	sub	r2,r3,r2
 4011be8:	00000606 	br	4011c04 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
 4011bec:	e0bfff17 	ldw	r2,-4(fp)
 4011bf0:	1090000c 	andi	r2,r2,16384
 4011bf4:	10000226 	beq	r2,zero,4011c00 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
 4011bf8:	00bffd44 	movi	r2,-11
 4011bfc:	00000106 	br	4011c04 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
 4011c00:	00bffec4 	movi	r2,-5
}
 4011c04:	e037883a 	mov	sp,fp
 4011c08:	dfc00117 	ldw	ra,4(sp)
 4011c0c:	df000017 	ldw	fp,0(sp)
 4011c10:	dec00204 	addi	sp,sp,8
 4011c14:	f800283a 	ret

04011c18 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 4011c18:	defff304 	addi	sp,sp,-52
 4011c1c:	dfc00c15 	stw	ra,48(sp)
 4011c20:	df000b15 	stw	fp,44(sp)
 4011c24:	df000b04 	addi	fp,sp,44
 4011c28:	e13ffc15 	stw	r4,-16(fp)
 4011c2c:	e17ffd15 	stw	r5,-12(fp)
 4011c30:	e1bffe15 	stw	r6,-8(fp)
 4011c34:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 4011c38:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 4011c3c:	e0bffd17 	ldw	r2,-12(fp)
 4011c40:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 4011c44:	00003706 	br	4011d24 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 4011c48:	e0bffc17 	ldw	r2,-16(fp)
 4011c4c:	10800c17 	ldw	r2,48(r2)
 4011c50:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
 4011c54:	e0bffc17 	ldw	r2,-16(fp)
 4011c58:	10800d17 	ldw	r2,52(r2)
 4011c5c:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 4011c60:	e0fff917 	ldw	r3,-28(fp)
 4011c64:	e0bff517 	ldw	r2,-44(fp)
 4011c68:	1880062e 	bgeu	r3,r2,4011c84 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 4011c6c:	e0fff517 	ldw	r3,-44(fp)
 4011c70:	e0bff917 	ldw	r2,-28(fp)
 4011c74:	1885c83a 	sub	r2,r3,r2
 4011c78:	10bfffc4 	addi	r2,r2,-1
 4011c7c:	e0bff615 	stw	r2,-40(fp)
 4011c80:	00000b06 	br	4011cb0 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 4011c84:	e0bff517 	ldw	r2,-44(fp)
 4011c88:	10000526 	beq	r2,zero,4011ca0 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 4011c8c:	00c20004 	movi	r3,2048
 4011c90:	e0bff917 	ldw	r2,-28(fp)
 4011c94:	1885c83a 	sub	r2,r3,r2
 4011c98:	e0bff615 	stw	r2,-40(fp)
 4011c9c:	00000406 	br	4011cb0 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 4011ca0:	00c1ffc4 	movi	r3,2047
 4011ca4:	e0bff917 	ldw	r2,-28(fp)
 4011ca8:	1885c83a 	sub	r2,r3,r2
 4011cac:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 4011cb0:	e0bff617 	ldw	r2,-40(fp)
 4011cb4:	10001e26 	beq	r2,zero,4011d30 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
 4011cb8:	e0fffe17 	ldw	r3,-8(fp)
 4011cbc:	e0bff617 	ldw	r2,-40(fp)
 4011cc0:	1880022e 	bgeu	r3,r2,4011ccc <altera_avalon_jtag_uart_write+0xb4>
        n = count;
 4011cc4:	e0bffe17 	ldw	r2,-8(fp)
 4011cc8:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 4011ccc:	e0bffc17 	ldw	r2,-16(fp)
 4011cd0:	10c20e04 	addi	r3,r2,2104
 4011cd4:	e0bff917 	ldw	r2,-28(fp)
 4011cd8:	1885883a 	add	r2,r3,r2
 4011cdc:	e1bff617 	ldw	r6,-40(fp)
 4011ce0:	e17ffd17 	ldw	r5,-12(fp)
 4011ce4:	1009883a 	mov	r4,r2
 4011ce8:	40083240 	call	4008324 <memcpy>
      ptr   += n;
 4011cec:	e0fffd17 	ldw	r3,-12(fp)
 4011cf0:	e0bff617 	ldw	r2,-40(fp)
 4011cf4:	1885883a 	add	r2,r3,r2
 4011cf8:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 4011cfc:	e0fffe17 	ldw	r3,-8(fp)
 4011d00:	e0bff617 	ldw	r2,-40(fp)
 4011d04:	1885c83a 	sub	r2,r3,r2
 4011d08:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 4011d0c:	e0fff917 	ldw	r3,-28(fp)
 4011d10:	e0bff617 	ldw	r2,-40(fp)
 4011d14:	1885883a 	add	r2,r3,r2
 4011d18:	10c1ffcc 	andi	r3,r2,2047
 4011d1c:	e0bffc17 	ldw	r2,-16(fp)
 4011d20:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 4011d24:	e0bffe17 	ldw	r2,-8(fp)
 4011d28:	00bfc716 	blt	zero,r2,4011c48 <__ram_exceptions_end+0xfbff1a00>
 4011d2c:	00000106 	br	4011d34 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
 4011d30:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 4011d34:	0005303a 	rdctl	r2,status
 4011d38:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 4011d3c:	e0fffb17 	ldw	r3,-20(fp)
 4011d40:	00bfff84 	movi	r2,-2
 4011d44:	1884703a 	and	r2,r3,r2
 4011d48:	1001703a 	wrctl	status,r2
  
  return context;
 4011d4c:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 4011d50:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 4011d54:	e0bffc17 	ldw	r2,-16(fp)
 4011d58:	10800817 	ldw	r2,32(r2)
 4011d5c:	10c00094 	ori	r3,r2,2
 4011d60:	e0bffc17 	ldw	r2,-16(fp)
 4011d64:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 4011d68:	e0bffc17 	ldw	r2,-16(fp)
 4011d6c:	10800017 	ldw	r2,0(r2)
 4011d70:	10800104 	addi	r2,r2,4
 4011d74:	1007883a 	mov	r3,r2
 4011d78:	e0bffc17 	ldw	r2,-16(fp)
 4011d7c:	10800817 	ldw	r2,32(r2)
 4011d80:	18800035 	stwio	r2,0(r3)
 4011d84:	e0bffa17 	ldw	r2,-24(fp)
 4011d88:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 4011d8c:	e0bff817 	ldw	r2,-32(fp)
 4011d90:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 4011d94:	e0bffe17 	ldw	r2,-8(fp)
 4011d98:	0080100e 	bge	zero,r2,4011ddc <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
 4011d9c:	e0bfff17 	ldw	r2,-4(fp)
 4011da0:	1090000c 	andi	r2,r2,16384
 4011da4:	1000101e 	bne	r2,zero,4011de8 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 4011da8:	0001883a 	nop
 4011dac:	e0bffc17 	ldw	r2,-16(fp)
 4011db0:	10c00d17 	ldw	r3,52(r2)
 4011db4:	e0bff517 	ldw	r2,-44(fp)
 4011db8:	1880051e 	bne	r3,r2,4011dd0 <altera_avalon_jtag_uart_write+0x1b8>
 4011dbc:	e0bffc17 	ldw	r2,-16(fp)
 4011dc0:	10c00917 	ldw	r3,36(r2)
 4011dc4:	e0bffc17 	ldw	r2,-16(fp)
 4011dc8:	10800117 	ldw	r2,4(r2)
 4011dcc:	18bff736 	bltu	r3,r2,4011dac <__ram_exceptions_end+0xfbff1b64>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 4011dd0:	e0bffc17 	ldw	r2,-16(fp)
 4011dd4:	10800917 	ldw	r2,36(r2)
 4011dd8:	1000051e 	bne	r2,zero,4011df0 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
 4011ddc:	e0bffe17 	ldw	r2,-8(fp)
 4011de0:	00bfd016 	blt	zero,r2,4011d24 <__ram_exceptions_end+0xfbff1adc>
 4011de4:	00000306 	br	4011df4 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
 4011de8:	0001883a 	nop
 4011dec:	00000106 	br	4011df4 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
 4011df0:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 4011df4:	e0fffd17 	ldw	r3,-12(fp)
 4011df8:	e0bff717 	ldw	r2,-36(fp)
 4011dfc:	18800426 	beq	r3,r2,4011e10 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
 4011e00:	e0fffd17 	ldw	r3,-12(fp)
 4011e04:	e0bff717 	ldw	r2,-36(fp)
 4011e08:	1885c83a 	sub	r2,r3,r2
 4011e0c:	00000606 	br	4011e28 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
 4011e10:	e0bfff17 	ldw	r2,-4(fp)
 4011e14:	1090000c 	andi	r2,r2,16384
 4011e18:	10000226 	beq	r2,zero,4011e24 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
 4011e1c:	00bffd44 	movi	r2,-11
 4011e20:	00000106 	br	4011e28 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 4011e24:	00bffec4 	movi	r2,-5
}
 4011e28:	e037883a 	mov	sp,fp
 4011e2c:	dfc00117 	ldw	ra,4(sp)
 4011e30:	df000017 	ldw	fp,0(sp)
 4011e34:	dec00204 	addi	sp,sp,8
 4011e38:	f800283a 	ret

04011e3c <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
 4011e3c:	defff904 	addi	sp,sp,-28
 4011e40:	dfc00615 	stw	ra,24(sp)
 4011e44:	df000515 	stw	fp,20(sp)
 4011e48:	df000504 	addi	fp,sp,20
 4011e4c:	e13ffe15 	stw	r4,-8(fp)
 4011e50:	e17fff15 	stw	r5,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
 4011e54:	0007883a 	mov	r3,zero
 4011e58:	e0bffe17 	ldw	r2,-8(fp)
 4011e5c:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
 4011e60:	e0bffe17 	ldw	r2,-8(fp)
 4011e64:	10800104 	addi	r2,r2,4
 4011e68:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 4011e6c:	0005303a 	rdctl	r2,status
 4011e70:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 4011e74:	e0fffc17 	ldw	r3,-16(fp)
 4011e78:	00bfff84 	movi	r2,-2
 4011e7c:	1884703a 	and	r2,r3,r2
 4011e80:	1001703a 	wrctl	status,r2
  
  return context;
 4011e84:	e0bffc17 	ldw	r2,-16(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
 4011e88:	e0bffb15 	stw	r2,-20(fp)
  alt_tick ();
 4011e8c:	4013f300 	call	4013f30 <alt_tick>
 4011e90:	e0bffb17 	ldw	r2,-20(fp)
 4011e94:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 4011e98:	e0bffd17 	ldw	r2,-12(fp)
 4011e9c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
 4011ea0:	0001883a 	nop
 4011ea4:	e037883a 	mov	sp,fp
 4011ea8:	dfc00117 	ldw	ra,4(sp)
 4011eac:	df000017 	ldw	fp,0(sp)
 4011eb0:	dec00204 	addi	sp,sp,8
 4011eb4:	f800283a 	ret

04011eb8 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
 4011eb8:	defff904 	addi	sp,sp,-28
 4011ebc:	dfc00615 	stw	ra,24(sp)
 4011ec0:	df000515 	stw	fp,20(sp)
 4011ec4:	df000504 	addi	fp,sp,20
 4011ec8:	e13ffc15 	stw	r4,-16(fp)
 4011ecc:	e17ffd15 	stw	r5,-12(fp)
 4011ed0:	e1bffe15 	stw	r6,-8(fp)
 4011ed4:	e1ffff15 	stw	r7,-4(fp)
 4011ed8:	e0bfff17 	ldw	r2,-4(fp)
 4011edc:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
 4011ee0:	d0a74417 	ldw	r2,-25328(gp)
 4011ee4:	1000021e 	bne	r2,zero,4011ef0 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
 4011ee8:	e0bffb17 	ldw	r2,-20(fp)
 4011eec:	d0a74415 	stw	r2,-25328(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
 4011ef0:	e0bffc17 	ldw	r2,-16(fp)
 4011ef4:	10800104 	addi	r2,r2,4
 4011ef8:	00c001c4 	movi	r3,7
 4011efc:	10c00035 	stwio	r3,0(r2)
  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
 4011f00:	01810074 	movhi	r6,1025
 4011f04:	31878f04 	addi	r6,r6,7740
 4011f08:	e17ffc17 	ldw	r5,-16(fp)
 4011f0c:	e13ffe17 	ldw	r4,-8(fp)
 4011f10:	4013ac00 	call	4013ac0 <alt_irq_register>
#endif  
}
 4011f14:	0001883a 	nop
 4011f18:	e037883a 	mov	sp,fp
 4011f1c:	dfc00117 	ldw	ra,4(sp)
 4011f20:	df000017 	ldw	fp,0(sp)
 4011f24:	dec00204 	addi	sp,sp,8
 4011f28:	f800283a 	ret

04011f2c <alt_up_rs232_enable_read_interrupt>:
#include "altera_up_avalon_rs232.h"
#include "altera_up_avalon_rs232_regs.h"


void alt_up_rs232_enable_read_interrupt(alt_up_rs232_dev *rs232)
{
 4011f2c:	defffd04 	addi	sp,sp,-12
 4011f30:	df000215 	stw	fp,8(sp)
 4011f34:	df000204 	addi	fp,sp,8
 4011f38:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
 4011f3c:	e0bfff17 	ldw	r2,-4(fp)
 4011f40:	10800a17 	ldw	r2,40(r2)
 4011f44:	10800104 	addi	r2,r2,4
 4011f48:	10800037 	ldwio	r2,0(r2)
 4011f4c:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 1 while maintaining other bits the same
	ctrl_reg |= ALT_UP_RS232_CONTROL_RE_MSK;
 4011f50:	e0bffe17 	ldw	r2,-8(fp)
 4011f54:	10800054 	ori	r2,r2,1
 4011f58:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_RS232_CONTROL(rs232->base, ctrl_reg);
 4011f5c:	e0bfff17 	ldw	r2,-4(fp)
 4011f60:	10800a17 	ldw	r2,40(r2)
 4011f64:	10800104 	addi	r2,r2,4
 4011f68:	1007883a 	mov	r3,r2
 4011f6c:	e0bffe17 	ldw	r2,-8(fp)
 4011f70:	18800035 	stwio	r2,0(r3)
}
 4011f74:	0001883a 	nop
 4011f78:	e037883a 	mov	sp,fp
 4011f7c:	df000017 	ldw	fp,0(sp)
 4011f80:	dec00104 	addi	sp,sp,4
 4011f84:	f800283a 	ret

04011f88 <alt_up_rs232_disable_read_interrupt>:

void alt_up_rs232_disable_read_interrupt(alt_up_rs232_dev *rs232)
{
 4011f88:	defffd04 	addi	sp,sp,-12
 4011f8c:	df000215 	stw	fp,8(sp)
 4011f90:	df000204 	addi	fp,sp,8
 4011f94:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
 4011f98:	e0bfff17 	ldw	r2,-4(fp)
 4011f9c:	10800a17 	ldw	r2,40(r2)
 4011fa0:	10800104 	addi	r2,r2,4
 4011fa4:	10800037 	ldwio	r2,0(r2)
 4011fa8:	e0bffe15 	stw	r2,-8(fp)
	// set RE to 0 while maintaining other bits the same
	ctrl_reg &= ~ALT_UP_RS232_CONTROL_RE_MSK;
 4011fac:	e0fffe17 	ldw	r3,-8(fp)
 4011fb0:	00bfff84 	movi	r2,-2
 4011fb4:	1884703a 	and	r2,r3,r2
 4011fb8:	e0bffe15 	stw	r2,-8(fp)
	IOWR_ALT_UP_RS232_CONTROL(rs232->base, ctrl_reg);
 4011fbc:	e0bfff17 	ldw	r2,-4(fp)
 4011fc0:	10800a17 	ldw	r2,40(r2)
 4011fc4:	10800104 	addi	r2,r2,4
 4011fc8:	1007883a 	mov	r3,r2
 4011fcc:	e0bffe17 	ldw	r2,-8(fp)
 4011fd0:	18800035 	stwio	r2,0(r3)
}
 4011fd4:	0001883a 	nop
 4011fd8:	e037883a 	mov	sp,fp
 4011fdc:	df000017 	ldw	fp,0(sp)
 4011fe0:	dec00104 	addi	sp,sp,4
 4011fe4:	f800283a 	ret

04011fe8 <alt_up_rs232_get_used_space_in_read_FIFO>:

unsigned alt_up_rs232_get_used_space_in_read_FIFO(alt_up_rs232_dev *rs232)
{
 4011fe8:	defffd04 	addi	sp,sp,-12
 4011fec:	df000215 	stw	fp,8(sp)
 4011ff0:	df000204 	addi	fp,sp,8
 4011ff4:	e13fff15 	stw	r4,-4(fp)
	alt_u16 ravail = 0;
 4011ff8:	e03ffe0d 	sth	zero,-8(fp)
	// we can only read the 16 bits for RAVAIL --- a read of DATA will discard the data
//	ravail = IORD_16DIRECT(IOADDR_ALT_UP_RS232_DATA(rs232->base), 2); 
	ravail = IORD_ALT_UP_RS232_RAVAIL(rs232->base); 
 4011ffc:	e0bfff17 	ldw	r2,-4(fp)
 4012000:	10800a17 	ldw	r2,40(r2)
 4012004:	10800084 	addi	r2,r2,2
 4012008:	1080002b 	ldhuio	r2,0(r2)
 401200c:	10bfffcc 	andi	r2,r2,65535
 4012010:	e0bffe0d 	sth	r2,-8(fp)
//	return ravail;
	return (ravail & ALT_UP_RS232_RAVAIL_MSK) >> ALT_UP_RS232_RAVAIL_OFST;
 4012014:	e0bffe0b 	ldhu	r2,-8(fp)
}
 4012018:	e037883a 	mov	sp,fp
 401201c:	df000017 	ldw	fp,0(sp)
 4012020:	dec00104 	addi	sp,sp,4
 4012024:	f800283a 	ret

04012028 <alt_up_rs232_get_available_space_in_write_FIFO>:

unsigned alt_up_rs232_get_available_space_in_write_FIFO(alt_up_rs232_dev *rs232)
{
 4012028:	defffd04 	addi	sp,sp,-12
 401202c:	df000215 	stw	fp,8(sp)
 4012030:	df000204 	addi	fp,sp,8
 4012034:	e13fff15 	stw	r4,-4(fp)
	alt_u32 ctrl_reg;
	ctrl_reg = IORD_ALT_UP_RS232_CONTROL(rs232->base); 
 4012038:	e0bfff17 	ldw	r2,-4(fp)
 401203c:	10800a17 	ldw	r2,40(r2)
 4012040:	10800104 	addi	r2,r2,4
 4012044:	10800037 	ldwio	r2,0(r2)
 4012048:	e0bffe15 	stw	r2,-8(fp)
	return (ctrl_reg & ALT_UP_RS232_CONTROL_WSPACE_MSK) >> ALT_UP_RS232_CONTROL_WSPACE_OFST;
 401204c:	e0bffe17 	ldw	r2,-8(fp)
 4012050:	1004d43a 	srli	r2,r2,16
}
 4012054:	e037883a 	mov	sp,fp
 4012058:	df000017 	ldw	fp,0(sp)
 401205c:	dec00104 	addi	sp,sp,4
 4012060:	f800283a 	ret

04012064 <alt_up_rs232_check_parity>:

int alt_up_rs232_check_parity(alt_u32 data_reg)
{
 4012064:	defffd04 	addi	sp,sp,-12
 4012068:	df000215 	stw	fp,8(sp)
 401206c:	df000204 	addi	fp,sp,8
 4012070:	e13fff15 	stw	r4,-4(fp)
	unsigned parity_error = (data_reg & ALT_UP_RS232_DATA_PE_MSK) >> ALT_UP_RS232_DATA_PE_OFST;
 4012074:	e0bfff17 	ldw	r2,-4(fp)
 4012078:	1080800c 	andi	r2,r2,512
 401207c:	1004d27a 	srli	r2,r2,9
 4012080:	e0bffe15 	stw	r2,-8(fp)
	return (parity_error ? -1 : 0);
 4012084:	e0bffe17 	ldw	r2,-8(fp)
 4012088:	10000226 	beq	r2,zero,4012094 <alt_up_rs232_check_parity+0x30>
 401208c:	00bfffc4 	movi	r2,-1
 4012090:	00000106 	br	4012098 <alt_up_rs232_check_parity+0x34>
 4012094:	0005883a 	mov	r2,zero
}
 4012098:	e037883a 	mov	sp,fp
 401209c:	df000017 	ldw	fp,0(sp)
 40120a0:	dec00104 	addi	sp,sp,4
 40120a4:	f800283a 	ret

040120a8 <alt_up_rs232_write_data>:

int alt_up_rs232_write_data(alt_up_rs232_dev *rs232, alt_u8 data)
{
 40120a8:	defffd04 	addi	sp,sp,-12
 40120ac:	df000215 	stw	fp,8(sp)
 40120b0:	df000204 	addi	fp,sp,8
 40120b4:	e13ffe15 	stw	r4,-8(fp)
 40120b8:	2805883a 	mov	r2,r5
 40120bc:	e0bfff05 	stb	r2,-4(fp)
	/*alt_u32 data_reg;
	data_reg = IORD_ALT_UP_RS232_DATA(rs232->base);*/
    
	// we can write directly without thinking about other bit fields for this
	// case ONLY, because only DATA field of the data register is writable
	IOWR_ALT_UP_RS232_DATA(rs232->base, (data>>ALT_UP_RS232_DATA_DATA_OFST) & ALT_UP_RS232_DATA_DATA_MSK);
 40120c0:	e0bffe17 	ldw	r2,-8(fp)
 40120c4:	10800a17 	ldw	r2,40(r2)
 40120c8:	1007883a 	mov	r3,r2
 40120cc:	e0bfff03 	ldbu	r2,-4(fp)
 40120d0:	18800035 	stwio	r2,0(r3)
	return 0;
 40120d4:	0005883a 	mov	r2,zero
}
 40120d8:	e037883a 	mov	sp,fp
 40120dc:	df000017 	ldw	fp,0(sp)
 40120e0:	dec00104 	addi	sp,sp,4
 40120e4:	f800283a 	ret

040120e8 <alt_up_rs232_read_data>:

int alt_up_rs232_read_data(alt_up_rs232_dev *rs232, alt_u8 *data, alt_u8 *parity_error)
{
 40120e8:	defffa04 	addi	sp,sp,-24
 40120ec:	dfc00515 	stw	ra,20(sp)
 40120f0:	df000415 	stw	fp,16(sp)
 40120f4:	df000404 	addi	fp,sp,16
 40120f8:	e13ffd15 	stw	r4,-12(fp)
 40120fc:	e17ffe15 	stw	r5,-8(fp)
 4012100:	e1bfff15 	stw	r6,-4(fp)
	alt_u32 data_reg;
	data_reg = IORD_ALT_UP_RS232_DATA(rs232->base);
 4012104:	e0bffd17 	ldw	r2,-12(fp)
 4012108:	10800a17 	ldw	r2,40(r2)
 401210c:	10800037 	ldwio	r2,0(r2)
 4012110:	e0bffc15 	stw	r2,-16(fp)
	*data = (data_reg & ALT_UP_RS232_DATA_DATA_MSK) >> ALT_UP_RS232_DATA_DATA_OFST;
 4012114:	e0bffc17 	ldw	r2,-16(fp)
 4012118:	1007883a 	mov	r3,r2
 401211c:	e0bffe17 	ldw	r2,-8(fp)
 4012120:	10c00005 	stb	r3,0(r2)
	*parity_error = alt_up_rs232_check_parity(data_reg);
 4012124:	e13ffc17 	ldw	r4,-16(fp)
 4012128:	40120640 	call	4012064 <alt_up_rs232_check_parity>
 401212c:	1007883a 	mov	r3,r2
 4012130:	e0bfff17 	ldw	r2,-4(fp)
 4012134:	10c00005 	stb	r3,0(r2)
	return (((data_reg & ALT_UP_RS232_DATA_RVALID_MSK) >> ALT_UP_RS232_DATA_RVALID_OFST) - 1);
 4012138:	e0bffc17 	ldw	r2,-16(fp)
 401213c:	10a0000c 	andi	r2,r2,32768
 4012140:	1004d3fa 	srli	r2,r2,15
 4012144:	10bfffc4 	addi	r2,r2,-1
}
 4012148:	e037883a 	mov	sp,fp
 401214c:	dfc00117 	ldw	ra,4(sp)
 4012150:	df000017 	ldw	fp,0(sp)
 4012154:	dec00204 	addi	sp,sp,8
 4012158:	f800283a 	ret

0401215c <alt_up_rs232_read_fd>:

int alt_up_rs232_read_fd (alt_fd* fd, char* ptr, int len)
{
 401215c:	defff804 	addi	sp,sp,-32
 4012160:	dfc00715 	stw	ra,28(sp)
 4012164:	df000615 	stw	fp,24(sp)
 4012168:	df000604 	addi	fp,sp,24
 401216c:	e13ffd15 	stw	r4,-12(fp)
 4012170:	e17ffe15 	stw	r5,-8(fp)
 4012174:	e1bfff15 	stw	r6,-4(fp)
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
 4012178:	e0bffd17 	ldw	r2,-12(fp)
 401217c:	10800017 	ldw	r2,0(r2)
 4012180:	e0bffb15 	stw	r2,-20(fp)
	int count = 0;
 4012184:	e03ffa15 	stw	zero,-24(fp)
	alt_u8 parity_error;
	while(len--)
 4012188:	00000c06 	br	40121bc <alt_up_rs232_read_fd+0x60>
	{
		if (alt_up_rs232_read_data(rs232, (alt_u8 *)ptr++, &parity_error)==0)
 401218c:	e0bffe17 	ldw	r2,-8(fp)
 4012190:	10c00044 	addi	r3,r2,1
 4012194:	e0fffe15 	stw	r3,-8(fp)
 4012198:	e0fffc04 	addi	r3,fp,-16
 401219c:	180d883a 	mov	r6,r3
 40121a0:	100b883a 	mov	r5,r2
 40121a4:	e13ffb17 	ldw	r4,-20(fp)
 40121a8:	40120e80 	call	40120e8 <alt_up_rs232_read_data>
 40121ac:	1000081e 	bne	r2,zero,40121d0 <alt_up_rs232_read_fd+0x74>
			count++;
 40121b0:	e0bffa17 	ldw	r2,-24(fp)
 40121b4:	10800044 	addi	r2,r2,1
 40121b8:	e0bffa15 	stw	r2,-24(fp)
int alt_up_rs232_read_fd (alt_fd* fd, char* ptr, int len)
{
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
	int count = 0;
	alt_u8 parity_error;
	while(len--)
 40121bc:	e0bfff17 	ldw	r2,-4(fp)
 40121c0:	10ffffc4 	addi	r3,r2,-1
 40121c4:	e0ffff15 	stw	r3,-4(fp)
 40121c8:	103ff01e 	bne	r2,zero,401218c <__ram_exceptions_end+0xfbff1f44>
 40121cc:	00000106 	br	40121d4 <alt_up_rs232_read_fd+0x78>
	{
		if (alt_up_rs232_read_data(rs232, (alt_u8 *)ptr++, &parity_error)==0)
			count++;
		else
			break;
 40121d0:	0001883a 	nop
	}
	return count;
 40121d4:	e0bffa17 	ldw	r2,-24(fp)
}
 40121d8:	e037883a 	mov	sp,fp
 40121dc:	dfc00117 	ldw	ra,4(sp)
 40121e0:	df000017 	ldw	fp,0(sp)
 40121e4:	dec00204 	addi	sp,sp,8
 40121e8:	f800283a 	ret

040121ec <alt_up_rs232_write_fd>:

int alt_up_rs232_write_fd (alt_fd* fd, const char* ptr, int len)
{
 40121ec:	defff904 	addi	sp,sp,-28
 40121f0:	dfc00615 	stw	ra,24(sp)
 40121f4:	df000515 	stw	fp,20(sp)
 40121f8:	df000504 	addi	fp,sp,20
 40121fc:	e13ffd15 	stw	r4,-12(fp)
 4012200:	e17ffe15 	stw	r5,-8(fp)
 4012204:	e1bfff15 	stw	r6,-4(fp)
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
 4012208:	e0bffd17 	ldw	r2,-12(fp)
 401220c:	10800017 	ldw	r2,0(r2)
 4012210:	e0bffc15 	stw	r2,-16(fp)
	int count = 0;
 4012214:	e03ffb15 	stw	zero,-20(fp)
	while(len--)
 4012218:	00000d06 	br	4012250 <alt_up_rs232_write_fd+0x64>
	{
		if (alt_up_rs232_write_data(rs232, *ptr)==0)
 401221c:	e0bffe17 	ldw	r2,-8(fp)
 4012220:	10800003 	ldbu	r2,0(r2)
 4012224:	10803fcc 	andi	r2,r2,255
 4012228:	100b883a 	mov	r5,r2
 401222c:	e13ffc17 	ldw	r4,-16(fp)
 4012230:	40120a80 	call	40120a8 <alt_up_rs232_write_data>
 4012234:	10000b1e 	bne	r2,zero,4012264 <alt_up_rs232_write_fd+0x78>
		{
			count++;
 4012238:	e0bffb17 	ldw	r2,-20(fp)
 401223c:	10800044 	addi	r2,r2,1
 4012240:	e0bffb15 	stw	r2,-20(fp)
			ptr++;
 4012244:	e0bffe17 	ldw	r2,-8(fp)
 4012248:	10800044 	addi	r2,r2,1
 401224c:	e0bffe15 	stw	r2,-8(fp)

int alt_up_rs232_write_fd (alt_fd* fd, const char* ptr, int len)
{
	alt_up_rs232_dev *rs232 = (alt_up_rs232_dev*)fd->dev;
	int count = 0;
	while(len--)
 4012250:	e0bfff17 	ldw	r2,-4(fp)
 4012254:	10ffffc4 	addi	r3,r2,-1
 4012258:	e0ffff15 	stw	r3,-4(fp)
 401225c:	103fef1e 	bne	r2,zero,401221c <__ram_exceptions_end+0xfbff1fd4>
 4012260:	00000106 	br	4012268 <alt_up_rs232_write_fd+0x7c>
		{
			count++;
			ptr++;
		}
		else
			break;
 4012264:	0001883a 	nop
	}
	return count;
 4012268:	e0bffb17 	ldw	r2,-20(fp)
}
 401226c:	e037883a 	mov	sp,fp
 4012270:	dfc00117 	ldw	ra,4(sp)
 4012274:	df000017 	ldw	fp,0(sp)
 4012278:	dec00204 	addi	sp,sp,8
 401227c:	f800283a 	ret

04012280 <alt_up_rs232_open_dev>:

alt_up_rs232_dev* alt_up_rs232_open_dev(const char* name)
{
 4012280:	defffc04 	addi	sp,sp,-16
 4012284:	dfc00315 	stw	ra,12(sp)
 4012288:	df000215 	stw	fp,8(sp)
 401228c:	df000204 	addi	fp,sp,8
 4012290:	e13fff15 	stw	r4,-4(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_rs232_dev *dev = (alt_up_rs232_dev*)alt_find_dev(name, &alt_dev_list);
 4012294:	d1600904 	addi	r5,gp,-32732
 4012298:	e13fff17 	ldw	r4,-4(fp)
 401229c:	40138bc0 	call	40138bc <alt_find_dev>
 40122a0:	e0bffe15 	stw	r2,-8(fp)

  return dev;
 40122a4:	e0bffe17 	ldw	r2,-8(fp)
}
 40122a8:	e037883a 	mov	sp,fp
 40122ac:	dfc00117 	ldw	ra,4(sp)
 40122b0:	df000017 	ldw	fp,0(sp)
 40122b4:	dec00204 	addi	sp,sp,8
 40122b8:	f800283a 	ret

040122bc <alt_up_char_buffer_init>:
#include <priv/alt_file.h>

#include "altera_up_avalon_video_character_buffer_with_dma.h"
#include "altera_up_avalon_video_character_buffer_with_dma_regs.h"

void alt_up_char_buffer_init(alt_up_char_buffer_dev *char_buffer) {
 40122bc:	defffc04 	addi	sp,sp,-16
 40122c0:	dfc00315 	stw	ra,12(sp)
 40122c4:	df000215 	stw	fp,8(sp)
 40122c8:	df000204 	addi	fp,sp,8
 40122cc:	e13fff15 	stw	r4,-4(fp)
	char * name;
	name = (char *) char_buffer->dev.name;
 40122d0:	e0bfff17 	ldw	r2,-4(fp)
 40122d4:	10800217 	ldw	r2,8(r2)
 40122d8:	e0bffe15 	stw	r2,-8(fp)

	for ( ; (*name) != '\0'; name++) {
 40122dc:	00000b06 	br	401230c <alt_up_char_buffer_init+0x50>
		if (strcmp(name, "_avalon_char_buffer_slave") == 0) {
 40122e0:	01410074 	movhi	r5,1025
 40122e4:	2952ed04 	addi	r5,r5,19380
 40122e8:	e13ffe17 	ldw	r4,-8(fp)
 40122ec:	40006e40 	call	40006e4 <strcmp>
 40122f0:	1000031e 	bne	r2,zero,4012300 <alt_up_char_buffer_init+0x44>
			(*name) = '\0';
 40122f4:	e0bffe17 	ldw	r2,-8(fp)
 40122f8:	10000005 	stb	zero,0(r2)
			break;
 40122fc:	00000906 	br	4012324 <alt_up_char_buffer_init+0x68>

void alt_up_char_buffer_init(alt_up_char_buffer_dev *char_buffer) {
	char * name;
	name = (char *) char_buffer->dev.name;

	for ( ; (*name) != '\0'; name++) {
 4012300:	e0bffe17 	ldw	r2,-8(fp)
 4012304:	10800044 	addi	r2,r2,1
 4012308:	e0bffe15 	stw	r2,-8(fp)
 401230c:	e0bffe17 	ldw	r2,-8(fp)
 4012310:	10800003 	ldbu	r2,0(r2)
 4012314:	10803fcc 	andi	r2,r2,255
 4012318:	1080201c 	xori	r2,r2,128
 401231c:	10bfe004 	addi	r2,r2,-128
 4012320:	103fef1e 	bne	r2,zero,40122e0 <__ram_exceptions_end+0xfbff2098>
			(*name) = '\0';
			break;
		}
	}
	
	return;
 4012324:	0001883a 	nop
}
 4012328:	e037883a 	mov	sp,fp
 401232c:	dfc00117 	ldw	ra,4(sp)
 4012330:	df000017 	ldw	fp,0(sp)
 4012334:	dec00204 	addi	sp,sp,8
 4012338:	f800283a 	ret

0401233c <alt_up_char_buffer_open_dev>:

alt_up_char_buffer_dev* alt_up_char_buffer_open_dev(const char* name) {
 401233c:	defffc04 	addi	sp,sp,-16
 4012340:	dfc00315 	stw	ra,12(sp)
 4012344:	df000215 	stw	fp,8(sp)
 4012348:	df000204 	addi	fp,sp,8
 401234c:	e13fff15 	stw	r4,-4(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_char_buffer_dev *dev = (alt_up_char_buffer_dev *)alt_find_dev(name, &alt_dev_list);
 4012350:	d1600904 	addi	r5,gp,-32732
 4012354:	e13fff17 	ldw	r4,-4(fp)
 4012358:	40138bc0 	call	40138bc <alt_find_dev>
 401235c:	e0bffe15 	stw	r2,-8(fp)

  return dev;
 4012360:	e0bffe17 	ldw	r2,-8(fp)
}
 4012364:	e037883a 	mov	sp,fp
 4012368:	dfc00117 	ldw	ra,4(sp)
 401236c:	df000017 	ldw	fp,0(sp)
 4012370:	dec00204 	addi	sp,sp,8
 4012374:	f800283a 	ret

04012378 <alt_up_char_buffer_draw>:

int alt_up_char_buffer_draw(alt_up_char_buffer_dev *char_buffer, unsigned char ch, 
	unsigned int x, unsigned int y) {
 4012378:	defffa04 	addi	sp,sp,-24
 401237c:	df000515 	stw	fp,20(sp)
 4012380:	df000504 	addi	fp,sp,20
 4012384:	e13ffc15 	stw	r4,-16(fp)
 4012388:	2805883a 	mov	r2,r5
 401238c:	e1bffe15 	stw	r6,-8(fp)
 4012390:	e1ffff15 	stw	r7,-4(fp)
 4012394:	e0bffd05 	stb	r2,-12(fp)
	// boundary check
	if (x >= char_buffer->x_resolution || y >= char_buffer->y_resolution )
 4012398:	e0bffc17 	ldw	r2,-16(fp)
 401239c:	10800c17 	ldw	r2,48(r2)
 40123a0:	e0fffe17 	ldw	r3,-8(fp)
 40123a4:	1880042e 	bgeu	r3,r2,40123b8 <alt_up_char_buffer_draw+0x40>
 40123a8:	e0bffc17 	ldw	r2,-16(fp)
 40123ac:	10800d17 	ldw	r2,52(r2)
 40123b0:	e0ffff17 	ldw	r3,-4(fp)
 40123b4:	18800236 	bltu	r3,r2,40123c0 <alt_up_char_buffer_draw+0x48>
		return -1;
 40123b8:	00bfffc4 	movi	r2,-1
 40123bc:	00001d06 	br	4012434 <alt_up_char_buffer_draw+0xbc>
	
	unsigned int addr = 0;
 40123c0:	e03ffb15 	stw	zero,-20(fp)
	addr |= ((x & char_buffer->x_coord_mask) << char_buffer->x_coord_offset);
 40123c4:	e0bffc17 	ldw	r2,-16(fp)
 40123c8:	10c00f17 	ldw	r3,60(r2)
 40123cc:	e0bffe17 	ldw	r2,-8(fp)
 40123d0:	1886703a 	and	r3,r3,r2
 40123d4:	e0bffc17 	ldw	r2,-16(fp)
 40123d8:	10800e17 	ldw	r2,56(r2)
 40123dc:	1884983a 	sll	r2,r3,r2
 40123e0:	e0fffb17 	ldw	r3,-20(fp)
 40123e4:	1884b03a 	or	r2,r3,r2
 40123e8:	e0bffb15 	stw	r2,-20(fp)
	addr |= ((y & char_buffer->y_coord_mask) << char_buffer->y_coord_offset);
 40123ec:	e0bffc17 	ldw	r2,-16(fp)
 40123f0:	10c01117 	ldw	r3,68(r2)
 40123f4:	e0bfff17 	ldw	r2,-4(fp)
 40123f8:	1886703a 	and	r3,r3,r2
 40123fc:	e0bffc17 	ldw	r2,-16(fp)
 4012400:	10801017 	ldw	r2,64(r2)
 4012404:	1884983a 	sll	r2,r3,r2
 4012408:	e0fffb17 	ldw	r3,-20(fp)
 401240c:	1884b03a 	or	r2,r3,r2
 4012410:	e0bffb15 	stw	r2,-20(fp)
	IOWR_8DIRECT(char_buffer->buffer_base, addr, ch);
 4012414:	e0bffc17 	ldw	r2,-16(fp)
 4012418:	10c00b17 	ldw	r3,44(r2)
 401241c:	e0bffb17 	ldw	r2,-20(fp)
 4012420:	1885883a 	add	r2,r3,r2
 4012424:	1007883a 	mov	r3,r2
 4012428:	e0bffd03 	ldbu	r2,-12(fp)
 401242c:	18800025 	stbio	r2,0(r3)

	return 0;
 4012430:	0005883a 	mov	r2,zero
}
 4012434:	e037883a 	mov	sp,fp
 4012438:	df000017 	ldw	fp,0(sp)
 401243c:	dec00104 	addi	sp,sp,4
 4012440:	f800283a 	ret

04012444 <alt_up_char_buffer_string>:

int alt_up_char_buffer_string(alt_up_char_buffer_dev *char_buffer, const char *ptr, 
	unsigned int x, unsigned int y) {
 4012444:	defffa04 	addi	sp,sp,-24
 4012448:	df000515 	stw	fp,20(sp)
 401244c:	df000504 	addi	fp,sp,20
 4012450:	e13ffc15 	stw	r4,-16(fp)
 4012454:	e17ffd15 	stw	r5,-12(fp)
 4012458:	e1bffe15 	stw	r6,-8(fp)
 401245c:	e1ffff15 	stw	r7,-4(fp)
	// boundary check
	if (x >= char_buffer->x_resolution || y >= char_buffer->y_resolution )
 4012460:	e0bffc17 	ldw	r2,-16(fp)
 4012464:	10800c17 	ldw	r2,48(r2)
 4012468:	e0fffe17 	ldw	r3,-8(fp)
 401246c:	1880042e 	bgeu	r3,r2,4012480 <alt_up_char_buffer_string+0x3c>
 4012470:	e0bffc17 	ldw	r2,-16(fp)
 4012474:	10800d17 	ldw	r2,52(r2)
 4012478:	e0ffff17 	ldw	r3,-4(fp)
 401247c:	18800236 	bltu	r3,r2,4012488 <alt_up_char_buffer_string+0x44>
		return -1;
 4012480:	00bfffc4 	movi	r2,-1
 4012484:	00002a06 	br	4012530 <alt_up_char_buffer_string+0xec>
	
	unsigned int offset = 0;
 4012488:	e03ffb15 	stw	zero,-20(fp)
	offset = (y << char_buffer->y_coord_offset) + x;
 401248c:	e0bffc17 	ldw	r2,-16(fp)
 4012490:	10801017 	ldw	r2,64(r2)
 4012494:	e0ffff17 	ldw	r3,-4(fp)
 4012498:	1886983a 	sll	r3,r3,r2
 401249c:	e0bffe17 	ldw	r2,-8(fp)
 40124a0:	1885883a 	add	r2,r3,r2
 40124a4:	e0bffb15 	stw	r2,-20(fp)

	while ( *ptr )
 40124a8:	00001a06 	br	4012514 <alt_up_char_buffer_string+0xd0>
	{
		IOWR_8DIRECT(char_buffer->buffer_base, offset, *ptr);
 40124ac:	e0bffc17 	ldw	r2,-16(fp)
 40124b0:	10c00b17 	ldw	r3,44(r2)
 40124b4:	e0bffb17 	ldw	r2,-20(fp)
 40124b8:	1885883a 	add	r2,r3,r2
 40124bc:	1007883a 	mov	r3,r2
 40124c0:	e0bffd17 	ldw	r2,-12(fp)
 40124c4:	10800003 	ldbu	r2,0(r2)
 40124c8:	10803fcc 	andi	r2,r2,255
 40124cc:	1080201c 	xori	r2,r2,128
 40124d0:	10bfe004 	addi	r2,r2,-128
 40124d4:	18800025 	stbio	r2,0(r3)
		++ptr;
 40124d8:	e0bffd17 	ldw	r2,-12(fp)
 40124dc:	10800044 	addi	r2,r2,1
 40124e0:	e0bffd15 	stw	r2,-12(fp)
		if (++x >= char_buffer->x_resolution)
 40124e4:	e0bffe17 	ldw	r2,-8(fp)
 40124e8:	10800044 	addi	r2,r2,1
 40124ec:	e0bffe15 	stw	r2,-8(fp)
 40124f0:	e0bffc17 	ldw	r2,-16(fp)
 40124f4:	10800c17 	ldw	r2,48(r2)
 40124f8:	e0fffe17 	ldw	r3,-8(fp)
 40124fc:	18800236 	bltu	r3,r2,4012508 <alt_up_char_buffer_string+0xc4>
			return -1;
 4012500:	00bfffc4 	movi	r2,-1
 4012504:	00000a06 	br	4012530 <alt_up_char_buffer_string+0xec>
		++offset;
 4012508:	e0bffb17 	ldw	r2,-20(fp)
 401250c:	10800044 	addi	r2,r2,1
 4012510:	e0bffb15 	stw	r2,-20(fp)
		return -1;
	
	unsigned int offset = 0;
	offset = (y << char_buffer->y_coord_offset) + x;

	while ( *ptr )
 4012514:	e0bffd17 	ldw	r2,-12(fp)
 4012518:	10800003 	ldbu	r2,0(r2)
 401251c:	10803fcc 	andi	r2,r2,255
 4012520:	1080201c 	xori	r2,r2,128
 4012524:	10bfe004 	addi	r2,r2,-128
 4012528:	103fe01e 	bne	r2,zero,40124ac <__ram_exceptions_end+0xfbff2264>
		++ptr;
		if (++x >= char_buffer->x_resolution)
			return -1;
		++offset;
	}
	return 0;
 401252c:	0005883a 	mov	r2,zero
}
 4012530:	e037883a 	mov	sp,fp
 4012534:	df000017 	ldw	fp,0(sp)
 4012538:	dec00104 	addi	sp,sp,4
 401253c:	f800283a 	ret

04012540 <alt_up_char_buffer_clear>:

int alt_up_char_buffer_clear(alt_up_char_buffer_dev *char_buffer) {
 4012540:	defffe04 	addi	sp,sp,-8
 4012544:	df000115 	stw	fp,4(sp)
 4012548:	df000104 	addi	fp,sp,4
 401254c:	e13fff15 	stw	r4,-4(fp)
	IOWR_ALT_UP_CHAR_BUFFER_CLR_SCRN(char_buffer->ctrl_reg_base, 1);
 4012550:	e0bfff17 	ldw	r2,-4(fp)
 4012554:	10800a17 	ldw	r2,40(r2)
 4012558:	10800084 	addi	r2,r2,2
 401255c:	1007883a 	mov	r3,r2
 4012560:	00800044 	movi	r2,1
 4012564:	18800025 	stbio	r2,0(r3)
	while ((IORD_ALT_UP_CHAR_BUFFER_CLR_SCRN(char_buffer->ctrl_reg_base) & ALT_UP_CHAR_BUFFER_CLR_SCRN_MSK) >> ALT_UP_CHAR_BUFFER_CLR_SCRN_OFST);
 4012568:	0001883a 	nop
 401256c:	e0bfff17 	ldw	r2,-4(fp)
 4012570:	10800a17 	ldw	r2,40(r2)
 4012574:	10800084 	addi	r2,r2,2
 4012578:	10800023 	ldbuio	r2,0(r2)
 401257c:	10803fcc 	andi	r2,r2,255
 4012580:	1080004c 	andi	r2,r2,1
 4012584:	103ff91e 	bne	r2,zero,401256c <__ram_exceptions_end+0xfbff2324>
	return 0;
 4012588:	0005883a 	mov	r2,zero
}
 401258c:	e037883a 	mov	sp,fp
 4012590:	df000017 	ldw	fp,0(sp)
 4012594:	dec00104 	addi	sp,sp,4
 4012598:	f800283a 	ret

0401259c <alt_up_pixel_buffer_dma_open_dev>:

#include "altera_up_avalon_video_pixel_buffer_dma.h"

#define ABS(x)	((x >= 0) ? (x) : (-(x)))

alt_up_pixel_buffer_dma_dev* alt_up_pixel_buffer_dma_open_dev(const char* name) {
 401259c:	defffc04 	addi	sp,sp,-16
 40125a0:	dfc00315 	stw	ra,12(sp)
 40125a4:	df000215 	stw	fp,8(sp)
 40125a8:	df000204 	addi	fp,sp,8
 40125ac:	e13fff15 	stw	r4,-4(fp)
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_pixel_buffer_dma_dev *dev = (alt_up_pixel_buffer_dma_dev*)alt_find_dev(name, &alt_dev_list);
 40125b0:	d1600904 	addi	r5,gp,-32732
 40125b4:	e13fff17 	ldw	r4,-4(fp)
 40125b8:	40138bc0 	call	40138bc <alt_find_dev>
 40125bc:	e0bffe15 	stw	r2,-8(fp)

  return dev;
 40125c0:	e0bffe17 	ldw	r2,-8(fp)
}
 40125c4:	e037883a 	mov	sp,fp
 40125c8:	dfc00117 	ldw	ra,4(sp)
 40125cc:	df000017 	ldw	fp,0(sp)
 40125d0:	dec00204 	addi	sp,sp,8
 40125d4:	f800283a 	ret

040125d8 <alt_up_pixel_buffer_dma_draw>:

int alt_up_pixel_buffer_dma_draw(alt_up_pixel_buffer_dma_dev *pixel_buffer, unsigned int color, unsigned int x, unsigned int y)
/* This function draws a pixel to the back buffer.
 */
{
 40125d8:	defffa04 	addi	sp,sp,-24
 40125dc:	df000515 	stw	fp,20(sp)
 40125e0:	df000504 	addi	fp,sp,20
 40125e4:	e13ffc15 	stw	r4,-16(fp)
 40125e8:	e17ffd15 	stw	r5,-12(fp)
 40125ec:	e1bffe15 	stw	r6,-8(fp)
 40125f0:	e1ffff15 	stw	r7,-4(fp)
	// boundary check
	if (x >= pixel_buffer->x_resolution || y >= pixel_buffer->y_resolution )
 40125f4:	e0bffc17 	ldw	r2,-16(fp)
 40125f8:	10800f17 	ldw	r2,60(r2)
 40125fc:	e0fffe17 	ldw	r3,-8(fp)
 4012600:	1880042e 	bgeu	r3,r2,4012614 <alt_up_pixel_buffer_dma_draw+0x3c>
 4012604:	e0bffc17 	ldw	r2,-16(fp)
 4012608:	10801017 	ldw	r2,64(r2)
 401260c:	e0ffff17 	ldw	r3,-4(fp)
 4012610:	18800236 	bltu	r3,r2,401261c <alt_up_pixel_buffer_dma_draw+0x44>
		return -1;
 4012614:	00bfffc4 	movi	r2,-1
 4012618:	00005006 	br	401275c <alt_up_pixel_buffer_dma_draw+0x184>

	unsigned int addr = 0;
 401261c:	e03ffb15 	stw	zero,-20(fp)
	/* Check the mode VGA Pixel Buffer is using. */
	if (pixel_buffer->addressing_mode == ALT_UP_PIXEL_BUFFER_XY_ADDRESS_MODE) {
 4012620:	e0bffc17 	ldw	r2,-16(fp)
 4012624:	10800d17 	ldw	r2,52(r2)
 4012628:	1000151e 	bne	r2,zero,4012680 <alt_up_pixel_buffer_dma_draw+0xa8>
		/* For X-Y addressing mode, the address format is | unused | Y | X |. So shift bits for coordinates X and Y into their respective locations. */
		addr += ((x & pixel_buffer->x_coord_mask) << pixel_buffer->x_coord_offset);
 401262c:	e0bffc17 	ldw	r2,-16(fp)
 4012630:	10c01217 	ldw	r3,72(r2)
 4012634:	e0bffe17 	ldw	r2,-8(fp)
 4012638:	1886703a 	and	r3,r3,r2
 401263c:	e0bffc17 	ldw	r2,-16(fp)
 4012640:	10801117 	ldw	r2,68(r2)
 4012644:	1884983a 	sll	r2,r3,r2
 4012648:	e0fffb17 	ldw	r3,-20(fp)
 401264c:	1885883a 	add	r2,r3,r2
 4012650:	e0bffb15 	stw	r2,-20(fp)
		addr += ((y & pixel_buffer->y_coord_mask) << pixel_buffer->y_coord_offset);
 4012654:	e0bffc17 	ldw	r2,-16(fp)
 4012658:	10c01417 	ldw	r3,80(r2)
 401265c:	e0bfff17 	ldw	r2,-4(fp)
 4012660:	1886703a 	and	r3,r3,r2
 4012664:	e0bffc17 	ldw	r2,-16(fp)
 4012668:	10801317 	ldw	r2,76(r2)
 401266c:	1884983a 	sll	r2,r3,r2
 4012670:	e0fffb17 	ldw	r3,-20(fp)
 4012674:	1885883a 	add	r2,r3,r2
 4012678:	e0bffb15 	stw	r2,-20(fp)
 401267c:	00001706 	br	40126dc <alt_up_pixel_buffer_dma_draw+0x104>
	} else {
		/* In a consecutive addressing mode, the pixels are stored in consecutive memory locations. So the address of a pixel at (x,y) can be computed as
		 * (y*x_resolution + x).*/
		addr += ((x & pixel_buffer->x_coord_mask) << pixel_buffer->x_coord_offset);
 4012680:	e0bffc17 	ldw	r2,-16(fp)
 4012684:	10c01217 	ldw	r3,72(r2)
 4012688:	e0bffe17 	ldw	r2,-8(fp)
 401268c:	1886703a 	and	r3,r3,r2
 4012690:	e0bffc17 	ldw	r2,-16(fp)
 4012694:	10801117 	ldw	r2,68(r2)
 4012698:	1884983a 	sll	r2,r3,r2
 401269c:	e0fffb17 	ldw	r3,-20(fp)
 40126a0:	1885883a 	add	r2,r3,r2
 40126a4:	e0bffb15 	stw	r2,-20(fp)
		addr += (((y & pixel_buffer->y_coord_mask) * pixel_buffer->x_resolution) << pixel_buffer->x_coord_offset);
 40126a8:	e0bffc17 	ldw	r2,-16(fp)
 40126ac:	10c01417 	ldw	r3,80(r2)
 40126b0:	e0bfff17 	ldw	r2,-4(fp)
 40126b4:	1886703a 	and	r3,r3,r2
 40126b8:	e0bffc17 	ldw	r2,-16(fp)
 40126bc:	10800f17 	ldw	r2,60(r2)
 40126c0:	1887383a 	mul	r3,r3,r2
 40126c4:	e0bffc17 	ldw	r2,-16(fp)
 40126c8:	10801117 	ldw	r2,68(r2)
 40126cc:	1884983a 	sll	r2,r3,r2
 40126d0:	e0fffb17 	ldw	r3,-20(fp)
 40126d4:	1885883a 	add	r2,r3,r2
 40126d8:	e0bffb15 	stw	r2,-20(fp)
	}
	/* Now, depending on the color depth, write the pixel color to the specified memory location. */
	if (pixel_buffer->color_mode == ALT_UP_8BIT_COLOR_MODE) {
 40126dc:	e0bffc17 	ldw	r2,-16(fp)
 40126e0:	10800e17 	ldw	r2,56(r2)
 40126e4:	10800058 	cmpnei	r2,r2,1
 40126e8:	1000081e 	bne	r2,zero,401270c <alt_up_pixel_buffer_dma_draw+0x134>
		IOWR_8DIRECT(pixel_buffer->back_buffer_start_address, addr, color);
 40126ec:	e0bffc17 	ldw	r2,-16(fp)
 40126f0:	10c00c17 	ldw	r3,48(r2)
 40126f4:	e0bffb17 	ldw	r2,-20(fp)
 40126f8:	1885883a 	add	r2,r3,r2
 40126fc:	1007883a 	mov	r3,r2
 4012700:	e0bffd17 	ldw	r2,-12(fp)
 4012704:	18800025 	stbio	r2,0(r3)
 4012708:	00001306 	br	4012758 <alt_up_pixel_buffer_dma_draw+0x180>
	} else if (pixel_buffer->color_mode == ALT_UP_16BIT_COLOR_MODE) {
 401270c:	e0bffc17 	ldw	r2,-16(fp)
 4012710:	10800e17 	ldw	r2,56(r2)
 4012714:	10800098 	cmpnei	r2,r2,2
 4012718:	1000081e 	bne	r2,zero,401273c <alt_up_pixel_buffer_dma_draw+0x164>
		IOWR_16DIRECT(pixel_buffer->back_buffer_start_address, addr, color);
 401271c:	e0bffc17 	ldw	r2,-16(fp)
 4012720:	10c00c17 	ldw	r3,48(r2)
 4012724:	e0bffb17 	ldw	r2,-20(fp)
 4012728:	1885883a 	add	r2,r3,r2
 401272c:	1007883a 	mov	r3,r2
 4012730:	e0bffd17 	ldw	r2,-12(fp)
 4012734:	1880002d 	sthio	r2,0(r3)
 4012738:	00000706 	br	4012758 <alt_up_pixel_buffer_dma_draw+0x180>
	} else {
		IOWR_32DIRECT(pixel_buffer->back_buffer_start_address, addr, color);
 401273c:	e0bffc17 	ldw	r2,-16(fp)
 4012740:	10c00c17 	ldw	r3,48(r2)
 4012744:	e0bffb17 	ldw	r2,-20(fp)
 4012748:	1885883a 	add	r2,r3,r2
 401274c:	1007883a 	mov	r3,r2
 4012750:	e0bffd17 	ldw	r2,-12(fp)
 4012754:	18800035 	stwio	r2,0(r3)
	}

	return 0;
 4012758:	0005883a 	mov	r2,zero
}
 401275c:	e037883a 	mov	sp,fp
 4012760:	df000017 	ldw	fp,0(sp)
 4012764:	dec00104 	addi	sp,sp,4
 4012768:	f800283a 	ret

0401276c <alt_up_pixel_buffer_dma_change_back_buffer_address>:

int alt_up_pixel_buffer_dma_change_back_buffer_address(alt_up_pixel_buffer_dma_dev *pixel_buffer, unsigned int new_address)
/* This function changes the memory address for the back buffer. */
{
 401276c:	defffd04 	addi	sp,sp,-12
 4012770:	df000215 	stw	fp,8(sp)
 4012774:	df000204 	addi	fp,sp,8
 4012778:	e13ffe15 	stw	r4,-8(fp)
 401277c:	e17fff15 	stw	r5,-4(fp)
	IOWR_32DIRECT(pixel_buffer->base, 4, new_address);
 4012780:	e0bffe17 	ldw	r2,-8(fp)
 4012784:	10800a17 	ldw	r2,40(r2)
 4012788:	10800104 	addi	r2,r2,4
 401278c:	1007883a 	mov	r3,r2
 4012790:	e0bfff17 	ldw	r2,-4(fp)
 4012794:	18800035 	stwio	r2,0(r3)
	pixel_buffer->back_buffer_start_address = IORD_32DIRECT(pixel_buffer->base, 4);
 4012798:	e0bffe17 	ldw	r2,-8(fp)
 401279c:	10800a17 	ldw	r2,40(r2)
 40127a0:	10800104 	addi	r2,r2,4
 40127a4:	10800037 	ldwio	r2,0(r2)
 40127a8:	1007883a 	mov	r3,r2
 40127ac:	e0bffe17 	ldw	r2,-8(fp)
 40127b0:	10c00c15 	stw	r3,48(r2)
	return 0;
 40127b4:	0005883a 	mov	r2,zero
}
 40127b8:	e037883a 	mov	sp,fp
 40127bc:	df000017 	ldw	fp,0(sp)
 40127c0:	dec00104 	addi	sp,sp,4
 40127c4:	f800283a 	ret

040127c8 <alt_up_pixel_buffer_dma_swap_buffers>:

int alt_up_pixel_buffer_dma_swap_buffers(alt_up_pixel_buffer_dma_dev *pixel_buffer)
/* This function swaps the front and back buffers. At the next refresh cycle the back buffer will be drawn on the screen
 * and will become the front buffer. */
{
 40127c8:	defffd04 	addi	sp,sp,-12
 40127cc:	df000215 	stw	fp,8(sp)
 40127d0:	dc000115 	stw	r16,4(sp)
 40127d4:	df000204 	addi	fp,sp,8
 40127d8:	e13ffe15 	stw	r4,-8(fp)
	register unsigned int temp = pixel_buffer->back_buffer_start_address;
 40127dc:	e0bffe17 	ldw	r2,-8(fp)
 40127e0:	14000c17 	ldw	r16,48(r2)
	IOWR_32DIRECT(pixel_buffer->base, 0, 1);
 40127e4:	e0bffe17 	ldw	r2,-8(fp)
 40127e8:	10800a17 	ldw	r2,40(r2)
 40127ec:	1007883a 	mov	r3,r2
 40127f0:	00800044 	movi	r2,1
 40127f4:	18800035 	stwio	r2,0(r3)
	pixel_buffer->back_buffer_start_address = pixel_buffer->buffer_start_address;
 40127f8:	e0bffe17 	ldw	r2,-8(fp)
 40127fc:	10c00b17 	ldw	r3,44(r2)
 4012800:	e0bffe17 	ldw	r2,-8(fp)
 4012804:	10c00c15 	stw	r3,48(r2)
	pixel_buffer->buffer_start_address = temp;
 4012808:	e0bffe17 	ldw	r2,-8(fp)
 401280c:	14000b15 	stw	r16,44(r2)
	return 0;
 4012810:	0005883a 	mov	r2,zero
}
 4012814:	e6ffff04 	addi	sp,fp,-4
 4012818:	df000117 	ldw	fp,4(sp)
 401281c:	dc000017 	ldw	r16,0(sp)
 4012820:	dec00204 	addi	sp,sp,8
 4012824:	f800283a 	ret

04012828 <alt_up_pixel_buffer_dma_check_swap_buffers_status>:
int alt_up_pixel_buffer_dma_check_swap_buffers_status(alt_up_pixel_buffer_dma_dev *pixel_buffer)
/* This function checks if the buffer swap has occured. Since the buffer swap only happens after an entire screen is drawn,
 * it is important to wait for this function to return 0 before proceeding to draw on either buffer. When both front and the back buffers
 * have the same address calling the alt_up_pixel_buffer_dma_swap_buffers(...) function and then waiting for this function to return 0, causes your program to
 * wait for the screen to refresh. */
{
 4012828:	defffe04 	addi	sp,sp,-8
 401282c:	df000115 	stw	fp,4(sp)
 4012830:	df000104 	addi	fp,sp,4
 4012834:	e13fff15 	stw	r4,-4(fp)
	return (IORD_32DIRECT(pixel_buffer->base, 12) & 0x1);
 4012838:	e0bfff17 	ldw	r2,-4(fp)
 401283c:	10800a17 	ldw	r2,40(r2)
 4012840:	10800304 	addi	r2,r2,12
 4012844:	10800037 	ldwio	r2,0(r2)
 4012848:	1080004c 	andi	r2,r2,1
}
 401284c:	e037883a 	mov	sp,fp
 4012850:	df000017 	ldw	fp,0(sp)
 4012854:	dec00104 	addi	sp,sp,4
 4012858:	f800283a 	ret

0401285c <alt_up_pixel_buffer_dma_clear_screen>:

void alt_up_pixel_buffer_dma_clear_screen(alt_up_pixel_buffer_dma_dev *pixel_buffer, int backbuffer)
/* This function clears the screen by setting each pixel to a black color. */
{
 401285c:	defff704 	addi	sp,sp,-36
 4012860:	df000815 	stw	fp,32(sp)
 4012864:	dd400715 	stw	r21,28(sp)
 4012868:	dd000615 	stw	r20,24(sp)
 401286c:	dcc00515 	stw	r19,20(sp)
 4012870:	dc800415 	stw	r18,16(sp)
 4012874:	dc400315 	stw	r17,12(sp)
 4012878:	dc000215 	stw	r16,8(sp)
 401287c:	df000804 	addi	fp,sp,32
 4012880:	e13ff815 	stw	r4,-32(fp)
 4012884:	e17ff915 	stw	r5,-28(fp)
	register unsigned int addr;
	register unsigned int limit_x, limit_y;
	
	/* Set up the address to start clearing from and the screen boundaries. */
	if (backbuffer == 1)
 4012888:	e0bff917 	ldw	r2,-28(fp)
 401288c:	10800058 	cmpnei	r2,r2,1
 4012890:	1000031e 	bne	r2,zero,40128a0 <alt_up_pixel_buffer_dma_clear_screen+0x44>
		addr = pixel_buffer->back_buffer_start_address;
 4012894:	e0bff817 	ldw	r2,-32(fp)
 4012898:	14400c17 	ldw	r17,48(r2)
 401289c:	00000206 	br	40128a8 <alt_up_pixel_buffer_dma_clear_screen+0x4c>
	else
		addr = pixel_buffer->buffer_start_address;
 40128a0:	e0bff817 	ldw	r2,-32(fp)
 40128a4:	14400b17 	ldw	r17,44(r2)
	limit_x = pixel_buffer->x_resolution;
 40128a8:	e0bff817 	ldw	r2,-32(fp)
 40128ac:	14000f17 	ldw	r16,60(r2)
	/* In 16 and 32-bit color modes we use twice or four times more memory for the display buffer.*/
	if (pixel_buffer->color_mode == ALT_UP_16BIT_COLOR_MODE) {
 40128b0:	e0bff817 	ldw	r2,-32(fp)
 40128b4:	10800e17 	ldw	r2,56(r2)
 40128b8:	10800098 	cmpnei	r2,r2,2
 40128bc:	1000031e 	bne	r2,zero,40128cc <alt_up_pixel_buffer_dma_clear_screen+0x70>
		limit_x = limit_x << 1;
 40128c0:	8405883a 	add	r2,r16,r16
 40128c4:	1021883a 	mov	r16,r2
 40128c8:	00000306 	br	40128d8 <alt_up_pixel_buffer_dma_clear_screen+0x7c>
	} else {
		limit_x = limit_x << 2;
 40128cc:	8405883a 	add	r2,r16,r16
 40128d0:	1085883a 	add	r2,r2,r2
 40128d4:	1021883a 	mov	r16,r2
	}	
	limit_y = pixel_buffer->y_resolution;
 40128d8:	e0bff817 	ldw	r2,-32(fp)
 40128dc:	14801017 	ldw	r18,64(r2)

	if (pixel_buffer->addressing_mode == ALT_UP_PIXEL_BUFFER_XY_ADDRESS_MODE) {
 40128e0:	e0bff817 	ldw	r2,-32(fp)
 40128e4:	10800d17 	ldw	r2,52(r2)
 40128e8:	1000111e 	bne	r2,zero,4012930 <alt_up_pixel_buffer_dma_clear_screen+0xd4>
		/* Clear the screen when the VGA is set up in an XY addressing mode. */
		register unsigned int x,y;
		register unsigned int offset_y;
		offset_y = pixel_buffer->y_coord_offset;
 40128ec:	e0bff817 	ldw	r2,-32(fp)
 40128f0:	15401317 	ldw	r21,76(r2)

		for (y = 0; y < limit_y; y++)
 40128f4:	0029883a 	mov	r20,zero
 40128f8:	00000b06 	br	4012928 <alt_up_pixel_buffer_dma_clear_screen+0xcc>
		{
			for (x = 0; x < limit_x; x = x + 4)
 40128fc:	0027883a 	mov	r19,zero
 4012900:	00000406 	br	4012914 <alt_up_pixel_buffer_dma_clear_screen+0xb8>
			{
				IOWR_32DIRECT(addr, x, 0);
 4012904:	9c45883a 	add	r2,r19,r17
 4012908:	0007883a 	mov	r3,zero
 401290c:	10c00035 	stwio	r3,0(r2)
		register unsigned int offset_y;
		offset_y = pixel_buffer->y_coord_offset;

		for (y = 0; y < limit_y; y++)
		{
			for (x = 0; x < limit_x; x = x + 4)
 4012910:	9cc00104 	addi	r19,r19,4
 4012914:	9c3ffb36 	bltu	r19,r16,4012904 <__ram_exceptions_end+0xfbff26bc>
			{
				IOWR_32DIRECT(addr, x, 0);
			}
			addr = addr + (1 << offset_y);
 4012918:	00800044 	movi	r2,1
 401291c:	1544983a 	sll	r2,r2,r21
 4012920:	88a3883a 	add	r17,r17,r2
		/* Clear the screen when the VGA is set up in an XY addressing mode. */
		register unsigned int x,y;
		register unsigned int offset_y;
		offset_y = pixel_buffer->y_coord_offset;

		for (y = 0; y < limit_y; y++)
 4012924:	a5000044 	addi	r20,r20,1
 4012928:	a4bff436 	bltu	r20,r18,40128fc <__ram_exceptions_end+0xfbff26b4>
		for (x = 0; x < limit_y; x = x + 4)
		{
			IOWR_32DIRECT(addr, x, 0);
		}
	}
}
 401292c:	00000a06 	br	4012958 <alt_up_pixel_buffer_dma_clear_screen+0xfc>
			addr = addr + (1 << offset_y);
		}
	} else {
		/* Clear the screen when the VGA is set up in a linear addressing mode. */
		register int x;
		limit_y = limit_x*limit_y;	
 4012930:	9425383a 	mul	r18,r18,r16

		for (x = 0; x < limit_y; x = x + 4)
 4012934:	0021883a 	mov	r16,zero
 4012938:	00000506 	br	4012950 <alt_up_pixel_buffer_dma_clear_screen+0xf4>
		{
			IOWR_32DIRECT(addr, x, 0);
 401293c:	8005883a 	mov	r2,r16
 4012940:	1445883a 	add	r2,r2,r17
 4012944:	0007883a 	mov	r3,zero
 4012948:	10c00035 	stwio	r3,0(r2)
	} else {
		/* Clear the screen when the VGA is set up in a linear addressing mode. */
		register int x;
		limit_y = limit_x*limit_y;	

		for (x = 0; x < limit_y; x = x + 4)
 401294c:	84000104 	addi	r16,r16,4
 4012950:	8005883a 	mov	r2,r16
 4012954:	14bff936 	bltu	r2,r18,401293c <__ram_exceptions_end+0xfbff26f4>
		{
			IOWR_32DIRECT(addr, x, 0);
		}
	}
}
 4012958:	0001883a 	nop
 401295c:	e6fffa04 	addi	sp,fp,-24
 4012960:	df000617 	ldw	fp,24(sp)
 4012964:	dd400517 	ldw	r21,20(sp)
 4012968:	dd000417 	ldw	r20,16(sp)
 401296c:	dcc00317 	ldw	r19,12(sp)
 4012970:	dc800217 	ldw	r18,8(sp)
 4012974:	dc400117 	ldw	r17,4(sp)
 4012978:	dc000017 	ldw	r16,0(sp)
 401297c:	dec00704 	addi	sp,sp,28
 4012980:	f800283a 	ret

04012984 <alt_up_pixel_buffer_dma_draw_box>:

void alt_up_pixel_buffer_dma_draw_box(alt_up_pixel_buffer_dma_dev *pixel_buffer, int x0, int y0, int x1, int y1, int color, int backbuffer)
/* This function draws a filled box. */
{
 4012984:	defff304 	addi	sp,sp,-52
 4012988:	df000c15 	stw	fp,48(sp)
 401298c:	ddc00b15 	stw	r23,44(sp)
 4012990:	dd800a15 	stw	r22,40(sp)
 4012994:	dd400915 	stw	r21,36(sp)
 4012998:	dd000815 	stw	r20,32(sp)
 401299c:	dcc00715 	stw	r19,28(sp)
 40129a0:	dc800615 	stw	r18,24(sp)
 40129a4:	dc400515 	stw	r17,20(sp)
 40129a8:	dc000415 	stw	r16,16(sp)
 40129ac:	df000c04 	addi	fp,sp,48
 40129b0:	e13ff415 	stw	r4,-48(fp)
 40129b4:	e17ff515 	stw	r5,-44(fp)
 40129b8:	e1bff615 	stw	r6,-40(fp)
 40129bc:	e1fff715 	stw	r7,-36(fp)
	register unsigned int addr;
	register unsigned int limit_x = pixel_buffer->x_resolution;
 40129c0:	e0bff417 	ldw	r2,-48(fp)
 40129c4:	14800f17 	ldw	r18,60(r2)
	register unsigned int limit_y = pixel_buffer->y_resolution;
 40129c8:	e0bff417 	ldw	r2,-48(fp)
 40129cc:	14001017 	ldw	r16,64(r2)
	register unsigned int temp;
	register unsigned int l_x = x0;
 40129d0:	e5bff517 	ldw	r22,-44(fp)
	register unsigned int r_x = x1;
 40129d4:	e53ff717 	ldw	r20,-36(fp)
	register unsigned int t_y = y0;
 40129d8:	e47ff617 	ldw	r17,-40(fp)
	register unsigned int b_y = y1;
 40129dc:	e4c00117 	ldw	r19,4(fp)
	register unsigned int local_color = color;
 40129e0:	e5c00217 	ldw	r23,8(fp)
	
	/* Check coordinates */
	if (l_x > r_x)
 40129e4:	a580032e 	bgeu	r20,r22,40129f4 <alt_up_pixel_buffer_dma_draw_box+0x70>
	{
		temp = l_x;
 40129e8:	b02b883a 	mov	r21,r22
		l_x = r_x;
 40129ec:	a02d883a 	mov	r22,r20
		r_x = temp;
 40129f0:	a829883a 	mov	r20,r21
	}
	if (t_y > b_y)
 40129f4:	9c40032e 	bgeu	r19,r17,4012a04 <alt_up_pixel_buffer_dma_draw_box+0x80>
	{
		temp = t_y;
 40129f8:	882b883a 	mov	r21,r17
		t_y = b_y;
 40129fc:	9823883a 	mov	r17,r19
		b_y = temp;
 4012a00:	a827883a 	mov	r19,r21
	}
	if ((l_x >= limit_x) || (t_y >= limit_y) || (r_x < 0) || (b_y < 0))
 4012a04:	b480892e 	bgeu	r22,r18,4012c2c <alt_up_pixel_buffer_dma_draw_box+0x2a8>
 4012a08:	8c00882e 	bgeu	r17,r16,4012c2c <alt_up_pixel_buffer_dma_draw_box+0x2a8>
	/* Clip the box and draw only within the confines of the screen. */
	if (l_x < 0)
	{
		l_x = 0;
	}
	if (r_x >= limit_x)
 4012a0c:	a4800136 	bltu	r20,r18,4012a14 <alt_up_pixel_buffer_dma_draw_box+0x90>
	{
		r_x = limit_x - 1;
 4012a10:	953fffc4 	addi	r20,r18,-1
	}
	if (t_y < 0)
	{
		t_y = 0;
	}
	if (b_y >= limit_y)
 4012a14:	9c000136 	bltu	r19,r16,4012a1c <alt_up_pixel_buffer_dma_draw_box+0x98>
	{
		b_y = limit_y - 1;
 4012a18:	84ffffc4 	addi	r19,r16,-1
	}

	/* Set up the address to start clearing from and the screen boundaries. */
	if (backbuffer == 1)
 4012a1c:	e0800317 	ldw	r2,12(fp)
 4012a20:	10800058 	cmpnei	r2,r2,1
 4012a24:	1000031e 	bne	r2,zero,4012a34 <alt_up_pixel_buffer_dma_draw_box+0xb0>
		addr = pixel_buffer->back_buffer_start_address;
 4012a28:	e0bff417 	ldw	r2,-48(fp)
 4012a2c:	14000c17 	ldw	r16,48(r2)
 4012a30:	00000206 	br	4012a3c <alt_up_pixel_buffer_dma_draw_box+0xb8>
	else
		addr = pixel_buffer->buffer_start_address;
 4012a34:	e0bff417 	ldw	r2,-48(fp)
 4012a38:	14000b17 	ldw	r16,44(r2)

	/* Draw the box using one of the addressing modes. */
	if (pixel_buffer->addressing_mode == ALT_UP_PIXEL_BUFFER_XY_ADDRESS_MODE) {
 4012a3c:	e0bff417 	ldw	r2,-48(fp)
 4012a40:	10800d17 	ldw	r2,52(r2)
 4012a44:	10003c1e 	bne	r2,zero,4012b38 <alt_up_pixel_buffer_dma_draw_box+0x1b4>
		/* Draw a box of a given color on the screen using the XY addressing mode. */
		register unsigned int x,y;
		register unsigned int offset_y;
		offset_y = pixel_buffer->y_coord_offset;
 4012a48:	e0bff417 	ldw	r2,-48(fp)
 4012a4c:	15401317 	ldw	r21,76(r2)
		addr = addr + (t_y << offset_y);
 4012a50:	8d44983a 	sll	r2,r17,r21
 4012a54:	80a1883a 	add	r16,r16,r2
		
		/* This portion of the code is purposefully replicated. This is because having a text for
		 * the mode would unnecessarily slow down the drawing of a box. */
		if (pixel_buffer->color_mode == ALT_UP_8BIT_COLOR_MODE) {
 4012a58:	e0bff417 	ldw	r2,-48(fp)
 4012a5c:	10800e17 	ldw	r2,56(r2)
 4012a60:	10800058 	cmpnei	r2,r2,1
 4012a64:	10000f1e 	bne	r2,zero,4012aa4 <alt_up_pixel_buffer_dma_draw_box+0x120>
			for (y = t_y; y <= b_y; y++)
 4012a68:	8825883a 	mov	r18,r17
 4012a6c:	00000b06 	br	4012a9c <alt_up_pixel_buffer_dma_draw_box+0x118>
			{
				for (x = l_x; x <= r_x; x++)
 4012a70:	b023883a 	mov	r17,r22
 4012a74:	00000406 	br	4012a88 <alt_up_pixel_buffer_dma_draw_box+0x104>
				{
					IOWR_8DIRECT(addr, x, local_color);
 4012a78:	8c05883a 	add	r2,r17,r16
 4012a7c:	b807883a 	mov	r3,r23
 4012a80:	10c00025 	stbio	r3,0(r2)
		/* This portion of the code is purposefully replicated. This is because having a text for
		 * the mode would unnecessarily slow down the drawing of a box. */
		if (pixel_buffer->color_mode == ALT_UP_8BIT_COLOR_MODE) {
			for (y = t_y; y <= b_y; y++)
			{
				for (x = l_x; x <= r_x; x++)
 4012a84:	8c400044 	addi	r17,r17,1
 4012a88:	a47ffb2e 	bgeu	r20,r17,4012a78 <__ram_exceptions_end+0xfbff2830>
				{
					IOWR_8DIRECT(addr, x, local_color);
				}
				addr = addr + (1 << offset_y);
 4012a8c:	00800044 	movi	r2,1
 4012a90:	1544983a 	sll	r2,r2,r21
 4012a94:	80a1883a 	add	r16,r16,r2
		addr = addr + (t_y << offset_y);
		
		/* This portion of the code is purposefully replicated. This is because having a text for
		 * the mode would unnecessarily slow down the drawing of a box. */
		if (pixel_buffer->color_mode == ALT_UP_8BIT_COLOR_MODE) {
			for (y = t_y; y <= b_y; y++)
 4012a98:	94800044 	addi	r18,r18,1
 4012a9c:	9cbff42e 	bgeu	r19,r18,4012a70 <__ram_exceptions_end+0xfbff2828>
 4012aa0:	00006306 	br	4012c30 <alt_up_pixel_buffer_dma_draw_box+0x2ac>
				{
					IOWR_8DIRECT(addr, x, local_color);
				}
				addr = addr + (1 << offset_y);
			}
		} else if (pixel_buffer->color_mode == ALT_UP_16BIT_COLOR_MODE) {
 4012aa4:	e0bff417 	ldw	r2,-48(fp)
 4012aa8:	10800e17 	ldw	r2,56(r2)
 4012aac:	10800098 	cmpnei	r2,r2,2
 4012ab0:	1000101e 	bne	r2,zero,4012af4 <alt_up_pixel_buffer_dma_draw_box+0x170>
			for (y = t_y; y <= b_y; y++)
 4012ab4:	8825883a 	mov	r18,r17
 4012ab8:	00000c06 	br	4012aec <alt_up_pixel_buffer_dma_draw_box+0x168>
			{
				for (x = l_x; x <= r_x; x++)
 4012abc:	b023883a 	mov	r17,r22
 4012ac0:	00000506 	br	4012ad8 <alt_up_pixel_buffer_dma_draw_box+0x154>
				{
					IOWR_16DIRECT(addr, x << 1, local_color);
 4012ac4:	8c45883a 	add	r2,r17,r17
 4012ac8:	1405883a 	add	r2,r2,r16
 4012acc:	b807883a 	mov	r3,r23
 4012ad0:	10c0002d 	sthio	r3,0(r2)
				addr = addr + (1 << offset_y);
			}
		} else if (pixel_buffer->color_mode == ALT_UP_16BIT_COLOR_MODE) {
			for (y = t_y; y <= b_y; y++)
			{
				for (x = l_x; x <= r_x; x++)
 4012ad4:	8c400044 	addi	r17,r17,1
 4012ad8:	a47ffa2e 	bgeu	r20,r17,4012ac4 <__ram_exceptions_end+0xfbff287c>
				{
					IOWR_16DIRECT(addr, x << 1, local_color);
				}
				addr = addr + (1 << offset_y);
 4012adc:	00800044 	movi	r2,1
 4012ae0:	1544983a 	sll	r2,r2,r21
 4012ae4:	80a1883a 	add	r16,r16,r2
					IOWR_8DIRECT(addr, x, local_color);
				}
				addr = addr + (1 << offset_y);
			}
		} else if (pixel_buffer->color_mode == ALT_UP_16BIT_COLOR_MODE) {
			for (y = t_y; y <= b_y; y++)
 4012ae8:	94800044 	addi	r18,r18,1
 4012aec:	9cbff32e 	bgeu	r19,r18,4012abc <__ram_exceptions_end+0xfbff2874>
 4012af0:	00004f06 	br	4012c30 <alt_up_pixel_buffer_dma_draw_box+0x2ac>
				addr = addr + (1 << offset_y);
			}
		}
		else
		{
			for (y = t_y; y <= b_y; y++)
 4012af4:	8825883a 	mov	r18,r17
 4012af8:	00000d06 	br	4012b30 <alt_up_pixel_buffer_dma_draw_box+0x1ac>
			{
				for (x = l_x; x <= r_x; x++)
 4012afc:	b023883a 	mov	r17,r22
 4012b00:	00000606 	br	4012b1c <alt_up_pixel_buffer_dma_draw_box+0x198>
				{
					IOWR_32DIRECT(addr, x << 2, local_color);
 4012b04:	8c45883a 	add	r2,r17,r17
 4012b08:	1085883a 	add	r2,r2,r2
 4012b0c:	1405883a 	add	r2,r2,r16
 4012b10:	b807883a 	mov	r3,r23
 4012b14:	10c00035 	stwio	r3,0(r2)
		}
		else
		{
			for (y = t_y; y <= b_y; y++)
			{
				for (x = l_x; x <= r_x; x++)
 4012b18:	8c400044 	addi	r17,r17,1
 4012b1c:	a47ff92e 	bgeu	r20,r17,4012b04 <__ram_exceptions_end+0xfbff28bc>
				{
					IOWR_32DIRECT(addr, x << 2, local_color);
				}
				addr = addr + (1 << offset_y);
 4012b20:	00800044 	movi	r2,1
 4012b24:	1544983a 	sll	r2,r2,r21
 4012b28:	80a1883a 	add	r16,r16,r2
				addr = addr + (1 << offset_y);
			}
		}
		else
		{
			for (y = t_y; y <= b_y; y++)
 4012b2c:	94800044 	addi	r18,r18,1
 4012b30:	9cbff22e 	bgeu	r19,r18,4012afc <__ram_exceptions_end+0xfbff28b4>
 4012b34:	00003e06 	br	4012c30 <alt_up_pixel_buffer_dma_draw_box+0x2ac>
	} else {
		/* Draw a box of a given color on the screen using the linear addressing mode. */
		register unsigned int x,y;
		/* This portion of the code is purposefully replicated. This is because having a text for
		 * the mode would unnecessarily slow down the drawing of a box. */
		if (pixel_buffer->color_mode == ALT_UP_8BIT_COLOR_MODE) {
 4012b38:	e0bff417 	ldw	r2,-48(fp)
 4012b3c:	10800e17 	ldw	r2,56(r2)
 4012b40:	10800058 	cmpnei	r2,r2,1
 4012b44:	10000f1e 	bne	r2,zero,4012b84 <alt_up_pixel_buffer_dma_draw_box+0x200>
			addr = addr + t_y * limit_x;
 4012b48:	8c85383a 	mul	r2,r17,r18
 4012b4c:	80a1883a 	add	r16,r16,r2
			for (y = t_y; y <= b_y; y++)
 4012b50:	882b883a 	mov	r21,r17
 4012b54:	00000906 	br	4012b7c <alt_up_pixel_buffer_dma_draw_box+0x1f8>
			{
				for (x = l_x; x <= r_x; x++)
 4012b58:	b023883a 	mov	r17,r22
 4012b5c:	00000406 	br	4012b70 <alt_up_pixel_buffer_dma_draw_box+0x1ec>
				{
					IOWR_8DIRECT(addr, x, local_color);
 4012b60:	8c05883a 	add	r2,r17,r16
 4012b64:	b807883a 	mov	r3,r23
 4012b68:	10c00025 	stbio	r3,0(r2)
		 * the mode would unnecessarily slow down the drawing of a box. */
		if (pixel_buffer->color_mode == ALT_UP_8BIT_COLOR_MODE) {
			addr = addr + t_y * limit_x;
			for (y = t_y; y <= b_y; y++)
			{
				for (x = l_x; x <= r_x; x++)
 4012b6c:	8c400044 	addi	r17,r17,1
 4012b70:	a47ffb2e 	bgeu	r20,r17,4012b60 <__ram_exceptions_end+0xfbff2918>
				{
					IOWR_8DIRECT(addr, x, local_color);
				}
				addr = addr + limit_x;
 4012b74:	84a1883a 	add	r16,r16,r18
		register unsigned int x,y;
		/* This portion of the code is purposefully replicated. This is because having a text for
		 * the mode would unnecessarily slow down the drawing of a box. */
		if (pixel_buffer->color_mode == ALT_UP_8BIT_COLOR_MODE) {
			addr = addr + t_y * limit_x;
			for (y = t_y; y <= b_y; y++)
 4012b78:	ad400044 	addi	r21,r21,1
 4012b7c:	9d7ff62e 	bgeu	r19,r21,4012b58 <__ram_exceptions_end+0xfbff2910>
 4012b80:	00002b06 	br	4012c30 <alt_up_pixel_buffer_dma_draw_box+0x2ac>
				{
					IOWR_8DIRECT(addr, x, local_color);
				}
				addr = addr + limit_x;
			}
		} else if (pixel_buffer->color_mode == ALT_UP_16BIT_COLOR_MODE) {
 4012b84:	e0bff417 	ldw	r2,-48(fp)
 4012b88:	10800e17 	ldw	r2,56(r2)
 4012b8c:	10800098 	cmpnei	r2,r2,2
 4012b90:	1000121e 	bne	r2,zero,4012bdc <alt_up_pixel_buffer_dma_draw_box+0x258>
			limit_x = limit_x << 1;
 4012b94:	9485883a 	add	r2,r18,r18
 4012b98:	1025883a 	mov	r18,r2
			addr = addr + t_y * limit_x;
 4012b9c:	8c85383a 	mul	r2,r17,r18
 4012ba0:	80a1883a 	add	r16,r16,r2
			for (y = t_y; y <= b_y; y++)
 4012ba4:	882b883a 	mov	r21,r17
 4012ba8:	00000a06 	br	4012bd4 <alt_up_pixel_buffer_dma_draw_box+0x250>
			{
				for (x = l_x; x <= r_x; x++)
 4012bac:	b023883a 	mov	r17,r22
 4012bb0:	00000506 	br	4012bc8 <alt_up_pixel_buffer_dma_draw_box+0x244>
				{
					IOWR_16DIRECT(addr, x << 1, local_color);
 4012bb4:	8c45883a 	add	r2,r17,r17
 4012bb8:	1405883a 	add	r2,r2,r16
 4012bbc:	b807883a 	mov	r3,r23
 4012bc0:	10c0002d 	sthio	r3,0(r2)
		} else if (pixel_buffer->color_mode == ALT_UP_16BIT_COLOR_MODE) {
			limit_x = limit_x << 1;
			addr = addr + t_y * limit_x;
			for (y = t_y; y <= b_y; y++)
			{
				for (x = l_x; x <= r_x; x++)
 4012bc4:	8c400044 	addi	r17,r17,1
 4012bc8:	a47ffa2e 	bgeu	r20,r17,4012bb4 <__ram_exceptions_end+0xfbff296c>
				{
					IOWR_16DIRECT(addr, x << 1, local_color);
				}
				addr = addr + limit_x;
 4012bcc:	84a1883a 	add	r16,r16,r18
				addr = addr + limit_x;
			}
		} else if (pixel_buffer->color_mode == ALT_UP_16BIT_COLOR_MODE) {
			limit_x = limit_x << 1;
			addr = addr + t_y * limit_x;
			for (y = t_y; y <= b_y; y++)
 4012bd0:	ad400044 	addi	r21,r21,1
 4012bd4:	9d7ff52e 	bgeu	r19,r21,4012bac <__ram_exceptions_end+0xfbff2964>
 4012bd8:	00001506 	br	4012c30 <alt_up_pixel_buffer_dma_draw_box+0x2ac>
				addr = addr + limit_x;
			}
		}
		else
		{
			limit_x = limit_x << 2;
 4012bdc:	9485883a 	add	r2,r18,r18
 4012be0:	1085883a 	add	r2,r2,r2
 4012be4:	1025883a 	mov	r18,r2
			addr = addr + t_y * limit_x;
 4012be8:	8c85383a 	mul	r2,r17,r18
 4012bec:	80a1883a 	add	r16,r16,r2
			for (y = t_y; y <= b_y; y++)
 4012bf0:	882b883a 	mov	r21,r17
 4012bf4:	00000b06 	br	4012c24 <alt_up_pixel_buffer_dma_draw_box+0x2a0>
			{
				for (x = l_x; x <= r_x; x++)
 4012bf8:	b023883a 	mov	r17,r22
 4012bfc:	00000606 	br	4012c18 <alt_up_pixel_buffer_dma_draw_box+0x294>
				{
					IOWR_32DIRECT(addr, x << 2, local_color);
 4012c00:	8c45883a 	add	r2,r17,r17
 4012c04:	1085883a 	add	r2,r2,r2
 4012c08:	1405883a 	add	r2,r2,r16
 4012c0c:	b807883a 	mov	r3,r23
 4012c10:	10c00035 	stwio	r3,0(r2)
		{
			limit_x = limit_x << 2;
			addr = addr + t_y * limit_x;
			for (y = t_y; y <= b_y; y++)
			{
				for (x = l_x; x <= r_x; x++)
 4012c14:	8c400044 	addi	r17,r17,1
 4012c18:	a47ff92e 	bgeu	r20,r17,4012c00 <__ram_exceptions_end+0xfbff29b8>
				{
					IOWR_32DIRECT(addr, x << 2, local_color);
				}
				addr = addr + limit_x;
 4012c1c:	84a1883a 	add	r16,r16,r18
		}
		else
		{
			limit_x = limit_x << 2;
			addr = addr + t_y * limit_x;
			for (y = t_y; y <= b_y; y++)
 4012c20:	ad400044 	addi	r21,r21,1
 4012c24:	9d7ff42e 	bgeu	r19,r21,4012bf8 <__ram_exceptions_end+0xfbff29b0>
 4012c28:	00000106 	br	4012c30 <alt_up_pixel_buffer_dma_draw_box+0x2ac>
		b_y = temp;
	}
	if ((l_x >= limit_x) || (t_y >= limit_y) || (r_x < 0) || (b_y < 0))
	{
		/* Drawing outside of the window, so don't bother. */
		return;
 4012c2c:	0001883a 	nop
				}
				addr = addr + limit_x;
			}
		}
	}
}
 4012c30:	e6fff804 	addi	sp,fp,-32
 4012c34:	df000817 	ldw	fp,32(sp)
 4012c38:	ddc00717 	ldw	r23,28(sp)
 4012c3c:	dd800617 	ldw	r22,24(sp)
 4012c40:	dd400517 	ldw	r21,20(sp)
 4012c44:	dd000417 	ldw	r20,16(sp)
 4012c48:	dcc00317 	ldw	r19,12(sp)
 4012c4c:	dc800217 	ldw	r18,8(sp)
 4012c50:	dc400117 	ldw	r17,4(sp)
 4012c54:	dc000017 	ldw	r16,0(sp)
 4012c58:	dec00904 	addi	sp,sp,36
 4012c5c:	f800283a 	ret

04012c60 <alt_up_pixel_buffer_dma_draw_hline>:

void alt_up_pixel_buffer_dma_draw_hline(alt_up_pixel_buffer_dma_dev *pixel_buffer, int x0, int x1, int y, int color, int backbuffer)
/* This method draws a horizontal line. This method is faster than using the line method because we know the direction of the line. */
{
 4012c60:	defff404 	addi	sp,sp,-48
 4012c64:	df000b15 	stw	fp,44(sp)
 4012c68:	dd800a15 	stw	r22,40(sp)
 4012c6c:	dd400915 	stw	r21,36(sp)
 4012c70:	dd000815 	stw	r20,32(sp)
 4012c74:	dcc00715 	stw	r19,28(sp)
 4012c78:	dc800615 	stw	r18,24(sp)
 4012c7c:	dc400515 	stw	r17,20(sp)
 4012c80:	dc000415 	stw	r16,16(sp)
 4012c84:	df000b04 	addi	fp,sp,44
 4012c88:	e13ff515 	stw	r4,-44(fp)
 4012c8c:	e17ff615 	stw	r5,-40(fp)
 4012c90:	e1bff715 	stw	r6,-36(fp)
 4012c94:	e1fff815 	stw	r7,-32(fp)
	register unsigned int addr;
	register unsigned int limit_x = pixel_buffer->x_resolution;
 4012c98:	e0bff517 	ldw	r2,-44(fp)
 4012c9c:	14800f17 	ldw	r18,60(r2)
	register unsigned int limit_y = pixel_buffer->y_resolution;
 4012ca0:	e0bff517 	ldw	r2,-44(fp)
 4012ca4:	14001017 	ldw	r16,64(r2)
	register unsigned int temp;
	register unsigned int l_x = x0;
 4012ca8:	e47ff617 	ldw	r17,-40(fp)
	register unsigned int r_x = x1;
 4012cac:	e4fff717 	ldw	r19,-36(fp)
	register unsigned int line_y = y;
 4012cb0:	e53ff817 	ldw	r20,-32(fp)
	register unsigned int local_color = color;
 4012cb4:	e5400117 	ldw	r21,4(fp)
	
	/* Check coordinates */
	if (l_x > r_x)
 4012cb8:	9c40032e 	bgeu	r19,r17,4012cc8 <alt_up_pixel_buffer_dma_draw_hline+0x68>
	{
		temp = l_x;
 4012cbc:	882d883a 	mov	r22,r17
		l_x = r_x;
 4012cc0:	9823883a 	mov	r17,r19
		r_x = temp;
 4012cc4:	b027883a 	mov	r19,r22
	}
	if ((l_x >= limit_x) || (line_y >= limit_y) || (r_x < 0) || (line_y < 0))
 4012cc8:	8c805d2e 	bgeu	r17,r18,4012e40 <alt_up_pixel_buffer_dma_draw_hline+0x1e0>
 4012ccc:	a4005c2e 	bgeu	r20,r16,4012e40 <alt_up_pixel_buffer_dma_draw_hline+0x1e0>
	/* Clip the box and draw only within the confines of the screen. */
	if (l_x < 0)
	{
		l_x = 0;
	}
	if (r_x >= limit_x)
 4012cd0:	9c800136 	bltu	r19,r18,4012cd8 <alt_up_pixel_buffer_dma_draw_hline+0x78>
	{
		r_x = limit_x - 1;
 4012cd4:	94ffffc4 	addi	r19,r18,-1
	}

	/* Set up the address to start clearing from and the screen boundaries. */
	if (backbuffer == 1)
 4012cd8:	e0800217 	ldw	r2,8(fp)
 4012cdc:	10800058 	cmpnei	r2,r2,1
 4012ce0:	1000031e 	bne	r2,zero,4012cf0 <alt_up_pixel_buffer_dma_draw_hline+0x90>
		addr = pixel_buffer->back_buffer_start_address;
 4012ce4:	e0bff517 	ldw	r2,-44(fp)
 4012ce8:	14000c17 	ldw	r16,48(r2)
 4012cec:	00000206 	br	4012cf8 <alt_up_pixel_buffer_dma_draw_hline+0x98>
	else
		addr = pixel_buffer->buffer_start_address;
 4012cf0:	e0bff517 	ldw	r2,-44(fp)
 4012cf4:	14000b17 	ldw	r16,44(r2)

	/* Draw a horizontal line using one of the addressing modes. */
	if (pixel_buffer->addressing_mode == ALT_UP_PIXEL_BUFFER_XY_ADDRESS_MODE) {
 4012cf8:	e0bff517 	ldw	r2,-44(fp)
 4012cfc:	10800d17 	ldw	r2,52(r2)
 4012d00:	1000231e 	bne	r2,zero,4012d90 <alt_up_pixel_buffer_dma_draw_hline+0x130>
		/* Draw a horizontal line of a given color on the screen using the XY addressing mode. */
		register unsigned int x;
		register unsigned int offset_y;
		offset_y = pixel_buffer->y_coord_offset;
 4012d04:	e0bff517 	ldw	r2,-44(fp)
 4012d08:	14801317 	ldw	r18,76(r2)
		addr = addr + (line_y << offset_y);
 4012d0c:	a484983a 	sll	r2,r20,r18
 4012d10:	80a1883a 	add	r16,r16,r2
		
		/* This portion of the code is purposefully replicated. This is because having a text for
		 * the mode would unnecessarily slow down the drawing of a horizontal line. */
		if (pixel_buffer->color_mode == ALT_UP_8BIT_COLOR_MODE) {
 4012d14:	e0bff517 	ldw	r2,-44(fp)
 4012d18:	10800e17 	ldw	r2,56(r2)
 4012d1c:	10800058 	cmpnei	r2,r2,1
 4012d20:	1000071e 	bne	r2,zero,4012d40 <alt_up_pixel_buffer_dma_draw_hline+0xe0>
			for (x = l_x; x <= r_x; x++)
 4012d24:	00000406 	br	4012d38 <alt_up_pixel_buffer_dma_draw_hline+0xd8>
			{
				IOWR_8DIRECT(addr, x, local_color);
 4012d28:	8c05883a 	add	r2,r17,r16
 4012d2c:	a807883a 	mov	r3,r21
 4012d30:	10c00025 	stbio	r3,0(r2)
		addr = addr + (line_y << offset_y);
		
		/* This portion of the code is purposefully replicated. This is because having a text for
		 * the mode would unnecessarily slow down the drawing of a horizontal line. */
		if (pixel_buffer->color_mode == ALT_UP_8BIT_COLOR_MODE) {
			for (x = l_x; x <= r_x; x++)
 4012d34:	8c400044 	addi	r17,r17,1
 4012d38:	9c7ffb2e 	bgeu	r19,r17,4012d28 <__ram_exceptions_end+0xfbff2ae0>
 4012d3c:	00004106 	br	4012e44 <alt_up_pixel_buffer_dma_draw_hline+0x1e4>
			{
				IOWR_8DIRECT(addr, x, local_color);
			}
		} else if (pixel_buffer->color_mode == ALT_UP_16BIT_COLOR_MODE) {
 4012d40:	e0bff517 	ldw	r2,-44(fp)
 4012d44:	10800e17 	ldw	r2,56(r2)
 4012d48:	10800098 	cmpnei	r2,r2,2
 4012d4c:	10000e1e 	bne	r2,zero,4012d88 <alt_up_pixel_buffer_dma_draw_hline+0x128>
			for (x = l_x; x <= r_x; x++)
 4012d50:	00000506 	br	4012d68 <alt_up_pixel_buffer_dma_draw_hline+0x108>
			{
				IOWR_16DIRECT(addr, x << 1, local_color);
 4012d54:	8c45883a 	add	r2,r17,r17
 4012d58:	1405883a 	add	r2,r2,r16
 4012d5c:	a807883a 	mov	r3,r21
 4012d60:	10c0002d 	sthio	r3,0(r2)
			for (x = l_x; x <= r_x; x++)
			{
				IOWR_8DIRECT(addr, x, local_color);
			}
		} else if (pixel_buffer->color_mode == ALT_UP_16BIT_COLOR_MODE) {
			for (x = l_x; x <= r_x; x++)
 4012d64:	8c400044 	addi	r17,r17,1
 4012d68:	9c7ffa2e 	bgeu	r19,r17,4012d54 <__ram_exceptions_end+0xfbff2b0c>
 4012d6c:	00003506 	br	4012e44 <alt_up_pixel_buffer_dma_draw_hline+0x1e4>
		}
		else
		{
			for (x = l_x; x <= r_x; x++)
			{
				IOWR_32DIRECT(addr, x << 2, local_color);
 4012d70:	8c45883a 	add	r2,r17,r17
 4012d74:	1085883a 	add	r2,r2,r2
 4012d78:	1405883a 	add	r2,r2,r16
 4012d7c:	a807883a 	mov	r3,r21
 4012d80:	10c00035 	stwio	r3,0(r2)
				IOWR_16DIRECT(addr, x << 1, local_color);
			}
		}
		else
		{
			for (x = l_x; x <= r_x; x++)
 4012d84:	8c400044 	addi	r17,r17,1
 4012d88:	9c7ff92e 	bgeu	r19,r17,4012d70 <__ram_exceptions_end+0xfbff2b28>
 4012d8c:	00002d06 	br	4012e44 <alt_up_pixel_buffer_dma_draw_hline+0x1e4>
	} else {
		/* Draw a horizontal line of a given color on the screen using the linear addressing mode. */
		register unsigned int x;
		/* This portion of the code is purposefully replicated. This is because having a text for
		 * the mode would unnecessarily slow down the drawing of a box. */
		if (pixel_buffer->color_mode == ALT_UP_8BIT_COLOR_MODE) {
 4012d90:	e0bff517 	ldw	r2,-44(fp)
 4012d94:	10800e17 	ldw	r2,56(r2)
 4012d98:	10800058 	cmpnei	r2,r2,1
 4012d9c:	1000091e 	bne	r2,zero,4012dc4 <alt_up_pixel_buffer_dma_draw_hline+0x164>
			addr = addr + line_y * limit_x;
 4012da0:	a485383a 	mul	r2,r20,r18
 4012da4:	80a1883a 	add	r16,r16,r2
			for (x = l_x; x <= r_x; x++)
 4012da8:	00000406 	br	4012dbc <alt_up_pixel_buffer_dma_draw_hline+0x15c>
			{
				IOWR_8DIRECT(addr, x, local_color);
 4012dac:	8c05883a 	add	r2,r17,r16
 4012db0:	a807883a 	mov	r3,r21
 4012db4:	10c00025 	stbio	r3,0(r2)
		register unsigned int x;
		/* This portion of the code is purposefully replicated. This is because having a text for
		 * the mode would unnecessarily slow down the drawing of a box. */
		if (pixel_buffer->color_mode == ALT_UP_8BIT_COLOR_MODE) {
			addr = addr + line_y * limit_x;
			for (x = l_x; x <= r_x; x++)
 4012db8:	8c400044 	addi	r17,r17,1
 4012dbc:	9c7ffb2e 	bgeu	r19,r17,4012dac <__ram_exceptions_end+0xfbff2b64>
 4012dc0:	00002006 	br	4012e44 <alt_up_pixel_buffer_dma_draw_hline+0x1e4>
			{
				IOWR_8DIRECT(addr, x, local_color);
			}
		} else if (pixel_buffer->color_mode == ALT_UP_16BIT_COLOR_MODE) {
 4012dc4:	e0bff517 	ldw	r2,-44(fp)
 4012dc8:	10800e17 	ldw	r2,56(r2)
 4012dcc:	10800098 	cmpnei	r2,r2,2
 4012dd0:	10000c1e 	bne	r2,zero,4012e04 <alt_up_pixel_buffer_dma_draw_hline+0x1a4>
			limit_x = limit_x << 1;
 4012dd4:	9485883a 	add	r2,r18,r18
 4012dd8:	1025883a 	mov	r18,r2
			addr = addr + line_y * limit_x;
 4012ddc:	a485383a 	mul	r2,r20,r18
 4012de0:	80a1883a 	add	r16,r16,r2
			for (x = l_x; x <= r_x; x++)
 4012de4:	00000506 	br	4012dfc <alt_up_pixel_buffer_dma_draw_hline+0x19c>
			{
				IOWR_16DIRECT(addr, x << 1, local_color);
 4012de8:	8c45883a 	add	r2,r17,r17
 4012dec:	1405883a 	add	r2,r2,r16
 4012df0:	a807883a 	mov	r3,r21
 4012df4:	10c0002d 	sthio	r3,0(r2)
				IOWR_8DIRECT(addr, x, local_color);
			}
		} else if (pixel_buffer->color_mode == ALT_UP_16BIT_COLOR_MODE) {
			limit_x = limit_x << 1;
			addr = addr + line_y * limit_x;
			for (x = l_x; x <= r_x; x++)
 4012df8:	8c400044 	addi	r17,r17,1
 4012dfc:	9c7ffa2e 	bgeu	r19,r17,4012de8 <__ram_exceptions_end+0xfbff2ba0>
 4012e00:	00001006 	br	4012e44 <alt_up_pixel_buffer_dma_draw_hline+0x1e4>
				IOWR_16DIRECT(addr, x << 1, local_color);
			}
		}
		else
		{
			limit_x = limit_x << 2;
 4012e04:	9485883a 	add	r2,r18,r18
 4012e08:	1085883a 	add	r2,r2,r2
 4012e0c:	1025883a 	mov	r18,r2
			addr = addr + line_y * limit_x;
 4012e10:	a485383a 	mul	r2,r20,r18
 4012e14:	80a1883a 	add	r16,r16,r2
			for (x = l_x; x <= r_x; x++)
 4012e18:	00000606 	br	4012e34 <alt_up_pixel_buffer_dma_draw_hline+0x1d4>
			{
				IOWR_32DIRECT(addr, x << 2, local_color);
 4012e1c:	8c45883a 	add	r2,r17,r17
 4012e20:	1085883a 	add	r2,r2,r2
 4012e24:	1405883a 	add	r2,r2,r16
 4012e28:	a807883a 	mov	r3,r21
 4012e2c:	10c00035 	stwio	r3,0(r2)
		}
		else
		{
			limit_x = limit_x << 2;
			addr = addr + line_y * limit_x;
			for (x = l_x; x <= r_x; x++)
 4012e30:	8c400044 	addi	r17,r17,1
 4012e34:	9c7ff92e 	bgeu	r19,r17,4012e1c <__ram_exceptions_end+0xfbff2bd4>
			{
				IOWR_32DIRECT(addr, x << 2, local_color);
			}
			addr = addr + limit_x;
 4012e38:	84a1883a 	add	r16,r16,r18
 4012e3c:	00000106 	br	4012e44 <alt_up_pixel_buffer_dma_draw_hline+0x1e4>
		r_x = temp;
	}
	if ((l_x >= limit_x) || (line_y >= limit_y) || (r_x < 0) || (line_y < 0))
	{
		/* Drawing outside of the window, so don't bother. */
		return;
 4012e40:	0001883a 	nop
				IOWR_32DIRECT(addr, x << 2, local_color);
			}
			addr = addr + limit_x;
		}
	}
}
 4012e44:	e6fff904 	addi	sp,fp,-28
 4012e48:	df000717 	ldw	fp,28(sp)
 4012e4c:	dd800617 	ldw	r22,24(sp)
 4012e50:	dd400517 	ldw	r21,20(sp)
 4012e54:	dd000417 	ldw	r20,16(sp)
 4012e58:	dcc00317 	ldw	r19,12(sp)
 4012e5c:	dc800217 	ldw	r18,8(sp)
 4012e60:	dc400117 	ldw	r17,4(sp)
 4012e64:	dc000017 	ldw	r16,0(sp)
 4012e68:	dec00804 	addi	sp,sp,32
 4012e6c:	f800283a 	ret

04012e70 <alt_up_pixel_buffer_dma_draw_vline>:


void alt_up_pixel_buffer_dma_draw_vline(alt_up_pixel_buffer_dma_dev *pixel_buffer, int x, int y0, int y1, int color, int backbuffer)
/* This method draws a vertical line. This method is faster than using the line method because we know the direction of the line. */

{
 4012e70:	defff404 	addi	sp,sp,-48
 4012e74:	df000b15 	stw	fp,44(sp)
 4012e78:	dd800a15 	stw	r22,40(sp)
 4012e7c:	dd400915 	stw	r21,36(sp)
 4012e80:	dd000815 	stw	r20,32(sp)
 4012e84:	dcc00715 	stw	r19,28(sp)
 4012e88:	dc800615 	stw	r18,24(sp)
 4012e8c:	dc400515 	stw	r17,20(sp)
 4012e90:	dc000415 	stw	r16,16(sp)
 4012e94:	df000b04 	addi	fp,sp,44
 4012e98:	e13ff515 	stw	r4,-44(fp)
 4012e9c:	e17ff615 	stw	r5,-40(fp)
 4012ea0:	e1bff715 	stw	r6,-36(fp)
 4012ea4:	e1fff815 	stw	r7,-32(fp)
	register unsigned int addr;
	register unsigned int limit_x = pixel_buffer->x_resolution;
 4012ea8:	e0bff517 	ldw	r2,-44(fp)
 4012eac:	14400f17 	ldw	r17,60(r2)
	register unsigned int limit_y = pixel_buffer->y_resolution;
 4012eb0:	e0bff517 	ldw	r2,-44(fp)
 4012eb4:	14001017 	ldw	r16,64(r2)
	register unsigned int temp;
	register unsigned int line_x = x;
 4012eb8:	e4bff617 	ldw	r18,-40(fp)
	register unsigned int t_y = y0;
 4012ebc:	e53ff717 	ldw	r20,-36(fp)
	register unsigned int b_y = y1;
 4012ec0:	e4fff817 	ldw	r19,-32(fp)
	register unsigned int local_color = color;
 4012ec4:	e5800117 	ldw	r22,4(fp)
	
	/* Check coordinates */
	if (t_y > b_y)
 4012ec8:	9d00032e 	bgeu	r19,r20,4012ed8 <alt_up_pixel_buffer_dma_draw_vline+0x68>
	{
		temp = t_y;
 4012ecc:	a02b883a 	mov	r21,r20
		t_y = b_y;
 4012ed0:	9829883a 	mov	r20,r19
		b_y = temp;
 4012ed4:	a827883a 	mov	r19,r21
	}
	if ((line_x >= limit_x) || (t_y >= limit_y) || (line_x < 0) || (b_y < 0))
 4012ed8:	94406c2e 	bgeu	r18,r17,401308c <alt_up_pixel_buffer_dma_draw_vline+0x21c>
 4012edc:	a4006b2e 	bgeu	r20,r16,401308c <alt_up_pixel_buffer_dma_draw_vline+0x21c>
	/* Clip the box and draw only within the confines of the screen. */
	if (t_y < 0)
	{
		t_y = 0;
	}
	if (b_y >= limit_y)
 4012ee0:	9c000136 	bltu	r19,r16,4012ee8 <alt_up_pixel_buffer_dma_draw_vline+0x78>
	{
		b_y = limit_y - 1;
 4012ee4:	84ffffc4 	addi	r19,r16,-1
	}

	/* Set up the address to start clearing from and the screen boundaries. */
	if (backbuffer == 1)
 4012ee8:	e0800217 	ldw	r2,8(fp)
 4012eec:	10800058 	cmpnei	r2,r2,1
 4012ef0:	1000031e 	bne	r2,zero,4012f00 <alt_up_pixel_buffer_dma_draw_vline+0x90>
		addr = pixel_buffer->back_buffer_start_address;
 4012ef4:	e0bff517 	ldw	r2,-44(fp)
 4012ef8:	14000c17 	ldw	r16,48(r2)
 4012efc:	00000206 	br	4012f08 <alt_up_pixel_buffer_dma_draw_vline+0x98>
	else
		addr = pixel_buffer->buffer_start_address;
 4012f00:	e0bff517 	ldw	r2,-44(fp)
 4012f04:	14000b17 	ldw	r16,44(r2)

	/* Draw the vertical line using one of the addressing modes. */
	if (pixel_buffer->addressing_mode == ALT_UP_PIXEL_BUFFER_XY_ADDRESS_MODE) {
 4012f08:	e0bff517 	ldw	r2,-44(fp)
 4012f0c:	10800d17 	ldw	r2,52(r2)
 4012f10:	1000301e 	bne	r2,zero,4012fd4 <alt_up_pixel_buffer_dma_draw_vline+0x164>
		/* Draw a vertical line of a given color on the screen using the XY addressing mode. */
		register unsigned int y;
		register unsigned int offset_y;
		offset_y = pixel_buffer->y_coord_offset;
 4012f14:	e0bff517 	ldw	r2,-44(fp)
 4012f18:	15401317 	ldw	r21,76(r2)
		addr = addr + (t_y << offset_y);
 4012f1c:	a544983a 	sll	r2,r20,r21
 4012f20:	80a1883a 	add	r16,r16,r2
		
		/* This portion of the code is purposefully replicated. This is because having a text for
		 * the mode would unnecessarily slow down the drawing of a box. */
		if (pixel_buffer->color_mode == ALT_UP_8BIT_COLOR_MODE) {
 4012f24:	e0bff517 	ldw	r2,-44(fp)
 4012f28:	10800e17 	ldw	r2,56(r2)
 4012f2c:	10800058 	cmpnei	r2,r2,1
 4012f30:	10000b1e 	bne	r2,zero,4012f60 <alt_up_pixel_buffer_dma_draw_vline+0xf0>
			for (y = t_y; y <= b_y; y++)
 4012f34:	a023883a 	mov	r17,r20
 4012f38:	00000706 	br	4012f58 <alt_up_pixel_buffer_dma_draw_vline+0xe8>
			{
				IOWR_8DIRECT(addr, line_x, local_color);
 4012f3c:	9405883a 	add	r2,r18,r16
 4012f40:	b007883a 	mov	r3,r22
 4012f44:	10c00025 	stbio	r3,0(r2)
				addr = addr + (1 << offset_y);
 4012f48:	00800044 	movi	r2,1
 4012f4c:	1544983a 	sll	r2,r2,r21
 4012f50:	80a1883a 	add	r16,r16,r2
		addr = addr + (t_y << offset_y);
		
		/* This portion of the code is purposefully replicated. This is because having a text for
		 * the mode would unnecessarily slow down the drawing of a box. */
		if (pixel_buffer->color_mode == ALT_UP_8BIT_COLOR_MODE) {
			for (y = t_y; y <= b_y; y++)
 4012f54:	8c400044 	addi	r17,r17,1
 4012f58:	9c7ff82e 	bgeu	r19,r17,4012f3c <__ram_exceptions_end+0xfbff2cf4>
 4012f5c:	00004c06 	br	4013090 <alt_up_pixel_buffer_dma_draw_vline+0x220>
			{
				IOWR_8DIRECT(addr, line_x, local_color);
				addr = addr + (1 << offset_y);
			}
		} else if (pixel_buffer->color_mode == ALT_UP_16BIT_COLOR_MODE) {
 4012f60:	e0bff517 	ldw	r2,-44(fp)
 4012f64:	10800e17 	ldw	r2,56(r2)
 4012f68:	10800098 	cmpnei	r2,r2,2
 4012f6c:	10000c1e 	bne	r2,zero,4012fa0 <alt_up_pixel_buffer_dma_draw_vline+0x130>
			for (y = t_y; y <= b_y; y++)
 4012f70:	a023883a 	mov	r17,r20
 4012f74:	00000806 	br	4012f98 <alt_up_pixel_buffer_dma_draw_vline+0x128>
			{
				IOWR_16DIRECT(addr, line_x << 1, local_color);
 4012f78:	9485883a 	add	r2,r18,r18
 4012f7c:	1405883a 	add	r2,r2,r16
 4012f80:	b007883a 	mov	r3,r22
 4012f84:	10c0002d 	sthio	r3,0(r2)
				addr = addr + (1 << offset_y);
 4012f88:	00800044 	movi	r2,1
 4012f8c:	1544983a 	sll	r2,r2,r21
 4012f90:	80a1883a 	add	r16,r16,r2
			{
				IOWR_8DIRECT(addr, line_x, local_color);
				addr = addr + (1 << offset_y);
			}
		} else if (pixel_buffer->color_mode == ALT_UP_16BIT_COLOR_MODE) {
			for (y = t_y; y <= b_y; y++)
 4012f94:	8c400044 	addi	r17,r17,1
 4012f98:	9c7ff72e 	bgeu	r19,r17,4012f78 <__ram_exceptions_end+0xfbff2d30>
 4012f9c:	00003c06 	br	4013090 <alt_up_pixel_buffer_dma_draw_vline+0x220>
				addr = addr + (1 << offset_y);
			}
		}
		else
		{
			for (y = t_y; y <= b_y; y++)
 4012fa0:	a023883a 	mov	r17,r20
 4012fa4:	00000906 	br	4012fcc <alt_up_pixel_buffer_dma_draw_vline+0x15c>
			{
				IOWR_32DIRECT(addr, line_x << 2, local_color);
 4012fa8:	9485883a 	add	r2,r18,r18
 4012fac:	1085883a 	add	r2,r2,r2
 4012fb0:	1405883a 	add	r2,r2,r16
 4012fb4:	b007883a 	mov	r3,r22
 4012fb8:	10c00035 	stwio	r3,0(r2)
				addr = addr + (1 << offset_y);
 4012fbc:	00800044 	movi	r2,1
 4012fc0:	1544983a 	sll	r2,r2,r21
 4012fc4:	80a1883a 	add	r16,r16,r2
				addr = addr + (1 << offset_y);
			}
		}
		else
		{
			for (y = t_y; y <= b_y; y++)
 4012fc8:	8c400044 	addi	r17,r17,1
 4012fcc:	9c7ff62e 	bgeu	r19,r17,4012fa8 <__ram_exceptions_end+0xfbff2d60>
 4012fd0:	00002f06 	br	4013090 <alt_up_pixel_buffer_dma_draw_vline+0x220>
	} else {
		/* Draw a vertical line of a given color on the screen using the linear addressing mode. */
		register unsigned int y;
		/* This portion of the code is purposefully replicated. This is because having a text for
		 * the mode would unnecessarily slow down the drawing of a box. */
		if (pixel_buffer->color_mode == ALT_UP_8BIT_COLOR_MODE) {
 4012fd4:	e0bff517 	ldw	r2,-44(fp)
 4012fd8:	10800e17 	ldw	r2,56(r2)
 4012fdc:	10800058 	cmpnei	r2,r2,1
 4012fe0:	10000a1e 	bne	r2,zero,401300c <alt_up_pixel_buffer_dma_draw_vline+0x19c>
			addr = addr + t_y * limit_x;
 4012fe4:	a445383a 	mul	r2,r20,r17
 4012fe8:	80a1883a 	add	r16,r16,r2
			for (y = t_y; y <= b_y; y++)
 4012fec:	00000506 	br	4013004 <alt_up_pixel_buffer_dma_draw_vline+0x194>
			{
				IOWR_8DIRECT(addr, line_x, local_color);
 4012ff0:	9405883a 	add	r2,r18,r16
 4012ff4:	b007883a 	mov	r3,r22
 4012ff8:	10c00025 	stbio	r3,0(r2)
				addr = addr + limit_x;
 4012ffc:	8461883a 	add	r16,r16,r17
		register unsigned int y;
		/* This portion of the code is purposefully replicated. This is because having a text for
		 * the mode would unnecessarily slow down the drawing of a box. */
		if (pixel_buffer->color_mode == ALT_UP_8BIT_COLOR_MODE) {
			addr = addr + t_y * limit_x;
			for (y = t_y; y <= b_y; y++)
 4013000:	a5000044 	addi	r20,r20,1
 4013004:	9d3ffa2e 	bgeu	r19,r20,4012ff0 <__ram_exceptions_end+0xfbff2da8>
 4013008:	00002106 	br	4013090 <alt_up_pixel_buffer_dma_draw_vline+0x220>
			{
				IOWR_8DIRECT(addr, line_x, local_color);
				addr = addr + limit_x;
			}
		} else if (pixel_buffer->color_mode == ALT_UP_16BIT_COLOR_MODE) {
 401300c:	e0bff517 	ldw	r2,-44(fp)
 4013010:	10800e17 	ldw	r2,56(r2)
 4013014:	10800098 	cmpnei	r2,r2,2
 4013018:	10000d1e 	bne	r2,zero,4013050 <alt_up_pixel_buffer_dma_draw_vline+0x1e0>
			limit_x = limit_x << 1;
 401301c:	8c45883a 	add	r2,r17,r17
 4013020:	1023883a 	mov	r17,r2
			addr = addr + t_y * limit_x;
 4013024:	a445383a 	mul	r2,r20,r17
 4013028:	80a1883a 	add	r16,r16,r2
			for (y = t_y; y <= b_y; y++)
 401302c:	00000606 	br	4013048 <alt_up_pixel_buffer_dma_draw_vline+0x1d8>
			{
				IOWR_16DIRECT(addr, line_x << 1, local_color);
 4013030:	9485883a 	add	r2,r18,r18
 4013034:	1405883a 	add	r2,r2,r16
 4013038:	b007883a 	mov	r3,r22
 401303c:	10c0002d 	sthio	r3,0(r2)
				addr = addr + limit_x;
 4013040:	8461883a 	add	r16,r16,r17
				addr = addr + limit_x;
			}
		} else if (pixel_buffer->color_mode == ALT_UP_16BIT_COLOR_MODE) {
			limit_x = limit_x << 1;
			addr = addr + t_y * limit_x;
			for (y = t_y; y <= b_y; y++)
 4013044:	a5000044 	addi	r20,r20,1
 4013048:	9d3ff92e 	bgeu	r19,r20,4013030 <__ram_exceptions_end+0xfbff2de8>
 401304c:	00001006 	br	4013090 <alt_up_pixel_buffer_dma_draw_vline+0x220>
				addr = addr + limit_x;
			}
		}
		else
		{
			limit_x = limit_x << 2;
 4013050:	8c45883a 	add	r2,r17,r17
 4013054:	1085883a 	add	r2,r2,r2
 4013058:	1023883a 	mov	r17,r2
			addr = addr + t_y * limit_x;
 401305c:	a445383a 	mul	r2,r20,r17
 4013060:	80a1883a 	add	r16,r16,r2
			for (y = t_y; y <= b_y; y++)
 4013064:	00000706 	br	4013084 <alt_up_pixel_buffer_dma_draw_vline+0x214>
			{
				IOWR_32DIRECT(addr, line_x << 2, local_color);
 4013068:	9485883a 	add	r2,r18,r18
 401306c:	1085883a 	add	r2,r2,r2
 4013070:	1405883a 	add	r2,r2,r16
 4013074:	b007883a 	mov	r3,r22
 4013078:	10c00035 	stwio	r3,0(r2)
				addr = addr + limit_x;
 401307c:	8461883a 	add	r16,r16,r17
		}
		else
		{
			limit_x = limit_x << 2;
			addr = addr + t_y * limit_x;
			for (y = t_y; y <= b_y; y++)
 4013080:	a5000044 	addi	r20,r20,1
 4013084:	9d3ff82e 	bgeu	r19,r20,4013068 <__ram_exceptions_end+0xfbff2e20>
 4013088:	00000106 	br	4013090 <alt_up_pixel_buffer_dma_draw_vline+0x220>
		b_y = temp;
	}
	if ((line_x >= limit_x) || (t_y >= limit_y) || (line_x < 0) || (b_y < 0))
	{
		/* Drawing outside of the window, so don't bother. */
		return;
 401308c:	0001883a 	nop
				IOWR_32DIRECT(addr, line_x << 2, local_color);
				addr = addr + limit_x;
			}
		}
	}
}
 4013090:	e6fff904 	addi	sp,fp,-28
 4013094:	df000717 	ldw	fp,28(sp)
 4013098:	dd800617 	ldw	r22,24(sp)
 401309c:	dd400517 	ldw	r21,20(sp)
 40130a0:	dd000417 	ldw	r20,16(sp)
 40130a4:	dcc00317 	ldw	r19,12(sp)
 40130a8:	dc800217 	ldw	r18,8(sp)
 40130ac:	dc400117 	ldw	r17,4(sp)
 40130b0:	dc000017 	ldw	r16,0(sp)
 40130b4:	dec00804 	addi	sp,sp,32
 40130b8:	f800283a 	ret

040130bc <alt_up_pixel_buffer_dma_draw_rectangle>:

void alt_up_pixel_buffer_dma_draw_rectangle(alt_up_pixel_buffer_dma_dev *pixel_buffer, int x0, int y0, int x1, int y1, int color, int backbuffer)
{
 40130bc:	defff804 	addi	sp,sp,-32
 40130c0:	dfc00715 	stw	ra,28(sp)
 40130c4:	df000615 	stw	fp,24(sp)
 40130c8:	df000604 	addi	fp,sp,24
 40130cc:	e13ffc15 	stw	r4,-16(fp)
 40130d0:	e17ffd15 	stw	r5,-12(fp)
 40130d4:	e1bffe15 	stw	r6,-8(fp)
 40130d8:	e1ffff15 	stw	r7,-4(fp)
	alt_up_pixel_buffer_dma_draw_hline(pixel_buffer, x0, x1, y0, color, backbuffer);
 40130dc:	e0800417 	ldw	r2,16(fp)
 40130e0:	d8800115 	stw	r2,4(sp)
 40130e4:	e0800317 	ldw	r2,12(fp)
 40130e8:	d8800015 	stw	r2,0(sp)
 40130ec:	e1fffe17 	ldw	r7,-8(fp)
 40130f0:	e1bfff17 	ldw	r6,-4(fp)
 40130f4:	e17ffd17 	ldw	r5,-12(fp)
 40130f8:	e13ffc17 	ldw	r4,-16(fp)
 40130fc:	4012c600 	call	4012c60 <alt_up_pixel_buffer_dma_draw_hline>
	alt_up_pixel_buffer_dma_draw_hline(pixel_buffer, x0, x1, y1, color, backbuffer);
 4013100:	e0800417 	ldw	r2,16(fp)
 4013104:	d8800115 	stw	r2,4(sp)
 4013108:	e0800317 	ldw	r2,12(fp)
 401310c:	d8800015 	stw	r2,0(sp)
 4013110:	e1c00217 	ldw	r7,8(fp)
 4013114:	e1bfff17 	ldw	r6,-4(fp)
 4013118:	e17ffd17 	ldw	r5,-12(fp)
 401311c:	e13ffc17 	ldw	r4,-16(fp)
 4013120:	4012c600 	call	4012c60 <alt_up_pixel_buffer_dma_draw_hline>
	alt_up_pixel_buffer_dma_draw_vline(pixel_buffer, x0, y0, y1, color, backbuffer);
 4013124:	e0800417 	ldw	r2,16(fp)
 4013128:	d8800115 	stw	r2,4(sp)
 401312c:	e0800317 	ldw	r2,12(fp)
 4013130:	d8800015 	stw	r2,0(sp)
 4013134:	e1c00217 	ldw	r7,8(fp)
 4013138:	e1bffe17 	ldw	r6,-8(fp)
 401313c:	e17ffd17 	ldw	r5,-12(fp)
 4013140:	e13ffc17 	ldw	r4,-16(fp)
 4013144:	4012e700 	call	4012e70 <alt_up_pixel_buffer_dma_draw_vline>
	alt_up_pixel_buffer_dma_draw_vline(pixel_buffer, x1, y0, y1, color, backbuffer);
 4013148:	e0800417 	ldw	r2,16(fp)
 401314c:	d8800115 	stw	r2,4(sp)
 4013150:	e0800317 	ldw	r2,12(fp)
 4013154:	d8800015 	stw	r2,0(sp)
 4013158:	e1c00217 	ldw	r7,8(fp)
 401315c:	e1bffe17 	ldw	r6,-8(fp)
 4013160:	e17fff17 	ldw	r5,-4(fp)
 4013164:	e13ffc17 	ldw	r4,-16(fp)
 4013168:	4012e700 	call	4012e70 <alt_up_pixel_buffer_dma_draw_vline>
}
 401316c:	0001883a 	nop
 4013170:	e037883a 	mov	sp,fp
 4013174:	dfc00117 	ldw	ra,4(sp)
 4013178:	df000017 	ldw	fp,0(sp)
 401317c:	dec00204 	addi	sp,sp,8
 4013180:	f800283a 	ret

04013184 <helper_plot_pixel>:

void helper_plot_pixel(register unsigned int buffer_start, register int line_size, register int x, register int y, register int color, register int mode)
/* This is a helper function that draws a pixel at a given location. Note that no boundary checks are made,
 * so drawing off-screen may cause unpredictable side effects. */
{
 4013184:	deffff04 	addi	sp,sp,-4
 4013188:	df000015 	stw	fp,0(sp)
 401318c:	d839883a 	mov	fp,sp
 4013190:	2005883a 	mov	r2,r4
 4013194:	3007883a 	mov	r3,r6
 4013198:	3809883a 	mov	r4,r7
 401319c:	e1800117 	ldw	r6,4(fp)
 40131a0:	e1c00217 	ldw	r7,8(fp)
	if (mode == 0)
 40131a4:	3800051e 	bne	r7,zero,40131bc <helper_plot_pixel+0x38>
		IOWR_8DIRECT(buffer_start, line_size*y+x, color);
 40131a8:	2909383a 	mul	r4,r5,r4
 40131ac:	20c7883a 	add	r3,r4,r3
 40131b0:	1885883a 	add	r2,r3,r2
 40131b4:	11800025 	stbio	r6,0(r2)
	else if (mode == 1)
		IOWR_16DIRECT(buffer_start, (line_size*y+x) << 1, color);
	else
		IOWR_32DIRECT(buffer_start, (line_size*y+x) << 2, color);
}
 40131b8:	00000e06 	br	40131f4 <helper_plot_pixel+0x70>
/* This is a helper function that draws a pixel at a given location. Note that no boundary checks are made,
 * so drawing off-screen may cause unpredictable side effects. */
{
	if (mode == 0)
		IOWR_8DIRECT(buffer_start, line_size*y+x, color);
	else if (mode == 1)
 40131bc:	39c00058 	cmpnei	r7,r7,1
 40131c0:	3800061e 	bne	r7,zero,40131dc <helper_plot_pixel+0x58>
		IOWR_16DIRECT(buffer_start, (line_size*y+x) << 1, color);
 40131c4:	2909383a 	mul	r4,r5,r4
 40131c8:	20c7883a 	add	r3,r4,r3
 40131cc:	18c7883a 	add	r3,r3,r3
 40131d0:	1885883a 	add	r2,r3,r2
 40131d4:	1180002d 	sthio	r6,0(r2)
	else
		IOWR_32DIRECT(buffer_start, (line_size*y+x) << 2, color);
}
 40131d8:	00000606 	br	40131f4 <helper_plot_pixel+0x70>
	if (mode == 0)
		IOWR_8DIRECT(buffer_start, line_size*y+x, color);
	else if (mode == 1)
		IOWR_16DIRECT(buffer_start, (line_size*y+x) << 1, color);
	else
		IOWR_32DIRECT(buffer_start, (line_size*y+x) << 2, color);
 40131dc:	2909383a 	mul	r4,r5,r4
 40131e0:	20c7883a 	add	r3,r4,r3
 40131e4:	18c7883a 	add	r3,r3,r3
 40131e8:	18c7883a 	add	r3,r3,r3
 40131ec:	1885883a 	add	r2,r3,r2
 40131f0:	11800035 	stwio	r6,0(r2)
}
 40131f4:	0001883a 	nop
 40131f8:	e037883a 	mov	sp,fp
 40131fc:	df000017 	ldw	fp,0(sp)
 4013200:	dec00104 	addi	sp,sp,4
 4013204:	f800283a 	ret

04013208 <alt_up_pixel_buffer_dma_draw_line>:

void alt_up_pixel_buffer_dma_draw_line(alt_up_pixel_buffer_dma_dev *pixel_buffer, int x0, int y0, int x1, int y1, int color, int backbuffer)
/* This function draws a line between points (x0, y0) and (x1, y1). The function does not check if it draws a pixel within screen boundaries.
 * users should ensure that the line is drawn within the screen boundaries. */
{
 4013208:	deffeb04 	addi	sp,sp,-84
 401320c:	dfc01415 	stw	ra,80(sp)
 4013210:	df001315 	stw	fp,76(sp)
 4013214:	ddc01215 	stw	r23,72(sp)
 4013218:	dd801115 	stw	r22,68(sp)
 401321c:	dd401015 	stw	r21,64(sp)
 4013220:	dd000f15 	stw	r20,60(sp)
 4013224:	dcc00e15 	stw	r19,56(sp)
 4013228:	dc800d15 	stw	r18,52(sp)
 401322c:	dc400c15 	stw	r17,48(sp)
 4013230:	dc000b15 	stw	r16,44(sp)
 4013234:	df001304 	addi	fp,sp,76
 4013238:	e13fef15 	stw	r4,-68(fp)
 401323c:	e17ff015 	stw	r5,-64(fp)
 4013240:	e1bff115 	stw	r6,-60(fp)
 4013244:	e1fff215 	stw	r7,-56(fp)
	register int x_0 = x0;
 4013248:	e47ff017 	ldw	r17,-64(fp)
	register int y_0 = y0;
 401324c:	e4fff117 	ldw	r19,-60(fp)
	register int x_1 = x1;
 4013250:	e4bff217 	ldw	r18,-56(fp)
	register int y_1 = y1;
 4013254:	e5000217 	ldw	r20,8(fp)
	register char steep = (ABS(y_1 - y_0) > ABS(x_1 - x_0)) ? 1 : 0;
 4013258:	a4c5c83a 	sub	r2,r20,r19
 401325c:	1000010e 	bge	r2,zero,4013264 <alt_up_pixel_buffer_dma_draw_line+0x5c>
 4013260:	0085c83a 	sub	r2,zero,r2
 4013264:	1007883a 	mov	r3,r2
 4013268:	9445c83a 	sub	r2,r18,r17
 401326c:	1000010e 	bge	r2,zero,4013274 <alt_up_pixel_buffer_dma_draw_line+0x6c>
 4013270:	0085c83a 	sub	r2,zero,r2
 4013274:	10c4803a 	cmplt	r2,r2,r3
 4013278:	e0bff305 	stb	r2,-52(fp)
	register int deltax, deltay, error, ystep, x, y;
	register int color_mode =	(pixel_buffer->color_mode == ALT_UP_8BIT_COLOR_MODE) ? 0 :
 401327c:	e0bfef17 	ldw	r2,-68(fp)
 4013280:	10800e17 	ldw	r2,56(r2)
 4013284:	10800060 	cmpeqi	r2,r2,1
 4013288:	1000081e 	bne	r2,zero,40132ac <alt_up_pixel_buffer_dma_draw_line+0xa4>
								(pixel_buffer->color_mode == ALT_UP_16BIT_COLOR_MODE) ? 1 : 2;
 401328c:	e0bfef17 	ldw	r2,-68(fp)
 4013290:	10800e17 	ldw	r2,56(r2)
 4013294:	10800098 	cmpnei	r2,r2,2
 4013298:	1000021e 	bne	r2,zero,40132a4 <alt_up_pixel_buffer_dma_draw_line+0x9c>
 401329c:	00800044 	movi	r2,1
 40132a0:	00000306 	br	40132b0 <alt_up_pixel_buffer_dma_draw_line+0xa8>
 40132a4:	00800084 	movi	r2,2
 40132a8:	00000106 	br	40132b0 <alt_up_pixel_buffer_dma_draw_line+0xa8>
	register int y_0 = y0;
	register int x_1 = x1;
	register int y_1 = y1;
	register char steep = (ABS(y_1 - y_0) > ABS(x_1 - x_0)) ? 1 : 0;
	register int deltax, deltay, error, ystep, x, y;
	register int color_mode =	(pixel_buffer->color_mode == ALT_UP_8BIT_COLOR_MODE) ? 0 :
 40132ac:	0005883a 	mov	r2,zero
 40132b0:	e0bff415 	stw	r2,-48(fp)
								(pixel_buffer->color_mode == ALT_UP_16BIT_COLOR_MODE) ? 1 : 2;
	register int line_color = color;
 40132b4:	e0800317 	ldw	r2,12(fp)
 40132b8:	e0bff515 	stw	r2,-44(fp)
	register unsigned int buffer_start;
	register int line_size = (pixel_buffer->addressing_mode == ALT_UP_PIXEL_BUFFER_XY_ADDRESS_MODE) ? (1 << (pixel_buffer->y_coord_offset-color_mode)) : pixel_buffer->x_resolution;
 40132bc:	e0bfef17 	ldw	r2,-68(fp)
 40132c0:	10800d17 	ldw	r2,52(r2)
 40132c4:	1000071e 	bne	r2,zero,40132e4 <alt_up_pixel_buffer_dma_draw_line+0xdc>
 40132c8:	e0bfef17 	ldw	r2,-68(fp)
 40132cc:	10801317 	ldw	r2,76(r2)
 40132d0:	e0fff417 	ldw	r3,-48(fp)
 40132d4:	10c5c83a 	sub	r2,r2,r3
 40132d8:	00c00044 	movi	r3,1
 40132dc:	1884983a 	sll	r2,r3,r2
 40132e0:	00000206 	br	40132ec <alt_up_pixel_buffer_dma_draw_line+0xe4>
 40132e4:	e0bfef17 	ldw	r2,-68(fp)
 40132e8:	10800f17 	ldw	r2,60(r2)
 40132ec:	e0bff615 	stw	r2,-40(fp)

	if (backbuffer == 1)
 40132f0:	e0800417 	ldw	r2,16(fp)
 40132f4:	10800058 	cmpnei	r2,r2,1
 40132f8:	1000031e 	bne	r2,zero,4013308 <alt_up_pixel_buffer_dma_draw_line+0x100>
		buffer_start = pixel_buffer->back_buffer_start_address;
 40132fc:	e0bfef17 	ldw	r2,-68(fp)
 4013300:	15c00c17 	ldw	r23,48(r2)
 4013304:	00000206 	br	4013310 <alt_up_pixel_buffer_dma_draw_line+0x108>
	else
		buffer_start = pixel_buffer->buffer_start_address;
 4013308:	e0bfef17 	ldw	r2,-68(fp)
 401330c:	15c00b17 	ldw	r23,44(r2)

	/* Preprocessing inputs */
	if (steep > 0) {
 4013310:	e0bff307 	ldb	r2,-52(fp)
 4013314:	0080060e 	bge	zero,r2,4013330 <alt_up_pixel_buffer_dma_draw_line+0x128>
		// Swap x_0 and y_0
		error = x_0;
 4013318:	8821883a 	mov	r16,r17
		x_0 = y_0;
 401331c:	9823883a 	mov	r17,r19
		y_0 = error;
 4013320:	8027883a 	mov	r19,r16
		// Swap x_1 and y_1
		error = x_1;
 4013324:	9021883a 	mov	r16,r18
		x_1 = y_1;
 4013328:	a025883a 	mov	r18,r20
		y_1 = error;
 401332c:	8029883a 	mov	r20,r16
	}
	if (x_0 > x_1) {
 4013330:	9440060e 	bge	r18,r17,401334c <alt_up_pixel_buffer_dma_draw_line+0x144>
		// Swap x_0 and x_1
		error = x_0;
 4013334:	8821883a 	mov	r16,r17
		x_0 = x_1;
 4013338:	9023883a 	mov	r17,r18
		x_1 = error;
 401333c:	8025883a 	mov	r18,r16
		// Swap y_0 and y_1
		error = y_0;
 4013340:	9821883a 	mov	r16,r19
		y_0 = y_1;
 4013344:	a027883a 	mov	r19,r20
		y_1 = error;
 4013348:	8029883a 	mov	r20,r16
	}

	/* Setup local variables */
	deltax = x_1 - x_0;
 401334c:	946bc83a 	sub	r21,r18,r17
	deltay = ABS(y_1 - y_0);
 4013350:	a4c5c83a 	sub	r2,r20,r19
 4013354:	1000010e 	bge	r2,zero,401335c <alt_up_pixel_buffer_dma_draw_line+0x154>
 4013358:	0085c83a 	sub	r2,zero,r2
 401335c:	e0bff715 	stw	r2,-36(fp)
	error = -(deltax / 2); 
 4013360:	a804d7fa 	srli	r2,r21,31
 4013364:	1545883a 	add	r2,r2,r21
 4013368:	1005d07a 	srai	r2,r2,1
 401336c:	00a1c83a 	sub	r16,zero,r2
	y = y_0;
 4013370:	982d883a 	mov	r22,r19
	if (y_0 < y_1)
 4013374:	9d00020e 	bge	r19,r20,4013380 <alt_up_pixel_buffer_dma_draw_line+0x178>
		ystep = 1;
 4013378:	04c00044 	movi	r19,1
 401337c:	00000106 	br	4013384 <alt_up_pixel_buffer_dma_draw_line+0x17c>
	else
		ystep = -1;
 4013380:	04ffffc4 	movi	r19,-1

	/* Draw a line - either go along the x axis (steep = 0) or along the y axis (steep = 1). The code is replicated to
	 * compile well on low optimization levels. */
	if (steep == 1)
 4013384:	e0bff307 	ldb	r2,-52(fp)
 4013388:	10800058 	cmpnei	r2,r2,1
 401338c:	1000211e 	bne	r2,zero,4013414 <alt_up_pixel_buffer_dma_draw_line+0x20c>
	{
		for (x=x_0; x <= x_1; x++) {
 4013390:	00000f06 	br	40133d0 <alt_up_pixel_buffer_dma_draw_line+0x1c8>
			helper_plot_pixel(buffer_start, line_size, y, x, line_color, color_mode);
 4013394:	e0bff417 	ldw	r2,-48(fp)
 4013398:	d8800115 	stw	r2,4(sp)
 401339c:	e0bff517 	ldw	r2,-44(fp)
 40133a0:	d8800015 	stw	r2,0(sp)
 40133a4:	880f883a 	mov	r7,r17
 40133a8:	b00d883a 	mov	r6,r22
 40133ac:	e17ff617 	ldw	r5,-40(fp)
 40133b0:	b809883a 	mov	r4,r23
 40133b4:	40131840 	call	4013184 <helper_plot_pixel>
			error = error + deltay;
 40133b8:	e0bff717 	ldw	r2,-36(fp)
 40133bc:	80a1883a 	add	r16,r16,r2
			if (error > 0) {
 40133c0:	0400020e 	bge	zero,r16,40133cc <alt_up_pixel_buffer_dma_draw_line+0x1c4>
				y = y + ystep;
 40133c4:	b4ed883a 	add	r22,r22,r19
				error = error - deltax;
 40133c8:	8561c83a 	sub	r16,r16,r21

	/* Draw a line - either go along the x axis (steep = 0) or along the y axis (steep = 1). The code is replicated to
	 * compile well on low optimization levels. */
	if (steep == 1)
	{
		for (x=x_0; x <= x_1; x++) {
 40133cc:	8c400044 	addi	r17,r17,1
 40133d0:	947ff00e 	bge	r18,r17,4013394 <__ram_exceptions_end+0xfbff314c>
				y = y + ystep;
				error = error - deltax;
			}
		}
	}
}
 40133d4:	00001006 	br	4013418 <alt_up_pixel_buffer_dma_draw_line+0x210>
		}
	}
	else
	{
		for (x=x_0; x <= x_1; x++) {
			helper_plot_pixel(buffer_start, line_size, x, y, line_color, color_mode);
 40133d8:	e0bff417 	ldw	r2,-48(fp)
 40133dc:	d8800115 	stw	r2,4(sp)
 40133e0:	e0bff517 	ldw	r2,-44(fp)
 40133e4:	d8800015 	stw	r2,0(sp)
 40133e8:	b00f883a 	mov	r7,r22
 40133ec:	880d883a 	mov	r6,r17
 40133f0:	e17ff617 	ldw	r5,-40(fp)
 40133f4:	b809883a 	mov	r4,r23
 40133f8:	40131840 	call	4013184 <helper_plot_pixel>
			error = error + deltay;
 40133fc:	e0bff717 	ldw	r2,-36(fp)
 4013400:	80a1883a 	add	r16,r16,r2
			if (error > 0) {
 4013404:	0400020e 	bge	zero,r16,4013410 <alt_up_pixel_buffer_dma_draw_line+0x208>
				y = y + ystep;
 4013408:	b4ed883a 	add	r22,r22,r19
				error = error - deltax;
 401340c:	8561c83a 	sub	r16,r16,r21
			}
		}
	}
	else
	{
		for (x=x_0; x <= x_1; x++) {
 4013410:	8c400044 	addi	r17,r17,1
 4013414:	947ff00e 	bge	r18,r17,40133d8 <__ram_exceptions_end+0xfbff3190>
				y = y + ystep;
				error = error - deltax;
			}
		}
	}
}
 4013418:	0001883a 	nop
 401341c:	e6fff804 	addi	sp,fp,-32
 4013420:	dfc00917 	ldw	ra,36(sp)
 4013424:	df000817 	ldw	fp,32(sp)
 4013428:	ddc00717 	ldw	r23,28(sp)
 401342c:	dd800617 	ldw	r22,24(sp)
 4013430:	dd400517 	ldw	r21,20(sp)
 4013434:	dd000417 	ldw	r20,16(sp)
 4013438:	dcc00317 	ldw	r19,12(sp)
 401343c:	dc800217 	ldw	r18,8(sp)
 4013440:	dc400117 	ldw	r17,4(sp)
 4013444:	dc000017 	ldw	r16,0(sp)
 4013448:	dec00a04 	addi	sp,sp,40
 401344c:	f800283a 	ret

04013450 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 4013450:	defff504 	addi	sp,sp,-44
 4013454:	df000a15 	stw	fp,40(sp)
 4013458:	df000a04 	addi	fp,sp,40
 401345c:	e13ffc15 	stw	r4,-16(fp)
 4013460:	e17ffd15 	stw	r5,-12(fp)
 4013464:	e1bffe15 	stw	r6,-8(fp)
 4013468:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 401346c:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 4013470:	d0a74417 	ldw	r2,-25328(gp)
  
  if (alt_ticks_per_second ())
 4013474:	10003c26 	beq	r2,zero,4013568 <alt_alarm_start+0x118>
  {
    if (alarm)
 4013478:	e0bffc17 	ldw	r2,-16(fp)
 401347c:	10003826 	beq	r2,zero,4013560 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
 4013480:	e0bffc17 	ldw	r2,-16(fp)
 4013484:	e0fffe17 	ldw	r3,-8(fp)
 4013488:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 401348c:	e0bffc17 	ldw	r2,-16(fp)
 4013490:	e0ffff17 	ldw	r3,-4(fp)
 4013494:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 4013498:	0005303a 	rdctl	r2,status
 401349c:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 40134a0:	e0fff917 	ldw	r3,-28(fp)
 40134a4:	00bfff84 	movi	r2,-2
 40134a8:	1884703a 	and	r2,r3,r2
 40134ac:	1001703a 	wrctl	status,r2
  
  return context;
 40134b0:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
 40134b4:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 40134b8:	d0a74517 	ldw	r2,-25324(gp)
      
      current_nticks = alt_nticks();
 40134bc:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 40134c0:	e0fffd17 	ldw	r3,-12(fp)
 40134c4:	e0bff617 	ldw	r2,-40(fp)
 40134c8:	1885883a 	add	r2,r3,r2
 40134cc:	10c00044 	addi	r3,r2,1
 40134d0:	e0bffc17 	ldw	r2,-16(fp)
 40134d4:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 40134d8:	e0bffc17 	ldw	r2,-16(fp)
 40134dc:	10c00217 	ldw	r3,8(r2)
 40134e0:	e0bff617 	ldw	r2,-40(fp)
 40134e4:	1880042e 	bgeu	r3,r2,40134f8 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
 40134e8:	e0bffc17 	ldw	r2,-16(fp)
 40134ec:	00c00044 	movi	r3,1
 40134f0:	10c00405 	stb	r3,16(r2)
 40134f4:	00000206 	br	4013500 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
 40134f8:	e0bffc17 	ldw	r2,-16(fp)
 40134fc:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 4013500:	e0bffc17 	ldw	r2,-16(fp)
 4013504:	d0e00f04 	addi	r3,gp,-32708
 4013508:	e0fffa15 	stw	r3,-24(fp)
 401350c:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 4013510:	e0bffb17 	ldw	r2,-20(fp)
 4013514:	e0fffa17 	ldw	r3,-24(fp)
 4013518:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 401351c:	e0bffa17 	ldw	r2,-24(fp)
 4013520:	10c00017 	ldw	r3,0(r2)
 4013524:	e0bffb17 	ldw	r2,-20(fp)
 4013528:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 401352c:	e0bffa17 	ldw	r2,-24(fp)
 4013530:	10800017 	ldw	r2,0(r2)
 4013534:	e0fffb17 	ldw	r3,-20(fp)
 4013538:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 401353c:	e0bffa17 	ldw	r2,-24(fp)
 4013540:	e0fffb17 	ldw	r3,-20(fp)
 4013544:	10c00015 	stw	r3,0(r2)
 4013548:	e0bff817 	ldw	r2,-32(fp)
 401354c:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 4013550:	e0bff717 	ldw	r2,-36(fp)
 4013554:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 4013558:	0005883a 	mov	r2,zero
 401355c:	00000306 	br	401356c <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
 4013560:	00bffa84 	movi	r2,-22
 4013564:	00000106 	br	401356c <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
 4013568:	00bfde84 	movi	r2,-134
  }
}
 401356c:	e037883a 	mov	sp,fp
 4013570:	df000017 	ldw	fp,0(sp)
 4013574:	dec00104 	addi	sp,sp,4
 4013578:	f800283a 	ret

0401357c <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
 401357c:	defffa04 	addi	sp,sp,-24
 4013580:	dfc00515 	stw	ra,20(sp)
 4013584:	df000415 	stw	fp,16(sp)
 4013588:	df000404 	addi	fp,sp,16
 401358c:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
 4013590:	008000c4 	movi	r2,3
 4013594:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
 4013598:	e0fffd17 	ldw	r3,-12(fp)
 401359c:	008003f4 	movhi	r2,15
 40135a0:	10909004 	addi	r2,r2,16960
 40135a4:	1885383a 	mul	r2,r3,r2
 40135a8:	100b883a 	mov	r5,r2
 40135ac:	0100bef4 	movhi	r4,763
 40135b0:	213c2004 	addi	r4,r4,-3968
 40135b4:	400deec0 	call	400deec <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
 40135b8:	100b883a 	mov	r5,r2
 40135bc:	01200034 	movhi	r4,32768
 40135c0:	213fffc4 	addi	r4,r4,-1
 40135c4:	400deec0 	call	400deec <__udivsi3>
 40135c8:	100b883a 	mov	r5,r2
 40135cc:	e13fff17 	ldw	r4,-4(fp)
 40135d0:	400deec0 	call	400deec <__udivsi3>
 40135d4:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
 40135d8:	e0bffe17 	ldw	r2,-8(fp)
 40135dc:	10002a26 	beq	r2,zero,4013688 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
 40135e0:	e03ffc15 	stw	zero,-16(fp)
 40135e4:	00001706 	br	4013644 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
 40135e8:	00a00034 	movhi	r2,32768
 40135ec:	10bfffc4 	addi	r2,r2,-1
 40135f0:	10bfffc4 	addi	r2,r2,-1
 40135f4:	103ffe1e 	bne	r2,zero,40135f0 <__ram_exceptions_end+0xfbff33a8>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
 40135f8:	e0fffd17 	ldw	r3,-12(fp)
 40135fc:	008003f4 	movhi	r2,15
 4013600:	10909004 	addi	r2,r2,16960
 4013604:	1885383a 	mul	r2,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
 4013608:	100b883a 	mov	r5,r2
 401360c:	0100bef4 	movhi	r4,763
 4013610:	213c2004 	addi	r4,r4,-3968
 4013614:	400deec0 	call	400deec <__udivsi3>
 4013618:	100b883a 	mov	r5,r2
 401361c:	01200034 	movhi	r4,32768
 4013620:	213fffc4 	addi	r4,r4,-1
 4013624:	400deec0 	call	400deec <__udivsi3>
 4013628:	1007883a 	mov	r3,r2
 401362c:	e0bfff17 	ldw	r2,-4(fp)
 4013630:	10c5c83a 	sub	r2,r2,r3
 4013634:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
 4013638:	e0bffc17 	ldw	r2,-16(fp)
 401363c:	10800044 	addi	r2,r2,1
 4013640:	e0bffc15 	stw	r2,-16(fp)
 4013644:	e0fffc17 	ldw	r3,-16(fp)
 4013648:	e0bffe17 	ldw	r2,-8(fp)
 401364c:	18bfe616 	blt	r3,r2,40135e8 <__ram_exceptions_end+0xfbff33a0>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 4013650:	e0fffd17 	ldw	r3,-12(fp)
 4013654:	008003f4 	movhi	r2,15
 4013658:	10909004 	addi	r2,r2,16960
 401365c:	1885383a 	mul	r2,r3,r2
 4013660:	100b883a 	mov	r5,r2
 4013664:	0100bef4 	movhi	r4,763
 4013668:	213c2004 	addi	r4,r4,-3968
 401366c:	400deec0 	call	400deec <__udivsi3>
 4013670:	1007883a 	mov	r3,r2
 4013674:	e0bfff17 	ldw	r2,-4(fp)
 4013678:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 401367c:	10bfffc4 	addi	r2,r2,-1
 4013680:	103ffe1e 	bne	r2,zero,401367c <__ram_exceptions_end+0xfbff3434>
 4013684:	00000d06 	br	40136bc <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 4013688:	e0fffd17 	ldw	r3,-12(fp)
 401368c:	008003f4 	movhi	r2,15
 4013690:	10909004 	addi	r2,r2,16960
 4013694:	1885383a 	mul	r2,r3,r2
 4013698:	100b883a 	mov	r5,r2
 401369c:	0100bef4 	movhi	r4,763
 40136a0:	213c2004 	addi	r4,r4,-3968
 40136a4:	400deec0 	call	400deec <__udivsi3>
 40136a8:	1007883a 	mov	r3,r2
 40136ac:	e0bfff17 	ldw	r2,-4(fp)
 40136b0:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 40136b4:	10bfffc4 	addi	r2,r2,-1
 40136b8:	00bffe16 	blt	zero,r2,40136b4 <__ram_exceptions_end+0xfbff346c>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
 40136bc:	0005883a 	mov	r2,zero
}
 40136c0:	e037883a 	mov	sp,fp
 40136c4:	dfc00117 	ldw	ra,4(sp)
 40136c8:	df000017 	ldw	fp,0(sp)
 40136cc:	dec00204 	addi	sp,sp,8
 40136d0:	f800283a 	ret

040136d4 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 40136d4:	defffe04 	addi	sp,sp,-8
 40136d8:	df000115 	stw	fp,4(sp)
 40136dc:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 40136e0:	e03fff15 	stw	zero,-4(fp)
 40136e4:	00000506 	br	40136fc <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
 40136e8:	e0bfff17 	ldw	r2,-4(fp)
 40136ec:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 40136f0:	e0bfff17 	ldw	r2,-4(fp)
 40136f4:	10800804 	addi	r2,r2,32
 40136f8:	e0bfff15 	stw	r2,-4(fp)
 40136fc:	e0bfff17 	ldw	r2,-4(fp)
 4013700:	10820030 	cmpltui	r2,r2,2048
 4013704:	103ff81e 	bne	r2,zero,40136e8 <__ram_exceptions_end+0xfbff34a0>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 4013708:	0001883a 	nop
 401370c:	e037883a 	mov	sp,fp
 4013710:	df000017 	ldw	fp,0(sp)
 4013714:	dec00104 	addi	sp,sp,4
 4013718:	f800283a 	ret

0401371c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 401371c:	defffe04 	addi	sp,sp,-8
 4013720:	dfc00115 	stw	ra,4(sp)
 4013724:	df000015 	stw	fp,0(sp)
 4013728:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 401372c:	d0a00c17 	ldw	r2,-32720(gp)
 4013730:	10000326 	beq	r2,zero,4013740 <alt_get_errno+0x24>
 4013734:	d0a00c17 	ldw	r2,-32720(gp)
 4013738:	103ee83a 	callr	r2
 401373c:	00000106 	br	4013744 <alt_get_errno+0x28>
 4013740:	d0a73f04 	addi	r2,gp,-25348
}
 4013744:	e037883a 	mov	sp,fp
 4013748:	dfc00117 	ldw	ra,4(sp)
 401374c:	df000017 	ldw	fp,0(sp)
 4013750:	dec00204 	addi	sp,sp,8
 4013754:	f800283a 	ret

04013758 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 4013758:	defffa04 	addi	sp,sp,-24
 401375c:	dfc00515 	stw	ra,20(sp)
 4013760:	df000415 	stw	fp,16(sp)
 4013764:	df000404 	addi	fp,sp,16
 4013768:	e13ffe15 	stw	r4,-8(fp)
 401376c:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 4013770:	e0bffe17 	ldw	r2,-8(fp)
 4013774:	10000326 	beq	r2,zero,4013784 <alt_dev_llist_insert+0x2c>
 4013778:	e0bffe17 	ldw	r2,-8(fp)
 401377c:	10800217 	ldw	r2,8(r2)
 4013780:	1000061e 	bne	r2,zero,401379c <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 4013784:	401371c0 	call	401371c <alt_get_errno>
 4013788:	1007883a 	mov	r3,r2
 401378c:	00800584 	movi	r2,22
 4013790:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 4013794:	00bffa84 	movi	r2,-22
 4013798:	00001306 	br	40137e8 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 401379c:	e0bffe17 	ldw	r2,-8(fp)
 40137a0:	e0ffff17 	ldw	r3,-4(fp)
 40137a4:	e0fffc15 	stw	r3,-16(fp)
 40137a8:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 40137ac:	e0bffd17 	ldw	r2,-12(fp)
 40137b0:	e0fffc17 	ldw	r3,-16(fp)
 40137b4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 40137b8:	e0bffc17 	ldw	r2,-16(fp)
 40137bc:	10c00017 	ldw	r3,0(r2)
 40137c0:	e0bffd17 	ldw	r2,-12(fp)
 40137c4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 40137c8:	e0bffc17 	ldw	r2,-16(fp)
 40137cc:	10800017 	ldw	r2,0(r2)
 40137d0:	e0fffd17 	ldw	r3,-12(fp)
 40137d4:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 40137d8:	e0bffc17 	ldw	r2,-16(fp)
 40137dc:	e0fffd17 	ldw	r3,-12(fp)
 40137e0:	10c00015 	stw	r3,0(r2)

  return 0;  
 40137e4:	0005883a 	mov	r2,zero
}
 40137e8:	e037883a 	mov	sp,fp
 40137ec:	dfc00117 	ldw	ra,4(sp)
 40137f0:	df000017 	ldw	fp,0(sp)
 40137f4:	dec00204 	addi	sp,sp,8
 40137f8:	f800283a 	ret

040137fc <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 40137fc:	defffd04 	addi	sp,sp,-12
 4013800:	dfc00215 	stw	ra,8(sp)
 4013804:	df000115 	stw	fp,4(sp)
 4013808:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 401380c:	00810074 	movhi	r2,1025
 4013810:	1091b104 	addi	r2,r2,18116
 4013814:	e0bfff15 	stw	r2,-4(fp)
 4013818:	00000606 	br	4013834 <_do_ctors+0x38>
        (*ctor) (); 
 401381c:	e0bfff17 	ldw	r2,-4(fp)
 4013820:	10800017 	ldw	r2,0(r2)
 4013824:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 4013828:	e0bfff17 	ldw	r2,-4(fp)
 401382c:	10bfff04 	addi	r2,r2,-4
 4013830:	e0bfff15 	stw	r2,-4(fp)
 4013834:	e0ffff17 	ldw	r3,-4(fp)
 4013838:	00810074 	movhi	r2,1025
 401383c:	1091b204 	addi	r2,r2,18120
 4013840:	18bff62e 	bgeu	r3,r2,401381c <__ram_exceptions_end+0xfbff35d4>
        (*ctor) (); 
}
 4013844:	0001883a 	nop
 4013848:	e037883a 	mov	sp,fp
 401384c:	dfc00117 	ldw	ra,4(sp)
 4013850:	df000017 	ldw	fp,0(sp)
 4013854:	dec00204 	addi	sp,sp,8
 4013858:	f800283a 	ret

0401385c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 401385c:	defffd04 	addi	sp,sp,-12
 4013860:	dfc00215 	stw	ra,8(sp)
 4013864:	df000115 	stw	fp,4(sp)
 4013868:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 401386c:	00810074 	movhi	r2,1025
 4013870:	1091b104 	addi	r2,r2,18116
 4013874:	e0bfff15 	stw	r2,-4(fp)
 4013878:	00000606 	br	4013894 <_do_dtors+0x38>
        (*dtor) (); 
 401387c:	e0bfff17 	ldw	r2,-4(fp)
 4013880:	10800017 	ldw	r2,0(r2)
 4013884:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 4013888:	e0bfff17 	ldw	r2,-4(fp)
 401388c:	10bfff04 	addi	r2,r2,-4
 4013890:	e0bfff15 	stw	r2,-4(fp)
 4013894:	e0ffff17 	ldw	r3,-4(fp)
 4013898:	00810074 	movhi	r2,1025
 401389c:	1091b204 	addi	r2,r2,18120
 40138a0:	18bff62e 	bgeu	r3,r2,401387c <__ram_exceptions_end+0xfbff3634>
        (*dtor) (); 
}
 40138a4:	0001883a 	nop
 40138a8:	e037883a 	mov	sp,fp
 40138ac:	dfc00117 	ldw	ra,4(sp)
 40138b0:	df000017 	ldw	fp,0(sp)
 40138b4:	dec00204 	addi	sp,sp,8
 40138b8:	f800283a 	ret

040138bc <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 40138bc:	defffa04 	addi	sp,sp,-24
 40138c0:	dfc00515 	stw	ra,20(sp)
 40138c4:	df000415 	stw	fp,16(sp)
 40138c8:	df000404 	addi	fp,sp,16
 40138cc:	e13ffe15 	stw	r4,-8(fp)
 40138d0:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 40138d4:	e0bfff17 	ldw	r2,-4(fp)
 40138d8:	10800017 	ldw	r2,0(r2)
 40138dc:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 40138e0:	e13ffe17 	ldw	r4,-8(fp)
 40138e4:	40007c00 	call	40007c0 <strlen>
 40138e8:	10800044 	addi	r2,r2,1
 40138ec:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 40138f0:	00000d06 	br	4013928 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 40138f4:	e0bffc17 	ldw	r2,-16(fp)
 40138f8:	10800217 	ldw	r2,8(r2)
 40138fc:	e0fffd17 	ldw	r3,-12(fp)
 4013900:	180d883a 	mov	r6,r3
 4013904:	e17ffe17 	ldw	r5,-8(fp)
 4013908:	1009883a 	mov	r4,r2
 401390c:	40143800 	call	4014380 <memcmp>
 4013910:	1000021e 	bne	r2,zero,401391c <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 4013914:	e0bffc17 	ldw	r2,-16(fp)
 4013918:	00000706 	br	4013938 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 401391c:	e0bffc17 	ldw	r2,-16(fp)
 4013920:	10800017 	ldw	r2,0(r2)
 4013924:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 4013928:	e0fffc17 	ldw	r3,-16(fp)
 401392c:	e0bfff17 	ldw	r2,-4(fp)
 4013930:	18bff01e 	bne	r3,r2,40138f4 <__ram_exceptions_end+0xfbff36ac>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 4013934:	0005883a 	mov	r2,zero
}
 4013938:	e037883a 	mov	sp,fp
 401393c:	dfc00117 	ldw	ra,4(sp)
 4013940:	df000017 	ldw	fp,0(sp)
 4013944:	dec00204 	addi	sp,sp,8
 4013948:	f800283a 	ret

0401394c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 401394c:	defffe04 	addi	sp,sp,-8
 4013950:	dfc00115 	stw	ra,4(sp)
 4013954:	df000015 	stw	fp,0(sp)
 4013958:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
 401395c:	01440004 	movi	r5,4096
 4013960:	0009883a 	mov	r4,zero
 4013964:	40142080 	call	4014208 <alt_icache_flush>
#endif
}
 4013968:	0001883a 	nop
 401396c:	e037883a 	mov	sp,fp
 4013970:	dfc00117 	ldw	ra,4(sp)
 4013974:	df000017 	ldw	fp,0(sp)
 4013978:	dec00204 	addi	sp,sp,8
 401397c:	f800283a 	ret

04013980 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 4013980:	defff904 	addi	sp,sp,-28
 4013984:	dfc00615 	stw	ra,24(sp)
 4013988:	df000515 	stw	fp,20(sp)
 401398c:	df000504 	addi	fp,sp,20
 4013990:	e13ffc15 	stw	r4,-16(fp)
 4013994:	e17ffd15 	stw	r5,-12(fp)
 4013998:	e1bffe15 	stw	r6,-8(fp)
 401399c:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
 40139a0:	e1bfff17 	ldw	r6,-4(fp)
 40139a4:	e17ffe17 	ldw	r5,-8(fp)
 40139a8:	e13ffd17 	ldw	r4,-12(fp)
 40139ac:	4013d400 	call	4013d40 <open>
 40139b0:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
 40139b4:	e0bffb17 	ldw	r2,-20(fp)
 40139b8:	10001c16 	blt	r2,zero,4013a2c <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
 40139bc:	00810074 	movhi	r2,1025
 40139c0:	10953d04 	addi	r2,r2,21748
 40139c4:	e0fffb17 	ldw	r3,-20(fp)
 40139c8:	18c00324 	muli	r3,r3,12
 40139cc:	10c5883a 	add	r2,r2,r3
 40139d0:	10c00017 	ldw	r3,0(r2)
 40139d4:	e0bffc17 	ldw	r2,-16(fp)
 40139d8:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 40139dc:	00810074 	movhi	r2,1025
 40139e0:	10953d04 	addi	r2,r2,21748
 40139e4:	e0fffb17 	ldw	r3,-20(fp)
 40139e8:	18c00324 	muli	r3,r3,12
 40139ec:	10c5883a 	add	r2,r2,r3
 40139f0:	10800104 	addi	r2,r2,4
 40139f4:	10c00017 	ldw	r3,0(r2)
 40139f8:	e0bffc17 	ldw	r2,-16(fp)
 40139fc:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 4013a00:	00810074 	movhi	r2,1025
 4013a04:	10953d04 	addi	r2,r2,21748
 4013a08:	e0fffb17 	ldw	r3,-20(fp)
 4013a0c:	18c00324 	muli	r3,r3,12
 4013a10:	10c5883a 	add	r2,r2,r3
 4013a14:	10800204 	addi	r2,r2,8
 4013a18:	10c00017 	ldw	r3,0(r2)
 4013a1c:	e0bffc17 	ldw	r2,-16(fp)
 4013a20:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 4013a24:	e13ffb17 	ldw	r4,-20(fp)
 4013a28:	4010d0c0 	call	4010d0c <alt_release_fd>
  }
} 
 4013a2c:	0001883a 	nop
 4013a30:	e037883a 	mov	sp,fp
 4013a34:	dfc00117 	ldw	ra,4(sp)
 4013a38:	df000017 	ldw	fp,0(sp)
 4013a3c:	dec00204 	addi	sp,sp,8
 4013a40:	f800283a 	ret

04013a44 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 4013a44:	defffb04 	addi	sp,sp,-20
 4013a48:	dfc00415 	stw	ra,16(sp)
 4013a4c:	df000315 	stw	fp,12(sp)
 4013a50:	df000304 	addi	fp,sp,12
 4013a54:	e13ffd15 	stw	r4,-12(fp)
 4013a58:	e17ffe15 	stw	r5,-8(fp)
 4013a5c:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 4013a60:	01c07fc4 	movi	r7,511
 4013a64:	01800044 	movi	r6,1
 4013a68:	e17ffd17 	ldw	r5,-12(fp)
 4013a6c:	01010074 	movhi	r4,1025
 4013a70:	21154004 	addi	r4,r4,21760
 4013a74:	40139800 	call	4013980 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 4013a78:	01c07fc4 	movi	r7,511
 4013a7c:	000d883a 	mov	r6,zero
 4013a80:	e17ffe17 	ldw	r5,-8(fp)
 4013a84:	01010074 	movhi	r4,1025
 4013a88:	21153d04 	addi	r4,r4,21748
 4013a8c:	40139800 	call	4013980 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 4013a90:	01c07fc4 	movi	r7,511
 4013a94:	01800044 	movi	r6,1
 4013a98:	e17fff17 	ldw	r5,-4(fp)
 4013a9c:	01010074 	movhi	r4,1025
 4013aa0:	21154304 	addi	r4,r4,21772
 4013aa4:	40139800 	call	4013980 <alt_open_fd>
}  
 4013aa8:	0001883a 	nop
 4013aac:	e037883a 	mov	sp,fp
 4013ab0:	dfc00117 	ldw	ra,4(sp)
 4013ab4:	df000017 	ldw	fp,0(sp)
 4013ab8:	dec00204 	addi	sp,sp,8
 4013abc:	f800283a 	ret

04013ac0 <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
 4013ac0:	defff004 	addi	sp,sp,-64
 4013ac4:	df000f15 	stw	fp,60(sp)
 4013ac8:	df000f04 	addi	fp,sp,60
 4013acc:	e13ffd15 	stw	r4,-12(fp)
 4013ad0:	e17ffe15 	stw	r5,-8(fp)
 4013ad4:	e1bfff15 	stw	r6,-4(fp)
  int rc = -EINVAL;  
 4013ad8:	00bffa84 	movi	r2,-22
 4013adc:	e0bff115 	stw	r2,-60(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 4013ae0:	e0bffd17 	ldw	r2,-12(fp)
 4013ae4:	10800828 	cmpgeui	r2,r2,32
 4013ae8:	1000501e 	bne	r2,zero,4013c2c <alt_irq_register+0x16c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 4013aec:	0005303a 	rdctl	r2,status
 4013af0:	e0bff615 	stw	r2,-40(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 4013af4:	e0fff617 	ldw	r3,-40(fp)
 4013af8:	00bfff84 	movi	r2,-2
 4013afc:	1884703a 	and	r2,r3,r2
 4013b00:	1001703a 	wrctl	status,r2
  
  return context;
 4013b04:	e0bff617 	ldw	r2,-40(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
 4013b08:	e0bff315 	stw	r2,-52(fp)

    alt_irq[id].handler = handler;
 4013b0c:	008100b4 	movhi	r2,1026
 4013b10:	10a1d504 	addi	r2,r2,-30892
 4013b14:	e0fffd17 	ldw	r3,-12(fp)
 4013b18:	180690fa 	slli	r3,r3,3
 4013b1c:	10c5883a 	add	r2,r2,r3
 4013b20:	e0ffff17 	ldw	r3,-4(fp)
 4013b24:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = context;
 4013b28:	008100b4 	movhi	r2,1026
 4013b2c:	10a1d504 	addi	r2,r2,-30892
 4013b30:	e0fffd17 	ldw	r3,-12(fp)
 4013b34:	180690fa 	slli	r3,r3,3
 4013b38:	10c5883a 	add	r2,r2,r3
 4013b3c:	10800104 	addi	r2,r2,4
 4013b40:	e0fffe17 	ldw	r3,-8(fp)
 4013b44:	10c00015 	stw	r3,0(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
 4013b48:	e0bfff17 	ldw	r2,-4(fp)
 4013b4c:	10001926 	beq	r2,zero,4013bb4 <alt_irq_register+0xf4>
 4013b50:	e0bffd17 	ldw	r2,-12(fp)
 4013b54:	e0bff215 	stw	r2,-56(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 4013b58:	0005303a 	rdctl	r2,status
 4013b5c:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 4013b60:	e0fff717 	ldw	r3,-36(fp)
 4013b64:	00bfff84 	movi	r2,-2
 4013b68:	1884703a 	and	r2,r3,r2
 4013b6c:	1001703a 	wrctl	status,r2
  
  return context;
 4013b70:	e0bff717 	ldw	r2,-36(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 4013b74:	e0bff815 	stw	r2,-32(fp)

  alt_irq_active |= (1 << id);
 4013b78:	00c00044 	movi	r3,1
 4013b7c:	e0bff217 	ldw	r2,-56(fp)
 4013b80:	1884983a 	sll	r2,r3,r2
 4013b84:	1007883a 	mov	r3,r2
 4013b88:	d0a74317 	ldw	r2,-25332(gp)
 4013b8c:	1884b03a 	or	r2,r3,r2
 4013b90:	d0a74315 	stw	r2,-25332(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 4013b94:	d0a74317 	ldw	r2,-25332(gp)
 4013b98:	100170fa 	wrctl	ienable,r2
 4013b9c:	e0bff817 	ldw	r2,-32(fp)
 4013ba0:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 4013ba4:	e0bff917 	ldw	r2,-28(fp)
 4013ba8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 4013bac:	0005883a 	mov	r2,zero
 4013bb0:	00001906 	br	4013c18 <alt_irq_register+0x158>
 4013bb4:	e0bffd17 	ldw	r2,-12(fp)
 4013bb8:	e0bff415 	stw	r2,-48(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 4013bbc:	0005303a 	rdctl	r2,status
 4013bc0:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 4013bc4:	e0fffa17 	ldw	r3,-24(fp)
 4013bc8:	00bfff84 	movi	r2,-2
 4013bcc:	1884703a 	and	r2,r3,r2
 4013bd0:	1001703a 	wrctl	status,r2
  
  return context;
 4013bd4:	e0bffa17 	ldw	r2,-24(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 4013bd8:	e0bffb15 	stw	r2,-20(fp)

  alt_irq_active &= ~(1 << id);
 4013bdc:	00c00044 	movi	r3,1
 4013be0:	e0bff417 	ldw	r2,-48(fp)
 4013be4:	1884983a 	sll	r2,r3,r2
 4013be8:	0084303a 	nor	r2,zero,r2
 4013bec:	1007883a 	mov	r3,r2
 4013bf0:	d0a74317 	ldw	r2,-25332(gp)
 4013bf4:	1884703a 	and	r2,r3,r2
 4013bf8:	d0a74315 	stw	r2,-25332(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 4013bfc:	d0a74317 	ldw	r2,-25332(gp)
 4013c00:	100170fa 	wrctl	ienable,r2
 4013c04:	e0bffb17 	ldw	r2,-20(fp)
 4013c08:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 4013c0c:	e0bffc17 	ldw	r2,-16(fp)
 4013c10:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 4013c14:	0005883a 	mov	r2,zero
 4013c18:	e0bff115 	stw	r2,-60(fp)
 4013c1c:	e0bff317 	ldw	r2,-52(fp)
 4013c20:	e0bff515 	stw	r2,-44(fp)
 4013c24:	e0bff517 	ldw	r2,-44(fp)
 4013c28:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }
  return rc; 
 4013c2c:	e0bff117 	ldw	r2,-60(fp)
}
 4013c30:	e037883a 	mov	sp,fp
 4013c34:	df000017 	ldw	fp,0(sp)
 4013c38:	dec00104 	addi	sp,sp,4
 4013c3c:	f800283a 	ret

04013c40 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 4013c40:	defffe04 	addi	sp,sp,-8
 4013c44:	dfc00115 	stw	ra,4(sp)
 4013c48:	df000015 	stw	fp,0(sp)
 4013c4c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 4013c50:	d0a00c17 	ldw	r2,-32720(gp)
 4013c54:	10000326 	beq	r2,zero,4013c64 <alt_get_errno+0x24>
 4013c58:	d0a00c17 	ldw	r2,-32720(gp)
 4013c5c:	103ee83a 	callr	r2
 4013c60:	00000106 	br	4013c68 <alt_get_errno+0x28>
 4013c64:	d0a73f04 	addi	r2,gp,-25348
}
 4013c68:	e037883a 	mov	sp,fp
 4013c6c:	dfc00117 	ldw	ra,4(sp)
 4013c70:	df000017 	ldw	fp,0(sp)
 4013c74:	dec00204 	addi	sp,sp,8
 4013c78:	f800283a 	ret

04013c7c <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 4013c7c:	defffd04 	addi	sp,sp,-12
 4013c80:	df000215 	stw	fp,8(sp)
 4013c84:	df000204 	addi	fp,sp,8
 4013c88:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 4013c8c:	e0bfff17 	ldw	r2,-4(fp)
 4013c90:	10800217 	ldw	r2,8(r2)
 4013c94:	10d00034 	orhi	r3,r2,16384
 4013c98:	e0bfff17 	ldw	r2,-4(fp)
 4013c9c:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 4013ca0:	e03ffe15 	stw	zero,-8(fp)
 4013ca4:	00001d06 	br	4013d1c <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 4013ca8:	00810074 	movhi	r2,1025
 4013cac:	10953d04 	addi	r2,r2,21748
 4013cb0:	e0fffe17 	ldw	r3,-8(fp)
 4013cb4:	18c00324 	muli	r3,r3,12
 4013cb8:	10c5883a 	add	r2,r2,r3
 4013cbc:	10c00017 	ldw	r3,0(r2)
 4013cc0:	e0bfff17 	ldw	r2,-4(fp)
 4013cc4:	10800017 	ldw	r2,0(r2)
 4013cc8:	1880111e 	bne	r3,r2,4013d10 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 4013ccc:	00810074 	movhi	r2,1025
 4013cd0:	10953d04 	addi	r2,r2,21748
 4013cd4:	e0fffe17 	ldw	r3,-8(fp)
 4013cd8:	18c00324 	muli	r3,r3,12
 4013cdc:	10c5883a 	add	r2,r2,r3
 4013ce0:	10800204 	addi	r2,r2,8
 4013ce4:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 4013ce8:	1000090e 	bge	r2,zero,4013d10 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 4013cec:	e0bffe17 	ldw	r2,-8(fp)
 4013cf0:	10c00324 	muli	r3,r2,12
 4013cf4:	00810074 	movhi	r2,1025
 4013cf8:	10953d04 	addi	r2,r2,21748
 4013cfc:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 4013d00:	e0bfff17 	ldw	r2,-4(fp)
 4013d04:	18800226 	beq	r3,r2,4013d10 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 4013d08:	00bffcc4 	movi	r2,-13
 4013d0c:	00000806 	br	4013d30 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 4013d10:	e0bffe17 	ldw	r2,-8(fp)
 4013d14:	10800044 	addi	r2,r2,1
 4013d18:	e0bffe15 	stw	r2,-8(fp)
 4013d1c:	d0a00b17 	ldw	r2,-32724(gp)
 4013d20:	1007883a 	mov	r3,r2
 4013d24:	e0bffe17 	ldw	r2,-8(fp)
 4013d28:	18bfdf2e 	bgeu	r3,r2,4013ca8 <__ram_exceptions_end+0xfbff3a60>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 4013d2c:	0005883a 	mov	r2,zero
}
 4013d30:	e037883a 	mov	sp,fp
 4013d34:	df000017 	ldw	fp,0(sp)
 4013d38:	dec00104 	addi	sp,sp,4
 4013d3c:	f800283a 	ret

04013d40 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 4013d40:	defff604 	addi	sp,sp,-40
 4013d44:	dfc00915 	stw	ra,36(sp)
 4013d48:	df000815 	stw	fp,32(sp)
 4013d4c:	df000804 	addi	fp,sp,32
 4013d50:	e13ffd15 	stw	r4,-12(fp)
 4013d54:	e17ffe15 	stw	r5,-8(fp)
 4013d58:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 4013d5c:	00bfffc4 	movi	r2,-1
 4013d60:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 4013d64:	00bffb44 	movi	r2,-19
 4013d68:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 4013d6c:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 4013d70:	d1600904 	addi	r5,gp,-32732
 4013d74:	e13ffd17 	ldw	r4,-12(fp)
 4013d78:	40138bc0 	call	40138bc <alt_find_dev>
 4013d7c:	e0bff815 	stw	r2,-32(fp)
 4013d80:	e0bff817 	ldw	r2,-32(fp)
 4013d84:	1000051e 	bne	r2,zero,4013d9c <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 4013d88:	e13ffd17 	ldw	r4,-12(fp)
 4013d8c:	401405c0 	call	401405c <alt_find_file>
 4013d90:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 4013d94:	00800044 	movi	r2,1
 4013d98:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 4013d9c:	e0bff817 	ldw	r2,-32(fp)
 4013da0:	10002926 	beq	r2,zero,4013e48 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
 4013da4:	e13ff817 	ldw	r4,-32(fp)
 4013da8:	40141640 	call	4014164 <alt_get_fd>
 4013dac:	e0bff915 	stw	r2,-28(fp)
 4013db0:	e0bff917 	ldw	r2,-28(fp)
 4013db4:	1000030e 	bge	r2,zero,4013dc4 <open+0x84>
    {
      status = index;
 4013db8:	e0bff917 	ldw	r2,-28(fp)
 4013dbc:	e0bffa15 	stw	r2,-24(fp)
 4013dc0:	00002306 	br	4013e50 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
 4013dc4:	e0bff917 	ldw	r2,-28(fp)
 4013dc8:	10c00324 	muli	r3,r2,12
 4013dcc:	00810074 	movhi	r2,1025
 4013dd0:	10953d04 	addi	r2,r2,21748
 4013dd4:	1885883a 	add	r2,r3,r2
 4013dd8:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 4013ddc:	e0fffe17 	ldw	r3,-8(fp)
 4013de0:	00900034 	movhi	r2,16384
 4013de4:	10bfffc4 	addi	r2,r2,-1
 4013de8:	1886703a 	and	r3,r3,r2
 4013dec:	e0bffc17 	ldw	r2,-16(fp)
 4013df0:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 4013df4:	e0bffb17 	ldw	r2,-20(fp)
 4013df8:	1000051e 	bne	r2,zero,4013e10 <open+0xd0>
 4013dfc:	e13ffc17 	ldw	r4,-16(fp)
 4013e00:	4013c7c0 	call	4013c7c <alt_file_locked>
 4013e04:	e0bffa15 	stw	r2,-24(fp)
 4013e08:	e0bffa17 	ldw	r2,-24(fp)
 4013e0c:	10001016 	blt	r2,zero,4013e50 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 4013e10:	e0bff817 	ldw	r2,-32(fp)
 4013e14:	10800317 	ldw	r2,12(r2)
 4013e18:	10000826 	beq	r2,zero,4013e3c <open+0xfc>
 4013e1c:	e0bff817 	ldw	r2,-32(fp)
 4013e20:	10800317 	ldw	r2,12(r2)
 4013e24:	e1ffff17 	ldw	r7,-4(fp)
 4013e28:	e1bffe17 	ldw	r6,-8(fp)
 4013e2c:	e17ffd17 	ldw	r5,-12(fp)
 4013e30:	e13ffc17 	ldw	r4,-16(fp)
 4013e34:	103ee83a 	callr	r2
 4013e38:	00000106 	br	4013e40 <open+0x100>
 4013e3c:	0005883a 	mov	r2,zero
 4013e40:	e0bffa15 	stw	r2,-24(fp)
 4013e44:	00000206 	br	4013e50 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
 4013e48:	00bffb44 	movi	r2,-19
 4013e4c:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 4013e50:	e0bffa17 	ldw	r2,-24(fp)
 4013e54:	1000090e 	bge	r2,zero,4013e7c <open+0x13c>
  {
    alt_release_fd (index);  
 4013e58:	e13ff917 	ldw	r4,-28(fp)
 4013e5c:	4010d0c0 	call	4010d0c <alt_release_fd>
    ALT_ERRNO = -status;
 4013e60:	4013c400 	call	4013c40 <alt_get_errno>
 4013e64:	1007883a 	mov	r3,r2
 4013e68:	e0bffa17 	ldw	r2,-24(fp)
 4013e6c:	0085c83a 	sub	r2,zero,r2
 4013e70:	18800015 	stw	r2,0(r3)
    return -1;
 4013e74:	00bfffc4 	movi	r2,-1
 4013e78:	00000106 	br	4013e80 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
 4013e7c:	e0bff917 	ldw	r2,-28(fp)
}
 4013e80:	e037883a 	mov	sp,fp
 4013e84:	dfc00117 	ldw	ra,4(sp)
 4013e88:	df000017 	ldw	fp,0(sp)
 4013e8c:	dec00204 	addi	sp,sp,8
 4013e90:	f800283a 	ret

04013e94 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 4013e94:	defffa04 	addi	sp,sp,-24
 4013e98:	df000515 	stw	fp,20(sp)
 4013e9c:	df000504 	addi	fp,sp,20
 4013ea0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 4013ea4:	0005303a 	rdctl	r2,status
 4013ea8:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 4013eac:	e0fffc17 	ldw	r3,-16(fp)
 4013eb0:	00bfff84 	movi	r2,-2
 4013eb4:	1884703a 	and	r2,r3,r2
 4013eb8:	1001703a 	wrctl	status,r2
  
  return context;
 4013ebc:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 4013ec0:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 4013ec4:	e0bfff17 	ldw	r2,-4(fp)
 4013ec8:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 4013ecc:	e0bffd17 	ldw	r2,-12(fp)
 4013ed0:	10800017 	ldw	r2,0(r2)
 4013ed4:	e0fffd17 	ldw	r3,-12(fp)
 4013ed8:	18c00117 	ldw	r3,4(r3)
 4013edc:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 4013ee0:	e0bffd17 	ldw	r2,-12(fp)
 4013ee4:	10800117 	ldw	r2,4(r2)
 4013ee8:	e0fffd17 	ldw	r3,-12(fp)
 4013eec:	18c00017 	ldw	r3,0(r3)
 4013ef0:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 4013ef4:	e0bffd17 	ldw	r2,-12(fp)
 4013ef8:	e0fffd17 	ldw	r3,-12(fp)
 4013efc:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 4013f00:	e0bffd17 	ldw	r2,-12(fp)
 4013f04:	e0fffd17 	ldw	r3,-12(fp)
 4013f08:	10c00015 	stw	r3,0(r2)
 4013f0c:	e0bffb17 	ldw	r2,-20(fp)
 4013f10:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 4013f14:	e0bffe17 	ldw	r2,-8(fp)
 4013f18:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 4013f1c:	0001883a 	nop
 4013f20:	e037883a 	mov	sp,fp
 4013f24:	df000017 	ldw	fp,0(sp)
 4013f28:	dec00104 	addi	sp,sp,4
 4013f2c:	f800283a 	ret

04013f30 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 4013f30:	defffb04 	addi	sp,sp,-20
 4013f34:	dfc00415 	stw	ra,16(sp)
 4013f38:	df000315 	stw	fp,12(sp)
 4013f3c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 4013f40:	d0a00f17 	ldw	r2,-32708(gp)
 4013f44:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 4013f48:	d0a74517 	ldw	r2,-25324(gp)
 4013f4c:	10800044 	addi	r2,r2,1
 4013f50:	d0a74515 	stw	r2,-25324(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 4013f54:	00002e06 	br	4014010 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 4013f58:	e0bffd17 	ldw	r2,-12(fp)
 4013f5c:	10800017 	ldw	r2,0(r2)
 4013f60:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 4013f64:	e0bffd17 	ldw	r2,-12(fp)
 4013f68:	10800403 	ldbu	r2,16(r2)
 4013f6c:	10803fcc 	andi	r2,r2,255
 4013f70:	10000426 	beq	r2,zero,4013f84 <alt_tick+0x54>
 4013f74:	d0a74517 	ldw	r2,-25324(gp)
 4013f78:	1000021e 	bne	r2,zero,4013f84 <alt_tick+0x54>
    {
      alarm->rollover = 0;
 4013f7c:	e0bffd17 	ldw	r2,-12(fp)
 4013f80:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 4013f84:	e0bffd17 	ldw	r2,-12(fp)
 4013f88:	10800217 	ldw	r2,8(r2)
 4013f8c:	d0e74517 	ldw	r3,-25324(gp)
 4013f90:	18801d36 	bltu	r3,r2,4014008 <alt_tick+0xd8>
 4013f94:	e0bffd17 	ldw	r2,-12(fp)
 4013f98:	10800403 	ldbu	r2,16(r2)
 4013f9c:	10803fcc 	andi	r2,r2,255
 4013fa0:	1000191e 	bne	r2,zero,4014008 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 4013fa4:	e0bffd17 	ldw	r2,-12(fp)
 4013fa8:	10800317 	ldw	r2,12(r2)
 4013fac:	e0fffd17 	ldw	r3,-12(fp)
 4013fb0:	18c00517 	ldw	r3,20(r3)
 4013fb4:	1809883a 	mov	r4,r3
 4013fb8:	103ee83a 	callr	r2
 4013fbc:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 4013fc0:	e0bfff17 	ldw	r2,-4(fp)
 4013fc4:	1000031e 	bne	r2,zero,4013fd4 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 4013fc8:	e13ffd17 	ldw	r4,-12(fp)
 4013fcc:	4013e940 	call	4013e94 <alt_alarm_stop>
 4013fd0:	00000d06 	br	4014008 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 4013fd4:	e0bffd17 	ldw	r2,-12(fp)
 4013fd8:	10c00217 	ldw	r3,8(r2)
 4013fdc:	e0bfff17 	ldw	r2,-4(fp)
 4013fe0:	1887883a 	add	r3,r3,r2
 4013fe4:	e0bffd17 	ldw	r2,-12(fp)
 4013fe8:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 4013fec:	e0bffd17 	ldw	r2,-12(fp)
 4013ff0:	10c00217 	ldw	r3,8(r2)
 4013ff4:	d0a74517 	ldw	r2,-25324(gp)
 4013ff8:	1880032e 	bgeu	r3,r2,4014008 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 4013ffc:	e0bffd17 	ldw	r2,-12(fp)
 4014000:	00c00044 	movi	r3,1
 4014004:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 4014008:	e0bffe17 	ldw	r2,-8(fp)
 401400c:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 4014010:	e0fffd17 	ldw	r3,-12(fp)
 4014014:	d0a00f04 	addi	r2,gp,-32708
 4014018:	18bfcf1e 	bne	r3,r2,4013f58 <__ram_exceptions_end+0xfbff3d10>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 401401c:	0001883a 	nop
}
 4014020:	0001883a 	nop
 4014024:	e037883a 	mov	sp,fp
 4014028:	dfc00117 	ldw	ra,4(sp)
 401402c:	df000017 	ldw	fp,0(sp)
 4014030:	dec00204 	addi	sp,sp,8
 4014034:	f800283a 	ret

04014038 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 4014038:	deffff04 	addi	sp,sp,-4
 401403c:	df000015 	stw	fp,0(sp)
 4014040:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 4014044:	000170fa 	wrctl	ienable,zero
}
 4014048:	0001883a 	nop
 401404c:	e037883a 	mov	sp,fp
 4014050:	df000017 	ldw	fp,0(sp)
 4014054:	dec00104 	addi	sp,sp,4
 4014058:	f800283a 	ret

0401405c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 401405c:	defffb04 	addi	sp,sp,-20
 4014060:	dfc00415 	stw	ra,16(sp)
 4014064:	df000315 	stw	fp,12(sp)
 4014068:	df000304 	addi	fp,sp,12
 401406c:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 4014070:	d0a00717 	ldw	r2,-32740(gp)
 4014074:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 4014078:	00003106 	br	4014140 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
 401407c:	e0bffd17 	ldw	r2,-12(fp)
 4014080:	10800217 	ldw	r2,8(r2)
 4014084:	1009883a 	mov	r4,r2
 4014088:	40007c00 	call	40007c0 <strlen>
 401408c:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 4014090:	e0bffd17 	ldw	r2,-12(fp)
 4014094:	10c00217 	ldw	r3,8(r2)
 4014098:	e0bffe17 	ldw	r2,-8(fp)
 401409c:	10bfffc4 	addi	r2,r2,-1
 40140a0:	1885883a 	add	r2,r3,r2
 40140a4:	10800003 	ldbu	r2,0(r2)
 40140a8:	10803fcc 	andi	r2,r2,255
 40140ac:	1080201c 	xori	r2,r2,128
 40140b0:	10bfe004 	addi	r2,r2,-128
 40140b4:	10800bd8 	cmpnei	r2,r2,47
 40140b8:	1000031e 	bne	r2,zero,40140c8 <alt_find_file+0x6c>
    {
      len -= 1;
 40140bc:	e0bffe17 	ldw	r2,-8(fp)
 40140c0:	10bfffc4 	addi	r2,r2,-1
 40140c4:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 40140c8:	e0bffe17 	ldw	r2,-8(fp)
 40140cc:	e0ffff17 	ldw	r3,-4(fp)
 40140d0:	1885883a 	add	r2,r3,r2
 40140d4:	10800003 	ldbu	r2,0(r2)
 40140d8:	10803fcc 	andi	r2,r2,255
 40140dc:	1080201c 	xori	r2,r2,128
 40140e0:	10bfe004 	addi	r2,r2,-128
 40140e4:	10800be0 	cmpeqi	r2,r2,47
 40140e8:	1000081e 	bne	r2,zero,401410c <alt_find_file+0xb0>
 40140ec:	e0bffe17 	ldw	r2,-8(fp)
 40140f0:	e0ffff17 	ldw	r3,-4(fp)
 40140f4:	1885883a 	add	r2,r3,r2
 40140f8:	10800003 	ldbu	r2,0(r2)
 40140fc:	10803fcc 	andi	r2,r2,255
 4014100:	1080201c 	xori	r2,r2,128
 4014104:	10bfe004 	addi	r2,r2,-128
 4014108:	10000a1e 	bne	r2,zero,4014134 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
 401410c:	e0bffd17 	ldw	r2,-12(fp)
 4014110:	10800217 	ldw	r2,8(r2)
 4014114:	e0fffe17 	ldw	r3,-8(fp)
 4014118:	180d883a 	mov	r6,r3
 401411c:	e17fff17 	ldw	r5,-4(fp)
 4014120:	1009883a 	mov	r4,r2
 4014124:	40143800 	call	4014380 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 4014128:	1000021e 	bne	r2,zero,4014134 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 401412c:	e0bffd17 	ldw	r2,-12(fp)
 4014130:	00000706 	br	4014150 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
 4014134:	e0bffd17 	ldw	r2,-12(fp)
 4014138:	10800017 	ldw	r2,0(r2)
 401413c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 4014140:	e0fffd17 	ldw	r3,-12(fp)
 4014144:	d0a00704 	addi	r2,gp,-32740
 4014148:	18bfcc1e 	bne	r3,r2,401407c <__ram_exceptions_end+0xfbff3e34>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 401414c:	0005883a 	mov	r2,zero
}
 4014150:	e037883a 	mov	sp,fp
 4014154:	dfc00117 	ldw	ra,4(sp)
 4014158:	df000017 	ldw	fp,0(sp)
 401415c:	dec00204 	addi	sp,sp,8
 4014160:	f800283a 	ret

04014164 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 4014164:	defffc04 	addi	sp,sp,-16
 4014168:	df000315 	stw	fp,12(sp)
 401416c:	df000304 	addi	fp,sp,12
 4014170:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
 4014174:	00bffa04 	movi	r2,-24
 4014178:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 401417c:	e03ffd15 	stw	zero,-12(fp)
 4014180:	00001906 	br	40141e8 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
 4014184:	00810074 	movhi	r2,1025
 4014188:	10953d04 	addi	r2,r2,21748
 401418c:	e0fffd17 	ldw	r3,-12(fp)
 4014190:	18c00324 	muli	r3,r3,12
 4014194:	10c5883a 	add	r2,r2,r3
 4014198:	10800017 	ldw	r2,0(r2)
 401419c:	10000f1e 	bne	r2,zero,40141dc <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
 40141a0:	00810074 	movhi	r2,1025
 40141a4:	10953d04 	addi	r2,r2,21748
 40141a8:	e0fffd17 	ldw	r3,-12(fp)
 40141ac:	18c00324 	muli	r3,r3,12
 40141b0:	10c5883a 	add	r2,r2,r3
 40141b4:	e0ffff17 	ldw	r3,-4(fp)
 40141b8:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 40141bc:	d0e00b17 	ldw	r3,-32724(gp)
 40141c0:	e0bffd17 	ldw	r2,-12(fp)
 40141c4:	1880020e 	bge	r3,r2,40141d0 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
 40141c8:	e0bffd17 	ldw	r2,-12(fp)
 40141cc:	d0a00b15 	stw	r2,-32724(gp)
      }
      rc = i;
 40141d0:	e0bffd17 	ldw	r2,-12(fp)
 40141d4:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
 40141d8:	00000606 	br	40141f4 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 40141dc:	e0bffd17 	ldw	r2,-12(fp)
 40141e0:	10800044 	addi	r2,r2,1
 40141e4:	e0bffd15 	stw	r2,-12(fp)
 40141e8:	e0bffd17 	ldw	r2,-12(fp)
 40141ec:	10800810 	cmplti	r2,r2,32
 40141f0:	103fe41e 	bne	r2,zero,4014184 <__ram_exceptions_end+0xfbff3f3c>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 40141f4:	e0bffe17 	ldw	r2,-8(fp)
}
 40141f8:	e037883a 	mov	sp,fp
 40141fc:	df000017 	ldw	fp,0(sp)
 4014200:	dec00104 	addi	sp,sp,4
 4014204:	f800283a 	ret

04014208 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
 4014208:	defffb04 	addi	sp,sp,-20
 401420c:	df000415 	stw	fp,16(sp)
 4014210:	df000404 	addi	fp,sp,16
 4014214:	e13ffe15 	stw	r4,-8(fp)
 4014218:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
 401421c:	e0bfff17 	ldw	r2,-4(fp)
 4014220:	10840070 	cmpltui	r2,r2,4097
 4014224:	1000021e 	bne	r2,zero,4014230 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
 4014228:	00840004 	movi	r2,4096
 401422c:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
 4014230:	e0fffe17 	ldw	r3,-8(fp)
 4014234:	e0bfff17 	ldw	r2,-4(fp)
 4014238:	1885883a 	add	r2,r3,r2
 401423c:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 4014240:	e0bffe17 	ldw	r2,-8(fp)
 4014244:	e0bffc15 	stw	r2,-16(fp)
 4014248:	00000506 	br	4014260 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
 401424c:	e0bffc17 	ldw	r2,-16(fp)
 4014250:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 4014254:	e0bffc17 	ldw	r2,-16(fp)
 4014258:	10800804 	addi	r2,r2,32
 401425c:	e0bffc15 	stw	r2,-16(fp)
 4014260:	e0fffc17 	ldw	r3,-16(fp)
 4014264:	e0bffd17 	ldw	r2,-12(fp)
 4014268:	18bff836 	bltu	r3,r2,401424c <__ram_exceptions_end+0xfbff4004>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
 401426c:	e0bffe17 	ldw	r2,-8(fp)
 4014270:	108007cc 	andi	r2,r2,31
 4014274:	10000226 	beq	r2,zero,4014280 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
 4014278:	e0bffc17 	ldw	r2,-16(fp)
 401427c:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
 4014280:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
 4014284:	0001883a 	nop
 4014288:	e037883a 	mov	sp,fp
 401428c:	df000017 	ldw	fp,0(sp)
 4014290:	dec00104 	addi	sp,sp,4
 4014294:	f800283a 	ret

04014298 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
 4014298:	defffe04 	addi	sp,sp,-8
 401429c:	df000115 	stw	fp,4(sp)
 40142a0:	df000104 	addi	fp,sp,4
 40142a4:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
 40142a8:	e0bfff17 	ldw	r2,-4(fp)
 40142ac:	10bffe84 	addi	r2,r2,-6
 40142b0:	10c00428 	cmpgeui	r3,r2,16
 40142b4:	18001a1e 	bne	r3,zero,4014320 <alt_exception_cause_generated_bad_addr+0x88>
 40142b8:	100690ba 	slli	r3,r2,2
 40142bc:	00810074 	movhi	r2,1025
 40142c0:	1090b404 	addi	r2,r2,17104
 40142c4:	1885883a 	add	r2,r3,r2
 40142c8:	10800017 	ldw	r2,0(r2)
 40142cc:	1000683a 	jmp	r2
 40142d0:	04014310 	cmplti	r16,zero,1292
 40142d4:	04014310 	cmplti	r16,zero,1292
 40142d8:	04014320 	cmpeqi	r16,zero,1292
 40142dc:	04014320 	cmpeqi	r16,zero,1292
 40142e0:	04014320 	cmpeqi	r16,zero,1292
 40142e4:	04014310 	cmplti	r16,zero,1292
 40142e8:	04014318 	cmpnei	r16,zero,1292
 40142ec:	04014320 	cmpeqi	r16,zero,1292
 40142f0:	04014310 	cmplti	r16,zero,1292
 40142f4:	04014310 	cmplti	r16,zero,1292
 40142f8:	04014320 	cmpeqi	r16,zero,1292
 40142fc:	04014310 	cmplti	r16,zero,1292
 4014300:	04014318 	cmpnei	r16,zero,1292
 4014304:	04014320 	cmpeqi	r16,zero,1292
 4014308:	04014320 	cmpeqi	r16,zero,1292
 401430c:	04014310 	cmplti	r16,zero,1292
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
 4014310:	00800044 	movi	r2,1
 4014314:	00000306 	br	4014324 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
 4014318:	0005883a 	mov	r2,zero
 401431c:	00000106 	br	4014324 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
 4014320:	0005883a 	mov	r2,zero
  }
}
 4014324:	e037883a 	mov	sp,fp
 4014328:	df000017 	ldw	fp,0(sp)
 401432c:	dec00104 	addi	sp,sp,4
 4014330:	f800283a 	ret

04014334 <atexit>:
 4014334:	200b883a 	mov	r5,r4
 4014338:	000f883a 	mov	r7,zero
 401433c:	000d883a 	mov	r6,zero
 4014340:	0009883a 	mov	r4,zero
 4014344:	40143fc1 	jmpi	40143fc <__register_exitproc>

04014348 <exit>:
 4014348:	defffe04 	addi	sp,sp,-8
 401434c:	000b883a 	mov	r5,zero
 4014350:	dc000015 	stw	r16,0(sp)
 4014354:	dfc00115 	stw	ra,4(sp)
 4014358:	2021883a 	mov	r16,r4
 401435c:	40145140 	call	4014514 <__call_exitprocs>
 4014360:	00810074 	movhi	r2,1025
 4014364:	109a0504 	addi	r2,r2,26644
 4014368:	11000017 	ldw	r4,0(r2)
 401436c:	20800f17 	ldw	r2,60(r4)
 4014370:	10000126 	beq	r2,zero,4014378 <exit+0x30>
 4014374:	103ee83a 	callr	r2
 4014378:	8009883a 	mov	r4,r16
 401437c:	40146940 	call	4014694 <_exit>

04014380 <memcmp>:
 4014380:	01c000c4 	movi	r7,3
 4014384:	3980192e 	bgeu	r7,r6,40143ec <memcmp+0x6c>
 4014388:	2144b03a 	or	r2,r4,r5
 401438c:	11c4703a 	and	r2,r2,r7
 4014390:	10000f26 	beq	r2,zero,40143d0 <memcmp+0x50>
 4014394:	20800003 	ldbu	r2,0(r4)
 4014398:	28c00003 	ldbu	r3,0(r5)
 401439c:	10c0151e 	bne	r2,r3,40143f4 <memcmp+0x74>
 40143a0:	31bfff84 	addi	r6,r6,-2
 40143a4:	01ffffc4 	movi	r7,-1
 40143a8:	00000406 	br	40143bc <memcmp+0x3c>
 40143ac:	20800003 	ldbu	r2,0(r4)
 40143b0:	28c00003 	ldbu	r3,0(r5)
 40143b4:	31bfffc4 	addi	r6,r6,-1
 40143b8:	10c00e1e 	bne	r2,r3,40143f4 <memcmp+0x74>
 40143bc:	21000044 	addi	r4,r4,1
 40143c0:	29400044 	addi	r5,r5,1
 40143c4:	31fff91e 	bne	r6,r7,40143ac <__ram_exceptions_end+0xfbff4164>
 40143c8:	0005883a 	mov	r2,zero
 40143cc:	f800283a 	ret
 40143d0:	20c00017 	ldw	r3,0(r4)
 40143d4:	28800017 	ldw	r2,0(r5)
 40143d8:	18bfee1e 	bne	r3,r2,4014394 <__ram_exceptions_end+0xfbff414c>
 40143dc:	31bfff04 	addi	r6,r6,-4
 40143e0:	21000104 	addi	r4,r4,4
 40143e4:	29400104 	addi	r5,r5,4
 40143e8:	39bff936 	bltu	r7,r6,40143d0 <__ram_exceptions_end+0xfbff4188>
 40143ec:	303fe91e 	bne	r6,zero,4014394 <__ram_exceptions_end+0xfbff414c>
 40143f0:	003ff506 	br	40143c8 <__ram_exceptions_end+0xfbff4180>
 40143f4:	10c5c83a 	sub	r2,r2,r3
 40143f8:	f800283a 	ret

040143fc <__register_exitproc>:
 40143fc:	defffa04 	addi	sp,sp,-24
 4014400:	dc000315 	stw	r16,12(sp)
 4014404:	04010074 	movhi	r16,1025
 4014408:	841a0504 	addi	r16,r16,26644
 401440c:	80c00017 	ldw	r3,0(r16)
 4014410:	dc400415 	stw	r17,16(sp)
 4014414:	dfc00515 	stw	ra,20(sp)
 4014418:	18805217 	ldw	r2,328(r3)
 401441c:	2023883a 	mov	r17,r4
 4014420:	10003726 	beq	r2,zero,4014500 <__register_exitproc+0x104>
 4014424:	10c00117 	ldw	r3,4(r2)
 4014428:	010007c4 	movi	r4,31
 401442c:	20c00e16 	blt	r4,r3,4014468 <__register_exitproc+0x6c>
 4014430:	1a000044 	addi	r8,r3,1
 4014434:	8800221e 	bne	r17,zero,40144c0 <__register_exitproc+0xc4>
 4014438:	18c00084 	addi	r3,r3,2
 401443c:	18c7883a 	add	r3,r3,r3
 4014440:	18c7883a 	add	r3,r3,r3
 4014444:	12000115 	stw	r8,4(r2)
 4014448:	10c7883a 	add	r3,r2,r3
 401444c:	19400015 	stw	r5,0(r3)
 4014450:	0005883a 	mov	r2,zero
 4014454:	dfc00517 	ldw	ra,20(sp)
 4014458:	dc400417 	ldw	r17,16(sp)
 401445c:	dc000317 	ldw	r16,12(sp)
 4014460:	dec00604 	addi	sp,sp,24
 4014464:	f800283a 	ret
 4014468:	00800034 	movhi	r2,0
 401446c:	10800004 	addi	r2,r2,0
 4014470:	10002626 	beq	r2,zero,401450c <__register_exitproc+0x110>
 4014474:	01006404 	movi	r4,400
 4014478:	d9400015 	stw	r5,0(sp)
 401447c:	d9800115 	stw	r6,4(sp)
 4014480:	d9c00215 	stw	r7,8(sp)
 4014484:	00000000 	call	0 <__alt_mem_SDRAM-0x4000000>
 4014488:	d9400017 	ldw	r5,0(sp)
 401448c:	d9800117 	ldw	r6,4(sp)
 4014490:	d9c00217 	ldw	r7,8(sp)
 4014494:	10001d26 	beq	r2,zero,401450c <__register_exitproc+0x110>
 4014498:	81000017 	ldw	r4,0(r16)
 401449c:	10000115 	stw	zero,4(r2)
 40144a0:	02000044 	movi	r8,1
 40144a4:	22405217 	ldw	r9,328(r4)
 40144a8:	0007883a 	mov	r3,zero
 40144ac:	12400015 	stw	r9,0(r2)
 40144b0:	20805215 	stw	r2,328(r4)
 40144b4:	10006215 	stw	zero,392(r2)
 40144b8:	10006315 	stw	zero,396(r2)
 40144bc:	883fde26 	beq	r17,zero,4014438 <__ram_exceptions_end+0xfbff41f0>
 40144c0:	18c9883a 	add	r4,r3,r3
 40144c4:	2109883a 	add	r4,r4,r4
 40144c8:	1109883a 	add	r4,r2,r4
 40144cc:	21802215 	stw	r6,136(r4)
 40144d0:	01800044 	movi	r6,1
 40144d4:	12406217 	ldw	r9,392(r2)
 40144d8:	30cc983a 	sll	r6,r6,r3
 40144dc:	4992b03a 	or	r9,r9,r6
 40144e0:	12406215 	stw	r9,392(r2)
 40144e4:	21c04215 	stw	r7,264(r4)
 40144e8:	01000084 	movi	r4,2
 40144ec:	893fd21e 	bne	r17,r4,4014438 <__ram_exceptions_end+0xfbff41f0>
 40144f0:	11006317 	ldw	r4,396(r2)
 40144f4:	218cb03a 	or	r6,r4,r6
 40144f8:	11806315 	stw	r6,396(r2)
 40144fc:	003fce06 	br	4014438 <__ram_exceptions_end+0xfbff41f0>
 4014500:	18805304 	addi	r2,r3,332
 4014504:	18805215 	stw	r2,328(r3)
 4014508:	003fc606 	br	4014424 <__ram_exceptions_end+0xfbff41dc>
 401450c:	00bfffc4 	movi	r2,-1
 4014510:	003fd006 	br	4014454 <__ram_exceptions_end+0xfbff420c>

04014514 <__call_exitprocs>:
 4014514:	defff504 	addi	sp,sp,-44
 4014518:	df000915 	stw	fp,36(sp)
 401451c:	dd400615 	stw	r21,24(sp)
 4014520:	dc800315 	stw	r18,12(sp)
 4014524:	dfc00a15 	stw	ra,40(sp)
 4014528:	ddc00815 	stw	r23,32(sp)
 401452c:	dd800715 	stw	r22,28(sp)
 4014530:	dd000515 	stw	r20,20(sp)
 4014534:	dcc00415 	stw	r19,16(sp)
 4014538:	dc400215 	stw	r17,8(sp)
 401453c:	dc000115 	stw	r16,4(sp)
 4014540:	d9000015 	stw	r4,0(sp)
 4014544:	2839883a 	mov	fp,r5
 4014548:	04800044 	movi	r18,1
 401454c:	057fffc4 	movi	r21,-1
 4014550:	00810074 	movhi	r2,1025
 4014554:	109a0504 	addi	r2,r2,26644
 4014558:	12000017 	ldw	r8,0(r2)
 401455c:	45005217 	ldw	r20,328(r8)
 4014560:	44c05204 	addi	r19,r8,328
 4014564:	a0001c26 	beq	r20,zero,40145d8 <__call_exitprocs+0xc4>
 4014568:	a0800117 	ldw	r2,4(r20)
 401456c:	15ffffc4 	addi	r23,r2,-1
 4014570:	b8000d16 	blt	r23,zero,40145a8 <__call_exitprocs+0x94>
 4014574:	14000044 	addi	r16,r2,1
 4014578:	8421883a 	add	r16,r16,r16
 401457c:	8421883a 	add	r16,r16,r16
 4014580:	84402004 	addi	r17,r16,128
 4014584:	a463883a 	add	r17,r20,r17
 4014588:	a421883a 	add	r16,r20,r16
 401458c:	e0001e26 	beq	fp,zero,4014608 <__call_exitprocs+0xf4>
 4014590:	80804017 	ldw	r2,256(r16)
 4014594:	e0801c26 	beq	fp,r2,4014608 <__call_exitprocs+0xf4>
 4014598:	bdffffc4 	addi	r23,r23,-1
 401459c:	843fff04 	addi	r16,r16,-4
 40145a0:	8c7fff04 	addi	r17,r17,-4
 40145a4:	bd7ff91e 	bne	r23,r21,401458c <__ram_exceptions_end+0xfbff4344>
 40145a8:	00800034 	movhi	r2,0
 40145ac:	10800004 	addi	r2,r2,0
 40145b0:	10000926 	beq	r2,zero,40145d8 <__call_exitprocs+0xc4>
 40145b4:	a0800117 	ldw	r2,4(r20)
 40145b8:	1000301e 	bne	r2,zero,401467c <__call_exitprocs+0x168>
 40145bc:	a0800017 	ldw	r2,0(r20)
 40145c0:	10003226 	beq	r2,zero,401468c <__call_exitprocs+0x178>
 40145c4:	a009883a 	mov	r4,r20
 40145c8:	98800015 	stw	r2,0(r19)
 40145cc:	00000000 	call	0 <__alt_mem_SDRAM-0x4000000>
 40145d0:	9d000017 	ldw	r20,0(r19)
 40145d4:	a03fe41e 	bne	r20,zero,4014568 <__ram_exceptions_end+0xfbff4320>
 40145d8:	dfc00a17 	ldw	ra,40(sp)
 40145dc:	df000917 	ldw	fp,36(sp)
 40145e0:	ddc00817 	ldw	r23,32(sp)
 40145e4:	dd800717 	ldw	r22,28(sp)
 40145e8:	dd400617 	ldw	r21,24(sp)
 40145ec:	dd000517 	ldw	r20,20(sp)
 40145f0:	dcc00417 	ldw	r19,16(sp)
 40145f4:	dc800317 	ldw	r18,12(sp)
 40145f8:	dc400217 	ldw	r17,8(sp)
 40145fc:	dc000117 	ldw	r16,4(sp)
 4014600:	dec00b04 	addi	sp,sp,44
 4014604:	f800283a 	ret
 4014608:	a0800117 	ldw	r2,4(r20)
 401460c:	80c00017 	ldw	r3,0(r16)
 4014610:	10bfffc4 	addi	r2,r2,-1
 4014614:	15c01426 	beq	r2,r23,4014668 <__call_exitprocs+0x154>
 4014618:	80000015 	stw	zero,0(r16)
 401461c:	183fde26 	beq	r3,zero,4014598 <__ram_exceptions_end+0xfbff4350>
 4014620:	95c8983a 	sll	r4,r18,r23
 4014624:	a0806217 	ldw	r2,392(r20)
 4014628:	a5800117 	ldw	r22,4(r20)
 401462c:	2084703a 	and	r2,r4,r2
 4014630:	10000b26 	beq	r2,zero,4014660 <__call_exitprocs+0x14c>
 4014634:	a0806317 	ldw	r2,396(r20)
 4014638:	2088703a 	and	r4,r4,r2
 401463c:	20000c1e 	bne	r4,zero,4014670 <__call_exitprocs+0x15c>
 4014640:	89400017 	ldw	r5,0(r17)
 4014644:	d9000017 	ldw	r4,0(sp)
 4014648:	183ee83a 	callr	r3
 401464c:	a0800117 	ldw	r2,4(r20)
 4014650:	15bfbf1e 	bne	r2,r22,4014550 <__ram_exceptions_end+0xfbff4308>
 4014654:	98800017 	ldw	r2,0(r19)
 4014658:	153fcf26 	beq	r2,r20,4014598 <__ram_exceptions_end+0xfbff4350>
 401465c:	003fbc06 	br	4014550 <__ram_exceptions_end+0xfbff4308>
 4014660:	183ee83a 	callr	r3
 4014664:	003ff906 	br	401464c <__ram_exceptions_end+0xfbff4404>
 4014668:	a5c00115 	stw	r23,4(r20)
 401466c:	003feb06 	br	401461c <__ram_exceptions_end+0xfbff43d4>
 4014670:	89000017 	ldw	r4,0(r17)
 4014674:	183ee83a 	callr	r3
 4014678:	003ff406 	br	401464c <__ram_exceptions_end+0xfbff4404>
 401467c:	a0800017 	ldw	r2,0(r20)
 4014680:	a027883a 	mov	r19,r20
 4014684:	1029883a 	mov	r20,r2
 4014688:	003fb606 	br	4014564 <__ram_exceptions_end+0xfbff431c>
 401468c:	0005883a 	mov	r2,zero
 4014690:	003ffb06 	br	4014680 <__ram_exceptions_end+0xfbff4438>

04014694 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 4014694:	defffd04 	addi	sp,sp,-12
 4014698:	df000215 	stw	fp,8(sp)
 401469c:	df000204 	addi	fp,sp,8
 40146a0:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 40146a4:	0001883a 	nop
 40146a8:	e0bfff17 	ldw	r2,-4(fp)
 40146ac:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 40146b0:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 40146b4:	10000226 	beq	r2,zero,40146c0 <_exit+0x2c>
    ALT_SIM_FAIL();
 40146b8:	002af070 	cmpltui	zero,zero,43969
 40146bc:	00000106 	br	40146c4 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 40146c0:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 40146c4:	003fff06 	br	40146c4 <__ram_exceptions_end+0xfbff447c>
